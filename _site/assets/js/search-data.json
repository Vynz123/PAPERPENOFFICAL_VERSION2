{
  
    
        "post0": {
            "title": "2.4b SQL Data",
            "content": "Database Programming is Program with Data . Each Tri’s Final Project should be an example of a Program with Data. . Prepare to use SQLite in common Imperative Technique . Explore SQLite Connect object to establish database connection | Explore SQLite Cursor Object to fetch data from a table within a database | . Schema of Users table in Sqlite.db . Uses PRAGMA statement to read schema. . Describe Schema, here is resource Resource . What is a database schema? | What is the purpose of identity Column in SQL database? | What is the purpose of a primary key in SQL database? | What are the Data Types in SQL table? | . import sqlite3 database = &#39;instance/sqlite.db&#39; # this is location of database def schema(): # Connect to the database file conn = sqlite3.connect(database) # Create a cursor object to execute SQL queries cursor = conn.cursor() # Fetch results of Schema results = cursor.execute(&quot;PRAGMA table_info(&#39;users&#39;)&quot;).fetchall() # Print the results for row in results: print(row) # Close the database connection conn.close() schema() . Reading Users table in Sqlite.db . Uses SQL SELECT statement to read data . What is a connection object? After you google it, what do you think it does? | Same for cursor object? | Look at conn object and cursor object in VSCode debugger. What attributes are in the object? | Is “results” an object? How do you know? | . import sqlite3 def read(): # Connect to the database file conn = sqlite3.connect(database) # Create a cursor object to execute SQL queries cursor = conn.cursor() # Execute a SELECT statement to retrieve data from a table results = cursor.execute(&#39;SELECT * FROM users&#39;).fetchall() # Print the results if len(results) == 0: print(&quot;Table is empty&quot;) else: for row in results: print(row) # Close the cursor and connection objects cursor.close() conn.close() read() . Create a new User in table in Sqlite.db . Uses SQL INSERT to add row . Compore create() in both SQL lessons. What is better or worse in the two implementations? | Explain purpose of SQL INSERT. Is this the same as User init? | . import sqlite3 def create(): name = input(&quot;Enter your name:&quot;) uid = input(&quot;Enter your user id:&quot;) password = input(&quot;Enter your password&quot;) dob = input(&quot;Enter your date of birth &#39;YYYY-MM-DD&#39;&quot;) # Connect to the database file conn = sqlite3.connect(database) # Create a cursor object to execute SQL commands cursor = conn.cursor() try: # Execute an SQL command to insert data into a table cursor.execute(&quot;INSERT INTO users (_name, _uid, _password, _dob) VALUES (?, ?, ?, ?)&quot;, (name, uid, password, dob)) # Commit the changes to the database conn.commit() print(f&quot;A new user record {uid} has been created&quot;) except sqlite3.Error as error: print(&quot;Error while executing the INSERT:&quot;, error) # Close the cursor and connection objects cursor.close() conn.close() #create() . Updating a User in table in Sqlite.db . Uses SQL UPDATE to modify password . What does the hacked part do? | Explain try/except, when would except occur? | What code seems to be repeated in each of these examples to point, why is it repeated? | . import sqlite3 def update(): uid = input(&quot;Enter user id to update&quot;) password = input(&quot;Enter updated password&quot;) if len(password) &lt; 2: message = &quot;hacked&quot; password = &#39;gothackednewpassword123&#39; else: message = &quot;successfully updated&quot; # Connect to the database file conn = sqlite3.connect(database) # Create a cursor object to execute SQL commands cursor = conn.cursor() try: # Execute an SQL command to update data in a table cursor.execute(&quot;UPDATE users SET _password = ? WHERE _uid = ?&quot;, (password, uid)) if cursor.rowcount == 0: # The uid was not found in the table print(f&quot;No uid {uid} was not found in the table&quot;) else: print(f&quot;The row with user id {uid} the password has been {message}&quot;) conn.commit() except sqlite3.Error as error: print(&quot;Error while executing the UPDATE:&quot;, error) # Close the cursor and connection objects cursor.close() conn.close() #update() . Delete a User in table in Sqlite.db . Uses a delete function to remove a user based on a user input of the id. . Is DELETE a dangerous operation? Why? | In the print statemements, what is the “f” and what does {uid} do? | . import sqlite3 def delete(): uid = input(&quot;Enter user id to delete&quot;) # Connect to the database file conn = sqlite3.connect(database) # Create a cursor object to execute SQL commands cursor = conn.cursor() try: cursor.execute(&quot;DELETE FROM users WHERE _uid = ?&quot;, (uid,)) if cursor.rowcount == 0: # The uid was not found in the table print(f&quot;No uid {uid} was not found in the table&quot;) else: # The uid was found in the table and the row was deleted print(f&quot;The row with uid {uid} was successfully deleted&quot;) conn.commit() except sqlite3.Error as error: print(&quot;Error while executing the DELETE:&quot;, error) # Close the cursor and connection objects cursor.close() conn.close() #delete() . Menu Interface to CRUD operations . CRUD and Schema interactions from one location by running menu. Observe input at the top of VSCode, observe output underneath code cell. . Why does the menu repeat? | Could you refactor this menu? Make it work with a List? | . # Menu, to run other cells from one control point def menu(): operation = input(&quot;Enter: (C)reate (R)ead (U)pdate or (D)elete or (S)chema&quot;) if operation.lower() == &#39;c&#39;: create() elif operation.lower() == &#39;r&#39;: read() elif operation.lower() == &#39;u&#39;: update() elif operation.lower() == &#39;d&#39;: delete() elif operation.lower() == &#39;s&#39;: schema() elif len(operation)==0: # Escape Key return else: print(&quot;Please enter c, r, u, or d&quot;) menu() # recursion, repeat menu try: menu() # start menu except: print(&quot;Perform Jupyter &#39;Run All&#39; prior to starting menu&quot;) . Hacks . Add this Blog to you own Blogging site. In the Blog add notes and observations on each code cell. | In this implementation, do you see procedural abstraction? | In 2.4a or 2.4b lecture Do you see data abstraction? Complement this with Debugging example. | Use Imperative or OOP style to Create a new Table or do something that applies to your CPT project. | . | . Reference… sqlite documentation .",
            "url": "http://localhost:4100/teacher_portfolio/cpt/db-b",
            "relUrl": "/cpt/db-b",
            "date": " • Jan 8, 2024"
        }
        
    
  
    
        ,"post1": {
            "title": "2.4a SQL Data",
            "content": "Database and SQLAlchemy . In this blog we will explore using programs with data, focused on Databases. We will use SQLite Database to learn more about using Programs with Data. Use Debugging through these examples to examine Objects created in Code. . College Board talks about ideas like Program Usage. “iterative and interactive way when processing information” | Managing Data. “classifying data are part of the process in using programs”, “data files in a Table” | Insight “insight and knowledge can be obtained from … digitally represented information” | Filter systems. ‘tools for finding information and recognizing patterns” | Application. “the preserve has two databases”, “an employee wants to count the number of book” | . | PBL, Databases, Iterative/OOP Iterative. Refers to a sequence of instructions or code being repeated until a specific end result is achieved | OOP. A computer programming model that organizes software design around data, or objects, rather than functions and logic | SQL. Structured Query Language, abbreviated as SQL, is a language used in programming, managing, and structuring data | . | . Imports and Flask Objects . Defines and key object creations . Comment on where you have observed these working? Provide a defintion of purpose. Flask app object | SQLAlchemy db object | | . &quot;&quot;&quot; These imports define the key objects &quot;&quot;&quot; from flask import Flask from flask_sqlalchemy import SQLAlchemy &quot;&quot;&quot; These object and definitions are used throughout the Jupyter Notebook. &quot;&quot;&quot; # Setup of key Flask object (app) app = Flask(__name__) # Setup SQLAlchemy object and properties for the database (db) database = &#39;sqlite:///sqlite.db&#39; # path and filename of database app.config[&#39;SQLALCHEMY_TRACK_MODIFICATIONS&#39;] = False app.config[&#39;SQLALCHEMY_DATABASE_URI&#39;] = database app.config[&#39;SECRET_KEY&#39;] = &#39;SECRET_KEY&#39; db = SQLAlchemy() # This belongs in place where it runs once per project db.init_app(app) . Model Definition . Define columns, initialization, and CRUD methods for users table in sqlite.db . Comment on these items in the class, purpose and defintion. class User | db.Model inheritance | init method | @property, @&lt;column&gt;.setter | create, read, update, delete methods | . | . &quot;&quot;&quot; database dependencies to support sqlite examples &quot;&quot;&quot; import datetime from datetime import datetime import json from sqlalchemy.exc import IntegrityError from werkzeug.security import generate_password_hash, check_password_hash &#39;&#39;&#39; Tutorial: https://www.sqlalchemy.org/library.html#tutorials, try to get into a Python shell and follow along &#39;&#39;&#39; # Define the User class to manage actions in the &#39;users&#39; table # -- Object Relational Mapping (ORM) is the key concept of SQLAlchemy # -- a.) db.Model is like an inner layer of the onion in ORM # -- b.) User represents data we want to store, something that is built on db.Model # -- c.) SQLAlchemy ORM is layer on top of SQLAlchemy Core, then SQLAlchemy engine, SQL class User(db.Model): __tablename__ = &#39;users&#39; # table name is plural, class name is singular # Define the User schema with &quot;vars&quot; from object id = db.Column(db.Integer, primary_key=True) _name = db.Column(db.String(255), unique=False, nullable=False) _uid = db.Column(db.String(255), unique=True, nullable=False) _password = db.Column(db.String(255), unique=False, nullable=False) _dob = db.Column(db.Date) # constructor of a User object, initializes the instance variables within object (self) def __init__(self, name, uid, password=&quot;123qwerty&quot;, dob=datetime.today()): self._name = name # variables with self prefix become part of the object, self._uid = uid self.set_password(password) if isinstance(dob, str): # not a date type dob = date=datetime.today() self._dob = dob # a name getter method, extracts name from object @property def name(self): return self._name # a setter function, allows name to be updated after initial object creation @name.setter def name(self, name): self._name = name # a getter method, extracts uid from object @property def uid(self): return self._uid # a setter function, allows uid to be updated after initial object creation @uid.setter def uid(self, uid): self._uid = uid # check if uid parameter matches user id in object, return boolean def is_uid(self, uid): return self._uid == uid @property def password(self): return self._password[0:10] + &quot;...&quot; # because of security only show 1st characters # update password, this is conventional method used for setter def set_password(self, password): &quot;&quot;&quot;Create a hashed password.&quot;&quot;&quot; self._password = generate_password_hash(password, method=&#39;sha256&#39;) # check password parameter against stored/encrypted password def is_password(self, password): &quot;&quot;&quot;Check against hashed password.&quot;&quot;&quot; result = check_password_hash(self._password, password) return result # dob property is returned as string, a string represents date outside object @property def dob(self): dob_string = self._dob.strftime(&#39;%m-%d-%Y&#39;) return dob_string # dob setter, verifies date type before it is set or default to today @dob.setter def dob(self, dob): if isinstance(dob, str): # not a date type dob = date=datetime.today() self._dob = dob # age is calculated field, age is returned according to date of birth @property def age(self): today = datetime.today() return today.year - self._dob.year - ((today.month, today.day) &lt; (self._dob.month, self._dob.day)) # output content using str(object) is in human readable form # output content using json dumps, this is ready for API response def __str__(self): return json.dumps(self.read()) # CRUD create/add a new record to the table # returns self or None on error def create(self): try: # creates a person object from User(db.Model) class, passes initializers db.session.add(self) # add prepares to persist person object to Users table db.session.commit() # SqlAlchemy &quot;unit of work pattern&quot; requires a manual commit return self except IntegrityError: db.session.remove() return None # CRUD read converts self to dictionary # returns dictionary def read(self): return { &quot;id&quot;: self.id, &quot;name&quot;: self.name, &quot;uid&quot;: self.uid, &quot;dob&quot;: self.dob, &quot;age&quot;: self.age, } # CRUD update: updates user name, password, phone # returns self def update(self, name=&quot;&quot;, uid=&quot;&quot;, password=&quot;&quot;): &quot;&quot;&quot;only updates values with length&quot;&quot;&quot; if len(name) &gt; 0: self.name = name if len(uid) &gt; 0: self.uid = uid if len(password) &gt; 0: self.set_password(password) db.session.add(self) # performs update when id exists db.session.commit() return self # CRUD delete: remove self # None def delete(self): db.session.delete(self) db.session.commit() return None . Initial Data . Uses SQLALchemy db.create_all() to initialize rows into sqlite.db . Comment on how these work? Create All Tables from db Object | User Object Constructors | Try / Except | | . &quot;&quot;&quot;Database Creation and Testing &quot;&quot;&quot; # Builds working data for testing def initUsers(): with app.app_context(): &quot;&quot;&quot;Create database and tables&quot;&quot;&quot; db.create_all() &quot;&quot;&quot;Tester data for table&quot;&quot;&quot; u1 = User(name=&#39;Thomas Edison&#39;, uid=&#39;toby&#39;, password=&#39;123toby&#39;, dob=datetime(1847, 2, 11)) u2 = User(name=&#39;Nikola Tesla&#39;, uid=&#39;niko&#39;, password=&#39;123niko&#39;) u3 = User(name=&#39;Alexander Graham Bell&#39;, uid=&#39;lex&#39;, password=&#39;123lex&#39;) u4 = User(name=&#39;Eli Whitney&#39;, uid=&#39;whit&#39;, password=&#39;123whit&#39;) u5 = User(name=&#39;Indiana Jones&#39;, uid=&#39;indi&#39;, dob=datetime(1920, 10, 21)) u6 = User(name=&#39;Marion Ravenwood&#39;, uid=&#39;raven&#39;, dob=datetime(1921, 10, 21)) users = [u1, u2, u3, u4, u5, u6] &quot;&quot;&quot;Builds sample user/note(s) data&quot;&quot;&quot; for user in users: try: &#39;&#39;&#39;add user to table&#39;&#39;&#39; object = user.create() print(f&quot;Created new uid {object.uid}&quot;) except: # error raised if object nit created &#39;&#39;&#39;fails with bad or duplicate data&#39;&#39;&#39; print(f&quot;Records exist uid {user.uid}, or error.&quot;) initUsers() . Check for given Credentials in users table in sqlite.db . Use of ORM Query object and custom methods to identify user to credentials uid and password . Comment on purpose of following User.query.filter_by | user.password | | . # SQLAlchemy extracts single user from database matching User ID def find_by_uid(uid): with app.app_context(): user = User.query.filter_by(_uid=uid).first() return user # returns user object # Check credentials by finding user and verify password def check_credentials(uid, password): # query email and return user record user = find_by_uid(uid) if user == None: return False if (user.is_password(password)): return True return False #check_credentials(&quot;indi&quot;, &quot;123qwerty&quot;) . Create a new User in table in Sqlite.db . Uses SQLALchemy and custom user.create() method to add row. . Comment on purpose of following user.find_by_uid() and try/except | user = User(…) | user.dob and try/except | user.create() and try/except | | . # Inputs, Try/Except, and SQLAlchemy work together to build a valid database object def create(): # optimize user time to see if uid exists uid = input(&quot;Enter your user id:&quot;) user = find_by_uid(uid) try: print(&quot;Found n&quot;, user.read()) return except: pass # keep going # request value that ensure creating valid object name = input(&quot;Enter your name:&quot;) password = input(&quot;Enter your password&quot;) # Initialize User object before date user = User(name=name, uid=uid, password=password ) # create user.dob, fail with today as dob dob = input(&quot;Enter your date of birth &#39;YYYY-MM-DD&#39;&quot;) try: user.dob = datetime.strptime(dob, &#39;%Y-%m-%d&#39;).date() except ValueError: user.dob = datetime.today() print(f&quot;Invalid date {dob} require YYYY-mm-dd, date defaulted to {user.dob}&quot;) # write object to database with app.app_context(): try: object = user.create() print(&quot;Created n&quot;, object.read()) except: # error raised if object not created print(&quot;Unknown error uid {uid}&quot;) create() . Reading users table in sqlite.db . Uses SQLALchemy query.all method to read data . Comment on purpose of following User.query.all | json_ready assignment, google List Comprehension | | . # SQLAlchemy extracts all users from database, turns each user into JSON def read(): with app.app_context(): table = User.query.all() json_ready = [user.read() for user in table] # &quot;List Comprehensions&quot;, for each user add user.read() to list return json_ready read() . Hacks . Add this Blog to you own Blogging site. In the Blog add notes and observations on each code cell. | Change blog to your own database. | Add additional CRUD Add Update functionality to this blog. | Add Delete functionality to this blog. | . | .",
            "url": "http://localhost:4100/teacher_portfolio/cpt/db-a",
            "relUrl": "/cpt/db-a",
            "date": " • Jan 8, 2024"
        }
        
    
  
    
        ,"post2": {
            "title": "JWT Login (python/flask)",
            "content": "User ID: . Password: . Login .",
            "url": "http://localhost:4100/teacher_portfolio/2024/01/08/python-jwt-login.html",
            "relUrl": "/2024/01/08/python-jwt-login.html",
            "date": " • Jan 8, 2024"
        }
        
    
  
    
        ,"post3": {
            "title": "Database Get",
            "content": "SQL Database Fetch . Name ID Age .",
            "url": "http://localhost:4100/teacher_portfolio/data/database",
            "relUrl": "/data/database",
            "date": " • Jan 8, 2024"
        }
        
    
  
    
        ,"post4": {
            "title": "Cockpit Setup",
            "content": "Setting up Cockpit . Overview . Cockpit is a tool that provides a GUI interface on the web. It allows an administrator to manage applications and services running on the server. While Linux configurations are mostly done through a command line, Cockpit provides a helpful visualization for features such as CPU and memory utilization. Cockpit also provides a terminal on the web interface, making it helpful if you need to access the server remotely. . Install Cockpit . sudo apt update sudo apt install cockpit . Start the Cockpit service . Start the Cockpit service . Accessing . Cockpit runs on port 9090. This port needs to be allowed on the EC2 instance. Click on “Security Groups” in the left sidebar: . . Next, search for your security group. Click the check box next to the group name, scroll down, and click on “Inbound rules”. Click on “Edit inbound rules”, and add a rule that allows “Port range” of 9090 and “Source type” of Anywhere-IPv4. . . . Access Cockpit with the link: &lt;EC2 IP address&gt;:9090. There are a variety of ways to find the IP address of the instance. One way is to locate the IP address under “Public IPv4 address” on the “Instances” page: . . In this case, the IP address of the instance is 3.145.69.15. Accessing http://3.145.69.15:9090 shows the Cockpit login screen: . . Login with the same username and password used to login to the EC2 instance. . Configure subdomain . Go to AWS Route 53 -&gt; Hosted zone -&gt; nighthawkcodingsociety.com . | Click on “Create record” . | Configure a subdomain, keep the “Record type” as “A”, and add the IP address of the instance in the “Value” section. . | . Now you can access Cockpit at &lt;subdomain&gt;:9090. . Nginx . Use Nginx to configure a reverse proxy for Cockpit: . Create an nginx file in /etc/nginx/sites-available/&lt;your file name&gt; and add the following lines for Cockpit. Be sure to replace &lt;your domain name&gt; with the subdomain you configured: . server { server_name &lt;your domain name&gt;; location / { # Required to proxy the connection to Cockpit proxy_pass https://127.0.0.1:9090; proxy_set_header Host $host; proxy_set_header X-Forwarded-Proto $scheme; # Required for web sockets to function proxy_http_version 1.1; proxy_buffering off; proxy_set_header Upgrade $http_upgrade; proxy_set_header Connection &quot;upgrade&quot;; # Pass ETag header from Cockpit to clients. # See: https://github.com/cockpit-project/cockpit/issues/5239 gzip off; } } . Activate the Nginx configuration with: . sudo ln -s /etc/nginx/sites-available/&lt;your file name&gt; /etc/nginx/sites-enabled/&lt;your file name&gt; . Create a certificate for the website to access over HTTPS. . # Make Certbot edit Nginx configuration to enable HTTPS sudo certbot --nginx # Restart Nginx sudo systemctl restart nginx . Cockpit Navigation . This portion will cover Cockpit’s features. Login to Cockpit by accessing your subdomain. . The left navigation bar in Cockpit presents a few options that you can select: . Overview . The overview section provides a summary of health, usage, system, and configuration information. Click on “View details and history” to check CPU, memory, and network settings. . Logs . These provide information about the system, such as a failed login. Logs can be filtered based on criteria such as time or priority. . Storage . See disk read and write settings and storage logs. . Networking . This portion shows the network traffic of the server and interface information. VLANs and bridges can also be added here. . Accounts . This setting allows the administrator to create and manage accounts. You can click on a user to edit user settings, such as changing the password and adding SSH keys. . Services . Click on a service to view its settings. A service can be reloaded, restarted, or stopped by clicking on the three dots. The dropdown under “Show relationships” includes information such as a service’s dependencies and when it starts in relation with other services (what services start before and after this service) . Software Updates . If you are running Ubuntu 17.10 or later, a “Loading available updates failed” error message will appear. This is because Ubuntu changed the network management from network-manager to netplan.io, which has not been updated in Cockpit. A way to fix this is to change netplan’s configuration file to manage one interface with network-manager. . sudo nano /etc/netplan/50-cloud-init.yaml . Next, add the following line under network: . renderer: NetworkManager . Then, execute . sudo netplan try . Refresh Cockpit, and the “Software Updates” page should work. Updates can now be installed. . Terminal . A command line interface that is the same as the machine’s terminal on AWS EC2. . Update hostname and system time . Go to Overview -&gt; Configuration -&gt; Click on “edit” next to “Hostname” and configure a hostname for the server. . Click on the time next to “System time” to set the time zone. . User account settings . Go to Accounts -&gt; Click on “Create new account” and fill out the boxes . After the user is created, click on the user. You can check “Server administrator” to give the user sudo privileges. . You can also configure account expiration and password expiration settings by clicking on “edit” next to the two settings. . . To test the new user account created, logout, and then login with the new user credentials. If the user has administrative privileges, you can click on the button that says “Limited access” at the top right corner to gain those privileges. . Note: If the user was not configured as a “Server administrator” and tried to gain admin privileges by clicking the button, the attempt will fail and will be logged. You can view the log by clicking on “Logs” in the sidebar: . . Congratulations! . Congratulations on deploying your site and setting up Cockpit with AWS! A special thanks to Azeem Khan, Samit Poojary, Ethan Tran, Sophie Park, Edwin Abraham, Mr. Mortensen and Jeffrey Fonseca for helping put this together. .",
            "url": "http://localhost:4100/teacher_portfolio/c7.0/c7.1/c7.2/2024/01/04/cockpit-setup_IPYNB_2_.html",
            "relUrl": "/c7.0/c7.1/c7.2/2024/01/04/cockpit-setup_IPYNB_2_.html",
            "date": " • Jan 4, 2024"
        }
        
    
  
    
        ,"post5": {
            "title": "P1 Undecidable Problems",
            "content": "Decidable Problem . A decidable problem is one that we can come to a yes/no answer given any input. An examle would be given a number determine if it is divisible by 3. We know that the algorithm below would provide the correct ouput every time. . PRODECURE divisbleByThree(num) IF (num MOD 3 = 0) RETURN true ELSE RETURN false . Undecidable Problem . Halting Problem . The halting problem is defined as: Given an arbitrary computer program with given inputs will the program stop or will it run forever? . Undecidable Problems . A problem where an algorithm cannot make a correct yes/no answer every time. . One way would be to test for an ending, but what if that ending is not easily found? What if it takes an unreasonable amount of time to find the ending? Is that because there is an ending or does one not exist? . You see where the problem comes in? This is an undecidable problem – there is no algorithm which can always produce a yes/no answer for every input of the problem. . Halting Problem in Computers Where may we have seen this in computers today? When a website or program takes too long to load it. It may never load, or it may just be taking a long time. Either way, after a certain time the computer decides the program should be stopped. . Popcorn Hack #1 . An algorithm can be used to solve an undecidable problem. (True/False) . Popcorn Hack #2 . If a programmer encounters an undecidable problem, they can just use an alogirhtm that works most of the time. (True/False) . Scenarios of Undecidable Problems in Computing . Infinite Loop in Program Execution: When a program enters an infinite loop, it becomes undecidable whether it will eventually terminate or run indefinitely. | . | Complex Conditional Statements: Programs with intricate conditional statements or complex control flow may pose undecidable scenarios, making it challenging to determine their termination. | . | Non-Terminating Recursive Functions: Recursive functions that do not have a base case or have poorly defined termination conditions can result in undecidability regarding their halting behavior. | . | Unknown Input Space Size: In cases where the size of the input space is unknown or unbounded, it becomes difficult to ascertain if a program will halt for all possible inputs. | . | Multithreading and Concurrency: Undecidability may arise in concurrent programs where multiple threads interact, introducing intricate synchronization and communication challenges. | . | Popcorn Hack 3 . An algorithm exists that can always produce a yes/no answer for the halting problem. (True/False) - . Homework Question . Research and explain how modern systems or browsers deal with the aspects of the halting problem when a program takes too long to load. Provide examples of mechanisms or strategies implemented in real-world scenarios to manage unresponsive programs or prolonged loading times. .",
            "url": "http://localhost:4100/teacher_portfolio/2023/12/13/P1_Undecided-Problems_IPYNB_2_.html",
            "relUrl": "/2023/12/13/P1_Undecided-Problems_IPYNB_2_.html",
            "date": " • Dec 13, 2023"
        }
        
    
  
    
        ,"post6": {
            "title": "P5 Computer Bias",
            "content": "Big Idea 5.3 Computing Bias- Tanay . Overview/Definition: Computing Biasses are the numerous Biasses in application that are based on human prefrences. . Computing innovations can reflect existing human biases because of biases written into the algorithms or biases in the data used by the innovation | Programmers should take action to reduce bias in algorithms used for computing innovations as a way of combating existing human biases | Biases can be embedded at all levels of software development | . Types of Computing Bias - Tarun . Data Bias: The data does not accurently represent the values of the real world ex. If data is taken from a sample size that doesn’t reflect the actual population - If you wanted data to represent the population in America but your sample that is being surveyed is from a Texas. The population in Texas does not accurately reflect the entire population of America. | Human Bias: Those who make programs may be influenced by their own biases ex. If a development team are experts in using a certain language and their algorithm demonstrates that language, they will feel that people who specialize in that language are qualified and better. This is essentially bringing in their personal biases and applying to a larger amount of people. | . Explicit data vs Implicit data: - Pranavi . Explicit data: . takes the data that you give | When watching a video, and it asks “are you enjoying this?”, and you respond with either a thumbs up or down, you are giving them explicit data | . Implicit data: . When you watch or search up certain things, data can be deduced on what is the “norm” for the person | . Example: Netflix . When browsing through Netflix, they show Netflix exclusives, they do this because they want your subscriptions | showing the netflix exclusives is the bias in this scenario | . . Popcorn Hack: . In what other applications could have intential bias? . Intentional Bias vs Unintentional Bias - Tanvi . Example 1: Hypothetical Loan company . Suppose a software was created to assist loan officers, and certain trends of successful loans were taken | If people are rejected of those who don’t fit in their trends of either age, gender, race, etc. | This software is biased in the way that it only chooses candidates who will have higher chances in successful loans | . Example 2: Candy Crush vs Call of Duty . Call of Duty is geared towards the teenage boy demographic, 18-24, with more grunge type of music | Candy Crush is more visually appearing to younger audience as it includes pictures of candies and playful music | This is biased as the games include aspects and characteristics that will seem appealing to a specific audience | . . . Popcorn Hack: . How is their unintentional bias in apps such as TikTok or Instagram or otehr social media apps? . Mitigation Strategies - Shubhay . Utilize data from various sources | Pre-Processing: A way to check the inputs for bias before it is being used as data | In-processing: This algorithm changes the data during analysis of the data to keep the data consistent | Post-Processing: # step check to make sure the model is fair and accurate Input Correction: This strategy makes adjustments to the data to make the data more comparable | Classifier Correction: polishing and adjusting the algorithm after it has been trained to reduce the biases | Output Correction: The predictions made by the model is modified to eliminate biases | . | . Homework: . Is bias enhancing or intentionally excluding? | Is bias intentionally harmful/hateful? | During software development are your receiving feedback from a wide variety of people? | What are the different biases you can find in an application such as Youtube Kids? | Answer in complete sentences, due Sunday 11:59 pm .",
            "url": "http://localhost:4100/teacher_portfolio/2023/12/12/P5_Computing_Bias_IPYNB_2_.html",
            "relUrl": "/2023/12/12/P5_Computing_Bias_IPYNB_2_.html",
            "date": " • Dec 12, 2023"
        }
        
    
  
    
        ,"post7": {
            "title": "P4 Computer Bias",
            "content": "Introduction to Computing Bias . A brief introduction to computing biases is that human biases are usually incorporated into algorithms or data. If this is confusing to understand, here is one example. When you are browsing Netflix and look at the different categories, you see that typically there are a bunch of Netflix exclusives being displayed more than non-exclusives. This is a form of computing bias as this would benefit Netflix, as the movie or show will never leave Netflix. So, if you get hooked on that show, then you will inevitably keep paying the Netflix subscription. . Explicit Data vs Implicit Data . Many software apps such as Netflix mentioned previous collect a lot of data. There are two types of data that apps collect and they are Explicit and Implicit. . Explicit: . Examples: Name | Adress Implicit: . | . | Examples(Netflix): What you watch | When you watched | Engagement(Watch Retention) | Types of movies or shows | . | . Popcorn Hack 1 . Name a software app you know about and name some explicit and some implicit data that they collect from you the user. . Answer: . Loan Company Example . Another bias can be observed in trends. In the context of an app that collects information for loan officers to help them decide who the best candidate is to give a loan to, trends, for example, could show that a certain age group is comprised of better candidates for a loan. This bias is based on trends and data, and it could be beneficial to the loan officers, preventing them from losing money on loans and avoiding complications with the loanee. However, this could be harmful to the candidate applying for the loan because they might be turned away simply because they don’t qualify within a certain age or race bracket. . Example #2 . Movies A movie such as Dispicable Me has more of a demographic for younger people. Even though this is a bias is is beneficial because it is content that is specific to someones wants. | Movies such as Star Wars are more geared toward older poeple as their target audence in contrary to a cartoon. | . | Video Games Casual Audience: These games are has a bias towards an audience that want to play casually Candy Crush | Minecraft | . | Sweaty Games: These have more of a bias for people that want to get better and play competitively Counter Strike | Call of Duty | . | . | . Popcorn Hack 2 . Give an example of a movie, show, or video game or even a certain softare that has a certain bias and what who the bias is towards . Answer: . Mitigating Bias in Algorithms . To address human biases, programmers must work towards minimizing bias in algorithms used for computing innovations. Software should aim for neutrality, considering all perspectives and actively rejecting inherent human biases. . Key considerations during program development: . Identify potential sources of bias. | Assess whether your program is amplifying or intentionally excluding certain elements. | Solicit feedback from a diverse and widespread group of individuals. | Contemplate how people who differ from you might utilize your developments. | . Questions to ask About Bias . In the example of the Loan Company the bias was unintentional but could be potentially excluding fit candidates. In the example of Netflix, the bias of adding exclusives in the front of categories is intentianal but not harmful for anyone. This leads to some questions to ask if you encounter bias in a software. . | Questions: . Is it enhancing or intentionally excluding? | Is the bias intensionally harmful or hateful? | Are you receiving feedback from a wide variety of people? | . | . Using these questions, software developers are able to reduce harmful bias in algorithms and data. . Homework Hacks: . The implementation of a predictive policing algorithm in a city has raised concerns regarding potential biases,leading to disporotionate targeting of specific neighborhoods. This over-policing could result in civil rights violation. Your task is to propose a solution to mitigate this bias and explain the method you’d use to remove computing bias. Make a full paragraph that is at least 4 sentences .",
            "url": "http://localhost:4100/teacher_portfolio/2023/12/12/P4_Computer_Bias_IPYNB_2_.html",
            "relUrl": "/2023/12/12/P4_Computer_Bias_IPYNB_2_.html",
            "date": " • Dec 12, 2023"
        }
        
    
  
    
        ,"post8": {
            "title": "Spring/Thymeleaf | P3",
            "content": "Spring/Thymeleaf Lesson . Lesson Objectives: . Understand the role of Thymeleaf in server-side rendering. | Learn how to integrate Thymeleaf with the Spring Framework. | Implement a sign-in page using Thymeleaf for securing specific API endpoints. | . Introduction: . Briefly introduce the concept of server-side rendering and its advantages. | Discuss the role of template engines in generating dynamic HTML. | Introduce Thymeleaf as a template engine for Java Spring. | . What is Spring? . Unveiling the Power of the Spring Framework . Basics of Spring: . Spring is a comprehensive, open-source framework for building robust and scalable Java-based applications. It provides a structured and modular approach to application development, addressing challenges in various domains such as enterprise, web, and microservices. . Why Choose Spring for Backend Development? . Simplified Configuration: Spring reduces the complexity of configuration through XML-based or annotation-driven approaches. This simplifies application setup and promotes a more straightforward development process. . Extensive Ecosystem: Spring offers a vast ecosystem of modules that cater to different aspects of application development. Modules like Spring MVC for web development, Spring Security for authentication and authorization, and Spring Data for database access enhance productivity. . Integrated Testing Support: Spring’s design encourages the use of interfaces and dependency injection, making it easier to test components in isolation. This promotes the development of unit tests and ensures the reliability of the application. . Spring Boot’s Auto-Configuration for Thymeleaf . When you add Thymeleaf to your Spring Boot project, it automatically configures the necessary beans and settings. . Key Points: . Spring Boot detects the presence of spring-boot-starter-thymeleaf in your classpath. | It automatically sets up a TemplateEngine, | TemplateResolver, and ViewResolver for Thymeleaf. | . Basic Structure of Thymeleaf Templates . Thymeleaf templates are essentially HTML5 files with additional attributes for dynamic content. . Typical Template Location: . Thymeleaf templates are typically located in src/main resources/templates in a Spring Boot project. | . Popcorn Hack: . Summarize the key features of Thymeleaf and explain why it is preferred for server-side rendering in Spring applications. . Spring Boot’s Auto-Configuration for Thymeleaf . When you add Thymeleaf to your Spring Boot project, it automatically configures the necessary beans and settings. . Key Points: . Spring Boot detects the presence of spring-boot-starter-thymeleaf in your classpath. | It automatically sets up a TemplateEngine, | TemplateResolver, and ViewResolver for Thymeleaf. | . Basic Structure of Thymeleaf Templates . Thymeleaf templates are essentially HTML5 files with additional attributes for dynamic content. . Typical Template Location: . Thymeleaf templates are typically located in src/main resources/templates in a Spring Boot project. | . example: . &lt;!DOCTYPE html&gt; &lt;html xmlns:th=&quot;http://www.thymeleaf.org&quot;&gt; &lt;head&gt; &lt;title&gt;Title&lt;/title&gt; &lt;/head&gt; &lt;body&gt; &lt;h1 th:text=&quot;${message}&quot;&gt;Welcome Message&lt;/h1&gt; &lt;/body&gt; &lt;/html&gt; . Thymeleaf Expression Language (EL) is used to perform operations and display data within the template. . Syntax: . Basic syntax is ${…} for variables. You can also use *{…} for objects (known as the selection variable), #{…} for messages, @{…} for URLs, and more. . example: . &lt;p th:text=&quot;${user.name}&quot;&gt;Default Name&lt;/p&gt; &lt;p th:text=&quot;${user.age}&quot;&gt;Default Age&lt;/p&gt; . How You Would Implement Thymeleaf in the Backend. . Through the use of Controller wihtin the backend it is clearly displayed that the thymeleaf works best in which is where it can be defined to get outputs fom a specific outupts from data stored within the backend | . How does Thymleaf work in the backend . Thymeleaf is a framework within the backend spring set through the java controllers which ultimatley, allow you to develop html with attributes from the backend making for a more uer interactive base. All in All this means that Thymleaf is a way to get CRUD functionalities with a set of commands within the HTML. | . // Here is a Set of Sample Backend Code you may want to run in a Spring in Jupyter Notebooks is giving you a Hard Time. import org.springframework.stereotype.Controller; import org.springframework.ui.Model; import org.springframework.web.bind.annotation.GetMapping; @Controller public class UserController { @GetMapping(&quot;/user&quot;) public String getUser(Model model) // allowed to pass data { String username = &quot;John Doe&quot;; int age = 30; String email = &quot;johndoe@example.com&quot;; // Adding user data to the Model model.addAttribute(&quot;username&quot;, username);// the model. makes thymleaf data applicable for rendering model.addAttribute(&quot;age&quot;, age); model.addAttribute(&quot;email&quot;, email); // Return the name of the Thymeleaf template return &quot;userProfile&quot;; } } . Popcorn Hacks . What do you think the Model model means and why is it important Answer Here:__ | . Examples With Thymeleaf Syntax in the Frontend. . &lt;!-- Define the document type and introduce the Thymeleaf namespace ultimatley to allow thymeleaf commands--&gt; &lt;html lang=&quot;en&quot; xmlns:th=&quot;http://www.thymeleaf.org&quot;&gt; &lt;head&gt; &lt;!-- Define the character encoding --&gt; &lt;meta charset=&quot;UTF-8&quot;&gt; &lt;!-- Title of the HTML page --&gt; &lt;title&gt;User Profile&lt;/title&gt; &lt;/head&gt; &lt;body&gt; &lt;!-- Heading for the user profile page --&gt; &lt;h1&gt;User Profile&lt;/h1&gt; &lt;!-- Thymeleaf conditional block: Display if &#39;username&#39; exists --&gt; &lt;div th:if=&quot;${username}&quot;&gt; &lt;!-- Display Username with the value of the &#39;username&#39; variable --&gt; &lt;p th:text=&quot;&#39;Username: &#39; + ${username}&quot;&gt;&lt;/p&gt; &lt;!-- Display Age with the value of the &#39;age&#39; variable --&gt; &lt;p th:text=&quot;&#39;Age: &#39; + ${age}&quot;&gt;&lt;/p&gt; &lt;!-- Display Email with the value of the &#39;email&#39; variable --&gt; &lt;p th:text=&quot;&#39;Email: &#39; + ${email}&quot;&gt;&lt;/p&gt; &lt;/div&gt; &lt;!-- Thymeleaf conditional block: Display if &#39;username&#39; does not exist --&gt; &lt;div th:unless=&quot;${username}&quot;&gt; &lt;!-- Display a message when &#39;username&#39; doesn&#39;t exist --&gt; &lt;p&gt;No user data available.&lt;/p&gt; &lt;/div&gt; &lt;/body&gt; &lt;/html&gt; . Here Are A list of Specifics Thymeleaf applications wihtin the frontend. . th:text: Sets the text content of an element. &lt;p th:text=&quot;${variable}&quot;&gt;Default Text&lt;/p&gt; . | th:utext: Similar to th:text, but does not escape HTML characters. &lt;p th:utext=&quot;${unescapedHTML}&quot;&gt;Default HTML&lt;/p&gt; . | th:if, th:unless: Conditional rendering of elements. &lt;div th:if=&quot;${condition}&quot;&gt;Render if true&lt;/div&gt; &lt;div th:unless=&quot;${condition}&quot;&gt;Render if false&lt;/div&gt; . | th:each: Iterates over collections. &lt;ul&gt;&lt;li th:each=&quot;item : ${items}&quot; th:text=&quot;${item}&quot;&gt;&lt;/li&gt;&lt;/ul&gt; . | th:object, th:field: Binds form fields to a model object for form handling. &lt;form th:object=&quot;${user}&quot; th:action=&quot;@{/save}&quot; method=&quot;post&quot;&gt;&lt;input type=&quot;text&quot; th:field=&quot;*{username}&quot; /&gt;&lt;button type=&quot;submit&quot;&gt;Submit&lt;/button&gt;&lt;/form&gt; . | th:href: Creates links within the application. &lt;a th:href=&quot;@{/home}&quot;&gt;Home&lt;/a&gt; . | th:class: Sets CSS classes conditionally. &lt;div th:class=&quot;${condition} ? &#39;active&#39; : &#39;inactive&#39;&quot;&gt;Element&lt;/div&gt; . | PopCorn Hack . List 3 more Attributes of Thymleaf in the Frontend 2. | | | . Specific HTML Attributes within Thymeleaf . text substitution, conditional rendering, and iteration. | . Text Substitution . The usage of text substitution is an act of replacing text or content within HTML elements based on values provided by the server-side application. In Thymeleaf, it’s achieved using attributes like th:text or th:utext. | . PopCorn Hack: explain what the following code is doing: . &lt;html lang=&quot;en&quot; xmlns:th=&quot;http://www.thymeleaf.org&quot;&gt; &lt;head&gt; &lt;meta charset=&quot;UTF-8&quot;&gt; &lt;title&gt;Text Substitution Example&lt;/title&gt; &lt;/head&gt; &lt;body&gt; &lt;h1&gt;Welcome, &lt;span th:text=&quot;${username}&quot;&gt;Guest&lt;/span&gt;!&lt;/h1&gt; &lt;!-- If &#39;username&#39; exists in the model, it will replace &#39;Guest&#39; --&gt; &lt;/body&gt; &lt;/html&gt; . Conditional Rendering . Conditional Rendering: This feature allows displaying or hiding content based on certain conditions. Thymeleaf provides attributes like th:if and th:unless to conditionally render HTML elements. | . PopCorn Hack: explain what the following code below is doing: . &lt;!DOCTYPE html&gt; &lt;html lang=&quot;en&quot; xmlns:th=&quot;http://www.thymeleaf.org&quot;&gt; &lt;head&gt; &lt;meta charset=&quot;UTF-8&quot;&gt; &lt;title&gt;Conditional Rendering Example&lt;/title&gt; &lt;/head&gt; &lt;body&gt; &lt;div th:if=&quot;${isAdmin}&quot;&gt; &lt;p&gt;Welcome, Admin!&lt;/p&gt; &lt;/div&gt; &lt;div th:unless=&quot;${isAdmin}&quot;&gt; &lt;p&gt;Welcome, User!&lt;/p&gt; &lt;/div&gt; &lt;/body&gt; &lt;/html&gt; . An example with Password and Security . &lt;div th:if=&quot;${password.length() &lt; 8}&quot;&gt; &lt;p&gt;Password must be at least 8 characters long.&lt;/p&gt; &lt;/div&gt; &lt;div th:if=&quot;${password.length() &gt;= 8}&quot;&gt; &lt;p&gt;Password is strong.&lt;/p&gt; &lt;/div&gt; . Iteration . Iteration: It involves looping through collections or arrays of data to render dynamic content multiple times. Thymeleaf offers the th:each attribute for iterating over collections and rendering content for each item within the collection. | . PopCorn Hack Explain What this is Doing: . &lt;html lang=&quot;en&quot; xmlns:th=&quot;http://www.thymeleaf.org&quot;&gt; &lt;head&gt; &lt;meta charset=&quot;UTF-8&quot;&gt; &lt;title&gt;Iteration Example&lt;/title&gt; &lt;/head&gt; &lt;body&gt; &lt;ul&gt; &lt;li th:each=&quot;item : ${items}&quot; th:text=&quot;${item}&quot;&gt;Default Item&lt;/li&gt; &lt;/ul&gt; &lt;/body&gt; &lt;/html&gt; &lt;!-- Thymeleaf iteration: For each element in ${items}, --&gt; &lt;!-- Thymeleaf assigns the current element to a local variable named item. --&gt; &lt;!-- It iterates through all the elements present in the ${items} collection. --&gt; . Hacks . Complete Popcorn Hacks | Create a controller that uses the model function, then in html use the methods in Thymeleaf that were taught | Extra Points For Creativity. | . Introduction to Spring Security . Spring Security is a robust framework designed to handle authentication, authorization, and various other security aspects in Java applications. Today, we’ll focus on its role in securing API endpoints. Securing API endpoints is crucial to safeguard sensitive resources and functionalities from unauthorized access. Spring Security provides a flexible and customizable solution for implementing security measures within your applications. . Thymeleaf Template: . Creating a Thymeleaf template for the sign-in page is like designing the look of the entrance. Let’s make it user-friendly and straightforward. . This is like the design of the sign-in form, telling users what to fill in. . &lt;!DOCTYPE html&gt; &lt;html lang=&quot;en&quot; xmlns:th=&quot;http://www.thymeleaf.org&quot;&gt; &lt;head&gt; &lt;meta charset=&quot;UTF-8&quot;&gt; &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0&quot;&gt; &lt;title&gt;Admin Sign In&lt;/title&gt; &lt;/head&gt; &lt;body&gt; &lt;h2&gt;Admin Sign In&lt;/h2&gt; &lt;form th:action=&quot;@{/login}&quot; method=&quot;post&quot;&gt; &lt;label for=&quot;username&quot;&gt;Username:&lt;/label&gt; &lt;input type=&quot;text&quot; id=&quot;username&quot; name=&quot;username&quot; required&gt; &lt;label for=&quot;password&quot;&gt;Password:&lt;/label&gt; &lt;input type=&quot;password&quot; id=&quot;password&quot; name=&quot;password&quot; required&gt; &lt;button type=&quot;submit&quot;&gt;Sign In&lt;/button&gt; &lt;/form&gt; &lt;/body&gt; &lt;/html&gt; . Comprehensive: . &lt;!-- This page is illustrative and contains ideas about HTML formatting --&gt; &lt;!DOCTYPE HTML&gt; &lt;!-- Signals to the Layout Dialect which layout should be used to decorate this View --&gt; &lt;html xmlns:layout=&quot;http://www.w3.org/1999/xhtml&quot; xmlns:th=&quot;http://www.w3.org/1999/xhtml&quot; layout:decorate=&quot;~{layouts/base}&quot; lang=&quot;en&quot;&gt; &lt;head&gt; &lt;!-- Page specific head additions --&gt; &lt;title&gt;Login&lt;/title&gt; &lt;/head&gt; &lt;body&gt; &lt;th:block layout:fragment=&quot;body&quot; th:remove=&quot;tag&quot;&gt; &lt;div class=&quot;container py-4&quot;&gt; &lt;header class=&quot;pb-3 mb-4 border-bottom border-primary text-dark&quot;&gt; &lt;span class=&quot;fs-4&quot;&gt;Login Page&lt;/span&gt; &lt;/header&gt; &lt;/div&gt; &lt;div class=&quot;container py-4 text-light bg-success&quot;&gt; &lt;div class=&quot;container bg-secondary py-4&quot;&gt; &lt;div class=&quot;p-5 mb-4 bg-light text-dark rounded-3&quot;&gt; &lt;h1&gt;Login&lt;/h1&gt; &lt;label for=&quot;email&quot;&gt;Username:&lt;/label&gt;&lt;br&gt; &lt;input type=&quot;text&quot; id=&quot;username&quot; name=&quot;username&quot;&gt;&lt;br&gt; &lt;label for=&quot;password&quot;&gt;Password:&lt;/label&gt;&lt;br&gt; &lt;input type=&quot;text&quot; id=&quot;password&quot; name=&quot;password&quot;&gt;&lt;br&gt;&lt;br&gt; &lt;input type=&quot;submit&quot; value=&quot;Login&quot; onclick=&quot;login()&quot;&gt; &lt;p id=&quot;message&quot;&gt;&lt;/p&gt; &lt;/div&gt; &lt;/div&gt; &lt;script&gt; function login() { var email = document.getElementById(&#39;username&#39;).value; var password = document.getElementById(&#39;password&#39;).value; var data = {email:email, password:password}; fetch(&quot;/human/authenticate&quot;, {method: &#39;POST&#39;, headers: {&#39;Content-Type&#39;: &#39;application/json&#39;}, body: JSON.stringify(data)}).then((data) =&gt; { //handling authentication if (data.status == 200) { window.location.replace(&quot;/mvc/person/read&quot;); } else { document.getElementById(&#39;message&#39;).innerHTML = &quot;Invalid email or password&quot; } }); } &lt;/script&gt; &lt;/div&gt; &lt;/th:block&gt; &lt;/body&gt; . API View Controller: . &lt;!-- This page is illustrative and contains ideas about HTML formatting --&gt; &lt;!DOCTYPE HTML&gt; &lt;!-- Signals to the Layout Dialect which layout should be used to decorate this View --&gt; &lt;html xmlns:layout=&quot;http://www.w3.org/1999/xhtml&quot; xmlns:th=&quot;http://www.w3.org/1999/xhtml&quot; layout:decorate=&quot;~{layouts/base}&quot; lang=&quot;en&quot;&gt; &lt;head&gt; &lt;!-- Page specific head additions --&gt; &lt;title&gt;Person List&lt;/title&gt; &lt;/head&gt; &lt;!-- &lt;body&gt; --&gt; &lt;body&gt; &lt;th:block layout:fragment=&quot;body&quot; th:remove=&quot;tag&quot;&gt; &lt;div class=&quot;container py-4 bg-primary&quot;&gt; &lt;!-- Page specific body additions --&gt; &lt;header class=&quot;pb-3 mb-4 border-bottom&quot;&gt; &lt;a href=&quot;#&quot; class=&quot;d-flex align-items-center text-light text-decoration-none&quot;&gt; &lt;span class=&quot;fs-4&quot;&gt;Database SQL Person&lt;/span&gt; &lt;/a&gt; &lt;/header&gt; &lt;div class=&quot;container py-4 text-light bg-success&quot;&gt; &lt;h2&gt;Person Viewer&lt;/h2&gt; &lt;a th:href=&quot;@{/mvc/person/create/}&quot;&gt;Create Person&lt;/a&gt; &lt;div class=&quot;row align-items-md-stretch&quot;&gt; &lt;table class=&quot;table&quot;&gt; &lt;thead&gt; &lt;tr&gt; &lt;th&gt;ID&lt;/th&gt; &lt;th&gt;User ID&lt;/th&gt; &lt;th&gt;Person&lt;/th&gt; &lt;th&gt;Age&lt;/th&gt; &lt;th&gt;Action&lt;/th&gt; &lt;/tr&gt; &lt;/thead&gt; &lt;tbody&gt; &lt;tr th:each=&quot;person : ${list}&quot;&gt; &lt;td th:text=&quot;${person.id}&quot;&gt;Person ID&lt;/td&gt; &lt;td th:text=&quot;${person.email}&quot;&gt;Birth Date&lt;/td&gt; &lt;td th:text=&quot;${person.name}&quot;&gt;Name&lt;/td&gt; &lt;td th:if=&quot;${person.getAge() != -1}&quot; th:text=&quot;${person.getAge()}&quot;&gt;Age&lt;/td&gt; &lt;td th:unless=&quot;${person.getAge() != -1}&quot; th:text=&quot;Unknown&quot;&gt;Unknown Age&lt;/td&gt; &lt;td&gt; &lt;! &lt;a th:href=&quot;@{/mvc/notes/{id}(id = ${person.id})}&quot;&gt;Notes&lt;/a&gt; --&gt; &lt;a th:href=&quot;@{/mvc/person/update/{id}(id = ${person.id})}&quot;&gt;Update&lt;/a&gt; &lt;a th:href=&quot;@{/mvc/person/delete/{id}(id = ${person.id})}&quot;&gt;Delete&lt;/a&gt; &lt;/td&gt; &lt;/tr&gt; &lt;/tbody&gt; &lt;/table&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;/th:block&gt; &lt;/body&gt; &lt;/html&gt; . Hack . Create a Thymeleaf template to display when a 403 error occurs (Extra indicators for adding another error code). .",
            "url": "http://localhost:4100/teacher_portfolio/2023/12/12/P3_student_Thymeleaf_IPYNB_2_.html",
            "relUrl": "/2023/12/12/P3_student_Thymeleaf_IPYNB_2_.html",
            "date": " • Dec 12, 2023"
        }
        
    
  
    
        ,"post9": {
            "title": "P1 Computing Bias",
            "content": "Human Biases Reflected As Computer Biases . Bias: prejudice in favor of or against a thing, person, or group . What is “computer bias”? . The existence of prejudiced outcomes in the decisions or predictions made by computer systems/algorithms. Bias can be implemented into algorithms because of human biases being intentionally inserted or because of the data utilized being biased. . Explicit Data: Information directly provided by user. . Implicit Data: Infomration that can inferred from explicit data. . Based on either explicit/implicit data that has been used to train an algorithm, whether intentionally introduced or during the process of training data generation, bias can be created. . . A notable example of this is seen in Netflix, where there are is a human factor that drives bias: Netflix exclusives are placed ahead (a show that is a Netflix exclusive means that users will be more likely to stay with Netflix). The bias in this case is Netflix’s prioritzation towards Netflix-produced shows. . . Hack 1: . What is another example of a human bias being implemented into an algorithm? . Answer: . Reducing Bias . Programmers should take action to reduce bias in algorithms used for computing innovations as a way of combating existing human biases. Softwares need to be unbiased, consider all everything, and reject human bias. . Things to consider when developing programs: . What are potential sources of bias? | Is your program enhancing or intentionally excluding? | Are you receiving feedback from a widespread group of people? | How could people who differ from you use your developments? | . Hack 2: . What is another way a programmer can reduce bias in their softwares? . Answer: . Types of Bias in Software Development . Biases can be embedded at all levels of software development. . It can be intentional or unintentional. Some software development are made for a certain market and ensure that people of certain places or demographics can use them easily. However, this doesn’t mean that they are trying to exclude. . Examples: . Intentional: . Games could be geared towards a certain age range (Talking Tom vs Valorant) Game concepts | Music | Visuals | . | . . WeChat and KakaoTalk Almost everyone in China uses WeChat | KakaoTalk is the Korean version | . | . Unintentional: . Social media, Facebook vs. instagram | . Hack 3: . What are some other examples of intentional and/or unintentional bias in innovations (games, social media, technology, etc.)? . Answer: . Homework . Question 1: . Define “computer bias” in your own words and explain how it can result from intentional or unintentional factors in software development. Give a brief example of this. Explain how programmers can actively work to reduce bias in their algorithms? . Answer: . Question 2: . Briefly describe the two types of bias in software development and provide examples from the gaming industry and social media platforms. How might biases in software design affect user engagement and experiences? . Answer: .",
            "url": "http://localhost:4100/teacher_portfolio/2023/12/12/P1-Computing-Bias_IPYNB_2_.html",
            "relUrl": "/2023/12/12/P1-Computing-Bias_IPYNB_2_.html",
            "date": " • Dec 12, 2023"
        }
        
    
  
    
        ,"post10": {
            "title": "P2 Computing Bias Lesson",
            "content": "Computing Bias - Hanlun . What is it? . Computing bias is a bias that exists within algorithms that unfairly discriminate against certain individuals or groups, creating unfair outcomes | Computing innovations reflect biases because algorithms and data are influenced by the people who contributed to it, so computing biases can be embedded at every level of development | Algorithm bias should be reduced so computer innovations can combat existing user bias | . . Popcorn Hack #1: . Which of the following scenarios is an example of computing bias? . A. An email filtering system accurately categorizes emails into spam and non-spam based on a diverse set of features, minimizing false positives and false negatives. B. A navigation app provides real-time traffic updates and alternate routes to users, considering various factors such as traffic volume, road closures, and weather conditions. C. An image recognition algorithm identifies objects in photographs with high accuracy, regardless of the gender, ethnicity, or age of the individuals depicted. D. An automated hiring system consistently favors candidates from specific educational institutions and backgrounds, resulting in the exclusion of qualified applicants from diverse backgrounds. . Types of Computing Bias - Trevor . Computing bias can be either intentional or unintentional and as said before, this bias is a result of human biases in development. Here are some examples: . Data bias: when the data set does not reflect the real world values Ex: A company is developing an algorithm to see whether or not a product has positive or negative online reviews. However, the training data might over-represent overly negative or positive opinions that are posted online which wouldn’t reflect the real-world popularity of the product | . | Human bias: People who make the programs may bring in their own biases whether consciously or unconsciously Ex: A software development team is working on a code review algorithm. They all have experience using Language X and so they believe that developers using Language X are more qualified and so their algorithm reflects that. This uses their individual traits and applies it to the entire group of coders using Language X. | . | Algorithmic bias reflects the data bias and human bias and often amplifies it. However, bias can arise from the structure and decision making of the program itself Ex: A program is designed to automate the loan approval system. It uses information from income, employment history, and credit score. However, the algorithmn can produce biased results based on trends from certain job occupations which may disproportionally affect certain groups There are many more nuanced types of computing biases which you can find here: https://developers.google.com/machine-learning/crash-course/fairness/types-of-bias | . | . Popcorn Hack #2: . An online example of computing bias is when an HP computer’s facial recognition system couldn’t track the face of someone with darker skin. Why is this and what type of bias is it? Do you think it was intentional or unintentional? . Explicit and Implicit Data - Lakshanya . Explicit data is information you give an app or site | Implicit data is the information it collects based on your activity | For example, with Netflix, the explicit data it collects includes your rating of movies (thumbs up, thumbs down) and your personal information. The implicit data it collects includes when you watch, what you binge, and the frequently selected genres. | This data collection is also known as user bias. More bias comes in when Netflix shows its exclusives before any of the regular items to gain subscriptions. | . . Popcorn Hack #3: . What is another scenario of data collection in everyday applications and situations? | . Mitigation Strategies: - Matthew . Obtain more diverse data (ex: racist computer) | Pre-processing: Writing an algorithm that adjusts to datasets to check for bias before using it as an input. It’s about cleaning up and organizing the raw data and makes it more suitable for building or training models. . | In-processing: This occurs during the processing or analysis of data within a system or model. The algorithm will manipulate and transform the data as it goes through the model during its active use.(ex: if the algorithm was processing images it would rescale the image to keep consistent dimensions) | . More Mitigation Strategies: - Aditya . Post-processing: This type of strategy is comprised of 3 parts, input correction, classifier correction, output correction . Input Correction: . What it is: Imagine you have a machine learning model that identifies objects in images. Input correction involves making adjustments to the images used to test the model after it has already been trained. . Example: If the model was trained mostly on pictures taken during the day, input correction might involve adjusting the brightness and color balance of images taken at night to make them more comparable. . Classifier Correction: . What it is: This step focuses on fine-tuning the algorithm or model after training to reduce any biases or discrimination it might have inadvertently learned. . Example: Suppose you have a model for hiring decisions, and you notice it tends to favor certain demographics. Classifier correction could involve tweaking the decision-making rules to ensure fair treatment for all groups. . Output Correction: . What it is: After the model makes predictions, output correction involves modifying those predictions to eliminate any biases or unwanted discrimination. . Example: If a language translation model tends to produce more errors when translating sentences from one language to another, output correction might involve adjusting the final translated sentences to be more accurate and fair. . In summary, post-processing is like a three-step check and adjustment process to ensure that a machine learning model behaves fairly and accurately, even after it has been trained. Input correction modifies the testing data, classifier correction fine-tunes the model, and output correction adjusts the final predictions. This helps in addressing issues like biases and discrimination that may arise during the model training process. . . Homework: . Problem: Biased Predictive Policing Algorithm: A city implements a predictive policing algorithm to allocate law enforcement resources more efficiently. However, concerns arise as community members and activists notice that the algorithm appears to disproportionately target certain neighborhoods, leading to over-policing and potential violations of civil rights. Provide a solution to how this situation can be resolved, and how the computing bias can be removed. Explain which method of mitigation you will use and how it works. .",
            "url": "http://localhost:4100/teacher_portfolio/2023/12/11/P2_student_Computing-Bias_IPYNB_2_.html",
            "relUrl": "/2023/12/11/P2_student_Computing-Bias_IPYNB_2_.html",
            "date": " • Dec 11, 2023"
        }
        
    
  
    
        ,"post11": {
            "title": "Lopez | Animation | Student",
            "content": "Basic Steps of Animation . Below is a sprite of Mr. Lopez. This was the first sprite created for his spritesheet, which outlines the animation of his movement frame by frame. . . Below is the spritesheet of Mr. Lopez. Each row has a different side of him, because in the project that we used this in, he was able to move freely in all 4 directions. His animation is simple, and depicts basic movement. . . The first change that we made to the spritesheet was the addition of Mr. Lopez’s cane. This was done to show a simple difference in how sprites can appear in the game. Our next step in animation will be drawing new sprites for running and idle animation. . . Below is the spritesheet of spritesheet with a few more rows idle animation, running, and punch (attack). . . Additions to Game Levels . Adding new animations gives the player new capabilities. For example, drawing sprites for running allows the player to feel as if they are running in the game, rather than walking everywhere. . In our code, running will be based on speed, so there will be different lines in the spritesheet corresponding to different speeds (i.e. row 1 = walking). . Step 1 . Download this image and change the file path to fit it. . Spritesheet Linked Here . The code is very easy to modify with new animations. The biggest change would be the changing of rows and frames, which we will be changing next. . Step 2 . Modify your rows in OOP-game-levels.md to match this. . players: { mario: { src: &quot;/filepath/lopezanimation.png&quot;, // Modify this to match your file path width: 46, height: 52.5, idle: { row: 6, frames: 1, idleFrame: {column: 1, frames: 0} }, a: { row: 1, frames: 4, idleFrame: { column: 1, frames: 0 } }, // Right Movement d: { row: 2, frames: 4, idleFrame: { column: 1, frames: 0 } }, // Left Movement runningLeft: { row: 5, frames: 4, idleFrame: {column: 1, frames: 0} }, runningRight: { row: 4, frames: 4, idleFrame: {column: 1, frames: 0} }, s: {}, // Stop the movement } }, . Step 3 . Make additions to the Player.js file. Add “speedLimit” here. . export class Player extends Character { // constructors sets up Character object constructor(canvas, image, speedRatio, playerData, speedLimit) { super(canvas, image, speedRatio, playerData.width, playerData.height); . Step 4 . Add this property of speedLimit just under your event listeners. . // Additional Property for Speed Limit this.speedLimit = speedLimit; this.currentSpeed = 0; this.acceleration = 0.11; // Adjust based on preference this.deceleration = 0.1; // Adjust based on preference . Step 5 . Apply the speedLimit under the update function. . // Player updates update() { // Adjust speed based on pressed keys if (this.pressedKeys[&#39;a&#39;] &amp;&amp; this.movement.left) { this.currentSpeed -= this.acceleration; } else if (this.pressedKeys[&#39;d&#39;] &amp;&amp; this.movement.right) { this.currentSpeed += this.acceleration; } else { // Decelerate when no movement keys are pressed this.currentSpeed *= (1 - this.deceleration); } // Apply speed limit if (Math.abs(this.currentSpeed) &gt; this.speedLimit) { this.currentSpeed = this.currentSpeed &gt; 0 ? this.speedLimit : -this.speedLimit; } . Step 6 . Now we will be adding code so that the character transitions from moving left and right to smoothly moving into a running animation. The first thing you want to do is add a threshold so that when the character reaches a certain speed the sprite image switches to that sprite row. . // Apply speed limit if (Math.abs(this.currentSpeed) &gt; this.speedLimit) { this.currentSpeed = this.currentSpeed &gt; 0 ? this.speedLimit : -this.speedLimit; } // Update player position based on speed this.x += this.currentSpeed; // Check for speed threshold to change sprite sheet rows const walkingSpeedThreshold = 1; // Walking speed threshold const runningSpeedThreshold = 5; // Running speed threshold . This will go under where it says the //Player update update(){ . Step 7 . Next we need to add code so that it can switch rows on the sprite sheet picture based on which direction you are moving. . if (Math.abs(this.currentSpeed) &gt;= runningSpeedThreshold) { // Change sprite sheet row for running if (this.currentSpeed &gt; 0) { this.setFrameY(this.playerData.runningRight.row); } else { this.setFrameY(this.playerData.runningLeft.row); } } else if (Math.abs(this.currentSpeed) &gt;= walkingSpeedThreshold) { // Change sprite sheet row for walking if (this.currentSpeed &gt; 0) { this.setFrameY(this.playerData.d.row); } else { this.setFrameY(this.playerData.a.row); } } else { // Revert to normal animation if speed is below the walking threshold this.setFrameY(this.playerData.idle.row); } // Perform super update actions super.update(); } . This piece of code goes right under the previous code that we just did. . Homework . Have the code in your game and have a smooth transition from walking to running. | Have the attack animation damage or kill and enemy (Punch animation already given). | Change the speed threshold for the charactar so it will change animations quicker or slower. | If there are any problems, please check our Player.js file linked here. .",
            "url": "http://localhost:4100/teacher_portfolio/2023/12/11/CSSE-student_animation_IPYNB_2_.html",
            "relUrl": "/2023/12/11/CSSE-student_animation_IPYNB_2_.html",
            "date": " • Dec 11, 2023"
        }
        
    
  
    
        ,"post12": {
            "title": "SASS basics",
            "content": "What is SASS? . Sass is a preprocessor language that’s interpreted into CSS. A preprocessor language takes input data and converts it to an output that’s used as input by another program. This means when you run Sass code, you’re actually converting your code to CSS. That CSS code output is then used directly by a browser. . SCSS vs. CSS . Understanding the differences between SCSS and CSS . What is CSS . CSS is the default technology that most programmers use when styling webpages. It is one of the 3 fundamental web technologies along with HTML and JavaScript. HTML manages the structure, JavaScript makes pages interactive, and CSS changes the style by taking a markup language like HTML and describes how it should be presented to the user. . | However, CSS is not very easy to work with lacking a lot features often making using CSS very confusing and difficult or hard to work with on lengthy projects. This is why there are tools like Bootstrap, Sass, and Tailwind that make styling a lot easier and more efficient. We will be using Sass in this course. . | . CSS Example . This is an example of CSS that can be used to change body text of an HTML document | Hack Question: Can you guess what its changing style of the text to? | . body{ color: #0000FF; font-family: Ariel, sans-serif; font-size: 16px; } . What is SCSS . SASS (Syntactically Awesome Stylesheets) is a powerful preprocessor scripting language that enhances CSS with advanced features. It’s compiled into standard CSS, making it a robust tool for modern web development. . Sass Code Example . $blue: #0000FF; body{ color: $blue; font-family: Ariel, sans-serif; font-size: 16px; } . This example is doing the same thing as the other code segment above but the difference being that here we defined the color as $blue which makes it much easier for us to recall later on. In fact, we have done this before, if you have been using the dark mode/midnight theme then go ahead and navigate your your _sass folder and check out the dark-mode.scss and you’ll see something similar to the example above | . So which one is better to use? . CSS tends to be better for really simple styling where not many complex or nested styles are required and in small projects that don’t require a lot of customization. | SCSS on the other hand is very good for more complex styling and working with a project with more than one page where a lot of customization may be needed. | . Benefits Of SASS Over Traditional CSS . Improved Code Organization . Nesting Capabilities: SASS allows you to nest your CSS selectors in a way that follows the same visual hierarchy of your HTML. | Modular Approach: You can split your CSS into multiple files (partials) and import them into a main file, making your project more organized. | . Maintainability . Use of Variables: Define colors, fonts, and other CSS values as variables for easy updates and consistency across the project. | Mixins for Reusable Code: Create reusable pieces of code for things like buttons, forms, which can be included wherever needed. | Extend/Inheritance: Share a set of CSS properties from one selector to another, reducing the amount of code you need to write and maintain. | . Advanced Features . Control Directives: Use if/else statements and for/each loops in your CSS, which are not possible in plain CSS. | Built-in Functions: SASS offers functions for color manipulation, mathematics and more, enhancing the functionality of CSS. | Compatibility: Automatically handles browser prefixing, ensuring that your styles work across different browsers without extra code. | . Modular SCSS . Understanding how to use modular SCSS . Modular SCSS allows you to break your SCSS files into multiple files and compile them into a single CSS file. | How do you do this? Well all you need to do is have _filenames.scss so that is compiled into its own file. | Now after adding the _ before the file name you can import it into you file without the _ and all the styles will be carried over. | The benefits of a partial is that it allows you to break up the code of multiple components for larger websites. This way you can easiliy organize and make changes to components using these separate files instead of having to go through one massive file. | All styles in the partial will be added to and can be used in the main file as if they were defined in the main file itself. | . File 1 _variable.scss . $primary-button-color: #009494; $hover-color: black; $menu-color: #f2f2f2; . File 2 style.scss . We can see the importing of the .scss file’s content into the other main .scss file style.scss | . {@import &#39;variables&#39;; @import &quot;minima&quot;;} /* &quot;row style&quot; is flexible size and aligns pictures in center */ .row { align-items: center; display: flex; } /* &quot;column style&quot; is one-third of the width with padding */ .column { flex: 33.33%; padding: 5px; } .menu a { // float: left; display: block; color: $menu-color; text-align: center; // padding: 14px 16px; text-decoration: none; } .menu a:hover { background: $primary-button-color; color: $hover-color; } . Nesting . Nesting is a way to organize your code and make it easier to read. | Nesting is when you put one selector inside another selector. | When we make HTML we often nest different elements within each other to have a clear structure when we look at it. | The problem is that in regular CSS we don’t have that so we need to use SASS to help us organize our code. . | Warning: Don’t nest too much as when the CSS is processed it can make overqualified selectors which can be hard to read and maintain. Which means that it would only target that specific element type and not any other elements that have the same class name. | . Sass Nesting . Through nesting the ul, li, and a selectors within the nav selector makes your CSS better and increases its readability overall. | . nav { ul { margin: 0; padding: 0; list-style: none; } li { display: inline-block; } a { display: block; padding: 6px 12px; text-decoration: none; } } . CSS - Lack of Nesting . We can see that through the lack of nesting the CSS is not as organized and needs extra information to be able to make it more clear exactly what is being targeted. | . nav ul { margin: 0; padding: 0; list-style: none; } nav li { display: inline-block; } nav a { display: block; padding: 6px 12px; text-decoration: none; } . Variables . What is a variable? . A variable is a container that stores a value so when you have multiple places that refer to one value you can just use the variable name instead of the value. | This is valuable in SASS because it allows you to reuse that value in multiple places throughout your stylesheet. | The $ symbol is used in Sass to designate a variable. | . Variable Example Syntax . $variable-name: value; | Once the sass is processed the variable name is replaced with the value throughout the program. | . $main-font: Calibri, sans-serif; $main-color: #000; $main-color-hover: #000; .",
            "url": "http://localhost:4100/teacher_portfolio/2023/12/10/SASS_basics_IPYNB_2_.html",
            "relUrl": "/2023/12/10/SASS_basics_IPYNB_2_.html",
            "date": " • Dec 10, 2023"
        }
        
    
  
    
        ,"post13": {
            "title": "Mario | Parallax | Student",
            "content": "Intro . Parallax scrolling occurs when there are different layers of backgrounds that move at different speeds in relation to the character to create a sense of depth. In other words, one thing is stationary while a background moves. Parallax scrolling can be beneficial by adding interest to an otherwise static website/game. Transitions from screen to screen and other transitions that happen when the user does something like press buttons, can also help the game feel smoother. . Some cool examples of Parallax Scrolling and resources: . https://kevinzhangweb.com/ | http://springsummer.gucci.com/ | https://www.spacex.com/vehicles/falcon-9/ | https://www.sketch.com/blog/what-is-a-parallax-effect/ | https://webflow.com/blog/parallax-scrolling | . Step 1 . Add the image into images/platformer/backgrounds. Then add the Background2.js into assets/js/platformer. . Step 2 . Lets get the background into the game. Define mountains as a background image; do this in the main file 2023-11-27-CSSE-oop-game-levels.md and in assets within the background asset. . mountains: { src: &quot;/images/platformer/backgrounds/mountains.jpg&quot;} . Add the second background into the “hills” constructor. . new GameLevel( {tag: &quot;hills&quot;, background: assets.backgrounds.hills, background2: assets.backgrounds.mountains, platform: assets.platforms.grass, player: assets.players.mario, tube: assets.obstacles.tube, callback: testerCallBack } ); . Then go to the GameLevel.js file and add this to the constructor. . this.backgroundImg2 = gameObject.background2?.file; . Then we need to load the image using this code. . if (this.backgroundImg2) { imagesToLoad.push(this.loadImage(this.backgroundImg2)); } . After we load the code we then have to create the new background. Make sure this is above the backgroundImg so it will create the canvas behind the original background. . if (this.backgroundImg2) { const backgroundCanvas = document.createElement(&quot;canvas&quot;); backgroundCanvas.id = &quot;background&quot;; document.querySelector(&quot;#canvasContainer&quot;).appendChild(backgroundCanvas); const backgroundSpeedRatio = 0; new Background2(backgroundCanvas, loadedImages[i], backgroundSpeedRatio); i++; } . Now we have the image in the code but we still need a different file to help create this second background. Make a new js file called Background2.js. You can use the regular background code just make sure to call it Background2 and export background2. . Step 3 . Now that we have the image into the game we can start to make it move. First we need to navigate to the GameEnv.js file. Now make a new variable for the background speed and set it to zero. . static backgroundSpeed2 = 0; . Now that we have this this variable we can use it in the background update funtion. If you change this variable in GameEnv.js it should make the background move. . this.speed = GameEnv.backgroundSpeed2; . Now the background moves but we need it to move when the player moves. Now go to the Player.js file. We will add an if statement within the keydown function to detect when “a” is pressed and move the background right, and when “d” is pressed move the background left. Just make sure the backgroundSpeed2 variable is set to 0. . if (key === &quot;a&quot;) { GameEnv.backgroundSpeed2 = -0.1; } if (key === &quot;d&quot;) { GameEnv.backgroundSpeed2 = 0.1; } . Now the background moves when the character moves but it dosent stop. We can add these same if statements to the keyup function but just set the variable to 0. This should stop the background from moving when the player moves. . if (key === &quot;a&quot;) { GameEnv.backgroundSpeed2 = 0; } if (key === &quot;d&quot;) { GameEnv.backgroundSpeed2 = 0; } . Also need to change the starting x value otherwise we run into some issues. . export class Background2 extends GameObject { constructor(canvas, image, speedRatio) { super(canvas, image, speedRatio); this.x = -1000; } . Now the background moves with the player. In order to get a full parallax effect both backgrounds need to be moving at different speeds. The background in the foreground should move faster then the one in the back. We can do this by using all the same code but in the Background.js file instead of the Background2.js file. . // add this to GameEnv.js static backgroundSpeed = 0; // add this to Background.js this.speed = GameEnv.backgroundSpeed; // add this to the keydown if statements in player.js GameEnv.backgroundSpeed = -0.4; GameEnv.backgroundSpeed = 0.4; // add this to the keyup if statements in player.js GameEnv.backgroundSpeed = 0; GameEnv.backgroundSpeed = 0; . That should all work but you might notice a weird shadow. To fix this we can clear the canvas before it draws it so add this to the update function in Background.js . this.ctx.clearRect(0, 0, this.canvas.width, this.canvas.height); . Step 4 . We can also add transitions to buttons and moving from screen to screen. Add keyframes in the main game file in the brackets, in this case fade in and fadeout change opacity and flashing makes button flash with 0.5s between each flash. Referencing the ids created in the GameLevel.js file “background” and “platform.” . &lt;style&gt; #gameBegin, #controls, #gameOver { position: relative; z-index: 2; /*Ensure the controls are on top*/ } #toggleCanvasEffect, #background, #platform { animation: fadein 5s; } #startGame { animation: flash 0.5s infinite; } @keyframes flash { 50% { opacity: 0; } } @keyframes fadeout { from {opacity: 1} to {opacity: 0} } @keyframes fadein { from {opacity: 0} to {opacity: 1} } &lt;/style&gt; . Homework . Add transitions | Add both moving backgrounds | Make backgrounds move with the player | . Challenge . Add transition effect to from the mario level to the alien level | .",
            "url": "http://localhost:4100/teacher_portfolio/2023/12/10/CSSE-parallax_student_IPYNB_2_.html",
            "relUrl": "/2023/12/10/CSSE-parallax_student_IPYNB_2_.html",
            "date": " • Dec 10, 2023"
        }
        
    
  
    
        ,"post14": {
            "title": "Big Idea 5.6 Safe Computing",
            "content": "Safe Computing . Personal Identifiable Information (PII) . As we create a Web Site and post information we are adding to the Searchable PII. However, there is a dichotomy as a site like LinkedIn is a place where we want to be known for our accomplishments. But be aware, the person that looks at your LinkedIn will, most likely, look at things like TikTok, Instagram or Facebook. . PII considerations . Things that will be known by everyone: Name, Email (suggest a junk email), Picture, High School attended, College Attended, Properties you own, State-City of residence, all State-City of previous residence, Credit Reports, … | Gray area items, more cautious: Birth date, Place of Birth, Street Address, Phone Number, Maiden names of Mother and Grandmother, Drivers License Number, … | Things that you should strive to keep absolutely secret: Credentials for Access, Two-Factor Authentication on Financial accounts, Social Security Number, Tax records, … | . Beware, Establish practices for your own Safety . Multi-factor authentication often requires you to enter a code that has been texted or emailed to you. Other types of authentication are biometrics (finger print or facial recognition). | Malware is often sent in attachments to things in email. Often they request you to click on an attachment and it starts the process of adding a virus to your computer. | Phishing is where unknown sources try to entice you into a response, like click here and receive $500. Often such systems impersonate someone like Amazon asking for login information. Be careful to look closely at source of email (ie amzn.com vs amazon.com). | . Factors to Increase Security of System (recommend Watch 5.6 Video 2) . Most of my financials or critical systems use Multi Factor authentication | Biometrics is something that is used secure systems, fingerprints or facial recognition | Symmetric encryption is a type of encryption where only one key (a secret key) is used to both encrypt and decrypt electronic information. | Asymmetric cryptography, also known as public-key cryptography, is a process that uses a pair of related keys – one public key and one private key – to encrypt and decrypt a message and protect it from unauthorized access or use. | SSL Uses both Asymmetric and Symmetric Encryption | . Nefarious Uses of Internet . A Virus or Malware compromise security, they are opposite of increasing security. | Phishing is a way to get a Virus on your machine, or a way to get you to input PII. | After a Virus or being compromised by Phishing it is advised to review all of you PII vulnerabilities. | . Blog Post Reflection . Describe PII you have seen on project in CompSci Principles. | What are your feelings about PII and your personal exposure? | Describe good and bad passwords? What is another step that is used to assist in authentication. | Try to describe Symmetric and Asymmetric encryption. | Provide an example of encryption we used in AWS deployment. | Describe a phishing scheme you have learned about the hard way. Describe some other phishing techniques. |",
            "url": "http://localhost:4100/teacher_portfolio/5.d/5.e/2023/12/08/CSP-safe_computing.html",
            "relUrl": "/5.d/5.e/2023/12/08/CSP-safe_computing.html",
            "date": " • Dec 8, 2023"
        }
        
    
  
    
        ,"post15": {
            "title": "Big Idea 5.5 Legal and Ethical Concerns",
            "content": "Cost of Free . In Mr Mortensen’s most recent years in industry, there were many Lawyers making a profession on Patents and how they can be impacted on General Public Licensing (GPL). . Qualcomm makes its money on patents, if you use GPL software you could be voiding your rights to charge for software and patents. Open Source by nature, specifically GPL, says any derivative work is free and code should be shared. Qualcomm wants all derivative work to require a royalty payment payment, also anyone who uses the idea/patent pays royalty. . . From synopsis.com, “Black Duck® software composition analysis (SCA) helps teams manage the security, quality, and license compliance risks that come from the use of open source and third-party code in applications and containers.” Qualcomm has had 20 technical jobs and 3 lawyers analyzing all the code produced, analyzing code for Open Source inclusion, and analyzing impact of such licenses to its ability to charge royalties for the use of their Patents. . This may sound like a simple problem, but think about the Students of Today, often they are given an assignment and instead of developing their own algorithm they opt to copy something off the internet. Well, don’t think the Workers of Today are entirely different. In summary, it is important to know the type of software license you are copying, it could impact billions of dollars in business. . License Communities, License Types Guide . Adding and selecting a license GitHub instructions. An author, a licensor, needs to determine a license. This may result in asking… | . Do I want to waive default copyright in reuse? | Do I want to allow derivative works or not? | Do I want to require all derivative code to be shared? | Creative Commons Zero v1.0 Universal . The Creative Commons CC0 Public Domain Dedication waives copyright interest in a work you’ve created and dedicates it to the world-wide public domain. . Open Source MIT License . This license in friendly to someone like Qualcomm! This allows using code freely and making and distributing closed source versions. Typically, the author of software with MIT License want credit. Credit could be as simple as adding the authors name in comments. . Close source means the GitHub project could be private. . Open Source GPL License . The GNU GPLv3 also lets people do almost anything they want with your project, except distributing closed source versions. . Open source means the GitHub project must be public. . For a company like Qualcomm, they are required to institute many practices to deliver their code in parts (public vs private). Isolating their patent and secret code, far away from the GPL or Creative Commons code. In fact, a company that is protecting their patents may need to division engineers, split distribution, not deploy to public, etc. After distribution, the customer of the Patented (ie Qualcomm) product is required to put the public/private domain code back together again. . Legal and Ethically . We need to comply with the terms of licenses. We need to cite sources. (I am particularly bad with internet pictures. However, in the picture of the Black Duck above I am actually advertising the Company). . As consumers, we have become aware that Music and Movie companies own content. These companies build DRM (Digital Rights Management) software to protect, play, and/or distribute content. Most of us buy subscriptions to services. However, some figure out ways to bypass systems and allow download. Often we will see these sites disappear, as they are illegal. . In software, it can be more complicated to understand all the Creative Commons licenses and its impact to our own ideas and businesses. Mostly, if we use things in class, there is “no problem” with Open Source as our usage is considered educational use. Creative Commons software has enabled amazing innovation as we are able to do so much for free, as we have done in this class. However, Individuals and Companies are required to figure out techniques and business models in order to use Open Source software according to terms of license. . Long ago, I remember being amazed that Red Hat was not selling its Linux distribution, they were giving away the software. They had to! This was in the terms of the licenses they were using, GPL. However, as an early pioneers in Linux distributions, they established a business model around buying their support agreement. They rose in fortune, became a public company, and had an amazing Initial Public Offering (IPO). Many, many vendors have followed the Red Hat model in building free distributions and establishing unique business models. Qualcomm figured out how to mix Patent and GPL businesses and have flourished since abandoning all proprietary, to include Android in its very complicated business model using Android. . Creative Commons, Open Source are free terminologies! However, businesses will not last without income. And today, businesses won’t last without engineers pulling Open Source software. . Blog Post Reflection . When you create a GitHub repository it requests a license type. Review the license types in relationship to this Tech Talk and make some notes in your personal blog. | In your blog, summarize the discussions and personal analysis on Software Licenses/Options, Digital Rights, and other Legal and Ethical thoughts from this College Board topic. | Make a license for your personal (blog) and Team repositories for the CPT project. Be sure to have a license for both Team GitHub repositories (frontend/backend). Document license(s) you picked and why. FYI, frontend, since it is built on GitHub pages may come with a license and restrictions. Document in blog how team made license choice and process of update. |",
            "url": "http://localhost:4100/teacher_portfolio/5.e/2023/12/08/CSP-legal_ethics.html",
            "relUrl": "/5.e/2023/12/08/CSP-legal_ethics.html",
            "date": " • Dec 8, 2023"
        }
        
    
  
    
        ,"post16": {
            "title": "jQuery | P3",
            "content": "UX . Intro to the lesson . Do you remember the first operating system you used? | What makes you remember that first interaction? | The first operating system that I used was Windows XP, and fun fact the XP stands for experience. This shows how important User Experience is. | . What is UX? . UX is the shortform of ____; a standard of understanding the ________ of a product and optimise it based on data recived from users. . | UX is a ____ in all industries since collecting UX and improving the product based on it increases the ____ of the product on the market, increasing profits of the company or collaboration. . | . Examples of bad UX but Good UI . apple.com the website lags on lower end devices. | renders the website useless on lower end devices (demonstrate) | . | . . microsoft.com the website is very hard to navigate | very hard to find every feature | the first time i used it, i didn’t know where to change my password and eventually gave up | is it trying to sell me its products or is it trying to help me? | . | . . controversial but true, github.com veru hard to navigate | very hard to find every feature | too much is going on, mental stress 😩 | . | . . Examples of Good UX and Good UI . discord.com very easy to navigate | very easy to find every feature | everything is very well organized | the icons are very easy to understand | . | . . google.com it has a search bar, and that’s it | it is very easy to use, even for a 5 year old or a 90 year old | . | . . . What is the difference between UX and UI? . The main difference between UX and UI is that UI focuses on how the website looks rather than how it works. | A website can have a great UI but a bad UX, but a website can’t have a great UX but a bad UI If the website is bad to look at, the User Experience is going to be horrible. | . | . When is UX Used? . UX is used when a product, especially a new one, needs optimization or modification based on user prefrence. This helps with changing user perception of the product since the company producing it would have had no prior feedback and would have not known their user prefrences. | . How is UX data gathered? . UX data is mainly gathered through internet forms or feedback discussion boards. Advertisments and websites such as Google forms or official company forums are some common methods. This data is used to make small or big quality kf life changes that make it more convineient anfor the user. . | An example of UX data collection is the Minecraft Forums: | An example of UX implementation is the Spotify Wrapped interface: | On one hand, the Minecraft Forums are a source of UX data and on the other hand, the Spotify Wrapped interface is an example of improving UX. | . Why is UX important? . UX is vital for the quality of a product; if there is no quality control or optimisation of UX, demand for the product drops and it fades away. If the product keeps up with modern UX expectations, it grows in popularity, gains higher demand and profits. | An example is the contrast between old and new Mario games: . | Incredibly low resolution, very lackluster in terms of background and very simple design on the UI and the foreground/level. | . . Incredibly detailed, amazing resolution, interesting levels and larger UI/interfaces. . | As time has gone by, the user demands for higher resolution, higher detail, better quality, more game depth has translated into games as they strive to improve their UX to keep their products on top of the list. . | . What is jQuery? . jQuery is a lightweight, “______”, JavaScript library. The purpose of jQuery is to make it much easier to use JavaScript on your site and it simplifies many tasks that require many lines of JavaScript code to accomplish, wraping them into __ that you can call with a single line of code. . jQuery also simplifies a lot of the complicated things from JavaScript, like AJAX calls and DOM manipulation. . The implications of jQuery . The jQuery library has the following features . HTML/DOM manipulation | CSS manipulation | HTML event methods | Effects and animations | AJAX (Asynchronous Javascript and XML) | Utilities | In addition, jQuery has plugins for almost any task out there. | . If you ever want to use jQuery, you can download it here or just use a CDN (Content Delivery Network) from Google! . &lt;!-- Downloaded jQuery --&gt; &lt;head&gt; &lt;script src=&quot;jquery-3.7.1.min.js&quot;&gt;&lt;/script&gt; &lt;/head&gt; . &lt;!-- Google CDN which is the more common method of getting the library --&gt; &lt;head&gt; &lt;script src=&quot;https://ajax.googleapis.com/ajax/libs/jquery/3.7.1/jquery.min.js&quot;&gt;&lt;/script&gt; &lt;/head&gt; . jQuery syntax and how to use it . With jQuery you select (query) HTML elements and perform “___” on them. . Basic syntax is: $(selector).action() . A $ symbol to define/access jQuery | A (selector) to “query (or find)” HTML elements | A jQuery action() to be performed on the element(s) | . Examples: . $(this).hide() - hides the current element . | $(“p”).hide() - hides all &lt;p&gt; elements . | $(“.test”).hide() - hides all elements with class=”test” . | $(“#test”).hide() - hides the element with id=”test” . | . In the following example, write in one of the comments where the selector is (popcorn hack ~ raise hand when found) . $(document).ready(function(){ // $(&quot;button&quot;).click(function(){ // $(&quot;p&quot;).hide(); // }); // }); // . The element Selector . $(“p”) The #id Selector | $(“#test”) The .class Selector | $(“.class”) | . The Document Ready Event . All jQuery methods begin inside a document _____ event: . $(document).ready(function(){ // jQuery methods go here... }); . This is to prevent any jQuery code from running before the document is finished loading (is ready). . It is good practice to wait for the document to be fully loaded and ready before working with it. This also allows you to have your JavaScript code before the body of your document, in the head section. . Reason: . Trying to hide an element that is not created yet | Trying to get the size of an image that is not loaded yet | . $(function(){ // An even quicker way to do it // jQuery methods go here... }); . jQuery methods and event handling . What are Events? . All the different visitors’ actions that a web page can respond to are called events | . Mouse Events Keyboard Events Form Events Document/Window Events . click | keypress | submit | load | . dblclick | keydown | change | resize | . mouseenter | keyup | focus | scroll | . mouseleave |   | blur | unload | . Popcorn Hack: Name 3 other event HTML events . | | | onclick=JavaScript // The infamous onclick event in html . &lt;html&gt; &lt;head&gt; &lt;script src=&quot;https://ajax.googleapis.com/ajax/libs/jquery/3.7.1/jquery.min.js&quot;&gt;&lt;/script&gt; &lt;script&gt; $(document).ready(function(){ $(&quot;p&quot;).click(function(){ $(this).hide(); }); }); &lt;/script&gt; &lt;/head&gt; &lt;body&gt; &lt;p&gt;If you click on me, I will disappear.&lt;/p&gt; &lt;p&gt;Click me away!&lt;/p&gt; &lt;p&gt;Click me too!&lt;/p&gt; &lt;/body&gt; &lt;/html&gt; . Final example, look at it here . &lt;html&gt; &lt;head&gt; &lt;script src=&quot;https://ajax.googleapis.com/ajax/libs/jquery/3.7.1/jquery.min.js&quot;&gt;&lt;/script&gt; &lt;script&gt; $(document).ready(function(){ $(&quot;#hide&quot;).click(function(){ $(&quot;p&quot;).hide(); }); $(&quot;#show&quot;).click(function(){ $(&quot;p&quot;).show(); }); }); &lt;/script&gt; &lt;/head&gt; &lt;body&gt; &lt;p&gt;If you click on the &quot;Hide&quot; button, I will disappear.&lt;/p&gt; &lt;button id=&quot;hide&quot;&gt;Hide&lt;/button&gt; &lt;button id=&quot;show&quot;&gt;Show&lt;/button&gt; &lt;/body&gt; &lt;/html&gt; . Final example, look at it here . &lt;html&gt; &lt;head&gt; &lt;script src=&quot;https://ajax.googleapis.com/ajax/libs/jquery/3.7.1/jquery.min.js&quot;&gt;&lt;/script&gt; &lt;script&gt; $(document).ready(function(){ // Challenge! Make it so the text appears with an animation, causing it to slowly fade in and out! }); &lt;/script&gt; &lt;/head&gt; &lt;body&gt; &lt;button id=&quot;hide&quot;&gt;Hide&lt;/button&gt; &lt;button id=&quot;show&quot;&gt;Show&lt;/button&gt; &lt;p&gt;Points &lt; Indicators :D&lt;/p&gt; &lt;p&gt;This is another small paragraph&lt;/p&gt; &lt;p&gt;(if you put a cool joke here you get .01 extra points)&lt;/p&gt; &lt;p&gt;&quot;ew who wrote that?&quot; ^^^&lt;/p&gt; &lt;/body&gt; &lt;/html&gt; . Final example, look at it here . &lt;html&gt; &lt;head&gt; &lt;script src=&quot;https://ajax.googleapis.com/ajax/libs/jquery/3.7.1/jquery.min.js&quot;&gt;&lt;/script&gt; &lt;script&gt; $(document).ready(function(){ $(&quot;button&quot;).click(function(){ $(&quot;#div1&quot;).fadeIn(); $(&quot;#div2&quot;).fadeIn(&quot;slow&quot;); $(&quot;#div3&quot;).fadeIn(3000); }); }); &lt;/script&gt; &lt;/head&gt; &lt;body&gt; &lt;p&gt;Demonstrate fadeIn() with different parameters.&lt;/p&gt; &lt;button&gt;Click to fade in boxes&lt;/button&gt;&lt;br&gt;&lt;br&gt; &lt;div id=&quot;div1&quot; style=&quot;width:80px;height:80px;display:none;background-color:red;&quot;&gt;&lt;/div&gt;&lt;br&gt; &lt;div id=&quot;div2&quot; style=&quot;width:80px;height:80px;display:none;background-color:green;&quot;&gt;&lt;/div&gt;&lt;br&gt; &lt;div id=&quot;div3&quot; style=&quot;width:80px;height:80px;display:none;background-color:blue;&quot;&gt;&lt;/div&gt; &lt;/body&gt; &lt;/html&gt; . Final example, look at it here . Making requests with AJAX . AJAX stands for Asynchronous JavaScript and XML. It allows web pages to be updated asynchronously in a easier way and is promise based. A Promise in JavaScript represents the eventual completion (or failure) of an asynchronous request. . Why use jQuery AJAX over a normal async request or AJAX request? . Against a normal async request AJAX has a lot of advantages: . Easier Error Handling: Promises are much easier to deal with than callbacks. If an error occurs in a promise, it will be passed down to the next catch() clause. . | Simpler API Chaining: If you want to wait for one operation to finish before starting another one you can simply use .then(). . | Normal async request . getUserLocation(function(error, location) { if (error) { console.error(&#39;Error:&#39;, error); } else { getForecast(location, function(error, forecast) { if (error) { console.error(&#39;Error:&#39;, error); } else { console.log(&#39;Forecast:&#39;, forecast); } }); } }); . Ajax requests without any library . fetch(&#39;api/location&#39;) .then(response =&gt; response.json()) .then(location =&gt; fetch(&#39;api/forecast/&#39; + location)) .then(response =&gt; response.json()) .then(forecast =&gt; { console.log(&#39;Forecast:&#39;, forecast); }) .catch(error =&gt; { console.error(&#39;Error:&#39;, error); }); . Ajax Requests with JQuery . $.ajax({ url: &#39;api/location&#39;, method: &#39;GET&#39;, dataType: &#39;json&#39; }) .then(function(location) { return $.ajax({ url: &#39;api/forecast/&#39; + location, method: &#39;GET&#39;, dataType: &#39;json&#39; }); }) .then(function(forecast) { console.log(&#39;Forecast:&#39;, forecast); }) .catch(function(error) { console.error(&#39;Error:&#39;, error); }); . You can see using ajax is much easier to read than callback system. However when it comes to using jquery ajax vs javascript’s version there are less differences. It is up to you which syntax you like more. . As mentioned earlier, jQuery ajax also builds on top of the old javascript version so it can support older browser versions. . Jquery’s use with PBL . Jquery’s most important use is making you site dynamic and update from user input. The most important part of this for our projects is taking the data from the backend and building html from it. . %%html &lt;head&gt; &lt;script src=&quot;https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js&quot;&gt;&lt;/script&gt; &lt;style&gt; .post { border: 1px solid #ddd; margin-bottom: 20px; padding: 20px; border-radius: 5px; } .like-count { color: #007BFF; } &lt;/style&gt; &lt;/head&gt; &lt;body&gt; &lt;div id=&quot;posts&quot;&gt;&lt;/div&gt; &lt;script&gt; // Fake API function function getAPI() { return [ {id: 1, content: &#39;Dogs are man &#39;s best friend.&#39;, likes: 10}, {id: 2, content: &#39;Dogs have an exceptional sense of smell.&#39;, likes: 20}, {id: 3, content: &#39;There are hundreds of different dog breeds.&#39;, likes: 30} ]; } $(document).ready(function(){ var posts = getAPI(); $.each(posts, function(i, post) { var postHtml = &#39;&lt;div class=&quot;post&quot;&gt;&lt;h2&gt;Post &#39; + post.id + &#39;&lt;/h2&gt;&lt;p&gt;&#39; + post.content + &#39;&lt;/p&gt;&lt;p class=&quot;like-count&quot;&gt;&#39; + post.likes + &#39; likes&lt;/p&gt;&lt;/div&gt;&#39;; $(&#39;#posts&#39;).append(postHtml); }); }); &lt;/script&gt; &lt;/body&gt; . . Popcorn Hack: Complete the Jquery and JavaScript code . This represents a website for buying dogs. The API contains an id, name, price, and breed for each dog. Display them all as html using jQuery. . %%html &lt;head&gt; &lt;script src=&quot;https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js&quot;&gt;&lt;/script&gt; &lt;style&gt; .dog { border: 1px solid #ddd; margin-bottom: 20px; padding: 20px; border-radius: 5px; } .price { color: #007BFF; } &lt;/style&gt; &lt;/head&gt; &lt;body&gt; &lt;div id=&quot;dogs&quot;&gt;&lt;/div&gt; &lt;script&gt; // Fake API function function getAPI() { return [ {id: 1, name: &#39;Max&#39;, price: &#39;$1000&#39;, breed: &#39;Golden Retriever&#39;}, {id: 2, name: &#39;Bella&#39;, price: &#39;$800&#39;, breed: &#39;Labrador Retriever&#39;}, {id: 3, name: &#39;Charlie&#39;, price: &#39;$1200&#39;, breed: &#39;German Shepherd&#39;} ]; } $(document).ready(function(){ var dogs = getAPI(); //Write code here }); &lt;/script&gt; &lt;/body&gt; . . Animations with JQuery . You can also create animations in JQuery. . styles: Specifies the CSS properties to animate. | speed: Optional and specifies the speed of the animation, by default it is 400 milliseconds. | easing: Optional and Specifies the animation pattern. “swing” - moves slower at the beginning/end, but faster in the middle | “linear” - moves in a constant speed | . | callback: Optional, a function to be executed after the animation completes. By default it is “swing”. | . | . Animations glitch out jupyter notebooks so this example can’t be in runnable code. . &lt;html&gt; &lt;head&gt; &lt;script src=&quot;https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js&quot;&gt;&lt;/script&gt; &lt;script&gt; $(document).ready(function(){ // Reset CSS properties to their original values $(&quot;div&quot;).css({ left: &#39;0px&#39;, opacity: &#39;1&#39;, height: &#39;100px&#39;, width: &#39;100%&#39; }); $(&quot;button&quot;).click(function(){ $(&quot;div&quot;).animate({ left: &#39;250px&#39;, opacity: &#39;0.5&#39;, height: &#39;150px&#39;, width: &#39;100%&#39; }); }); }); &lt;/script&gt; &lt;/head&gt; &lt;body&gt; &lt;button&gt;Start&lt;/button&gt; &lt;div style=&quot;background:#98bf21;height:100px;width:100px;position:absolute;&quot;&gt;&lt;/div&gt; &lt;/body&gt; &lt;/html&gt; . Look at the animation here . CRUD Principles: . What Does CRUD Stand For? . Answer this as a Popcorn Hack | . What Does CRUD Do? . These four basic operations represent the fundamental actions that can be performed on data in a computer system or a database. | . How Can CRUD Be Applied to jQuery and Beyond? . jQuery: jQuery is a JavaScript library that simplifies HTML document traversal and manipulation. You can use jQuery to perform CRUD operations on the client side, interacting with the DOM. Here’s a brief overview: | . Create (C): . // Create a new element and append it to a table $(&#39;#myTable&#39;).append(&#39;&lt;tr&gt;&lt;td&gt;New Data&lt;/td&gt;&lt;/tr&gt;&#39;); . Read (R): . // Read data from a table $(&#39;#myTable tr&#39;).each(function() { console.log($(this).text()); }); . Update (U): . // Update data in a table $(&#39;#myTable td:contains(&quot;Old Data&quot;)&#39;).text(&#39;Updated Data&#39;); . Delete (D): . // Delete a row from a table $(&#39;#myTable td:contains(&quot;Data to Delete&quot;)&#39;).closest(&#39;tr&#39;).remove(); . Beyond jQuery: In more advanced web development scenarios, CRUD operations are often performed using server-side technologies and databases. Technologies like Node.js, Express, Django, Flask, and others are commonly used for server-side development. Databases such as MySQL, MongoDB, and PostgreSQL store and manage the data. | . Demonstration of Applying CRUD to Tables: . Assuming a simple HTML table with the ID “myTable”: . &lt;table id=&quot;myTable&quot;&gt; &lt;tr&gt; &lt;th&gt;Data&lt;/th&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;Row 1&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;Row 2&lt;/td&gt; &lt;/tr&gt; &lt;/table&gt; . Create (C): . // Create a new row and append it to the table $(&#39;#myTable&#39;).append(&#39;&lt;tr&gt;&lt;td&gt;New Row&lt;/td&gt;&lt;/tr&gt;&#39;); . Read (R): . // Read and log data from the table $(&#39;#myTable tr&#39;).each(function() { console.log($(this).text()); }); . Update (U): . // Update data in the first row of the table $(&#39;#myTable tr:first-child td&#39;).text(&#39;Updated Row&#39;); . Delete (D): . // Delete the second row from the table $(&#39;#myTable tr:nth-child(2)&#39;).remove(); . These examples demonstrate how CRUD operations can be applied using jQuery to manipulate a simple HTML table on the client side. In more complex applications, these operations are often handled on the server side with the help of backend frameworks and databases. . jQuery CRUD Demo . jQuery CRUD Demo . Name: Review: Add Row Name Review Action . John Mortensen | Great lesson! Explained UX and CRUD principles as well as usage of jQuery very nicely. +3 indicators! | Edit Delete | . Sean Yeung | Very interactive teaching! Covered all the topic but should have made more Taylor Swift references. | Edit Delete | . . popcorn hack . %%html &lt;!-- Head contains information to Support the Document --&gt; &lt;head&gt; &lt;!-- load jQuery and DataTables output style and scripts --&gt; &lt;link rel=&quot;stylesheet&quot; type=&quot;text/css&quot; href=&quot;https://cdn.datatables.net/1.13.4/css/jquery.dataTables.min.css&quot;&gt; &lt;script type=&quot;text/javascript&quot; language=&quot;javascript&quot; src=&quot;https://code.jquery.com/jquery-3.6.0.min.js&quot;&gt;&lt;/script&gt; &lt;script&gt;var define = null;&lt;/script&gt; &lt;script type=&quot;text/javascript&quot; language=&quot;javascript&quot; src=&quot;https://cdn.datatables.net/1.13.4/js/jquery.dataTables.min.js&quot;&gt;&lt;/script&gt; &lt;/head&gt; &lt;!-- Body contains the contents of the Document --&gt; &lt;body&gt; &lt;table id=&quot;xdemo&quot; class=&quot;table&quot;&gt; &lt;thead&gt; &lt;tr&gt; &lt;th&gt;Make&lt;/th&gt; &lt;th&gt;Model&lt;/th&gt; &lt;th&gt;Year&lt;/th&gt; &lt;th&gt;Color&lt;/th&gt; &lt;th&gt;Price&lt;/th&gt; &lt;/tr&gt; &lt;/thead&gt; &lt;tbody&gt; &lt;tr&gt; &lt;td&gt;Ford&lt;/td&gt; &lt;td&gt;Mustang&lt;/td&gt; &lt;td&gt;2022&lt;/td&gt; &lt;td&gt;Red&lt;/td&gt; &lt;td&gt;$35,000&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;Toyota&lt;/td&gt; &lt;td&gt;Camry&lt;/td&gt; &lt;td&gt;2022&lt;/td&gt; &lt;td&gt;Silver&lt;/td&gt; &lt;td&gt;$25,000&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;Tesla&lt;/td&gt; &lt;td&gt;Model S&lt;/td&gt; &lt;td&gt;2022&lt;/td&gt; &lt;td&gt;White&lt;/td&gt; &lt;td&gt;$80,000&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;Cadillac&lt;/td&gt; &lt;td&gt;Broughan&lt;/td&gt; &lt;td&gt;1969&lt;/td&gt; &lt;td&gt;Black&lt;/td&gt; &lt;td&gt;$10,000&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;Ford&lt;/td&gt; &lt;td&gt;F-350&lt;/td&gt; &lt;td&gt;1997&lt;/td&gt; &lt;td&gt;Green&lt;/td&gt; &lt;td&gt;$15,000&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;Ford&lt;/td&gt; &lt;td&gt;Excursion&lt;/td&gt; &lt;td&gt;2003&lt;/td&gt; &lt;td&gt;Green&lt;/td&gt; &lt;td&gt;$25,000&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;Ford&lt;/td&gt; &lt;td&gt;Ranger&lt;/td&gt; &lt;td&gt;2012&lt;/td&gt; &lt;td&gt;Red&lt;/td&gt; &lt;td&gt;$8,000&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;Kuboto&lt;/td&gt; &lt;td&gt;L3301 Tractor&lt;/td&gt; &lt;td&gt;2015&lt;/td&gt; &lt;td&gt;Orange&lt;/td&gt; &lt;td&gt;$12,000&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;Ford&lt;/td&gt; &lt;td&gt;Fusion Energi&lt;/td&gt; &lt;td&gt;2015&lt;/td&gt; &lt;td&gt;Guard&lt;/td&gt; &lt;td&gt;$25,000&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;Acura&lt;/td&gt; &lt;td&gt;XL&lt;/td&gt; &lt;td&gt;2006&lt;/td&gt; &lt;td&gt;Grey&lt;/td&gt; &lt;td&gt;$10,000&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;Ford&lt;/td&gt; &lt;td&gt;F150 Lightning&lt;/td&gt; &lt;td&gt;2024&lt;/td&gt; &lt;td&gt;Guard&lt;/td&gt; &lt;td&gt;$70,000&lt;/td&gt; &lt;/tr&gt; &lt;/tbody&gt; &lt;/table&gt; &lt;/body&gt; &lt;!-- Script is used to embed executable code --&gt; &lt;script&gt; $(&quot;#xdemo&quot;).DataTable(); &lt;/script&gt; . . Make Model Year Color Price . Ford | Mustang | 2022 | Red | $35,000 | . Toyota | Camry | 2022 | Silver | $25,000 | . Tesla | Model S | 2022 | White | $80,000 | . Cadillac | Broughan | 1969 | Black | $10,000 | . Ford | F-350 | 1997 | Green | $15,000 | . Ford | Excursion | 2003 | Green | $25,000 | . Ford | Ranger | 2012 | Red | $8,000 | . Kuboto | L3301 Tractor | 2015 | Orange | $12,000 | . Ford | Fusion Energi | 2015 | Guard | $25,000 | . Acura | XL | 2006 | Grey | $10,000 | . Ford | F150 Lightning | 2024 | Guard | $70,000 | . Hacks . Combine all aspects taught throughout this lesson. . Store data on the frontend with CRUD functionality. +0.25 | You should create a frontend which can displays data with JQuery. Make sure to use event handling on each item stored to use the CRUD functionality. +0.25 | And make it look good using UX design techniques. + 0.2 | . In addition: . Complete all popcorn hacks + 0.2 | Do something extra +0.1. Some good ideas are adding JQuery animations to your hacks, use extra JQuery events, or do anything else extra. | .",
            "url": "http://localhost:4100/teacher_portfolio/2023/12/07/P3_student_UX_jQuery_CRUD_IPYNB_2_.html",
            "relUrl": "/2023/12/07/P3_student_UX_jQuery_CRUD_IPYNB_2_.html",
            "date": " • Dec 7, 2023"
        }
        
    
  
    
        ,"post17": {
            "title": "P2 Digital Divide Team Teach",
            "content": "Digital Divide . The digital divide is the gap between those who have access to modern information and communication technology (ICT) resources, such as the internet and digital devices, and those who do not. . . Internet access varies between socioeconomic, geographic, and demographic characteristics, as well as between countries. . (IOC-1.C.1 + IOC-1.C.2) . Socioeconomic Variation: Access to the Internet is not uniform across economic status groups. Individuals with higher socioeconomic status may have better access to the internet compared to others. . | Demographic Variation: Internet access can differ based on demographic factors such as age, education level, and occupation. Younger, more educated individuals might have better or easier access compared to older individuals or those with a lower education. . | . . International Disparities: Developed nations often have widespread internet infrastructure compared to developing or underdeveloped countries. Countries with mountainous or other rough terrain might have difficulties providing internet. Additionally, urban areas generally have better internet infrastructure than rural areas. Remote or underdeveloped regions may face challenges in accessing the internet. | . Popcorn Hack 1 . How might age, education level, or occupation affect someone’s ability to access the internet? . The digital divide can have a huge impact on society . (IOC-1.C.4) . Digital divide raises multiple beneficial and detrimental aspects: . Equity Issues: Due to digital divide, certain groups or individuals may be systematically disadvantaged in terms of opportunities, resources, and benefits derived from digital technologies. . | Access Challenges: Limited access to the internet and digital devices raises concerns about fair and equal opportunities for education, employment, healthcare, and social participation in our modern societies. . | Influence Considerations: The divide extends beyond mere access, impacting the ability of individuals or groups to influence and engage in the increasingly digital world. As this technology develops more quickly, those without access are left behind faster. Students without internet access fall behind their peers in school. Then, as other students keep learning, it becomes harder and harder to catch up. . | . . Popcorn Hack 2 . Imagine you are an exchange student from another country visiting our community, you have grown up without using the internet and now you go to Del Norte. State 2-3 reasons you might be at a disadvantage to other students your age. . The digital divide can be positively and negatively influnced by both individuals and groups. . (IOC-1.C.3 + IOC-1.C.5) . Group Impact: Entire demographic groups or communities may experience limited access to digital resources, impacting their ability to participate in the digital economy, education, and social activities. This can perpetuate existing inequalities. However, groups can work to bridge the digital divide through humanitarian efforts. . | Individual Effect: Those with limited access to the web may face challenges in acquiring digital skills, accessing information, and participating in online communication, which can hinder personal and professional development. Additionally, the choices individuals make may contribute to the digital divide. Actions such as purchasing digital devices or subscribing to internet services may indirectly be contributing to its growth. . | Organizational and Government Impact: Companies, organizations, and governments play a role in shaping the digital landscape. This includes certain business practices including the deployment of infrastructure and the design of digital products. Government policies or initiatives, including investment in digital infrastructure and literacy programs, have a considerable weight to bridge or exacerbate existing disparities. . | . . Popcorn Hack 3 . Using the provided graphic and what you have just learned, pick one country that is heavily impacted by the digital divide, and give three reasons why that might be. . . . Homework . To review the Digital Divide please read the provide article and watch the college board digital divide video and answer fill out the google form questions. . Stanford Article . College Board Video . Link to Homework Quiz .",
            "url": "http://localhost:4100/teacher_portfolio/2023/12/07/P2_student_Digital-Divide_IPYNB_2_.html",
            "relUrl": "/2023/12/07/P2_student_Digital-Divide_IPYNB_2_.html",
            "date": " • Dec 7, 2023"
        }
        
    
  
    
        ,"post18": {
            "title": "jQuery | P3",
            "content": "What is jQuery? . Essentially, jQuery is a library that allows us to use some of JavaScript’s built in functions . Benefits of jQuery . Benefits of jQuery include: . Makes it easier for us to write JavaScript and HTML code | Very flexible in terms of which browsers it can work on | Simplifies some of the most common JavaScript functions into fewer lines of code | . Question: What are some real life applications of jQuery? Name at least two you can think of. . Web pages, used to make dropdown menus appear smoothly | Simplifies implementation of AJAX, allows developers to make asynchronous requests to a server and update parts of a web page without requiring a full page reload | . Basic Syntax . Whenever you are working with jQuery, the most basic format you will you use is the following: . (selector).action() . The selector refers to the HTML element/target elements (ie. class or ID) | . Some examples include: . (this).hide() - hides the current element. . (“p”).hide() - hides all &lt;p&gt; elements. . (“.test”).hide() - hides all elements with class=”test”. . (“#test”).hide() - hides the element with id=”test”. . &lt;html&gt; &lt;head&gt; &lt;link rel=&quot;stylesheet&quot; type=&quot;text/css&quot; href=&quot;https://cdn.datatables.net/1.10.25/css/jquery.dataTables.min.css&quot;&gt; &lt;/head&gt; &lt;body&gt; &lt;h1&gt;Movie Search&lt;/h1&gt; &lt;h2&gt;Search for a Movie Series&lt;/h2&gt; &lt;form id=&quot;seriesForm&quot;&gt; &lt;input type=&quot;text&quot; id=&quot;seriesInput&quot; placeholder=&quot;Enter series title&quot;&gt; &lt;button type=&quot;submit&quot;&gt;Search&lt;/button&gt; &lt;/form&gt; &lt;div id=&quot;seriesContainer&quot;&gt;&lt;/div&gt; &lt;script src=&quot;https://code.jquery.com/jquery-3.6.0.min.js&quot;&gt;&lt;/script&gt; &lt;script src=&quot;https://cdn.datatables.net/1.10.25/js/jquery.dataTables.min.js&quot;&gt;&lt;/script&gt; &lt;script&gt; function fetchMovieSeriesData(seriesTitle) { var apiUrl = &quot;https://api.themoviedb.org/3/search/movie?api_key=5f87798890b72c6ac53b262ba43ed8c6&amp;query=&quot; + encodeURIComponent(seriesTitle); var request = new XMLHttpRequest(); // requests data request.open(&quot;GET&quot;, apiUrl, true); // fetches the data from the url request.onload = function() { if (request.status === 200) { // if request is successful - more specific than before var data = JSON.parse(request.responseText); // JS variable from JSON data fetchSeriesMovieData(data); } else { document.getElementById(&quot;seriesContainer&quot;).textContent = &quot;Error fetching movie series data.&quot;; } }; request.onerror = function() { document.getElementById(&quot;seriesContainer&quot;).textContent = &quot;Error fetching movie series data.&quot;; }; request.send(); } function fetchSeriesMovieData(data) { if (data.results &amp;&amp; data.results.length &gt; 0) { // checks that data contains info and is not empty var movieSeries = data.results; var creditsDataPromises = movieSeries.map(function(movie) { // creates an array of promises, which each fetch data for a movie in the series through a separate API request var apiUrl = &quot;https://api.themoviedb.org/3/movie/&quot; + movie.id + &quot;/credits?api_key=5f87798890b72c6ac53b262ba43ed8c6&quot;; return fetch(apiUrl).then(function(response) { // each request from each promise return response.json(); }); }); Promise.all(creditsDataPromises).then(function(creditsData) { // All promises are resolved and a new function is called with the movies series and the data displayMovieSeriesData(movieSeries, creditsData); }).catch(function(error) { // if an error appears document.getElementById(&quot;seriesContainer&quot;).textContent = &quot;Error fetching movie series data.&quot;; }); } else { document.getElementById(&quot;seriesContainer&quot;).textContent = &quot;No movie series found.&quot;; } } function displayMovieSeriesData(movieSeries, creditsData) { var table = document.createElement(&quot;table&quot;); var tableHeader = table.createTHead(); // a header is created var headerRow = tableHeader.insertRow(); // Rows are added to the table var columns = [&quot;Title&quot;, &quot;Popularity&quot;, &quot;Vote Count&quot;, &quot;Vote Average&quot;, &quot;Poster&quot;]; // column titles for (var i = 0; i &lt; columns.length; i++) { // iterates through column array and continues until i is greater than length of columns // basically, rows are created for every column var th = document.createElement(&quot;th&quot;); // rows are added underneath the headers th.textContent = columns[i]; // data is added to the rows headerRow.appendChild(th); // the rows are displayed } var tableBody = table.createTBody(); // the body of the table is created for (var j = 0; j &lt; movieSeries.length; j++) { // another for loop but iterates through the data // this way, every single row with contain data since the loop stops once all the data is iterated through var movie = movieSeries[j]; // the data is assigned to a variable var row = tableBody.insertRow(); // rows are added to the body var titleCell = row.insertCell(); titleCell.textContent = movie.title; // the title is displayed in new cells at the rows var popularityCell = row.insertCell(); popularityCell.textContent = movie.popularity; // the popularity is displayed var voteCountCell = row.insertCell(); voteCountCell.textContent = movie.vote_count; // the vote count is displayed var voteAverageCell = row.insertCell(); voteAverageCell.textContent = movie.vote_average; // the vote average is displayed var posterCell = row.insertCell(); var posterImage = $(&quot;&lt;img&gt;&quot;) .attr(&quot;src&quot;, &quot;https://image.tmdb.org/t/p/w200&quot; + movie.poster_path) .attr(&quot;alt&quot;, &quot;Movie Poster&quot;); posterCell.appendChild(posterImage); } document.getElementById(&quot;seriesContainer&quot;).appendChild(table); $(&#39;.movie-series-table&#39;).DataTable(); } document.getElementById(&quot;seriesForm&quot;).addEventListener(&quot;submit&quot;, function(event) { event.preventDefault(); var seriesTitle = document.getElementById(&quot;seriesInput&quot;).value; fetchMovieSeriesData(seriesTitle); }); &lt;/script&gt; &lt;/body&gt; &lt;/html&gt; . As you can see, JQuery can be used with APIs to create a more user friendly output and also makes it easier to work with API’s and code. It also allows for DOM manipulation and event handling (to be covered later). Overall, JQuery is a very powerful tool that can be used to help with coding and ensure better user experience. . Comparison . Without JQuery: . &lt;script&gt; var posterImage = document.createElement(&quot;img&quot;); posterImage.src = &quot;https://image.tmdb.org/t/p/w200&quot; + movie.poster_path; posterImage.alt = &quot;Movie Poster&quot;; &lt;/script&gt; . With JQuery: . &lt;script&gt; var posterImage = $(&quot;&lt;img&gt;&quot;) .attr(&quot;src&quot;, &quot;https://image.tmdb.org/t/p/w200&quot; + movie.poster_path) .attr(&quot;alt&quot;, &quot;Movie Poster&quot;); posterCell.appendChild(posterImage); &lt;/script&gt; . Introduction to DOM . One of the most useful abilities of JavaScript (and thus jQuery) is its ability to manipulate the DOM. But what is the DOM? . Overview of DOM . The DOM, short for Document Object Model, is a standard that allows us to create, change, or remove elements from HTML or XML documents. . Some operations that you can perform on DOM elements include… . Extracting the content of an element | Changing the content of an element | Adding an element before or after an existing element | Replacing an existing element with another element | Deleting an element | And many more! | . jQuery Get Methods . text() method . The jQuery text method, as its name implies, simply returns the plain text value of the content. . Below is an example of an application of the text() method: . html() method . The jQuery html method returns the plain text value of the content too, but it also returns it with HTML tags. . Example . &lt;div id=&quot;info&quot;&gt; &lt;p class=&quot;name&quot;&gt;John Doe&lt;/p&gt; &lt;p class=&quot;description&quot;&gt; &lt;span&gt;Web Developer&lt;/span&gt; at &lt;a href=&quot;#&quot;&gt;TechCorp&lt;/a&gt; &lt;/p&gt; &lt;/div&gt; . text() method use . var descriptionText = $(&quot;.description&quot;).text(); console.log(descriptionText); // with the text() method, this would output the plain text value of description // output: &#39;Developer at TechCorp&#39; . jQuery .text() method is used to retrieve the plain text content from the element with the class description (‘Developer at TechCorp’) | The $(“.description”).text() part selects the element with class description and then gets its textual content without any HTML tags. | . html() method use . var descriptionHTML = $(&quot;.description&quot;).html(); console.log(descriptionHTML); // with the html() method, this would output the HTML content of the element with all the HTML tags // output:&#39;&lt;span&gt;Web Developer&lt;/span&gt; at &lt;a href=&quot;#&quot;&gt;TechCorp&lt;/a&gt;&#39; . The .html() method is used to fetch the HTML content from the same description element | $(“.description”).html() selects the description element and also its inner HTML content, including the HTML tags like and | . Event Handling . Events . Events refer to the various actions or occurrences that happen in the web browser, which can be detected and responded to with JavaScript . Some types of events include… . keyboard events (keypress, keyup, etc.) | form events (ex. submit) | document/window events (resize, load, etc.) | . Examples . Event Handler for Clicking a Button . &lt;button id=&quot;clickButton&quot;&gt;Click Me!&lt;/button&gt; . $(&quot;#clickButton&quot;).click(function() { alert(&quot;Button was clicked!&quot;); }); . Breakdown: . In this first example, the jQuery code sets up an event handler for the click event on the button with the ID clickButton | When the button is clicked, an alert box displays the message, “Button was clicked!” | . Event Handler for Form Submit . &lt;form id=&quot;myForm&quot;&gt; &lt;input type=&quot;text&quot; placeholder=&quot;Enter text&quot;&gt; &lt;input type=&quot;submit&quot; value=&quot;Submit&quot;&gt; &lt;/form&gt; &lt;div id=&quot;formOutput&quot;&gt;&lt;/div&gt; . $(&quot;#myForm&quot;).submit(function(event) { event.preventDefault(); var enteredText = $(this).find(&quot;input[type=&#39;text&#39;]&quot;).val(); $(&quot;#formOutput&quot;).text(&quot;You entered: &quot; + enteredText); }); . Breakdown: . In this code segment, the jQuery script handles the submit event of the form with the ID myForm. | The event.preventDefault() method stops the form from being submitted in the traditional way (clicking the submit button), which prevents the page from reloading. | It gets the text entered in the text input field and displays it in a div with the ID formOutput. | . Event Handler for Mouse Enter/Leave . &lt;div id=&quot;hoverDiv&quot;&gt;Hover over me!&lt;/div&gt; . $(&quot;#hoverDiv&quot;).mouseenter(function() { $(this).css(&quot;background-color&quot;, &quot;green&quot;); }).mouseleave(function() { $(this).css(&quot;background-color&quot;, &quot;red&quot;); }); . Breakdown: . The code attaches two event handlers to the div with ID hoverDiv. (for when the mouse enters and leaves the div) | When the mouse hovers over the div (mouseenter event), the background color changes to green. | When the mouse leaves the div (mouseleave event), the background color changes to red. | . What is CRUD? . Create (C): . GOAL: create records or objects in a database, like creating records in SQLITE database in SPRING java project. . Read (R): . GOAL: retrieve data from our database for display or for interaction . Update (U): . GOAL: Update our data in our database, such as changing attributes like name . Delete (D): . GOAL: remove data from our database, like removing objects from our database . popcorn hack . talk about usage of one of four elements of CRUD from your project in tri 1. Focus on how CRUD was implemented. . simple example of CRUD . import java.util.ArrayList; import java.util.List; import java.util.Scanner; class Person { private int id; private String name; public Person(int id, String name) {this.id = id; this.name = name;} public int getId() {return id;} public String getName() {return name;} public void setName(String name) {this.name = name;} } public class CrudExample { private static List&lt;Person&gt; people = new ArrayList&lt;&gt;(); private static int nextId = 1; public static void main(String[] args) { Scanner scanner = new Scanner(System.in); while (true) { System.out.println(&quot;1. Create n2. Read n3. Update n4. Delete n5. Exit nEnter your choice: &quot;); int choice = scanner.nextInt(); switch (choice) { case 1: createPerson(scanner); break; case 2: readPeople(); break; case 3: updatePerson(scanner); break; case 4: deletePerson(scanner); break; case 5: System.out.println(&quot;Exiting program.&quot;); return; default: System.out.println(&quot;Invalid choice. Please try again.&quot;); } } } //CREATE private static void createPerson(Scanner scanner) { System.out.print(&quot;Enter person name: &quot;); String name = scanner.next(); Person person = new Person(nextId++, name); people.add(person); System.out.println(&quot;Person created with ID: &quot; + person.getId()); } //READ private static void readPeople() { System.out.println(&quot;People:&quot;); for (Person person : people) {System.out.println(&quot;ID: &quot; + person.getId() + &quot;, Name: &quot; + person.getName());} } //UPDATE private static void updatePerson(Scanner scanner) { System.out.print(&quot;Enter person ID to update: &quot;); int idToUpdate = scanner.nextInt(); for (Person person : people) {if (person.getId() == idToUpdate) {System.out.print(&quot;Enter new name: &quot;); String newName = scanner.next(); person.setName(newName); System.out.println(&quot;Person updated successfully.&quot;); return;}} System.out.println(&quot;Person with ID &quot; + idToUpdate + &quot; not found.&quot;); } //DELETE private static void deletePerson(Scanner scanner) { System.out.print(&quot;Enter person ID to delete: &quot;); int idToDelete = scanner.nextInt(); for (Person person : people) {if (person.getId() == idToDelete) {people.remove(person); System.out.println(&quot;Person deleted successfully.&quot;); return;}} System.out.println(&quot;Person with ID &quot; + idToDelete + &quot; not found.&quot;); } } CrudExample.main(null); . CRUD + jQuery Connection . Example with Disney Characters . ID Name Email Actions . Create Disney Character . &lt;!-- Include jQuery library --&gt; &lt;script src=&quot;https://code.jquery.com/jquery-3.6.4.min.js&quot;&gt;&lt;/script&gt; &lt;style&gt; /* Set background color, font, and remove default margins and padding for the body */ body { background-color: #a8c0ff; /* Disney Blue */ font-family: &#39;Arial&#39;, sans-serif; margin: 0; padding: 0; } /* Style for the table */ table { border-collapse: collapse; width: 100%; margin-top: 20px; } /* Style for table header and cells */ th, td { border: 1px solid #70a9ff; /* Disney Blue */ padding: 10px; text-align: left; } /* Style for table header */ th { background-color: #3d5af1; /* Disney Blue */ color: white; } /* Style for buttons */ button { background-color: #3d5af1; /* Disney Blue */ color: white; border: none; padding: 8px 12px; cursor: pointer; } /* Style for button hover effect */ button:hover { background-color: #1c3faa; /* Lighter Disney Blue */ } &lt;/style&gt; &lt;!-- HTML table structure with an empty tbody for dynamic data --&gt; &lt;table id=&quot;data-table&quot;&gt; &lt;thead&gt; &lt;tr&gt; &lt;th&gt;ID&lt;/th&gt; &lt;th&gt;Name&lt;/th&gt; &lt;th&gt;Email&lt;/th&gt; &lt;th&gt;Actions&lt;/th&gt; &lt;/tr&gt; &lt;/thead&gt; &lt;tbody&gt; &lt;!-- Initial data will be dynamically added here --&gt; &lt;/tbody&gt; &lt;/table&gt; &lt;!-- Button to trigger the creation of a new Disney character --&gt; &lt;button id=&quot;create-btn&quot;&gt;Create Disney Character&lt;/button&gt; &lt;script&gt; // Initial data for Disney characters const initialData = [ { id: 1, name: &#39;Mickey Mouse&#39;, email: &#39;mickey@example.com&#39; }, { id: 2, name: &#39;Donald Duck&#39;, email: &#39;donald@example.com&#39; } ]; // Dynamic data that can be updated or modified let dynamicData = [...initialData]; // Function to remove rows with duplicate IDs function removeDuplicateIds(data) { const uniqueIds = new Set(); return data.filter(item =&gt; { if (uniqueIds.has(item.id)) { return false; // Duplicate ID, exclude this item } uniqueIds.add(item.id); return true; }); } // Function to render data into the table function renderData(data) { const tableBody = $(&#39;#data-table tbody&#39;); tableBody.empty(); // Loop through the data and create table rows dynamically data.forEach(item =&gt; { const row = ` &lt;tr&gt; &lt;td&gt;${item.id}&lt;/td&gt; &lt;td&gt;${item.name}&lt;/td&gt; &lt;td&gt;${item.email}&lt;/td&gt; &lt;td&gt; &lt;button class=&quot;update-btn&quot; data-id=&quot;${item.id}&quot;&gt;Update&lt;/button&gt; &lt;button class=&quot;delete-btn&quot; data-id=&quot;${item.id}&quot;&gt;Delete&lt;/button&gt; &lt;/td&gt; &lt;/tr&gt; `; tableBody.append(row); }); } // Function to create a new Disney character function createDisneyCharacter() { const newName = prompt(&#39;Enter the name of the Disney character:&#39;); const newEmail = prompt(&#39;Enter the email of the Disney character:&#39;); // Check if there are multiple rows with the same ID const existingIds = [...initialData, ...dynamicData].map(item =&gt; item.id); const newId = existingIds.length &gt; 0 ? Math.max(...existingIds) + 1 : 1; // Add the new character to the dynamic data array dynamicData = [...dynamicData, { id: newId, name: newName, email: newEmail }]; // Render only the dynamic data renderData(removeDuplicateIds(dynamicData)); } // Event handler for the &quot;Create Disney Character&quot; button click $(&#39;#create-btn&#39;).on(&#39;click&#39;, createDisneyCharacter); // Event handler for the &quot;Delete&quot; and &quot;Update&quot; buttons inside the table $(&#39;#data-table&#39;).on(&#39;click&#39;, &#39;.delete-btn&#39;, function () { // Get the ID of the item to delete const idToDelete = $(this).data(&#39;id&#39;); // Filter out the item with the specified ID from the dynamic data dynamicData = dynamicData.filter(item =&gt; item.id !== idToDelete); // Render only the dynamic data renderData(removeDuplicateIds(dynamicData)); }); // Event handler for the &quot;Update&quot; button inside the table $(&#39;#data-table&#39;).on(&#39;click&#39;, &#39;.update-btn&#39;, function () { // Get the ID of the item to update const idToEdit = $(this).data(&#39;id&#39;); // Find the index of the item in the dynamic data array const updateIndex = dynamicData.findIndex(item =&gt; item.id === idToEdit); // Check if the item was found if (updateIndex !== -1) { // Prompt the user for the new name and email const updateName = prompt(&#39;Enter the new name of the Disney character:&#39;); const updateEmail = prompt(&#39;Enter the new email of the Disney character:&#39;); // Update the item in the dynamic data array dynamicData[updateIndex] = { id: idToEdit, name: updateName, email: updateEmail }; // Render only the dynamic data renderData(removeDuplicateIds(dynamicData)); } }); // Initial rendering of the table with the initial data renderData(removeDuplicateIds(initialData)); &lt;/script&gt; .",
            "url": "http://localhost:4100/teacher_portfolio/2023/12/07/P1_student_jQuerry_CRUD_IPYNB_2_.html",
            "relUrl": "/2023/12/07/P1_student_jQuerry_CRUD_IPYNB_2_.html",
            "date": " • Dec 7, 2023"
        }
        
    
  
    
        ,"post19": {
            "title": "P1 Digital divide",
            "content": "Digital Divide . The digital divide is the gap between those with Internet access and those without it. This gap can be influenced by factors such as socio-economic status, geography, education, and income, creating inequalities in access to digital resources and opportunities. . . How Socioeconomic, Geographic, and Demographic Characteristics Affect Internet Access . Socioeconomic Factors: . Income Gap: lower income individuals and families may face challenges to afford internet services | Employment Opportunities: internet access is important for searching jobs and overall professional opportunities | . Geographic Factors: . Rural vs. Urban Areas: rural areas lack the infrastructure needed to establish high-speed internet while urban areas have more quality access | Global Gap: there are disparities in internet access globally. More developed countries have a better foundation while less developed countries don’t | . Demographic Factors: . Age: generations of younger people have more access to internet due to education and work than older generations | Gender: in some regions women have less access to the internet than men | . Popcorn Hack 1 . How does the income gap affect different marginalized communities? Provide examples. . Answer: . Possible Answer . Digital Divide can Affect Individuals and Groups . Healthcare Aspect: . individuals or families without access to the internet lose telemedicine services | Limited to only in-person consultation | limited access to online resources about health | . Cultural Aspect: . less access to information about other cultures | can lead to language barriers | can cause greater cultural gaps | . Digital Divide raises isssues of Equity, Access, and Influence . 1. Equity: . Definition: Equity in the Digital Divide context pertains to the fair distribution of resources and opportunities related to digital technologies. . Issues: . Educational Disparities: Limited access to digital resources can hinder educational opportunities, leaving some individuals at a disadvantage in terms of skills and knowledge. | . | 2. Access: . Definition: Access involves the availability and affordability of digital technologies and the internet. . Issues: . Geographical Disparities: Rural areas may lack the necessary infrastructure, resulting in limited access to high-speed internet and digital devices. | . | Economic Barriers: Affordability can be a significant hurdle for lower-income individuals and families, restricting their access to essential online services. | . | 3. Influence: . Definition: Influence in the Digital Divide context refers to the power and control that individuals or groups have over digital technologies and the content available online. . Issues: . Representation Bias: Those with limited digital access may find themselves underrepresented or misrepresented in digital spaces, leading to biased perspectives. | . | Limited Participation: Individuals with restricted access may have less influence in shaping the digital landscape, impacting their ability to contribute to online discourse. | . | . Digital Divide is Affected by the actions of Individuals, Organizations, and Governments . Digital Divide: Impact of Individuals, Organizations, and Governments . 1. Individuals: . Role: . Individuals play a crucial role in either contributing to or mitigating the Digital Divide. | . Actions: . Access Choices: Individuals’ decisions on purchasing and utilizing digital devices and internet services can either widen or narrow the digital gap. | . | Digital Literacy: The level of digital literacy among individuals influences their ability to leverage technology, impacting their participation in the digital world. | . | Advocacy and Awareness: Individuals advocating for digital inclusion and raising awareness about the importance of bridging the divide contribute to collective efforts. | . | 2. Organizations: . Role: . Organizations, including businesses and non-profits, play a significant role in shaping digital access and opportunities. | . Actions: . Corporate Initiatives: Companies implementing policies to provide digital access and skills training for employees contribute to narrowing the Digital Divide. | . | Community Engagement: Organizations engaging with communities to provide resources, infrastructure, and education can positively impact digital inclusion. | . | Innovation and Affordability: Organizations driving innovation in technology and making digital products more affordable contribute to reducing accessibility barriers. | . | 3. Governments: . Role: . Governments have a central role in implementing policies and initiatives to address the Digital Divide at a systemic level. | . Actions: . Infrastructure Investment: Governments investing in digital infrastructure, especially in underserved areas, can address geographical disparities. | . | Digital Inclusion Policies: Implementing policies that ensure equitable access to digital resources and education for all citizens. | . | Regulation and Standards: Governments can establish regulations and standards to ensure fair competition, affordability, and accessibility in the digital space. | . | Conclusion: . The Digital Divide is a complex issue influenced by the collective actions of individuals, organizations, and governments. Collaborative efforts from all sectors are essential to create a more inclusive digital society. | . Popcorn Hack 2 . In the context of the Digital Divide, which factor contributes to representation bias, leading to underrepresented or misrepresented perspectives in digital spaces? . a) Limited Participation b) Trying to use the internet without a computer c) Unequal distribution of educational resources d) Lack of awareness about online information sources . Answer . Homework Hack 1 . How has the digital divide been bettered/worsened by recent national or global events? How may the digital divide get worse in the future without intervention? . Answer: . Homework Hack 2 . Give some examples of how individuals, organizations, and the government can all help lessen the digital divide. . Answer: .",
            "url": "http://localhost:4100/teacher_portfolio/2023/12/07/P1_Digital_Divide_IPYNB_2_.html",
            "relUrl": "/2023/12/07/P1_Digital_Divide_IPYNB_2_.html",
            "date": " • Dec 7, 2023"
        }
        
    
  
    
        ,"post20": {
            "title": "Mario | Elevated Platforms | Student",
            "content": "Mario Platforms . Using OOP . We use Object Orientated Programming to complete this task. OOP uses objects, classes, variables, and includes a plethora of other items to create, in this case, a developed and fully functional javascript game! Follow along as we go through the steps to make 3 of the following additions: A platform, a coin. . What do we expect? . We want the platform to be able to be walked on, we want to be able to jump off of it and jump onto it. We also want a coin to that can have collision with the player. . Step 1: Making A Platform Class . First, we need to make a new .js file to store our information. We named ours PlatformO.js, but you can name it whatever you want. However, if you do that, make sure you reference the correct file name when trying to import it (not recommended). . Include the following code to make sure that it runs with the rest of the game: | . import GameEnv from &#39;./GameEnv.js&#39;; import GameObject from &#39;./GameObject.js&#39;; export class PlatformO extends GameObject { constructor(canvas, image) { super(canvas, image, 0); } // Required, but no update action update() { } // Draw position is always 0,0 draw() { this.ctx.drawImage(this.image, 0, 0); } // Set platform position size() { // Formula for Height should be on constant ratio, using a proportion of 832 const scaledHeight = GameEnv.innerHeight * (60/832); // Formula for Width is scaled: scaledWidth/scaledHeight == this.width/this.height const scaledWidth = 150; const platformX = .1 * GameEnv.innerWidth; const platformY = (GameEnv.bottom - scaledHeight) - 150; // set variables used in Display and Collision algorithms this.bottom = platformY; this.collisionHeight = scaledHeight; this.collisionWidth = scaledWidth; //this.canvas.width = this.width; //this.canvas.height = this.height; this.canvas.style.width = `${scaledWidth}px`; this.canvas.style.height = `${scaledHeight}px`; this.canvas.style.position = &#39;absolute&#39;; this.canvas.style.left = `${platformX}px`; this.canvas.style.top = `${platformY}px`; } } export default PlatformO; . This code is very similar to the tube code. The PlatformO class is extending the GameObject class, and after being defined, we can now change values and key features that are needed from a platform. . Constructor initializes the class and super inherits the traits from the class that it is extending. Draw draws it on the canvas and size adjusts values like position, height, and width. . There are many files in which we need to make changes so the game is aware of the platform. Namely, the md file that the game is being displayed in, Player.js so we can have the player collide and stand on the platform, and also some code in GameLevel. . Most of the values are in this code is changeable; we can change the position, size, and so on for the platform. Be sure to experiment! | . Lets make the platform have an image. Lets navigate to the file named “2023-11-27-CSSE-oop-game-levels.md” or whatever you named your main file that holds the game. The following code is needed to provide an image for the platform (image is in slack) . var assets = { // other stuff up platformO: { grass: { src: &quot;/images/brick_wall.png&quot; }, }, // other stuff down }; . Scroll down to find and add to the next part… . new GameLevel( { tag: &quot;hills&quot;, background: assets.backgrounds.hills, platform: assets.platforms.grass, platformO: assets.platformO.grass, // This is what we need to add player: assets.players.mario, tube: assets.obstacles.tube, callback: testerCallBack, thing: assets.thing.coin, } ); . Now we need to edit the GameLevel.js file. This will make the platform constructed with the image when the level starts. . constructor(gameObject) { // conditional assignments from GameObject to instance variables this.tag = gameObject?.tag; this.backgroundImg = gameObject.background?.file; this.platformImg = gameObject.platform?.file; this.platformOImg = gameObject.platformO?.file; // You want to add this one! this.thingImg = gameObject.thing?.file; this.playerImg = gameObject.player?.file; this.playerData = gameObject?.player; this.tubeImg = gameObject.tube?.file; this.isComplete = gameObject?.callback; // function that determines if level is complete GameEnv.levels.push(this); } . Scroll down and add this too . const imagesToLoad = []; // other stuff if (this.platformOImg) { imagesToLoad.push(this.loadImage(this.platformOImg)); } . Make sure you have this! . This code is mandatory for the platform to be displayed! This code is all based off of Mr. Mortensen’s previous code and uses his code as an example. . Step 2: Adding Collision . Next, we are going to be adding collision to the platform. To do this, we have to go into Player.js and add code for collision for the platform so the character can stand on it. . We need to add the following code next to the tube collision: . if (this.collisionData.touchPoints.other.id === &quot;jumpPlatform&quot;) { // Collision with the left side of the Platform console.log(&quot;id&quot;) if (this.collisionData.touchPoints.other.left &amp;&amp; (this.topOfPlatform === true)) { this.movement.right = false; console.log(&quot;a&quot;) } // Collision with the right side of the platform if (this.collisionData.touchPoints.other.right &amp;&amp; (this.topOfPlatform === true)) { this.movement.left = false; console.log(&quot;b&quot;) } // Collision with the top of the player if (this.collisionData.touchPoints.this.ontop) { this.gravityEnabled = false; console.log(&quot;c&quot;) } if (this.collisionData.touchPoints.this.bottom) { this.gravityEnabled = false; console.log(&quot;d&quot;) } if (this.collisionData.touchPoints.this.top) { this.gravityEnabled = false; this.topOfPlatform = true; console.log(this.topOfPlatform + &quot;top&quot;) console.log(this.gravityEnabled + &quot;grav&quot;) //console.log(&quot;e&quot;); } } . Make sure to have the following code to the else statement below the previous code . this.topOfPlatform = false; this.movement.left = true; this.movement.right = true; this.movement.down = true; this.gravityEnabled = true; . These 2 pieces of code both affect the collision of the player with the platform. We are using Mr Mortensen’s collisionData.touchPoints and using it to detect collision with the platform. . This is the complete code for the platform. Be sure to ask me anything if you need extra help or if anything is unclear. . The next thing we added to our game was the coin, which we will attempt to allow you to reload the page once you touch it. . Make sure you have the coin.png downloaded* | The first thing we are going to do is locate the JS files in platformer, and create one (which we called Thing1 for simplicity, but you can call it Coin.js) | . Adding the coin png . *These first few steps will be a repeat, but necessary for the coin to show up in the game . Locate the CSSE-oop game level md file . // Define assets for the game var assets = { ...Previous code thing: { coin: { src: &quot;/images/Coin.png&quot; } //Add this one! }, platformO: { grass: { src: &quot;/images/brick_wall.png&quot; }, }, . We called our group “thing” but you can call it whatever you want. We defined the image as coin and then pasted the image source. . // Game screens new GameLevel( {tag: &quot;hills&quot;, background: assets.backgrounds.hills, platform: assets.platforms.grass, platformO: assets.platformO.grass, player: assets.players.mario, tube: assets.obstacles.tube, callback: testerCallBack, thing: assets.thing.coin, } ); // &lt;-- add the line thing: assets.thing.con . Again, your code will differ from ours if you didn’t name it “Thing” . Next thing we want you to do is . Just like the platfrom, make a new .js file and call it thing.js | . import GameEnv from &#39;./GameEnv.js&#39;; import GameObject from &#39;./GameObject.js&#39;; export class Thing1 extends GameObject { constructor(canvas, image) { super(canvas, image, 0); // Set the initial position and size this.size(); } // Required, but no update action update() { } // Draw position is always 0,0 draw() { // Save the current transformation matrix this.ctx.save(); // Rotate the canvas 90 degrees to the left this.ctx.rotate(-Math.PI / 2); // Draw the image at the rotated position (swap x and y) this.ctx.drawImage(this.image, -this.image.height, 0); // Restore the original transformation matrix this.ctx.restore(); } // Center and set Thing1 position with adjustable height and width size() { // Make the image 10 times smaller const scaledWidth = this.image.width * 0.2; const scaledHeight = this.image.height * 0.169; // Center the object on the screen const randomPosition = Math.random() &lt; 0.5; // Randomly choose between two positions let thingX, thingY; if (randomPosition) { thingX = (GameEnv.innerWidth - scaledWidth) / 2.5; thingY = (GameEnv.innerHeight - scaledHeight) / 1.01; } else { thingX = (GameEnv.innerWidth - scaledWidth) / 7.5; thingY = (GameEnv.innerHeight - scaledHeight) / 2.02; } // Set variables used in Display and Collision algorithms this.bottom = thingY + scaledHeight; this.collisionHeight = scaledHeight; this.collisionWidth = scaledWidth; this.canvas.style.width = `${scaledWidth}px`; this.canvas.style.height = `${scaledHeight}px`; this.canvas.style.position = &#39;absolute&#39;; this.canvas.style.left = `${thingX}px`; this.canvas.style.top = `${thingY}px`; } } export default Thing1; . import GameEnv from &#39;./GameEnv.js&#39;; import GameObject from &#39;./GameObject.js&#39;; export class Thing1 extends GameObject { constructor(canvas, image) { super(canvas, image, 0); // Set the initial position and size this.size(); } // Required, but no update action update() { } // Draw position is always 0,0 draw() { // Save the current transformation matrix this.ctx.save(); // Rotate the canvas 90 degrees to the left this.ctx.rotate(-Math.PI / 2); // Draw the image at the rotated position (swap x and y) this.ctx.drawImage(this.image, -this.image.height, 0); // Restore the original transformation matrix this.ctx.restore(); } // Center and set Thing1 position with adjustable height and width size() { // Make the image 10 times smaller const scaledWidth = this.image.width * 0.2; const scaledHeight = this.image.height * 0.169; // Center the object on the screen const randomPosition = Math.random() &lt; 0.5; // Randomly choose between two positions let thingX, thingY; if (randomPosition) { thingX = (GameEnv.innerWidth - scaledWidth) / 2.5; thingY = (GameEnv.innerHeight - scaledHeight) / 1.01; } else { thingX = (GameEnv.innerWidth - scaledWidth) / 7.5; thingY = (GameEnv.innerHeight - scaledHeight) / 2.02; } // Set variables used in Display and Collision algorithms this.bottom = thingY + scaledHeight; this.collisionHeight = scaledHeight; this.collisionWidth = scaledWidth; this.canvas.style.width = `${scaledWidth}px`; this.canvas.style.height = `${scaledHeight}px`; this.canvas.style.position = &#39;absolute&#39;; this.canvas.style.left = `${thingX}px`; this.canvas.style.top = `${thingY}px`; } // Method to shrink the coin shrinkCoin() { // Set variables used in Display and Collision algorithms const scaledWidth = 0; // Set width to 0 const scaledHeight = 0; // Set height to 0 this.bottom = 0; this.collisionHeight = 0; this.collisionWidth = 0; this.canvas.style.width = `${scaledWidth}px`; this.canvas.style.height = `${scaledHeight}px`; } } export default Thing1; . Let’s break it down . var assets = { // other stuff up thing: { coin: { src: &quot;/images/Coin.png&quot; } }, // other stuff down }; . new GameLevel( { tag: &quot;hills&quot;, background: assets.backgrounds.hills, platform: assets.platforms.grass, platformO: assets.platformO.grass, player: assets.players.mario, tube: assets.obstacles.tube, callback: testerCallBack, thing: assets.thing.coin, // Insert coin } ); . constructor(gameObject) { // conditional assignments from GameObject to instance variables this.tag = gameObject?.tag; this.backgroundImg = gameObject.background?.file; this.platformImg = gameObject.platform?.file; this.platformOImg = gameObject.platformO?.file; this.thingImg = gameObject.thing?.file; // Insert coin this.playerImg = gameObject.player?.file; this.playerData = gameObject?.player; this.tubeImg = gameObject.tube?.file; this.isComplete = gameObject?.callback; // function that determines if level is complete GameEnv.levels.push(this); } . const imagesToLoad = []; // other stuff if (this.platformOImg) { imagesToLoad.push(this.loadImage(this.platformOImg)); } . . Your Homework! . For homework we want you to complete both of these or just one and something unique and creative . Make the coin disappear after touching it. The coin collision is given. | Make some more platforms to jump on | .",
            "url": "http://localhost:4100/teacher_portfolio/2023/12/07/CSSE-platform_student_IPYNB_2_.html",
            "relUrl": "/2023/12/07/CSSE-platform_student_IPYNB_2_.html",
            "date": " • Dec 7, 2023"
        }
        
    
  
    
        ,"post21": {
            "title": "P4 Undecidable Problems",
            "content": "Undecidable Problems Topic 3.18 . What will we be doing today? . Investigate the existance of undecidable problems in computer science | . A decidable problem is a decision problem for wich an algorithm can be writen to produce a correct output for all inputs(eg.”Is the number even?”) . An undecidable problem is a problem that has no algorithim that can provide a yes or no answer, An undecidable problem may have an algorithim that works, but it can never fully work, and there are always instances in wich that is the case to make a problem undecidable. . Example . Decidable problem if n % 3 == 0: print(“n is a multiple of three”) else: print(“n is not a multiple of three”) There is a clear clear algorithim determining if a number is a multilple of three that works for every case. | Undecidable problem Halting problem . With any given arbituary computer program, will it run forever or will it stop No yes or no answer to this problem every time, how does a test happen if there is no ending? If ending takes too much time to find ending, does it even exist? what if it does, but computer is not fast enough to find it so it answers the ending as none? There is no algorithim for this that reliably gives a yes or no answer . | . Where do we see this . When a program crashes, the computer cannot run the program causing backlog leading to the computer stopping the program after a few moments. We refer to this as a crash pro tip, this is not the only reson for a crash, just a possible one . Post Correspondence Problem . The Post Correspondence Problem (PCP) involves a set of tiles, each containing two strings. The problem asks whether it is possible to arrange these tiles in a sequence (repetitions allowed) so that concatenating the top strings of the selected tiles matches the concatenation of the bottom strings. . Tiling Problem . The Tiling Problem deals with determining whether a given shape (arbitrary shape) can be tiled using a finite set of smaller shapes (tiles). It remains undecidable due to the infinite possibilities and arrangements of shapes that would need to be considered to conclusively solve the problem. . Word Problem for Groups . The Word Problem for Groups asks whether, given a group presentation and two words formed from the group’s generators, these words represent the same group element. This problem cannot be solved algorithmically due to the undecidable nature of the word problem for groups in general. . Busy Beaver Problem . The Busy Beaver Problem involves finding the Turing machine with the most significant number of steps executed before halting among all machines with a certain number of states. Due to the vast number of possible configurations and the infinite potential for different Turing machines, determining the Busy Beaver function for a given number of states remains undecidable. . Collatz Conjecture . The Collatz Conjecture follows an iterative sequence for positive integers: if the number is even, divide it by 2; if it’s odd, triple it and add 1. The conjecture posits that regardless of the starting number, this sequence always reaches 1. Despite extensive computational verifications, a proof for all integers remains undetermined. . Post’s Correspondence Problem . Post’s Correspondence Problem (PCP) involves choosing sequences of pairs of strings from a finite set so that the concatenation of the first string in each pair matches the concatenation of the second string. The problem asks whether a sequence can be formed that produces a matching sequence of strings and is undecidable due to its relation to the Halting Problem. . Rice’s Theorem . Rice’s Theorem states that any non-trivial property about the behavior of programs that can be determined by examining their source code is undecidable. It asserts that it’s impossible to create a general algorithm to decide non-trivial semantic properties of programs. . Emptiness Problem for Turing Machines . The Emptiness Problem for Turing Machines aims to determine whether a given Turing machine recognizes any strings in its language. This problem is undecidable since determining whether a Turing machine halts on all inputs (recognizes no strings) is equivalent to solving the Halting Problem. . The Entscheidungsproblem . The Entscheidungsproblem refers to David Hilbert’s problem of finding an algorithm to decide the truth of any mathematical statement by creating a mechanical procedure for solving mathematical problems. This problem was proven undecidable by Turing, Church, and others in their work on computability theory and the limitations of computation. . POPCORN HACK, Create your own undecidable problem . Create a problem that is unsolvable by any single algorithim, for example, this problem could have infinite possibilities . Example . The “Infinite Sum Sequence Problem (ISSP)” . Problem Statement: Given an infinite sequence of positive integers, can it be determined whether there exists a subsequence that sums up to a specific target value? . Undecidability: . The ISSP is undecidable due to the infinite nature of sequences and the countless possible subsequence combinations, making it impossible to algorithmically determine the existence of a subsequence summing to a target value within a reasonable timeframe. . Homework Due by Friday 11:59, message Daniel Choi, give an explaination for each problem that is one scentence long. Graded on completion and explaination. send popcorn hack as a screenshot . Post Correspondence Problem: . What is the primary concern related to the Post Correspondence Problem (PCP)? . A) It involves matching strings using regular expressions. . B) It deals with finding the shortest path in a graph. . C) PCP revolves around identifying whether a set of strings can be matched in a specific sequence. . D) It’s related to optimizing sorting algorithms. . Tiling Problem . Which statement accurately describes the undecidable nature of the Tiling Problem? . A) The Tiling Problem refers to arranging tiles in a specific pattern which can always be solved using a finite number of steps. . B) There exists an algorithm that can determine if a given shape can be tiled with a specific set of smaller shapes. . C) It’s impossible to ascertain if an arbitrary shape can be tiled using a finite set of smaller shapes. . D) Tiling Problems can only be solved for regular polygons. . Word Problem for Groups . What is the core issue represented by the Word Problem for Groups? . A) It focuses on finding the most efficient algorithm for text processing in groups. . B) This problem pertains to determining if two words representing group elements are equivalent. . C) The Word Problem for Groups refers to solving crossword puzzles collaboratively. . D) It involves identifying the most commonly occurring words in a group. . Busy Beaver Problem . Which statement accurately describes the concept behind the Busy Beaver Problem? . A) It deals with optimizing the performance of multitasking systems. . B) Busy Beaver Problem revolves around finding the most efficient algorithm to sort a list of numbers. . C) It’s about determining the longest-running and most productive Turing machine. . D) Busy Beaver Problem is concerned with scheduling tasks in a time-efficient manner. . Collatz Conjecture . What is the primary characteristic of the Collatz Conjecture? . A) It’s a conjecture related to the distribution of prime numbers. . B) The conjecture revolves around finding the optimal path in a graph. . C) Collatz Conjecture deals with iterating over integers using a specific sequence until reaching the value 1. . D) It’s a hypothesis about the behavior of sorting algorithms. . Post’s Correspondence Problem . Which problem involves matching pairs of strings in a way that no two sequences produce identical combined strings? . A) Traveling Salesman Problem. . B) Knapsack Problem. . C) Post’s Correspondence Problem. . D) Dijkstra’s Shortest Path Problem. . Rice’s Theorem . What does Rice’s Theorem state? . A) It claims that all programming languages are Turing-complete. . B) Rice’s Theorem affirms that any non-trivial property about the behavior of programs is undecidable. . C) It asserts that all recursive functions can be computed using a Turing machine. . D) Rice’s Theorem describes the limitations of parallel computing. . Emptiness Problem for Turing Machines . What does the Emptiness Problem for Turing Machines aim to determine? . A) It checks whether a Turing machine can recognize an empty language. . B) This problem is concerned with finding the smallest Turing machine. . C) Emptiness Problem verifies if a Turing machine has an infinite tape. . D) It examines whether a Turing machine can accept an infinite sequence of input. . The Entscheidungsproblem . Which problem was famously formulated by David Hilbert and aimed to find a procedure that could decide the truth of any mathematical statement? . A) P vs NP Problem. . B) Riemann Hypothesis. . C) The Entscheidungsproblem. . D) Goldbach’s Conjecture. .",
            "url": "http://localhost:4100/teacher_portfolio/2023/12/06/P4_Undecidable_Problems_IPYNB_2_.html",
            "relUrl": "/2023/12/06/P4_Undecidable_Problems_IPYNB_2_.html",
            "date": " • Dec 6, 2023"
        }
        
    
  
    
        ,"post22": {
            "title": "P5 Digital Divide",
            "content": "Standards Covered: . IOC-1.C.1 - Internet access varies between socioeconomic, geographic, and demographic characteristics, as well as between countries. | IOC-1.C.2 - The “digital divide” refers to differing access to computing devices and the Internet, based on socioeconomic, geographic, or demographic characteristics. | IOC-1.C.3 - The digital divide can affect both groups and individuals. | IOC-1.C.4 - The digital divide raises issues of equity, access, and influence, both globally and locally. | IOC-1.C.5 - The digital divide is affected by the actions of individuals, organizations, and governments. | . What is the Digital Divide? . You could probably infer what it might be, but here it is anyway. The Digital Divide is the divde of multiple peoples, and their access to internet. These difference could be based socioeconomically, geographically, or demogrpahically. . Why do these things happen? . Since everyone comes from differnet, socioeconomic, geographic, and demogrpahic background, different people live different lives. . Three main factors: . Socioeconomic - refers amount of money that comes into the household, and if people can afford to buy devices to connect to the internet Demographic - refers to the Age and Religion of a person, as those factors could limit people’s knowledge and understanding around computers Geographic - refers to where you are, and how much internet access you can get by being in a certain place. Some places are bustling cities with multiple opporitunities to connect to the internet, and others are deserted islands. They have different amounts of accesible internet. . So therefore: Internet access varies between socioeconomic, geographic, and demographic characteristics, as well as between countries. The digital divide can affect both groups and individuals. The digital divide raises issues of equity, access, and influence, both globally and locally. The digital divide is affected by the actions of individuals, organizations, and governments. . In some countries: . Computers are not that common in rural areas | Only a small number of websites | The Internet is used to protect and advocate the government | There is a high level of surveillance on the internet to protect the government | . Examples . Taiwan is known to have the highest internet speed in the world. When compared with Brazil, Taiwan is tiny. There would need to be more physical infrastructure to cover all that area, hence Brazil has a pretty slow internet speed. . . An Island Nation . Tonga is a nation of 76 islands in the Pacific, and it had very slow internet speeds until 2013 when a 514-mile-long fiber cable was installed. Unfortunately, it was severed by a ship, which cut off access for 12 entire days. . . Difficult Terrain . The Himalayas Mountains, for example, act as a barrier because the region is so mountainous, making it extremely difficult for the internet to pass through. . . Government Restrictions Internet Black Holes In 2015, North Korea was said to have the lowest rate of access in the world and the most rigid and centralized control. There is only one ISP in North Korea, allowing for a maximum of only 1024 IP addresses, and only 28 websites. . . Internet Shutdowns In 2019, Iran shut down access to the Internet after there were protests about high gas prices. The network connectivity in Iran was about 5% for five days. . . Internet Kill Switches . Russia has recently implemented a kill switch that will completely shut off access to the internet with the flick of a switch, in case of an emergency, like a massive hacker attack. . . Analysis of Digital Divide: . Here’s an example of what we’ve learned in action: . Teledensity and land area being pervided by CIA Factobook and World Bank for GDP . Benin: Benin has a teledensity of &lt;1 per 100 people, along with a GDP of 1.96 billion and a land area of 110,622 sq km . France: France 110 per 100 people along with a GDP of 1270 billion and a land area of 640,427 sq km . America: America has 110 per 100 people along with a GDP of 5960 billion and a land area of 9,147,593 sq km . Taiwan: Taiwan has 120 phones per 100 people and 116.62 billion by Statista and a land area of 32,260 sq km . Not to get into colonization, because I am not going to give you a conclusive overview of how that plays out to Benin or other African countries yet this could be a contributing factor, so please research this if you want to learn more about this topic. . Though to leave this onto a happier note, here’s what’s being done about in Rwanda. Their Broad Band Internet is connecting more people to have a 90 to 100 person ratio of internet access. According to a branch of the UN, this is allowing people to more easily access banks because a click of a button is easier than a several mile journey to the bank. Along with this according to the accompanying report in 2018 outlines how OECD countries (except Japan) have plans on how they would implement broadband access to these countries. . Fun Fact . In Yemen (a country in the middle east), it would take an average of 30 hours, 1 minute, and 40 seconds to download a 5GB movie. In Taiwan, it would take only 8 minutes, which is over 225 times faster. This truly shows the massive gap between urban and rural countries. . Effects . As a effect of the digital divide, people dont have access to the internet. The internet can be a pretty useful tool. This keeps from fostering economic growth, individual success, and better social relations. The digital divide takes away children’s ability to learn and grow in low-income school districts. . What are some ways to help stop the Digital Divide? . Increase connectivity in communities | Provide widespread internet access to help users gain new learning opportunities | Access to computing devices | . Practice Problems . Which of the following is true: . A - Allowing students to bring their computers to school would help reduce the digital divide. B - A study showing that men and women use Snapchat in the same proportion is an example of the digital divide. C - Low-cost satellite internet services for places where internet connectivity has been unreliable and can help reduce the digital divide. D - An online software business is failing as a result of the digital divide. . Which of the following school policies is most likely to have a positive impact on the digital divide? Explain your answer. . Α - A school allows students to bring a graphing calculator from home to complete in-class mathematics assignments. B - A school allows students to bring a tablet computer to class every day to participate in graded quizzes. C - A school provides a laptop or tablet computer to all students enrolled at the school. D - A school recommends that all students purchase a computer D with as much processing speed as possible so that projects run faster. . HW: . 1. Which of the following contributes to the digital divide? . I: Cost of technology . II: Access for the disabled . III: Lack of education . IV: Lower-performance computers . A. I and II only . B. I, II, and III only . C. I, II, III, and IV . D. None of the above . . 2. One of the following is NOT an effect of the digital divide. . A - Online polls underrepresent rural areas. . B - Certain problems are not possible to solve in a reasonable time, so approximate solutions are used. . C - Twitter opinions are over-representative of young and urban people . D - Senior citizens are less trained to access online resources during . . 3. Pat the Billionaire reads about the digital divide and wants to do something to improve it. Which of the following would be the best? . A - Use twitter to tweet helpful computer hints to people who do not know how to use computers . B - Establish a free internet service for workers at New York City financial institutions . C - Build internet infrastructure for rural cities in the United States . D - Build a new skyscraper with ultra-fast internet for office workers working at Amazon . . 4. One of these is FALSE. Which? . A - A for-profit company could help reduce the digital divide by offering reduced pricing to geographically remote areas. . B - A non-profit company can help reduce the digital divide by refurbishing phones and donating them to low-income areas. . C - A movie celebrity could eliminate the digital divide in a city by donating enough money to pay for free computers and wireless hotspots. . D - A for-profit company could help reduce the digital divide by paying for tutors for introductory computer science classes at schools around the state . . Extra Credit: Write a few sentences answering the prompt (90%+): How can you help end the digital divide? .",
            "url": "http://localhost:4100/teacher_portfolio/2023/12/05/P5-Digital-Divide_IPYNB_2_.html",
            "relUrl": "/2023/12/05/P5-Digital-Divide_IPYNB_2_.html",
            "date": " • Dec 5, 2023"
        }
        
    
  
    
        ,"post23": {
            "title": "P4 Beneficial and harmful effects",
            "content": "Programming effects . Programming, like any other field, has both beneficial and potentially harmful aspects. The more that programming advances, the more we have to discuss benefits and harmful effects that it brings to society. . Example of Program with both benefitial and harmful effects . # Automated phone system of a customer service line for a major company def check_business_hours(hour): return 8 &lt;= hour &lt; 18 def main(): try: user_input = input(&quot;Please enter the current time (24-hour format, e.g., 14 for 2:00 PM): &quot;) current_time = int(user_input) if check_business_hours(current_time): print(&quot;You are being connected to customer service.&quot;) else: print(&quot;Sorry, the business is closed at the moment. Please call back during business hours (8 am to 6 pm).&quot;) except ValueError: print(&quot;Invalid input. Please enter a valid 24-hour time.&quot;) if __name__ == &quot;__main__&quot;: main() . Sorry, the business is closed at the moment. Please call back during business hours (8 am to 6 pm). . Beneficial effects: . It saves time for both parties as they limit the hours that a worker needs to answer calls for the company. | It checks whether the entered time is within the business hours (8 am to 6 pm). This ensures that customers are only connected to customer service during operational hours. Negative effects: . | The time may not be versatile for people in different time zones. | The system lacks customization options such as providing services available outside business hours such as offering automated assistance, or redirecting to online support resources. | . The benefits and harmful effects of a Multirotor . A multirotors also known as a drone, is a type of rotorcraft that has multiple rotors. Inventions such as these are the same as code and have harmful and beneficial effects. . Benefits: Deliveries, finding lost people, aereal photography is easy. Harmful: Flying in unregulated zones is illegal and dangerous, privacy concerns. . Popcorn Hack 1: Name one beneficial and harmful effect of a Wii controller. (hint: it can be a physical harmful effect) . Benefit: . Effect: . Computing innovations can have impacts beyond their intended effects . Example 1: The internet . The internet was originally created for scientists to easily share information remotely without needing to send or receive mail from one another. Nowadays, many people use the internet more than they sleep, as the internet has become an integral part of our lives in many ways. Think about how often you use social media, or do school assignments online, or send a simple email. Our use of the internet can cultivate dopamine feedback loops, such as when your crush likes your post on instagram, you get a snap back from that cute girl, or you find a funny TikTok that makes you laugh hysterically. These make us want to seek out these feelings more and more and experience those seconds of happiness. These effects of the internet lead to people having major issues like sleep deprivation, depression, and anxiety. . Original Purpose: Created for scientists to share information remotely. | Eliminated the need for physical mail in communication. | . | Contemporary Usage: Integral part of daily life. | Extensive use for social media, school assignments, emails. | . | Impact on Well-being: Potential for dopamine feedback loops. | Examples: Social media likes, Snapchat responses, TikTok enjoyment. | . | Consequences: Increased internet use may lead to sleep deprivation. | Associated with higher rates of depression and anxiety. | . | . Popcorn Hack 2: What 3 apps do you hae the most screentime on and how much are you on it? . 1: 2: 3: . Example 2: Microtransactions . Definition: a payment of very small value, especially for a special feature of a product such as a video game . Original Purpose: Free game access, purchase virtual extras. | . | Usage: Common in free-to-play games, revenue for developers. | . | Deviation: Pay-to-Win, aggressive tactics, loot boxes. | Microtransactions may reduce ads but imply paywalls. | . | Concerns: Debates on industry impact, ethics. | Mixed player views: support vs. criticism. | . | Ongoing: Continuous industry debates. | . | . Example 3: Artificial Intelligence . What is AI? . Artificial Intelligence (AI) is about making computers do tasks that typically require human intelligence, like learning, problem-solving, and understanding language. . Beneficial Effects of AI: . Automation and Efficiency: AI helps with repetitive tasks, making things faster and freeing up time for more interesting work. | . | Medical Advancements: AI assists in medical tasks, improving diagnosis, treatment plans, and drug discovery. | . | Enhanced Customer Experience: AI-powered chatbots provide quick and personalized customer support. | . | Innovations in Education: AI creates personalized learning experiences for students. | . | Predictive Analytics: AI analyzes data to make predictions, helping businesses make better decisions. | . | Harmful Effects of AI: . Job Displacement: Automation by AI can lead to job loss in some industries. | . | Bias and Fairness Issues: AI systems might have biases, causing unfair outcomes. | . | Privacy Concerns: AI use in surveillance raises concerns about privacy. | . | Autonomous Weapons: AI-powered weapons raise ethical questions about their use in warfare. | . | Dependency on Technology: Relying too much on AI may lead to a loss of human skills and critical thinking. | . | Homework Hack: Come up with a Program with a beneficial and harmful effects. (You don’t have to code it, but your ideas has to be detailed and organized) . (Homework right here) .",
            "url": "http://localhost:4100/teacher_portfolio/2023/12/05/P4_Benefitial_and_Harmful_IPYNB_2_.html",
            "relUrl": "/2023/12/05/P4_Benefitial_and_Harmful_IPYNB_2_.html",
            "date": " • Dec 5, 2023"
        }
        
    
  
    
        ,"post24": {
            "title": "SASS | Student P3",
            "content": "What is SASS? . Sass is a preprocessor language that’s interpreted into CSS. A preprocessor language takes input data and converts it to an output that’s used as input by another program. This means when you run Sass code, you’re actually converting your code to CSS. That CSS code output is then used directly by a browser. . SCSS vs. CSS . Understanding the differences between SCSS and CSS . What is CSS . CSS is the default technology that most programmers use when styling webpage. It is one of the 3 fundamental web technologies along with HTML and JavaScript. HTML manages the structure, JavaScript makes pages interactive, and CSS changes the style by taking a markup language like HTML and describes how it should be presented to the user. . | However, CSS is not very easy to work with lacking a lot features often making using CSS very confusing and difficult or hard to work with on lengthy projects. This is why there are tools like Bootstrap, Sass, and Tailwind that make styling a lot easier and more efficient. We will be using Sass in this course. . | . CSS Example . This is an example of CSS that can be used to change body text of an HTML document | Hack Question: Can you guess what its changing style of the text to? | . body{ color: #0000FF; font-family: Ariel, sans-serif; font-size: 16px; } . What is SCSS . SCSS is short for Sassy Cascading Style Sheets. | SCSS very similar to CSS but the difference comes with the fact that SCSS extends the functionality of CSS while also making it simpler. What this allows us to do is it enables us to things like nested styling, functions, mixins, variables, inheritance (more on these later) and so on. | . Sass Code Example . $blue: #0000FF; body{ color: $blue; font-family: Ariel, sans-serif; font-size: 16px; } . This example is doing the same thing as the other code segment above but the difference being that here we defined the color as $blue which makes it much easier for us to recall later on. In fact, we have done this before, if you have been using the dark mode/midnight theme then go ahead and navigate your your _sass folder and check out the dark-mode.scss and you’ll see something similar to the example above | . So which one is better to use? . CSS tends to be better for really simple styling where not many complex or nested styles are required and small projects that doesn’t require a lot of customization. | SCSS on the other hand is very good for more complex styling and working with a project with more than one page where maybe lots of customization is needed. Such as the projects we made last and first trimester. | . Modular SCSS . Understanding how to use modular SCSS . Modular SCSS allows you to break multiple different files and then be able to compile them into a single CSS file | How do you do this? Well all you need to do is have _filenames.scss so that is compiled into its own file | Now after adding the _ to the file name you can import it into you file without the _ and all the styles will be carried over. | The benefits of a partial is that it allows you to big websites and allows you to break up the code in multiple components and easily make changes instead of having to go through a huge file. | All styles in the partial will be added and can be used into the main file as if they were defined in the main file. | . File 1 _variable.scss . $primary-button-color: #009494; $hover-color: black; $menu-color: #f2f2f2; . File 2 style.scss . We can see the importing of the .scss file’s content into the other main .scss file style.scss | . {@import &#39;variables&#39;; @import &quot;minima&quot;;} /* &quot;row style&quot; is flexible size and aligns pictures in center */ .row { align-items: center; display: flex; } /* &quot;column style&quot; is one-third of the width with padding */ .column { flex: 33.33%; padding: 5px; } .menu a { // float: left; display: block; color: $menu-color; text-align: center; // padding: 14px 16px; text-decoration: none; } .menu a:hover { background: $primary-button-color; color: $hover-color; } . Nesting . What is nesting? &gt; Answer here (hack question): . Nesting is a way to organize your code and make it easier to read. It also helps keep your code __ . | Nesting is when you put one selector inside another selector. This is a great way to keep your code organized and make it easier to ___. | When we make HTML we often nest different ___ within each other and have a clear structure when we look at it. | The problem is that in regular CSS we don’t have that so we need to use SASS to help us organize our code. | . Warning: Don’t nest too much as when the CSS is processed it can make overqualified selectors which can be hard to read and maintain. Which means that it would only target that specific element type and not any other elements that have the same class name. | . Sass Nesting . Through nesting the ul, li, and a selectors within the nav selector makes your CSS better and increases its readability overall. | . nav { ul { margin: 0; padding: 0; list-style: none; } li { display: inline-block; } a { display: block; padding: 6px 12px; text-decoration: none; } } . CSS - Lack of Nesting . We can see that through the lack of nesting the CSS is not as organized and needs extra information to be able to make it more clear exactly what is being targeted. | . nav ul { margin: 0; padding: 0; list-style: none; } nav li { display: inline-block; } nav a { display: block; padding: 6px 12px; text-decoration: none; } . Variables . What is a variable? . A variable is a container that stores ____ so for instance when you have multiple places that refer to one value you can just use the variable name instead of the value. | This is valuable in SASS because it allows you to reuse that __ in multiple places throughout your stylesheet. | The $ symbol is used in Sass to designate a variable. | . Pro Tip: The reason SASS variables are better than variables in regular CSS is that they are easier to read with a much simpler syntax. . Fun Fact: Variables in SASS came before CSS and often SASS has features long before they are actually added to CSS as a whole. . Variable Example Syntax . $variable-name: value; | Once the sass is processed the variable name is replaced with the value throughout the program. | . $main-font: Calibri, sans-serif; $main-color: #000; $main-color-hover: #000; . Operators . Operators are used to perform operations on variables and other aspects of the language. Similar to python syntax, we can use operators to see if values are equal, add, divide, subtract, multiply, etc. | SASS has a lot of operators that can be used to perform operations on variables and other aspects of the language as well. They can include == to check if two values are equal and != to check if two values are not equal | + to add two values together | - to subtract two values | * to multiply two values | / to divide two values | % to find the remainder of two values | &lt; to check if one value is less than another | &gt; to check if one value is greater than another | &lt;= to check if one value is less than or equal to another | &gt;= to check if one value is greater than or equal to another | Also there is and, or, &amp; not to be able to use boolean operations | . | . Operator Example Syntax . Operators are used in this example to perform string concatenation | . // Html &lt;p id=&quot;testing&quot;&gt;original text and&lt;/p&gt; // SASS #testing:after{ content: &quot; some&quot; + &quot; more&quot; + &quot; text&quot;; } // Output original text and some more text . Conditional Statements . There are conditional statements in SASS just like in Python and JavaScript they work the same way as well. | Conditional statements are used to perform different actions based on different conditions. Such as if a certain condition is true then do this, if it is false then do that and so on. | SASS has @if which allows for different styles based on if a boolean expression was true or false. | SASS has @else which allows for different set of styles if the if condition was not met or false. | SASS has @else if which allows for an alternative conditions to be run if the first is not met. | . $color: red; button { @if $color == red { background-color: $color; } } // @else: allows you to provide an alternative set of styles to apply if the condition in the @if statement isn&#39;t met $color: blue; button { @if $color == red { background-color: red; } @else { background-color: $color; } } // @else if: allows you to provide multiple alternative conditions to test $color: green; button { @if $color == red { background-color: red; } @else if $color == blue { background-color: blue; } @else { background-color: $color; } } . Loops In Sass . Loops are present in SASS through the @for and @while decorators, along with @each. | Loops are used to repeat a block of code a certain number of times or until a certain condition is met just like in any other programming language. For Loops: Are used to iterate through a value like a list or a range of numbers | While Loops: Are used to iterate through a block of code until a certain condition is met such as a value is being equal to a certain value through an incrementing or decrementing a variable or any other condition that is met. | . | When using while loops they can be necessary but it is better to use @each and @for as it will make it clear and be able to compile faster. . | Side Note: In SASS lists care a any group of values that are separated by a comma or a space there is no special brackets used in JavaScript. Lists can be searched for values however they are immutable meaning that they cannot be changed once they are created. | . Some Code Examples of Loops and Lists . // A for each loop is used to interact with a group of sizes changing // the size of the element for each item in the list $sizes: 40px, 50px, 80px; @each $size in $sizes { .icon-#{$size} { font-size: $size; height: $size; width: $size; } } // @each: allows you to loop over a list of values and generate styles $colors: red, green, blue; @each $color in $colors { .color-#{$color} { background-color: $color; } } . @debug list.index(1px solid red, 1px); // 1 @debug list.index(1px solid red, solid); // 2 @debug list.index(1px solid red, dashed); // null . @use &quot;sass:math&quot;; /// Divides `$value` by `$ratio` until it&#39;s below `$base`. @function scale-below($value, $base, $ratio: 1.618) { @while $value &gt; $base { $value: math.div($value, $ratio); } @return $value; } $normal-font-size: 16px; sup { font-size: scale-below(20px, 16px); } . $base-color: #036; @for $i from 1 through 3 { ul:nth-child(3n + #{$i}) { background-color: lighten($base-color, $i * 5%); } } // @for: allows you to loop over a range of values and generate styles @for $i from 1 through 3 { .item-#{$i} { width: 100px * $i; } } . Functions in SASS . What is a function? . A function is a block of code that performs a specific task. This is a great method to be able to reuse code and processes in a manner that is more efficient and allows for the reuse of code. We do this all the time in programming languages such as JavaScript. | . SASS functions . Sass Functions allow you to define complex calculations and transformations that can be used throughout your stylesheet and allow you to perform complex operations on values, manipulate data, plus you can generate content dynamically. . | There a are built in functions and ones you can make on your own like languages such as JavaScript. . | SASS functions can be used to perform arithmetic operations, manipulate colors, work with strings, and more. . | Functions in SASS are similar to functions in programming languages, but they can be used within SASS stylesheets to generate CSS code dynamically. . | . Using Built-in Functions . Like Python and Javascript SASS provides a variety of built-in functions for math, color manipulation, string manipulation, and more. | . Math Functions . SASS has many functions that allow you to be able to perform wide range of math operations similar to the ones present in python including more complex operations. | . .round(1.2); // returns 1 .ceil(1.2); // returns 2 .floor(1.2); // returns 1 .abs(-1.2); // returns 1.2 .min(1, 2, 3); // returns 1 .max(1, 2, 3); // returns 3 .random(1, 100); // returns a random number between 1 and 100 . Color Functions . Color is an important component of any website and SASS provides a wide range of functions that allow you to manipulate colors in a variety of ways. | . .lighten(#007fff, 20%); // returns a lighter shade of blue .darken(#007fff, 20%); // returns a darker shade of blue .opacify(#007fff, 0.2); // makes the color more opaque .transparentize(#007fff, 0.2); // makes the color more transparent .mix(#007fff, #ff0000, 50%); // returns a mix of two colors . String Functions . SASS provides a variety of string functions that allow you to manipulate strings. Here are some examples: | . .to-upper-case(&quot;hello world&quot;); // returns &quot;HELLO WORLD&quot; .to-lower-case(&quot;HELLO WORLD&quot;); // returns &quot;hello world&quot; .str-index(&quot;hello world&quot;, &quot;world&quot;); // returns the index of the first occurrence of &quot;world&quot; .str-insert(&quot;hello&quot;, &quot; world&quot;, 5); // inserts &quot; world&quot; into &quot;hello&quot; at position 5 . Creating Custom Functions . In addition to using built-in functions, you can also create your own functions in SASS using the @function name(arguments){} | @return is similar to the return statement in JavaScript. It returns a value from a function. | Functions take input values, perform calculations, and return a result. Here’s an example of a simple function that calculates the area of a rectangle: | . @function rectangle-area($width, $height) { @return $width * $height; } // Usage: $area: rectangle-area(10px, 20px); // Returns 200px . Or you can also make a different kind of function that increases the font size to the factorial of a inputted number. | . @function factorial($number){ $calculated: 1; @for $_ from 1 through $number { $calculated: $calculated*$number; } @return $calculated; } #testing { font-size: factorial(3); } . //Combining functions and loops to achieve different sass effects @function sum($numList){ $sum: 0; @each $num in $numList { $sum: $sum+$num; } @return $num; } @function tri($num){ $sum: 0; @for $i from 1 through $num { $sum: $sum+$num; } @return $sum; } @function max($nums){ $i:0; $value:0px; @while $i&lt;length($nums){ @if $value&lt;list.nth($nums,$i){ $value:list.nth($nums,$i); } } } . Custom functions are very powerful, and can be used to create reusable pieces of code that can be used throughout your stylesheets. . | SASS functions are a powerful feature that allow you to perform complex operations on values, manipulate data, and generate content dynamically. By using built-in functions and creating your own custom functions, you can greatly extend the capabilities of your SASS stylesheets. . | . Mixins . Mixin what is a mix in what are we mixing in? &gt; Answer here (hack question): . Mixins are a way to make groups of CSS that you want to reuse throughout your site anywhere you please. | Mixins are a form of template and that you can use to build on top of to make different features later on this prevents you from having to write the same code over and over again. | This is a form of encapsulation in your CSS and is a great way to make your code more organized and easier to read. | Mixins can also take in arguments and be able to be used to apply effects on certain elements if that is a feature you want to add to your site. However unlike functions which also take arguments mixins cannot return values. | To use a mixin declare it with @mixin and then incorporate with @include. | . Inheritance . What is inheritance? &gt; Answer here (hack question): . In general programming concept where the child class can __ properties from the __ class. These properties can be changed and modified in the __ class. This prevents code from being repeated and makes the code more usable and flexible. | In SASS we have a similar concept that can be used as well we can create base styles and then have other styles inherit from them and then we can change them as we please. | We can do that by through using @extend .name-of-class and then we can add more styles to it as we please. Simple as that | . Mixin &amp; Inheritance Code Example . // example of @mixin @mixin button { width: auto; height: auto; border-radius: 10px; background-color: #21807c; border: 3px solid black; font-size: 1.5em; display: flex; justify-content: center; align-items: center; grid-column: span 1; grid-row: span 1; // creates smooth animation effect transition: all 0.5s; } // default button theme for calculator and stopwatch buttons. Both will follow the same button format .button { // uses the scss from the @mixin @include button; } /* styling for the calculator clear button */ .calculator-button-clear { // @extend inherits .button and then changes the background color from .button @extend .button; background-color: #e68b1c; } /* styling for the calculator equals button */ .calculator-button-equals { // another @extend inherits .button and then changes the background color from .button @extend .button; background-color: #e70f0f; } . Compiling SASS to CSS . SASS can’t be directly input to an HTML file, it first must be compiled to CSS. The easiest way to do this is in your terminal. Change the name of your input and output file to whatever you would like to run the conversion a single time. . sass input.scss output.css . If you want to automatically change your CSS file whenever you update the SASS file, you can instead run: . sass --watch input.scss output.css . This will update whenever you save a change in your SASS file. If you’re actively working on a project and changing the SASS this is probably the better option for you. . Hacks . Hacks are due by Friday 12/08/2023 at 11:59 p.m. PST. Any late submission will have a deduction of 0.1 Indicators from their total grade. | . Hack Questions .1 Indicators . Answer the hack questions throughout the lesson. | . Sass Demo 0.5+ Indicators . Using at least 3 sass features (variables, nesting, mixins, etc.) create a UI demo that may be used for future or current projects. Extra Indicators will be awarded based on creativity and extra addition of features from SASS. | . Reflection .3 Indicators . Reflect on each feature you decided to use for your UI demo. Explain how this feature was utilized and why it was more effective than accomplishing the same task without SASS | . Credits: Team .",
            "url": "http://localhost:4100/teacher_portfolio/2023/12/05/P3_student_SASS_IPYNB_2_.html",
            "relUrl": "/2023/12/05/P3_student_SASS_IPYNB_2_.html",
            "date": " • Dec 5, 2023"
        }
        
    
  
    
        ,"post25": {
            "title": "SASS | Student P1",
            "content": "Introduction to SASS . SASS (Syntactically Awesome Stylesheets) is a powerful preprocessor scripting language that enhances CSS with advanced features. It’s compiled into standard CSS, making it a robust tool for modern web development. . Benefits Over Traditional CSS . Improved Code Organization . Nesting Capabilities: SASS allows you to nest your CSS selectors in a way that follows the same visual hierarchy of your HTML. | Modular Approach: You can split your CSS into multiple files (partials) and import them into a main file, making your project more organized. | . Maintainability . Use of Variables: Define colors, fonts, and other CSS values as variables for easy updates and consistency across the project. | Mixins for Reusable Code: Create reusable pieces of code for things like buttons, forms, which can be included wherever needed. | Extend/Inheritance: Share a set of CSS properties from one selector to another, reducing the amount of code you need to write and maintain. | . Advanced Features . Control Directives: Use if/else statements and for/each loops in your CSS, which are not possible in plain CSS. | Built-in Functions: SASS offers functions for color manipulation, mathematics and more, enhancing the functionality of CSS. | Compatibility: Automatically handles browser prefixing, ensuring that your styles work across different browsers without extra code. | . SASS Basics . Preprocessing . Compilation: Sass files are preprocessed to generate standard CSS files. | Usage: Use the sass command in the terminal to compile Sass files. For example, sass input.sass output.css. | Watching Files: The --watch flag allows Sass to monitor files for changes and recompile automatically. | . // Command to compile Sass sass input.sass output.css // Command to watch and compile Sass sass --watch input.sass output.css . Modules . Splitting Code: Sass allows splitting code into multiple files. | @use Rule: Loads another Sass file as a module, enabling access to its variables, mixins, and functions. | Namespace: Refer to module contents using a namespace based on the filename. | . // In _base.sass $primary-color: #333 // In styles.sass @use &#39;base&#39; .inverse background-color: base.$primary-color color: white . Operators . Math Operations: Sass supports standard math operators for calculations within CSS. | Example: Calculating widths for a fluid grid using operations like division. | . .container display: flex article[role=&quot;main&quot;] width: 600px / 960px * 100% aside[role=&quot;complementary&quot;] width: 300px / 960px * 100% margin-left: auto . SASS Role in Design: . In the design phase of any project, maintaining uniformity is extremely important for creating a polished look. SASS allows for this by allowing the use of variables to store and reuse colors, fonts, and other design elements. . This makes it so that there is a ____ theme applied throughout the entire project. SASS allows for visual cohesion. . Visual Concept as a Blueprint . Before going into the functional code, it is very important to create a visual concept or design mockup. This is a model for the project, which gives a clear visual representation for the final product. It allows for a scrum team to align on the aesthetics and overall design direction. . This also allows for feedback and ___. People can make adjustments to the visual elements without complexity of functional code, and it makes sure that all requirements are met. . These visual concepts also play a role in planning the ___ design. The team members can visualize how layouts and styles are adapted for different ____ _____, so that all users can have a great visual experience across all types of devices. . Hacks . Explore SASS documentation to discover any additional features not covered in the lesson and implement one or more of these features in your GH Pages project. Write a couple sentences explaining the feature and demonstrate it. . Partials and Modular Styling with SASS . Understanding SASS Partials: . SASS partials are separate files containing any specific style or component. They allow for better organization and modularization of styles. They play a very important role in organizing and modularizing styles. . Partials are named with a leading underscore (e.g., _variables.sass) to indicate that they are meant to be __ into another stylesheet. . Benefits of Using Partials: . Modular Organization: Partials break down stylesheets into smaller files, each focusing on a specific aspect (e.g., variables, typography, layout). | This modular approach improves code organization, making it easier to maintain and scale. | . | Code Reusability: Partials enable the reuse of styles across multiple files. For example, a _variables.sass partial may store color schemes and fonts, allowing for greater consistency. | . | Readability and Collaboration: Smaller files enhance code readability. Developers can quickly locate and understand specific styles. | Supports ____ development, allowing different team members to work on different partials simultaneously. | . | Importing Partials into a Main SASS File: . To use SASS partials, import them into a main SCSS file using the @import directive. The main file (e.g., main.sass) serves as the entry point for compiling styles. . Importing Partials into a Main SASS File: . // main.sass // Importing variables partial @use variables // Importing typography partial @use typography // Importing layout partial @use layout // Importing components partial @use components . Variables in SASS . Introduction to Variables: . SASS variables provide a way to store information for later use in a stylesheet. They offer several advantages, including enhanced maintainability and consistency, by allowing you to define values in __ location. . Variable Syntax: . In SASS, variables are declared using the ‘$’ symbol followed by the variable name. Once a variable is defined, its value can be reused throughout the stylesheet. . Variable Syntax: . // _variables.sass // Define variables $primary-color: #3498db $secondary-color: #2ecc71 // Use variables body background-color: $primary-color .button background-color: $secondary-color color: #fff . SASS Variable Scope: . Variable scope is similar to the range in which a variable is accessible. By default, variables are local to the file in which they are defined. However, you can create a GLOBAL VARIABLE: . By default, variables are local to the scope in which they are defined. However, the !global flag can be used to create global variables. Global variables are accessible throughout the entire stylesheet. . Global Variables: . // _variables.sass // Local variable $local-font-size: 16px !default // Global variable $global-font-size: 18px !global . Variable Scope: . // styles.sass // Importing variables partial @use &#39;variables&#39; $font-size: 14px // Global variable body font-size: $font-size // Accessing the global variable .container $font-size: $local-font-size // Local variable within .container scope font-size: $global-font-size // Accessing the global variable . Nested techniques . Basic Nesting: . nav background-color: #333 ul list-style: none padding: 0 margin: 0 li display: inline-block margin-right: 10px a text-decoration: none color: #fff . In this example, the CSS output will be: . nav { background-color: #333; } nav ul { list-style: none; padding: 0; margin: 0; } nav ul li { display: inline-block; margin-right: 10px; } nav ul li a { text-decoration: none; color: #fff; } . Many CSS properties have the same prefix, like font-family, font-size and font-weight or text-align, text-transform and text-overflow. . With SASS you can write them as nested properties: . font: family: Helvetica, sans-serif size: 18px weight: bold text: align: center transform: lowercase overflow: hidden . The SASS transpiler will convert the above to normal CSS: . font-family: Helvetica, sans-serif; font-size: 18px; font-weight: bold; text-align: center; text-transform: lowercase; text-overflow: hidden; . Flexbox and Grid Integration . Flexbox and Grid are two powerful layout systems in CSS that allow for responsive design and complex layouts with less effort. . Flexbox . Purpose: Designed for __-dimensional layouts (either __ or __). | . Grid . Purpose: Designed for __ -dimensional layouts ( __ and __ together). | . Simplifying Responsive Layouts with SASS . SASS enhances the use of Flexbox and Grid by allowing more organized and maintainable stylesheets. . Variables and Mixins: Use SASS variables and mixins to create reusable Flexbox and Grid styles. | Nesting: Nest media queries within selectors for responsive design. | Functions: Use SASS functions to calculate flexible dimensions and spacings. | . Advanced Mixins for Flexbox and Grid . Create advanced mixins for Flexbox and Grid for greater flexibility and customization. For example, a Flexbox mixin that allows you to specify direction, alignment, and wrap properties: . @mixin flexbox-container($direction: row, $justify: center, $align: center, $wrap: nowrap) display: flex flex-direction: $direction justify-content: $justify align-items: $align flex-wrap: $wrap . For Grid, create a mixin to dynamically set grid areas: . @mixin grid-areas($areas) grid-template-areas: $areas . Dynamic Layouts with SASS Functions . Use SASS functions to dynamically calculate layout values. For example, a function to determine the number of grid columns based on the container width: . @function grid-columns($max-width, $column-width, $gap) @return floor(($max-width + $gap) / ($column-width + $gap)) . Apply these functions in Flexbox and Grid settings for responsive designs: . .grid-container @media (max-width: 1200px) grid-template-columns: repeat(grid-columns(1200px, 250px, 10px), 1fr) . Nested Media Queries for Responsive Design . Nested media queries enhance the management of responsive layouts. Combine them with SASS variables for consistency: . $item-breakpoint: 600px .item @media (max-width: $item-breakpoint) flex: 100% . Demonstration: Complex Flexbox Layout with SASS . // Define variables $primary-color: #333 $secondary-color: #777 $padding: 10px // Mixin for flex container @mixin flex-container display: flex justify-content: space-between padding: $padding // Main container .main-container @include flex-container background-color: $primary-color // Nested items .item flex: 1 margin: 5px background-color: $secondary-color &amp;:hover background-color: darken($secondary-color, 10%) . Demonstration: Responsive Grid Layout with SASS . // Grid container .grid-container display: grid grid-template-columns: repeat(3, 1fr) gap: 10px // Responsive adjustment @media (max-width: 600px) grid-template-columns: repeat(2, 1fr) // Grid items .grid-item background-color: $primary-color padding: $padding &amp;:hover background-color: lighten($primary-color, 10%) . Hacks . Create a grid layout that automatically adjusts the number of columns based on the screen size, using SASS variables and functions. . Scripting in SASS . SASS Scripting . Sass scripting involves using programming-like constructs (for loops, conditionals) in style sheets. It is extremely helpful in creating styles and gives you a lot of freedom difficult to achieve otherwise. Allows for more difficult and advanced styling compared to traditional CSS. . For Loops . Using for loops in styling drastically makes life easier while working with repetitive styles seeing as it enables generation of styles based on conditions. . $grid-columns: 12; @for $i from 1 through $grid-columns { .col-#{$i} { width: percentage($i / $grid-columns); } } . Define grid-columns and dynamically sets the width of each column using a for loop. Much shorter than it would normally be if you didn’t use a for loop. . For Loop Practice . What would appear if you used the following style on the html file below. . HTML . &lt;html lang=&quot;en&quot;&gt; &lt;head&gt; &lt;meta charset=&quot;UTF-8&quot;&gt; &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0&quot;&gt; &lt;link rel=&quot;stylesheet&quot; href=&quot;output2.css&quot;&gt; &lt;title&gt;Boxes&lt;/title&gt; &lt;/head&gt; &lt;body&gt; &lt;div class=&quot;container&quot;&gt; &lt;!-- Colored boxes with pre-generated styles --&gt; &lt;div class=&quot;box&quot; style=&quot;background-color: #ffffff;&quot;&gt;&lt;/div&gt; &lt;div class=&quot;box&quot; style=&quot;background-color: #ffffff;&quot;&gt;&lt;/div&gt; &lt;div class=&quot;box&quot; style=&quot;background-color: #ffffff;&quot;&gt;&lt;/div&gt; &lt;div class=&quot;box&quot; style=&quot;background-color: #ffffff;&quot;&gt;&lt;/div&gt; &lt;div class=&quot;box&quot; style=&quot;background-color: #ffffff;&quot;&gt;&lt;/div&gt; &lt;/div&gt; &lt;/body&gt; &lt;/html&gt; . SASS . $colors: #ff0000, #ff7f00, #ffff00, #00ff00, #0000ff; @for $i from 1 through length($colors) { .box:nth-child(#{$i}) { background-color: nth($colors, $i); } } .container { display: flex; } .box { width: 50px; height: 50px; margin: 5px; } . Conditionals . Conditional statements in SASS allow you to apply styles based on certain conditions. This enhances the flexibility and reusability of your stylesheets. . If Statements . The ‘@if’ statement allows you to conditionally apply a style based on a specified condition. . $theme: &#39;dark&#39;; .alert { @if $theme == &#39;dark&#39; { background-color: #333; color: #fff; } } . Else Statements . The ‘@else’ statement provides an alternate style when the intial @if statement condition is not met. . $theme: &#39;dark&#39;; .alert { @if $theme == &#39;dark&#39; { background-color: #333; color: #fff; } @else { background-color: #fff; color: #333; } } . Else If Statements . The ‘@else if’ statement is used to check a condition when the preceding @if or @else if condition is not met. . $temperature: 25; .condition { @if $temperature &gt; 30 { background-color: #ff0000; // Hot } @else if $temperature &gt; 20 { background-color: #ffcc00; // Warm } @else { background-color: #66ccff; // Cool } } . Ternary Statement . Ternary operators provide a concise way to express conditional statements in just one line. . $success: true; .message { color: $success ? #00cc00 : #ff0000; } . Conditional Examples . $isLoggedIn: true; .nav { @if $isLoggedIn { background-color: #33cc33; // Green for logged-in users } @else { background-color: #cc3333; // Red for guests } } . $screen-size: 800px; .element { font-size: 16px; @if $screen-size &gt;= 768px { font-size: 20px; } } . Hacks . Define a custom SASS function that uses a for loop in order to slightly decrease the saturation and increase the brightness of a color of your choosing and fill in those increasingly more white colors into a 3x3 array of equal height and width. . Example Image . . Extending &amp; Inheritance . Extending in SASS allows you to share styles between selectors, reducing redundancy. You have to use the @extend directive to do this. Inheritance in SASS involves using a placeholder selector, and they are represented with the percent sign %. These are essentially templates for styles. This allows for more abstraction and less repetition. . // common styles %common-style color: #333 font-size: 16px // Use @extend to apply the common style to specific selectors .button @extend %common-style background-color: #007bff .link @extend %common-style text-decoration: underline . Handling Errors and Debugging in Sass . 1. @error Directive: . The @error directive is used to raise an error and stop the Sass compilation process if a certain condition is not met. It’s helpful for catching issues early in the development process. . // SCSS Syntax $primary-color: #3498db; // Change this to an invalid color, e.g., &#39;red&#39; @mixin validate-color($color) { @if type-of($color) != color { @error &quot;Invalid color provided: #{$color}. Please provide a valid color.&quot;; } } .element { background-color: $primary-color; @include validate-color($primary-color); } . %%html &lt;div style=&quot;background-color: #3498db; padding: 20px;&quot;&gt; &lt;p style=&quot;color: #fff;&quot;&gt;This is an example element with a primary color background.&lt;/p&gt; &lt;/div&gt; . This is an example element with a primary color background. . In this example, if the provided color is not valid, the Sass compilation will stop, and an error message will be displayed. . 2. @debug Directive: . The @debug directive is used to print messages to the Sass output. It’s a handy tool for inspecting variable values, checking the flow of your code, and identifying issues during development. . // SCSS Syntax $font-size-base: 16px; // Try changing this value to observe @debug output @function calculate-line-height($font-size) { @debug &quot;Calculating line height for font size: #{$font-size}px&quot;; $line-height-ratio: 1.5; $line-height: $font-size * $line-height-ratio; @return $line-height; } body { font-size: $font-size-base; line-height: calculate-line-height($font-size-base); } . %%html &lt;style&gt; body { font-size: 16px; line-height: 24px; /* Calculated line height */ } &lt;/style&gt; . In this example, the @debug statement will print a message to the console during Sass compilation, providing information about the font size being used and assisting in identifying any potential issues. . Popcorn Hacks . Popcorn Hack 1: . Try changing the primary color to an invalid value (e.g., ‘red’) and observe the @error message. Then, correct it to a valid color. . Popcorn Hack 2: . Modify the base font size and observe the @debug message. Try different font sizes and see how it affects the calculated line height. . Hacks . Define a custom SASS function that uses a for loop in order to slightly decrease the saturation and increase the brightness of a color of your choosing and fill in those increasingly more white colors into a 3x3 array of equal height and width. . Example Image . . Mixins . Mixins in SASS . Mixins are reusable blocks of code. | They help avoid repetition and keep code organized. | Think of them like functions in programming that return CSS code. | . scss @mixin center-element { display: flex; align-items: center; justify-content: center; } . Mixin with Parameters . scss @mixin box-shadow($x, $y, $blur, $color) { -webkit-box-shadow: $x $y $blur $color; -moz-box-shadow: $x $y $blur $color; box-shadow: $x $y $blur $color; } . Use of this mixin: . scss .card { @include box-shadow(2px, 2px, 5px, rgba(0, 0, 0, .3)); } . Mixins for Responsive Web Design . Responsive Design . It’s crucial for websites to work well on all devices. | Responsive design adjusts the layout based on screen size. | . Breakpoints in Responsive Design . Breakpoints are screen sizes where the design changes. | Common breakpoints are for mobile, tablet, and desktop screens. | . Using Mixins for Breakpoints . Mixins can encapsulate media queries for different breakpoints. | This simplifies managing responsive styles. | . Example of a Breakpoint Mixin . scss @mixin for-mobile { @media (max-width: 600px) { @content; } } . . Responsive Images and Media with SASS . Responsive Images and Media with SASS . Handling Images Responsively . Images should adapt to different screen sizes. | Techniques include scaling and changing sources for different resolutions. | . Example: Scaling Images . scss .responsive-image { width: 100%; height: auto; } . Device-Specific Media Queries . Targeting Specific Devices . Media queries can be used to target styles for specific devices like iPhones or computers. | This is based on characteristics like device width, height, and pixel ratio. | . Example: Targeting iPhones . Here’s how you might target styles specifically for iPhones: scss @media only screen and (min-device-width : 375px) and (max-device-width : 812px) and (-webkit-device-pixel-ratio : 3) { .iphone-specific-class { // iPhone-specific styles go here } } | . This media query targets devices with specific dimensions and pixel ratios common to iPhones. . For targeting computer screens (like desktops), you might use a broader range: scss @media only screen and (min-width: 1024px) { .computer-specific-class { // Styles for larger screens like desktop computers } } . Conclusion . SASS enhances CSS with features like mixins, leading to more efficient and maintainable code. | Custom mixins for breakpoints greatly aid in creating flexible, responsive layouts. | Techniques for responsive image and media handling in SASS ensure optimal visual presentation across different devices. | Overall, SASS is a valuable asset in modern web development, streamlining the creation of responsive, visually appealing websites. | .",
            "url": "http://localhost:4100/teacher_portfolio/2023/12/05/P1_student_SASS_IPYNB_2_.html",
            "relUrl": "/2023/12/05/P1_student_SASS_IPYNB_2_.html",
            "date": " • Dec 5, 2023"
        }
        
    
  
    
        ,"post26": {
            "title": "Mario | Enemies | Student",
            "content": "Lesson - Enemy . In this lesson, we’ll be going over the different characteristics in which all enemies need, and how eventually you will add a fully functional enemy into your own game. . Instructions . Make sure to be following along, so you’ll have the best time understanding the content. As we go over the lesson, keep in mind what you’ll exactly need to do for in order to make the player work. Here is a brief list of essential things that the enemy must do. . Ability to move | Interaction with Player | Ability to be killed by player | Must be in OOP | . Once we go over how the enemy works, it will be YOUR job implementing into your own game. Snippets and this guide will be resources you can use to refer back on how to make your enemy. . Step 1 - Creating the Enemy . The first step in creating the enemy in the game is creating a new file just for it. The file should be in assets/js/platformer and should called either Enemy.js, Goomba.js or something related. Once you have created the file, we shall now start defining the Enemy class. . import Character from &#39;./Character.js&#39;; import GameEnv from &#39;./GameEnv.js&#39;; export class Enemy extends Character { // constructors sets up Character object constructor(canvas, image, speedRatio, enemyData){ super(canvas, image, speedRatio, enemyData.width, enemyData.height, ); // Player Data is required for Animations this.enemyData = enemyData; } } export default Enemy . This code is essentially the same as the player code with few differences. The Enemy class is being extended to the Character class, and once extended, we can start defining the different properties in which our enemy will have. . After configuring the enemy in Enemy.js, you will then have to connect Enemy to the main game. There are two files in which you’ll have to do this. The main file in which the game is initialized and GameLevels.js in where the enemy is actually created as an instance. . First, we’ll be adding the enemy into the main file. You’ll notice here that there is a variable that defines all the different assets of the game. Players, Backgrounds, Obstacles, etc. Seeing how everything in the game is defined here, it’d be reasonable to say the enemy will be defined in the assets variable as well. . var assets = { //previous code above ... players: { mario: { src: &quot;/images/platformer/sprites/mario.png&quot;, width: 256, height: 256, w: { row: 10, frames: 15 }, wa: { row: 11, frames: 15 }, wd: { row: 10, frames: 15 }, a: { row: 3, frames: 7, idleFrame: { column: 7, frames: 0 } }, s: { }, d: { row: 2, frames: 7, idleFrame: { column: 7, frames: 0 } } }, }, } . Here is a snippet on how one of the players is defined. We can base our enemy after the player. Our player has an image (src), a width, and a height. The rest doesn’t apply to our enemy. . var assets { enemies: { goomba: { src: &quot;/images/platformer/sprites/goomba.png&quot;, width: 448, height: 452, } } } . Once we define the goomba in assets, we’ll have to add it to the gameLevel (refer to the code). . new GameLevel( {tag: &quot;hills&quot;, background: assets.backgrounds.hills, platform: assets.platforms.grass, player: assets.players.mario, enemy: assets.enemies.goomba, tube: assets.obstacles.tube, callback: testerCallBack } ); . Step 2 - Basic Features . Now that we have the enemy actually defined and created within our game, we can now begin the process of giving our enemy its necessary attributes. The first of these attributes will be movement. . Movement is quite easy to implement. We just need the user of the enemy to continually check its position and based on its position, decide in which direction it needs to go. . The following is how this can be done (this will be added onto the Enemy class): . update() { // Check if the enemy is at the left or right boundary if (this.x &lt;= 0 || this.x + this.width &gt;= GameEnv.innerWidth) { // Change direction by reversing the speed this.speed = -this.speed; } //Initially get the enemy moving this.x += this.speed; } . The code is using an if statement to check whether the player is on the left side of the canvas or all the way on the right side, the direction of the goomba will reverse. . //Talk about how there is code below to initially get the player moving . Now that the Goomba can travel across the canvas, it will hence now eventually cross paths with the player. The next step would be to add collisions between the Goomba and Character, so that the two characters can interact with one another. . The thing about collisions however is Mr. Mortensen has already laid out the foundation for the collision code. We won’t have to code the actual logic for collisions, rather a simpler version of such. Code for collisions will be handled in Player.js rather than in the Enemy file, hence the following is an excerpt from the Player code: . // Enemy collision if (this.collisionData.touchPoints.other.id === &quot;enemy&quot;) { // Collision with the left side of the Enemy if (this.collisionData.touchPoints.other.left) { // Kill Player (Reset Game) } // Collision with the right side of the Enemy if (this.collisionData.touchPoints.other.right) { deathController.setDeath(1); // Kill Player (Reset Game) } // Collision with the top of the Enemy if (this.collisionData.touchPoints.other.ontop) { // Kill Goomba // Make Mario Bounce } } . Step 3 - Homework / Extra Features . Implement the enemy into your game | Add what happens in the event of a collision | Add special events occur at random | Give your Goomba something unique | .",
            "url": "http://localhost:4100/teacher_portfolio/2023/12/05/CSSE-student-enemy_lesson.html",
            "relUrl": "/2023/12/05/CSSE-student-enemy_lesson.html",
            "date": " • Dec 5, 2023"
        }
        
    
  
    
        ,"post27": {
            "title": "P2 | 5.1 | Beneficial and Harmful Effects",
            "content": "As new computing systems come out people will change how they go about their day-to-day buisness to take advantage of new technology. Companies like AMazon and Instacart have changed the way many people show and continue to change lifestyles. . Popcorn hack #1 . Explain how an acclerometer is used on phones v. automobiles? | . Computing innovations have had great contributions to society, improving the quality of living. However, while computing innovations are typically designed to achieve a specific purpose, they may have unintended consequences. . Multirotor drones used for aerial photography and surveillance (Used by ASB for the social media accounts!) . Benefits . Deliveries of packages | Easy aerial photography | . Harmful . Flying in unregulated zones in illegal and dangerous | Privaacy concerns | . Beneficial Effects of computing . Machines have vastly improves the medical field, saving many lives | Engineers take advantage of computing innovation to collect data and make work and buisnesses more efficeint. | The artistic world has also benifited from new ways to create, share, and sell creative works. | . Harmul Effects of Computing Inovations . Computiong innovation can also hurt people ex: Cyber-Bullying | . | loss of provacy, and use of provate information gathered by companies | Dependence on technology and new innovation like chatgpt without liearning key things like researching on your own. | Replacments of humans by computing inovation leading to the loss of previously existing jobs, economic harship for the now-unemployed workers | . A great example of a beneficial computing machine would be 3D printers . Open-source software for the computer and printer | Used in schools and at homes (New classes have been developed for the education of 3D printing) | 3D printers can be used for a variety of applications, creating published models | . Key points to remember: . not every effect of computing innovation is anticipated in advance | A single effect can be viewed as both harmful and beneficial by different people or even by the same person. | . Popcorn hack #2 . Explain how an effect of computing innovation can be both beneficial and harmful | . Unintended Uses . Responsible programmers try to consider the unintended ways their computing innovations can be used and the potential beneficial and harmful effects | It is impossible for programmers to consider all the ways a new computing innovation can be used | Rapid sharing of a program with large number of users can result in significant impacts beyond intended purpose or control of programmer | Job displacement: automation leads to job loss or changes in employment patterns | | . Examples . Internet - Originally for scientists spreading information | Now, many people spend more time browsing the internet than they do sleeping Questions . Can you imagine your life without the World Wide Web? How different would the world be? How would you reallocate your free time? . | . Negative Effects . Microtransactions . - &quot;Free&quot; Games and Apps - Cosmetics, paywall to function, sometimes pay-to-win - Watermark removal - In game currency - Unlockable content - Subscriptions - Cosmetics (ie. Fortnite skins) - SBUX with Starbucks - Other businesses can&#39;t compete - &quot;Casino Effect&quot; Casino Effect - Progression Systems - Visual and Sound Cues - Social Engagement and Competition Loot Boxes (Banned in certain countries) - Loot boxes are in-game reward systems found in many video games. They typically offer players a chance to obtain virtual items or rewards, often with varying levels of rarity or value. These boxes can be earned through gameplay or purchased using real money. Dicussion and/or ban on loot boxes in the following: - Belgium - Netherlands - China - Japan - South Korea - United States . Dopamine Feedback Loops . Dopamine acts on areas of the brain to give you feelings of pleasure, satisfaction and motivation. Dopamine also has a role to play in controlling memory, mood, sleep, learning, concentration, movement and other body functions. . Ex. . Getting a like from someone you admire on Instragram | People commenting on your posts | . These things make you feel happy. This makes you seek this feeling of validation and happiness, always wanting to get that next hit of dopamine. This makes you spend more time on the applications (mainly social media), further increasing your dependancy. . Have you ever found yourself scrolling on TikTok, Instragram Reels or any other forms of short entertainment? . These applications are targeted to keep you hooked; you can scroll on the video instantaneously, until you find that video that makes your dopamine receptors fire | . Leads to: . Sleep deprivation | Anxiety | Depression | Loneliness | . Always be concious about the amount of screen time you spend. You don’t have to cut it out of your life completely, but try to keep it in moderation. .",
            "url": "http://localhost:4100/teacher_portfolio/2023/12/05/CSP-5.1-beneficial_IPYNB_2_.html",
            "relUrl": "/2023/12/05/CSP-5.1-beneficial_IPYNB_2_.html",
            "date": " • Dec 5, 2023"
        }
        
    
  
    
        ,"post28": {
            "title": "OOP, Multi Player",
            "content": "Multi Player . This is a dialog on regarding consideration on how to make a Multi Player game. . Multiplayer Game Loop . Adjust the game loop to accommodate real-time updates from the server. Touch Point: Modify the game loop to integrate server updates and adjust the timing mechanism. . Player Actions . Player actions (like moving, jumping) are likely handled locally on the client side. In a multiplayer setup, these actions need to be sent to the server. Touch Point: Modify handlePlayerAction to emit player actions to the server. . JSON Representation . JSON or a similar data format can be used to represent game objects when transmitting them between the server and clients. Touch Point: Serialize and deserialize game objects to/from JSON for network transmission. . GameObject Lifecycle . Consider how GameObjects are created, updated, and destroyed in a multiplayer context. Touch Point: Modify GameObject and GameLevel methods to handle synchronization and instantiation/destruction across clients. . Server-Side Game State . The server needs to maintain the authoritative game state. Touch Point: Server listens for player actions, updates the game state, and broadcasts the updated state to all connected clients. . Synchronization . Ensure that all clients are synchronized with the server’s authoritative game state. Touch Point: Clients listen for updates from the server and adjust their local game state accordingly. . Player Identification . Identify different players and associate their actions with their corresponding GameObjects. Touch Point: Add a player identifier to emitted actions and update GameObjects accordingly. . Networking (WebSocket): . Establishing and handling WebSocket connections for real-time communication. Touch Point: Integrate WebSocket handling on both the client and server sides. . Error Handling . Implement robust error handling to handle network failures and unexpected scenarios. Touch Point: Enhance error handling mechanisms on both the client and server sides. . Single Player Layout . GameEnv | ├── Attributes: │ | ├── levels │ | ├── gameObjects | │ └── ... | | | ├── Methods: │ | ├── update: update, draw │ | ├── destroy: all gameObjects │ | └── ... │ ├── GameObject │ ├── Player: sprite animation, wasd │ ├── Background: fit to screen, scrolling │ ├── Platform: fixed to bottom, scrolling │ └── ... │ ├── GameLevel | ├── Tag: key │ ├── Attributes: │ | ├── playerAssets │ | ├── backgroundAssets │ | ├── platformAssets │ | └── ... | | │ └── Methods: │ | ├── load: &quot;new&quot; GameObject created from assets │ | └── ... | └── GameControl │ ├── Methods: | | ├── gameLoop: drive action of game level │ | ├── transitionToLevel: destroys and creates objects for game level │ | └── ... | | │ └── ... . Game States . Some of the definition above talk about “game state”. . Positions and States of Game Objects . The location, velocity, and state (e.g., alive, dead) of each game object (players, enemies, platforms, etc.). . Player Scores and Stats . Scores, achievements, or any other player-specific statistics. . Level Information . Details about the current level, such as the background, platform configuration, and any other level-specific attributes. . Time and Game Clock . Information about the current time within the game, which is crucial for handling events, animations, and other time-dependent actions. . Event Queue or Log . A log of events or actions that have occurred, which can be used for synchronization and debugging. . Game Configuration . Settings and configurations that affect the game’s behavior, such as gravity, game speed, or other global parameters. . Player Identification and Session Information: . Unique identifiers for players, their session information, and any relevant details for tracking and managing player connections. . Client / Server Code . To make a game multiplayer or enable two machines to share the same GameLevel with different players, you would indeed need to introduce a mechanism for communication between the two instances. WebSockets are a commonly used technology for real-time bidirectional communication between clients and servers, and they can be a good choice for multiplayer games. . Server-Side Logic Implement a server to manage the game state, including the current GameLevel, player positions, and other relevant data. | Use a WebSocket library on the server to handle communication with clients. | . | Client-Side Logic Modify the existing game code on the client to interact with the server via WebSockets. | When a player performs an action (e.g., moves the character), send that action to the server. | Receive updates from the server, such as the positions of other players, and update the local game state accordingly. | . | Synchronization Ensure that the server is the authority on the game state. All clients should receive updates from the server and synchronize their local state accordingly. | Implement mechanisms for handling latency and potential synchronization issues between clients. | . | WebSockets: Use WebSockets to establish a persistent connection between the clients and the server. | Send messages back and forth between the server and clients to keep them in sync. | . | . Code Outlines . Client Code Sample: JavaScript . &lt;script src=&quot;https://cdnjs.cloudflare.com/ajax/libs/socket.io/3.0.3/socket.io.js&quot;&gt;&lt;/script&gt; // Client-side using JavaScript and Socket.IO const socket = io.connect(&#39;http://localhost:5000&#39;); // change to server for multi player socket.on(&#39;gameState&#39;, (updatedGameState) =&gt; { // Update the local game state based on the server updates }); // When the player performs an action function handlePlayerAction(action) { // Send the action to the server socket.emit(&#39;playerAction&#39;, action); // Local client may update its state immediately, but the authoritative state comes from the server } . Server Code Sample: Python . from flask import Flask, render_template from flask_socketio import SocketIO app = Flask(__name__) socketio = SocketIO(app) @app.route(&#39;/&#39;) def index(): return render_template(&#39;index.html&#39;) @socketio.on(&#39;connect&#39;) def handle_connect(): # Handle new player connection @socketio.on(&#39;playerAction&#39;) def handle_player_action(action): # Handle player actions and update the game state # Broadcast the updated state to all connected clients socketio.emit(&#39;gameState&#39;, updated_game_state) if __name__ == &#39;__main__&#39;: socketio.run(app) . Hacks . An early step to building a multi player game requires thinking and structuring code so that data can be updated from server. . Review Elements and Data . To abstract data to server, you must 1st study what that data might be. Then, selializing data into JSON. Inspecting on the browser enables developer to see some of the data describe in this article, here is Element data … . &lt;canvas id=&quot;background&quot; width=&quot;754&quot; height=&quot;331&quot; style=&quot;width: 754px; height: 331px; position: absolute; left: 0px; top: 60px; filter: none;&quot;&gt;&lt;/canvas&gt; &lt;canvas id=&quot;platform&quot; width=&quot;540&quot; height=&quot;160&quot; style=&quot;width: 754px; height: 44.6815px; position: absolute; left: 0px; top: 391px; filter: none;&quot;&gt;&lt;/canvas&gt; &lt;canvas id=&quot;character&quot; width=&quot;74&quot; height=&quot;74&quot; style=&quot;filter: none; width: 74px; height: 74px; position: absolute; left: 0px; top: 316.481px;&quot;&gt;&lt;/canvas&gt; . Serialize Data . Objective is to log data in objects each time it is changed. Since refresh rate is fast, it is probably a lot faster than change rate. Logging should be assoicated with change rate. . Sample of serializing Character data . // log Character element change logElement() { var jsonifiedElement = this.stringifyElement(); if (jsonifiedElement !== this.jsonifiedElement) { console.log(jsonifiedElement); this.jsonifiedElement = jsonifiedElement; } } // strigify Character key data stringifyElement() { var element = this.canvas; if (element &amp;&amp; element.id) { // Convert the relevant properties of the element to a string for comparison return JSON.stringify({ id: element.id, width: element.width, height: element.height, style: element.style.cssText, position: { left: element.style.left, top: element.style.top }, filter: element.style.filter }); } } .",
            "url": "http://localhost:4100/teacher_portfolio/2023/12/04/CSSE-tri2-oop-multi-player.html",
            "relUrl": "/2023/12/04/CSSE-tri2-oop-multi-player.html",
            "date": " • Dec 4, 2023"
        }
        
    
  
    
        ,"post29": {
            "title": "Big Idea 5.4 Crowdsourcing",
            "content": "Crowdsourcing . The more you crowdsource, the more you reach beyond your own community, the more likely you will reduce Computer Bias. Crowdsourcing provides the ability to obtain shared information, share information, and participate in distributed computing. . . Evidence of Crowdsourcing . Wikipedia has a ton of information from crowdsourcing, see Wikipedia definition on crowdsourcing. It can have inaccuracies, but when it does it often is corrected through a self-policing community. Reviews and many authors have made this, according to many, better than “official” information. | Crypto currency and associated block chain. All exchanges of money are validated at least 3-times by independent miners. If there is a flaw in the independent calculations the process is checked and performed again. Innovation of crypto crowdsourcing has impact on how governments think about currency. Additionally, block chain algorithms are being considered for many other crowdsourcing most private data (ie medical records). | COVID data, it is easy to recognize areas that are contributing and not contributing. This data has impacted all our lives and decision we make on attending public events, flying on planes, or wearing masks. The community of data and analysts will spawn many new ways of thinking about data that impacts lives. | . Obtaining Data via Crowdsourcing (Crossover Group Up, ~10 minutes) . We have all experienced Crowdsourcing by using external data through API’s, namely RapidAPI. This data has influenced how we code and shown possibilities in obtaining and analyzing data. Discuss APIs you have used. | We have all participated in code Crowdsourcing by using GitHub. Many of you have forked from the Teacher repository, or exchanged code with fellow students. Not only can we analyze GitHub code, but we can obtain profiles and history about the persons coding history. What is the biggest discovery you have found in GitHub? | Kaggle datasets for code and science exploration. The avenue of data points us youtube or netflix channels. Analyzing crowd data helps us make decisions. Exam top 10 to 20. Did you see anything interesting? | . Hacks . Think of a use case for crowdsourcing in you project … . CompSci has 150 ish principles students. Describe a crowdsource idea and how you might initiate it in our environment? | What about Del Norte crowdsourcing? Could your project be better with crowdsourcing? | What kind of data could you capture at N@tM to make evening interesting? Perhaps use this data to impress Teachers during finals week. | .",
            "url": "http://localhost:4100/teacher_portfolio/1.c/2023/12/02/CSP-crowdsourcing.html",
            "relUrl": "/1.c/2023/12/02/CSP-crowdsourcing.html",
            "date": " • Dec 2, 2023"
        }
        
    
  
    
        ,"post30": {
            "title": "Big Idea 5.3 Computing Bias",
            "content": "Computer Bias . Earlier we talked about beneficial and harmful effects of computing. Such conversation often lead to conversations on computer bias, particularly when bias creates a harmful effect. . As programmers, you now have the possibility of creating algorithms. It has been said, “Humans are error-prone and biased”. So, does that mean algorithms and the computers they run on are better? . . Intentional or Purposeful bias (Crossover Group Up, 10 minutes) . Google “What age groups use Facebook” vs “… TikTok”? What does the data say? Is there purposeful exclusion in these platforms? Is it harmful? Should it be corrected? Is it good business? | Why do virtual assistants have female voices? Amazon, Alexa Google, Apple Siri. Was this purposeful? Is it harmful? Should it be corrected? Is it good business? | Talk about an algorithm that influences your decisions, think about these companies (ie FAANG - Facebook, Amazon, Apple, Netflix, Google) | . As Pairs (5 minutes) . Watch the video… HP computers are racist | Come up with some thoughts on the video and be ready to discuss them as I call on you. Here are some ideas… Does the owner of the computer think this was intentional? | If yes or no, justify you conclusion. | How do you think this happened? | Is this harmful? Was it intended to be harmful or exclude? | Should it be corrected? | What would you or should you do to produce a better outcome? | . | . Hacks . Write summary/thoughts/conclusions from each of the exercises above. Focus on avoiding Bias in algorithms or code you write. .",
            "url": "http://localhost:4100/teacher_portfolio/5.e/2023/12/02/CSP-computing_bias.html",
            "relUrl": "/5.e/2023/12/02/CSP-computing_bias.html",
            "date": " • Dec 2, 2023"
        }
        
    
  
    
        ,"post31": {
            "title": "Collectable Lesson",
            "content": "POM File Dependencies . This project requires Jackson for JSON building. The loadFromPOM cell must be oaded before proceeding. . %%loadFromPOM &lt;dependency&gt; &lt;groupId&gt;com.fasterxml.jackson.core&lt;/groupId&gt; &lt;artifactId&gt;jackson-databind&lt;/artifactId&gt; &lt;version&gt;2.12.4&lt;/version&gt; &lt;!-- Use the latest version --&gt; &lt;/dependency&gt; . Abstract Collectable . Establish class heirarchy for Collectable. The class is used to manage a catalog of items. . abstract class required child definitions in order to instantiate | abstract methods help enforce definitions | implements defines method compareTo to enable things like sorting | . import com.fasterxml.jackson.databind.ObjectMapper; /* This is parent class, objectives... - Push functionality into parent Class - Enforce consistent definition of child Class */ public abstract class Collectable implements Comparable &lt;Collectable&gt; { public final String masterType = &quot;Collectable&quot;; private String type; // extender should define their data type /* Enumerated interface of key types * an interface named KeyTypes is declared with a single method name(). * the Collectable class contains an abstract method getKey(), * which must be implemented by its subclasses. * must provide a method that returns an object implementing the KeyTypes interface. */ public interface KeyTypes { String name(); } protected abstract KeyTypes getKey(); protected abstract KeyTypes getSortKey(); protected abstract String getSortKeyValue(); // getter public String getMasterType() { return masterType; } // getter public String getType() { return type; } // setter public void setType(String type) { this.type = type; } /* This method is used to build JSON using Jackson * Object mapper add this attributes to JSON * Exeption returns empty JSON */ protected String toJson() { try { ObjectMapper objectMapper = new ObjectMapper(); return objectMapper.writeValueAsString(this); } catch (Exception e) { e.printStackTrace(); return &quot;{}&quot;; } } /* &#39;Collectable&#39; requires toString override for compareTo * JSON data is used and formed with keys: key, data */ @Override public String toString() { return &quot;{&quot; + &quot; &quot;key &quot;: &quot;&quot; + getSortKeyValue() + &quot; &quot;,&quot; + &quot; &quot;data &quot;: &quot;&quot; + toJson() + &quot;}&quot;; } /* This method is used to compare toString of objects * the compareTo method is implemented from the Comparable interface * it compares the string representations of two Collectable objects * using their toString methods */ public int compareTo(Collectable obj) { return this.toString().compareTo(obj.toString()); } /* This method outputs a Collectable Array to console * the object uses toString to show contents */ public static void print(Collectable[] objs) { // print &quot;Collectable: Objects&#39; for(Object o : objs) // observe that type is Opaque System.out.println(o); System.out.println(); } } . /* * Pet class extends Collectable and defines abstract methods */ public class Pet extends Collectable { // Class data public enum KeyType implements KeyTypes {title, name, age, color, catalog} private static KeyTypes key = KeyType.title; // static initializer private static KeyTypes sortKey = KeyType.title; public static void setOrder(KeyTypes key) { Pet.key = key; } public static void sort(Collectable[] c, KeyType key) { Pet.key = key; Pet.sortKey = key; Arrays.sort(c); Pet.key = KeyType.title; } // Instance data private final String name; private final int age; private final String color; /* constructor * */ public Pet(String name, int age, String color) { super.setType(&quot;Pet&quot;); this.name = name; this.age = age; this.color = color; } /* &#39;Collectable&#39; requires getKey to help enforce KeyTypes usage */ @Override protected KeyTypes getKey() { return Pet.key; } @Override protected KeyTypes getSortKey() { return Pet.sortKey; } /* Getters / Accessors * */ public String getName() { return this.name; } public int getAge() { return this.age; } public String getColor() { return this.color; } /* &#39;Collectable&#39; requires getSortKeyValue override * provides key based off of Static Key setting */ protected String getSortKeyValue() { if (KeyType.name.equals(getSortKey())) { return getName(); } else if (KeyType.age.equals(getSortKey())) { String zeroPad = &quot;00&quot; + getAge(); return zeroPad.substring(zeroPad.length() - 2); } else if (KeyType.color.equals(getSortKey())) { return getColor(); } else if (KeyType.catalog.equals(getSortKey())) { return getName() + &quot; &quot; + getColor() + &quot; &quot; + getAge(); } // Default is Type return getType(); } // Test data initializer public static Pet[] pets() { return new Pet[]{ new Pet(&quot;Lion&quot;, 8, &quot;Gold&quot;), new Pet(&quot;Pig&quot;, 3, &quot;Pink&quot;), new Pet(&quot;Robin&quot;, 7, &quot;Red&quot;), new Pet(&quot;Cat&quot;, 10, &quot;Black&quot;), new Pet(&quot;Kitty&quot;, 1, &quot;Calico&quot;), new Pet(&quot;Dog&quot;, 14, &quot;Brown&quot;) }; } /* main to test Pet class * */ public static void main(String[] args) { // print with title Pet.setOrder(KeyType.title); Collectable[] pets = Pet.pets(); for (Pet.KeyType key : Pet.KeyType.values()) { Pet.sort(pets, key); Collectable.print(pets); } } } Pet.main(null); . /* * Car class extends Collectable and defines abstract methods */ public class Car extends Collectable { // Class data public enum KeyType implements KeyTypes {title, make, model, year, color, catalog} private static KeyTypes key = KeyType.title; // static initializer private static KeyTypes sortKey = KeyType.title; public static void setOrder(KeyTypes key) { Car.key = key; } public static void sort(Collectable[] c, KeyType key) { Car.key = key; Car.sortKey = key; Arrays.sort(c); Car.key = KeyType.title; } // Instance data private final String make; private final String model; private final int year; private final String color; /* constructor * */ public Car(String make, String model, int year, String color) { super.setType(&quot;Car&quot;); this.make = make; this.model = model; this.year = year; this.color = color; } /* &#39;Collectable&#39; requires getKey to help enforce KeyTypes usage */ @Override protected KeyTypes getKey() { return Car.key; } @Override protected KeyTypes getSortKey() { return Car.sortKey; } /* Getters / Accessors * */ public String getMake() { return this.make; } public String getModel() { return this.model; } public int getYear() { return this.year; } public String getColor() { return this.color; } /* &#39;Collectable&#39; requires getSortKeyValue override * toString provides data based off of Static Key setting */ @Override protected String getSortKeyValue() { if (KeyType.make.equals(getSortKey())) { return getMake(); } else if (KeyType.model.equals(getSortKey())) { return getModel(); } else if (KeyType.year.equals(getSortKey())) { return String.valueOf(getYear()); } else if (KeyType.color.equals(getSortKey())) { return getColor(); } else if (KeyType.catalog.equals(getSortKey())) { return getMake() + &quot; &quot; + getModel() + &quot; &quot; + getYear(); } // Default is Type return getType(); } // Test data initializer public static Car[] cars() { return new Car[]{ new Car(&quot;Ford&quot;, &quot;Fusion&quot;, 2015, &quot;Guard&quot;), new Car(&quot;Ford&quot;, &quot;Excursion&quot;, 2003, &quot;Green&quot;), new Car(&quot;Ford&quot;, &quot;F-350&quot;, 1997, &quot;Green&quot;), new Car(&quot;Cadillac&quot;, &quot;Boughman&quot;, 1969, &quot;Black&quot;), new Car(&quot;Acura&quot;, &quot;RL&quot;, 2006, &quot;Silver&quot;) }; } /* main to test Car class * */ public static void main(String[] args) { // print with title Car.setOrder(KeyType.title); Collectable[] cars = Car.cars(); for (Car.KeyType key : Car.KeyType.values()) { Car.sort(cars, key); Collectable.print(cars); } } } Car.main(null); . import java.util.ArrayList; import java.util.Collections; import java.util.List; public class CollectionExample { public static void main(String[] args) { // use List with dynamic size capabilities for combining Arrays List&lt;Collectable&gt; collection = new ArrayList&lt;&gt;(); // use List.of to add Arrays to collection List collection.addAll(List.of(Pet.pets())); collection.addAll(List.of(Car.cars())); // set Pet and Car to catalog ordering Pet.setOrder(Pet.KeyType.catalog); Car.setOrder(Car.KeyType.catalog); // Sort will order based on compareTo Collections.sort(collection); // Collectable object will output according to toString for (Collectable c : collection) { System.out.println(c); } } } CollectionExample.main(null); . Hacks . Build your own Collectable class(es), combine them, and sort them. .",
            "url": "http://localhost:4100/teacher_portfolio/2023/12/01/java_compareTo_IPYNB_2_.html",
            "relUrl": "/2023/12/01/java_compareTo_IPYNB_2_.html",
            "date": " • Dec 1, 2023"
        }
        
    
  
    
        ,"post32": {
            "title": "Java, SQL | HashMap | Collection",
            "content": "Lesson Ideas . Add to the basics of HasMap and HashSet below. Go over storing elements in SQL like HashMap and Collection. . Include SQL elements JSONB with HashMap | Include SQL ManyToMany relation with Collection | . Review addition materials like Roles and Activity Tracker https://nighthawkcoders.github.io/APCSA/1.b/2022/11/17/AP-frq2.html . Here are some SQL definitions in Person.java. . @ManyToMany(fetch = EAGER) private Collection&lt;PersonRole&gt; roles = new ArrayList&lt;&gt;(); /* HashMap is used to store JSON for daily &quot;stats&quot; &quot;stats&quot;: { &quot;2022-11-13&quot;: { &quot;calories&quot;: 2200, &quot;steps&quot;: 8000 } } */ @JdbcTypeCode(SqlTypes.JSON) @Column(columnDefinition = &quot;jsonb&quot;) private Map&lt;String,Map&lt;String, Object&gt;&gt; stats = new HashMap&lt;&gt;(); . HashMap . Below is an example using a HashMap and listed are some key things to consider when using this data structure. . Hashing: HashMap uses a hash function to map keys to their corresponding buckets. The hash function is used to compute the index of the array where the key-value pair should be stored. A good hash function should generate a unique hash code for each key, but collisions (i.e., two keys with the same hash code) can still occur. Hash map in Java does not maintain insertion order either by key or by the order inserted. . | Performance: HashMap provides constant-time performance (O(1)) for get() and put() operations, as long as the hash function is well-distributed and there are no hash collisions. However, in the worst case, the performance of a HashMap can degrade to O(n), where n is the number of elements in the map. . | Key and value types: HashMap allows any non-null object as a key, and any object (including null) as a value. However, to use a class as a key, it must implement the equals() and hashCode() methods. HashMap uses the equals() method to check if two keys are equal, and the hashCode() method to generate the hash code for the key. . | Iteration: HashMap provides several ways to iterate over the key-value pairs in the map, including using keySet(), values(), and entrySet(). The entrySet() method returns a Set view of the key-value pairs in the map, which can be used to iterate over the pairs and modify the map as you go. . | Thread safety: HashMap is not thread-safe, which means that if multiple threads access the same HashMap instance concurrently and at least one thread modifies the map structurally, the behavior is undefined. To make a HashMap thread-safe, you can use the ConcurrentHashMap class instead, which provides concurrent access and is designed for high concurrency. In a Full Stack project it would be best to use a NoSQL database to avoid concurrency issues. . | public class Pet { // Instance data private final String name; private final int age; private final String color; /* constructor * */ public Pet(String name, int age, String color) { this.name = name; this.age = age; this.color = color; } public String getName() { return this.name; } public int getAge() { return this.age; } public String getColor() { return this.color; } } . import java.util.HashMap; public class Pets { // create a new HashMap HashMap&lt;String, Pet&gt; names = new HashMap&lt;&gt;(); /* Add Pets * */ public Pets() { // add some key-value pairs to the HashMap names.put(&quot;Leo&quot;, new Pet(&quot;Lion&quot;, 8, &quot;Gold&quot;)); names.put(&quot;Porky&quot;, new Pet(&quot;Pig&quot;, 3, &quot;Pink&quot;)); names.put(&quot;Ro-Ro&quot;, new Pet(&quot;Robin&quot;, 7, &quot;Red&quot;)); names.put(&quot;Midnight&quot;, new Pet(&quot;Cat&quot;, 10, &quot;Black&quot;)); names.put(&quot;Hobbes&quot;, new Pet(&quot;Kitty&quot;, 1, &quot;Calico&quot;)); names.put(&quot;Duke&quot;, new Pet(&quot;Dog&quot;, 14, &quot;Brown&quot;)); } /* Remove Pet * */ public Pet remove(String key) { // check if a key exists in the HashMap then remove Pet pet = null; if (names.containsKey(key)) { pet = names.get(key); names.remove(key); } return pet; } /* Print Pets * */ public void print() { // iterate over the keys in the HashMap for (String name: names.keySet()) { Pet obj = names.get(name); System.out.println(name + &quot; is a &quot; + obj.getColor() + &quot; &quot; + obj.getName() + &quot; and is &quot; + obj.getAge() + &quot; years old.&quot;); } System.out.println(); } /* Tester Method * */ public static void main(String[] args) { // intialize Pets Pets pets = new Pets(); pets.print(); // remove a Pet String key = &quot;Hobbes&quot;; Pet pet = pets.remove(key); if (pet == null) { System.out.println(key + &quot; not found&quot;); } else { System.out.println(&quot;Removed: &quot; + key + &quot;, &quot; + pet); } pets.print(); } } Pets.main(null); . Hobbes is a Calico Kitty and is 1 years old. Leo is a Gold Lion and is 8 years old. Porky is a Pink Pig and is 3 years old. Ro-Ro is a Red Robin and is 7 years old. Duke is a Brown Dog and is 14 years old. Midnight is a Black Cat and is 10 years old. Removed: Hobbes, REPL.$JShell$34$Pet@5f7d8bd3 Leo is a Gold Lion and is 8 years old. Porky is a Pink Pig and is 3 years old. Ro-Ro is a Red Robin and is 7 years old. Duke is a Brown Dog and is 14 years old. Midnight is a Black Cat and is 10 years old. . HashSet . Below is an example using a java.util.Set and listed are some key things to consider when using this data structure. A Set works similarly to a key in a HashMap, a Set is just the Key. . No duplicates: A Set does not allow duplicate elements. If you try to add an element that already exists in the Set, the add() method will return false and the Set will not be modified. Duplicate add is shown in example. . | Unordered: A Set does not maintain the insertion order of elements. The order of elements in a Set may change as elements are added or removed. . | Equality: Two Sets are considered equal if they have the same elements, regardless of their order. The equals() method is used to test for Set equality. . | Implementation classes: Java provides several implementation classes for the Set interface, including HashSet, LinkedHashSet, and TreeSet. Each implementation has different performance characteristics and is optimized for different use cases. . | Iterator: The iterator() method can be used to iterate over the elements in a Set. The order in which elements are returned by the iterator is not defined and may change over time as elements are added or removed from the Set. The forEach() method is another way to iterate over the elements in a Set, and it allows you to pass a lambda expression to process each element in the Set. Lambda expression is shown in example. . | import java.util.HashSet; import java.util.Set; public class petset { public static void main(String[] args) { // create a new HashSet Set&lt;String&gt; pets = new HashSet&lt;&gt;(); // add some elements to the Set pets.add(&quot;lion&quot;); pets.add(&quot;dog&quot;); pets.add(&quot;cat&quot;); // print out the Set System.out.println(pets); // check if an element is in the Set boolean hasLion = pets.contains(&quot;lion&quot;); System.out.println(&quot;Has lion: &quot; + hasLion); // remove an element from the Set pets.remove(&quot;lion&quot;); System.out.println(&quot;Removed lion&quot;); // print out the Set System.out.println(pets); // add duplicate System.out.println(&quot;add duplicate dog&quot;); pets.add(&quot;dog&quot;); // no action System.out.println(pets); // add duplicate System.out.println(&quot;add pig&quot;); pets.add(&quot;pig&quot;); System.out.println(pets); // using forEach() method with a lambda expression pets.forEach(animal -&gt; { String message = &quot;I &quot;; // ternary operation for like, don&#39;t like message += animal.equals(&quot;dog&quot;) ? &quot;like&quot; : &quot;don&#39;t like&quot;; // complete sentance message += &quot; &quot; + animal + &quot;s &quot; + &quot;for pets&quot;; System.out.println(message); }); } } petset.main(null); . [cat, dog, lion] Has lion: true Removed lion [cat, dog] add duplicate dog [cat, dog] add pig [cat, dog, pig] I don&#39;t like cats for pets I like dogs for pets I don&#39;t like pigs for pets . Hacks . Build your own Hashmap and HashSet. .",
            "url": "http://localhost:4100/teacher_portfolio/2023/12/01/java_HashMap_IPYNB_2_.html",
            "relUrl": "/2023/12/01/java_HashMap_IPYNB_2_.html",
            "date": " • Dec 1, 2023"
        }
        
    
  
    
        ,"post33": {
            "title": "P5 Beneficial and harmful effects",
            "content": "CB Big Idea 5.1 Beneficial and Harmful Effects Student Lesson . Presented by Team WRONG . General Idea . Technology will always move forward with each innovation. These innovations have both upsides and downsides, and both are important to acknowledge and understand. Technology is designed with a purpose in mind but always has unintended effects as it is impossible to predict every single way an innovation will be used, so we have a responsiblity as consumers to use technology for its intended function and for the good of others and as programmers to guide the technology’s function to benefit others and to be clear on its purpose. Here, we will explain some common technological innovations that have greatly shaped our world and their beneficial and harmful impacts. . UAVs and Drones . UAVs (or unmanned aerial vehicles) are simply vehicles without a human pilot, crew, or passengers on board. The use of a UAV can be split into two categories; civillian and military. While civilian UAVs are used for package deliveries and recreation, military drones are used for scout missions and carrying out offensive strikes on enemy targets. . | Drones are vehicles without a human pilot, crew, or passengers and the term can be used synonymously with UAVs, however drones are usually remote controlled. UAVs may have autonomous abilities, while Drones do not, which means that all drones are UAVs, but not all UAVs are drones. Drones are much more commonly used than UAVs, and have uses such as construction, mining, inspection, emergency management, forestry, jounalism, law enforcement, etc. . | . . Benefits . Aids with military use, as stated previously, by transporting packages or conducting remote spy missions . | Can help with search and rescue missions, offering more flexibility with movement and speed, as well as the use of thermal cameras for detection . | Commonly used as a hobby, especially in movie or short-film aerial/cenimatic shots . | . Disadvantages . Technical: The drone’s reliability and communication via radio signals make it susceptible to signal interference, which could cause it to lose control and pose a safety hazard . | Safety concern: drones equipped with a camera can pose the risk of a disruption of privacy, if people used it with malicious intent and captured people without their permission . | Ethical: Rapid drone development could lead to regulatory issues, causing confusion and potentially legal issues. It is important to keep the balance of drone regulations to keep society calm when it comes to the privacy risk of using drones. . | . Artificial Intelligence and Machine Learning . Artifical Intelligence is the ability of a computer or robot to perform tasks usually associated with human intelletual processes. Put simply, that means a computer with the ability to think and reason through problems (or at least have the semblance of reasoning). Today’s most famous AI models - such as GPT-3.5, DALL-E, or Bard - are all LLMs (large lanuage models). An LLM works by using deep learning to perform natural language processing tasks on huge datasets. This allows them to mimic human intelligence at high speeds, making AI incredibly useful yet also incredibly threatening to human society. . AI can: Create pictures | Write essays | Make functional code | And much, much, more | . | AI development is currently at its fastest pace, especially with OpenAI’s GPTs release just a few weeks ago, and AI tools to help your life anywhere from summarizing lectures to planning your outfits are now all over the internet | . Benefits and Negatives . Because of AI’s immense capabilities, many worry the loss to human society will be greater than the gains it brings us. . BENEFITS: Increased Efficiency and Innovation: LLMs can automate tasks across various industries, freeing up human resources for more strategic and creative endeavors. This automation fosters innovation and accelerates productivity, contributing to overall economic growth. This means that human businesses can grow on a huge scale and people can accomplish more with less workers, allowing many projects to be completed effectively. | . | Global Communication and Language Translation: Since LLMs are great at language translation, they’re able to break down language barriers and strengthen communication on a global scale. This promotes international understanding, collaboration, and the exchange of ideas, fostering a more interconnected and globally aware society. Learning languages is made easier, as well as using them, allowing for a better global future. | . | . | HARMFUL EFFECTS: Job Displacement and Economic Inequality: While LLMs enhance efficiency, they likely will lead to major job displacement in sectors where routine language tasks are automated. For example, in the recent writers strike, one of the key points they agreed on was that AI could not be allowed to write scripts for movies. AI can contribute to economic inequality and require a shift in workforce skills. It’s essential we address these challenges and if we continue developing AI, we educate and retrain ourselves to work on better jobs | . | Privacy and Security Concerns: LLMs often require vast amounts of data for training, raising concerns about privacy. Inappropriately handled data may compromise individual privacy, leading to potential misuse or unauthorized access. The data we put into it is a big concern as well, due to the fact that AI only determines its thoughts by the information we feed it. If we feed it a source with lots of bias - like for example all of reddit - the responses we get back will be harmful and often socially unacceptable. | . | . | . Pros of Video Games as a Technological Advancement: . Entertainment and Recreation: Video games provide a diverse and immersive form of entertainment, offering a wide range of genres and experiences for players. . | Educational Value: Certain video games are designed to be educational, teaching players various skills, problem-solving, strategic thinking, and even historical or scientific knowledge. . | Social Interaction: Online multiplayer games facilitate social interaction and collaboration among players worldwide, fostering communities and friendships. . | Technology Advancement: The gaming industry drives technological innovation, leading to advancements in graphics, artificial intelligence, virtual reality, and other technologies that often have applications beyond gaming. . | Cognitive Benefits: Many video games require critical thinking, quick decision-making, and hand-eye coordination, contributing to cognitive skills development. . | Therapeutic Applications: Video games are being explored for therapeutic purposes, such as pain management, rehabilitation, and mental health treatments. . | . Cons of Video Games as a Technological Advancement: . Addiction and Excessive Screen Time: Excessive gaming can lead to addiction and may contribute to sedentary behavior, leading to health issues such as obesity and sleep disorders. . | Violence and Aggression: Some studies suggest a potential link between exposure to violent video games and increased aggression, although the relationship is complex and debated among researchers. . | Social Isolation: While online gaming provides a platform for social interaction, excessive gaming can lead to social isolation, with individuals preferring virtual relationships over real-world connections. . | Impact on Academic Performance: Spending too much time on video games may negatively impact academic performance, as it can interfere with study time and other responsibilities. . | Monetary Costs: Video games and gaming equipment can be expensive, and in-game purchases can lead to significant additional costs. . | Health Concerns: Prolonged gaming sessions may contribute to physical health issues, including eyestrain, musculoskeletal problems, and issues related to poor posture. . | . It’s essential to note that the impact of video games can vary based on factors such as content, duration of play, and individual differences. Moderation and responsible use are key considerations for reaping the benefits of video games while minimizing potential drawbacks. . Social Media . Overview . | Social media is a form of an online platform that allows for us to connect through the sharing of information and consumption of content amongst users. Social Media enables users to connect in real time through posts, videos, likes, and comments. It has transformed communication, provided a powerful way of personal expression, allowes for buisness promotion. However, it has also raised many concerns about privacy, cyber bulling, effecting dopamine, and addiction. . | . Benefits . Connectivity: Social Media has allowed for users all over the world to connect online. You can share information and learn about cultures from all over the world. You can connect with online firends or family and share information through posts and videos. It allows you to showcase your talents to the world and can help you express yourself. . | Information Sharing: Apps like youtube can help you learn through educational conntent. Social Media helps keep you up to date on trending topics going on in the world. It is often used when people are in need of recources or recomendations and can help people problem solve easily. . | Business: Social Media is a powerful tool people can use for marketing. It provides an easy way to promote your product and build brand awarness globally. It can help someone by sharing a newly released product quickly to people all over the world. . | . Overall, Social Media provides many benifits as it alows for people to connect all over the world and share information that can be used to provide enjoyment for a user or help someone educationally. It can help people build confidence and express themslevs and provide a way for people to promote their business or product to a wide audience. . Negatives . Privacy: Social Media has constant privacy problmes. People are concerned that certain apps are taking information from the users. Also, People face hacking problems where users can steal peoples information and use it against them. . | CyberBullying/ Mental Health: Online platforms are often used in bad ways by the users. It’s much easier to bully someone when you are not face to face with them. People get harrased and bullied which can lead to serious mental problems. People also compare themselves to others which can result in a lowered slef estyeem or even depression. . | Addiction: Social Media is extremely addictive as it causes peopel to release small amounts of dopamine which attracts a user to use their app. Featres like infinite scrolling can make it hard for people to get off thae app which may reult in people using certain apps for many hours at a time. . | . Overall, Social Media has plenty harmful effects that go with the good. People deal with privacy problems all the time and are concerned that their information may be stealed by a user or even by the app. Bullying is also very common as it is much easier online. People deal with depression and anxiety which may come from socia media. Lastly, Social Media is extremely addictive and it can mess with your overall dopamine levels. People get addicted to scrolling on Tiktok and it can take many hours of your day away. . Popcorn Hack . Check your phone’s screentime! How much time have you spent on social media? Were you conscious that you were spending that much time on it? How has it positively or negatively impacted you? | . Automated Telephone Trees . Automated telephone trees is a system where it can communicate using fixed voice menus with the caller, who can then respond by pressing buttons on the phone or by verbally responding. The system takes and interprets this input as information and can reroute calls, play another response, log information, and more. . One common example we all know is customer service. We call some business or place and are greeted with an automatic message asking us what we need help with –&gt; we press a button and the system takes that information and moves us to an actual person or another automated message. | An example of a phone tree is shown below: | . Beneficial effects: . 1: Lowers the workload on employees. A call center like customer service gets a massive number of calls all the time, and it is incredibly inefficient and borderline impossible to have every single person be immediately transferred to a human working at the service center. Furthermore, the person who picks up the call may not be in the department or qualified to deal with the issue. Automated phone trees can prompt the caller for a response (such as what type of issue they are having) and sort the calls so they can be transferred to qualified professionals, and some can even give an automated message with the instructions to fix the problem. As a result, automated phone trees greatly alleviate the burden on employees. | 2: Greater reliability. An automated phone tree does not require manual use, and thus it can accept calls 24/7. While it may not connect the caller to a human, there will (most often) always be an option to leave a voicemail, so later someone will contact you back. This guarantees that every call will be received and read. | . Harmful effects: . 1: Terrible at handling emergencies. Emergencies require instant attention and information relaying and automatic phone trees fundamentally require time, as it uses automatic messages, call queues, holds, transfers, and more until finally reaching a human. This creates many delays which can worsen the emergency. | 2: Customer dissatisfaction. The phone tree requires the caller to input information, and sometimes this can take a long time as they need to listen to the complete automated voice message, press 1 button, hear another message, press another button, and so on. This can annoy the caller and lead to them simply hanging up. Hold times can also sometimes be long and wait times are a big issue. Furthermore, if the phone tree is set up to have the caller verbally respond to a question, the phone tree might not be able to interpret their response, leading to further dissatisfaction. Lastly, the caller might need to repeat their situation multiple times over and over again and no one wants to do that as it is a waste of time. | . Homework . For each of the following technologies, please list 2 beneficial and 2 harmful effects and briefly explain. . Online shopping: | Cryptocurrency: | . Below are examples of a technological innovation and one impact. Classify them as beneficial or harmful and explain. Remember that effects are subjective and can be seen as beneficial or harmful depending on the purpose. There is no single “right” answer, so this is graded based on how clear your explanation is. . A relatively recent development in computers is quantum computing, where qubits are used as its unit of information. Taking advantage of quantum mechanics, quantum computers are much faster and more effective, at especially calculations, than regular supercomputers, which have implications in fields where there are many variables and unknowns. | January 1st, 1983 is considered the birthday of the Internet, and as you all can guess, the Internet connected all computer networks across the globe. | . Consider this hypothetical scenario. 15 years from now, Team WRONG is planning to launch a new virtual reality system to be streamline gaming and make the experience more immersive. The team has planned for the beneficial effects of attracting more people into gaming and helping people relieve their stress, and for the harmful effects of making the addiction issue worse. . What is one potential unintended effect and why can it lead to it? Is this effect beneficial or harmful and why? | .",
            "url": "http://localhost:4100/teacher_portfolio/2023/12/01/P5_Beneficial_and_Harmful_Effects_IPYNB_2_.html",
            "relUrl": "/2023/12/01/P5_Beneficial_and_Harmful_Effects_IPYNB_2_.html",
            "date": " • Dec 1, 2023"
        }
        
    
  
    
        ,"post34": {
            "title": "Big Idea 5.2 Digital Divide",
            "content": "Digital Divide . Deals with “To Have and Have Not” in relation to Computers, Internet, or Technology in general . Poorer or rural areas in America and other countries may have less or little access to Technology | Some countries may have different or restricted access, for instance China and USA may have divide in service allowed in their countries. | . Contributing factors to divide are socioeconomic (money), geographic (location), demographic (education, nationality, religion, and ethnicity) . Individual may have less access to latest updates, thus may be working on older generations of computers | Religious groups like the Amish choose not to use technology | San Diego county has regional distinction in many categories between Northern and Southern population, usually indicated by Interstate 8. | Sunnyvale CA has been know as technology hub of influence for the entirety of the United States. | . At the start of pandemic 90,000 school children in New Jersey did not have access to computers capable of distance learning . . In education equity requires school to provide materials like Computers or Chrome books. Here is some counter thinking . In our environment, Del Norte CS preference is that you have your own computer so that you can work away from school. | In our classroom, internet blockers at router and lack of admin password can make school computer less productive than personally owned computer. | Education is often concerned about cyberbullying, sexting, or student privacy. What do you think of investments being made in protection versus investments being made in technology education? Are digital fears expanding digital divide? | . Blog Post Reflection – Digital Empowerment . How does someone empower themself in a digital world? | How does someone that is empowered help someone that is not empowered? Describe something you could do at Del Norte HS. | Is paper or red tape blocking digital empowerment? Are there such barriers at Del Norte? Elsewhere? | .",
            "url": "http://localhost:4100/teacher_portfolio/5.c/2023/12/01/CSP-digital_divide.html",
            "relUrl": "/5.c/2023/12/01/CSP-digital_divide.html",
            "date": " • Dec 1, 2023"
        }
        
    
  
    
        ,"post35": {
            "title": "Big Idea 5.1 Beneficial and Harmful Effects",
            "content": "Key Highlights and questions from College Board Videos . . UAVs/Drones are used in search &amp; rescue, aerial photography, and for hobbies. However, there are many unintended usages. Also, there are many military usages. What do people think about drones? . | OpenAI and ChatGPT Google Disrupter, google needs to react | GitHub Copilot, real time code suggestion | Platform shift, money disrupter, revenue model for Google changes | Large amount of computer resources | Some schools are banning it | . | Dopamine plays a role in how we feel pleasure. Video games and Social media are shown to impact people chemically. However, statistically some people’s computer time may be greater than their sleep time. There are positives on games and social media. Name some? Here is something to think about and is related to the CB topic… At age 17, Anthony Rosner of London, England, was a hero in the World of Warcraft online gaming community. He built empires, led raids, and submerged himself in a fantasy world that seemingly fulfilled his every need. Meanwhile, his real life was virtually nonexistent. He neglected his schoolwork, relationships, health, even his hygiene. “I never saw my real friends. I gained weight, became lazy, and spent nearly all of my time slumped over my computer,” says Rosner, who played up to 18 hours a day, every day, for nearly two years. “When you become one of the top players in a game like World of Warcraft, tens of thousands of players are essentially under you, so you become like a virtual god” | For Rosner, gaming was detrimental. His grades suffered, he missed assignments, and he almost failed to complete his first year of college. After turning away from the game, Rosner found other sources of pleasure. He joined a gym, started DJing at his university, and became much more active socially. “I couldn’t believe what I had been missing,” he says. Ironically, World of Warcraft led Rosner to achieve his dream of making films. His documentary, IRL — In Real Life, chronicles his adventures and how he learned to break free from gaming. More than 1 million people worldwide have viewed his film, which can be seen on YouTube. It has been featured at film festivals, on TV, and in newspapers and magazines. | . | Automated telephone trees were designed to save employers money, but also reduce hold time for customers. Innovations in phone trees, voice recognition, or keypads often enables customers to find answers quickly. What are innovation you would like to see in phone tree? Will this phone tree transfer you to relevant department during office hours? Will it always enable you the opportunity for human response? | . Blog Post Reflection . Come up with three of your own Beneficial and corresponding Harmful Effects of Computing | Talk about dopamine issues above. Real? Parent conspiracy? Anything that is impacting your personal study and success in High School? |",
            "url": "http://localhost:4100/teacher_portfolio/5.c/2023/12/01/CSP-benefits_and_harm.html",
            "relUrl": "/5.c/2023/12/01/CSP-benefits_and_harm.html",
            "date": " • Dec 1, 2023"
        }
        
    
  
    
        ,"post36": {
            "title": "P5 Routing and Computing",
            "content": "Routing&amp;Computing .",
            "url": "http://localhost:4100/teacher_portfolio/2023/11/30/P5_Routing_And_Computing.html",
            "relUrl": "/2023/11/30/P5_Routing_And_Computing.html",
            "date": " • Nov 30, 2023"
        }
        
    
  
    
        ,"post37": {
            "title": "P1 Fault Tolerance & Parallel and Distributed Computing",
            "content": "Fault Tolerance . Fault Tolerance: The ability of a system to continue to operate properly and without interruption if one or more of its components were to fail. . There are a few factors you need to confirm to decide if a system is fault tolerant or not. Think of each device/point as a pool, and the lines as pipes. . If you were to pour water into any pool, can the other pools access the water? (can data be accessed from all points?) . | If one pipe were to be cut, can the other pools still access the water? (If a path fails, can data be accessed from all points?) . | If one pool is removed, can the other pools still access water from eachother? (If one device fails, can the other points receive data?) . | . If to answer to all of these are “Yes,” then the system is Fault Tolerant. . Redundancy: Fault Tolerant networks typically have extra components and pathways to ensure reliability, making them have redundancy. . “Essential Knowledges” from College Board . The Internet has been engineered to be fault-tolerant, with abstractions for routing and transmitting data. . | Redundancy is the inclusion of extra components that can be used to mitigate failure of a system if other components fail. . | One way to accomplish network redunadancy is by having more than one path between any to connected devices. . | If a particular device or connection on the Internet fails, subsequent data will be sent via a different route if it’s possible to reach that. . | Redundancy within a system often requires additional resources but can provide the benefit of fault tolerance. . | The redundancy of routing options between 2 points increases the reliability of the Internet and helps it scale to the more devices and more people. . | . Examples: . . The network above is not fault tolerant because if one path stops working, data cannot be accessed by further devices. | . . The network above is fault tolerant since if one path stops working, you are still able to communicate with all the other devices on the network. | . . The network above is also fault tolerant due to the same reasons as the previous example. The network is much more redundant, meaning it is more Fault Tolerant. However, it will require more resources. more components = more expensive. | . Popcorn Hack #1 (True or False) . . Identify if the network above is Fault Tolerant or not, and why. | . Answer here: . What are the benefits of having a Fault Tolerant Network? . Data has more than one path to travel from one device to another. . | If part of the network fails, the network can still function by using other paths. . | More devices creates more connections and makes the network stronger. . | . . Popcorn Hack #2 (Multiple Choice) . . Is this network above Fault Tolerant? If not, what changes can you make that can make this a fault tolerant network? . - A: connection from *A &gt; B* - B: connection from *B &gt; D* - C: connection from *E &gt; F* - D: connection from *B &gt; C* . Answer here: . Parallel and Distributed Computing . Computer Tasks: All of the tasks that are operated on the computer has to be handled by the computer. These tasks are scheduled by the operating system. . System tasks: Tasks that are done for the operating system, such as managing hardware, network configuration, file management, and security tasks. . | User tasks: Tasks that the user themself has selected, such as running a search engine, opening a video game, and running MS paint. . | . Because computers have many tasks to manage, they need to balance the tasks so all CPUs are being utilized evenly and fully. . Sequential Computing: Tasks are done one after the other; operations are performed one at a time. . Not efficient. A computer would use sequential computing if its hardware is limited, or if the tasks requested are dependent on eachother. . | Useful because it requires less resources and is easier to manage, and has a lower chance of error compared to parallel computing. . | Takes long for computer to execute all tasks. If Task X takes 30 ms, Y takes 40 ms, and Z 20 ms, and the order executed is X-Y-Z, then the total processing time is 90 ms. . | . Parallel Computing: tasks are done simultaneously. . . Hardware Driven: newer hardwares have several processers in one system called cores. One CPU can have 64+ cores. This speeds up the processing time greatly. . | Faster Operations: links CPUs together to work the same problem. . | Data Driven: Data can be processed the same way called Single Instruction Multiple Data. . | Processing time is the longest time taken for the procressors. Example Core 1 takes 50 ms, Core 2 100 ms, Core 3 10 ms, total time taken is 100 ms. This is why parallel processing works best when tasks are independent from eachother. . | . Speedup Time: The speedup of a parallel solution is measured in the time it takes to complete the task sequentially divided by the time it takes to complete the task in parallel. Example Sequential time is 120 ms, parallel time is 60 ms, speedup time is 2 ms . Distributed Computing: sending of tasks from one computer to another; multiple devices are used to run a program. Requires a network. . . Can mix sequential and parallel computing, based on how it sends out tasks to other computers to work. . | Allows problems to be solved that aren’t possible on a single computer due to storage limitations and processing time. . | . For example, when you search something up on google, Google sends the request to thousands of servers in the backround for your answers. . Web Services: Standards on how computers can ask for tast execution over the web, including protocols . Beowolf Clusters: special software grouping different computers together . Essential Knowledges from College Board: . Sequential computing is a computational model in which operations are performed in order one at a time. . | Parallel computing is a computational moder where the program is broken into multiple smaller sequential computing operations, some of which are performed simultaneously. . | Distributed computing is a computational model in which multiple devices are used to run a program. . | Comparing efficiency of solutions can be done by comparing the time it takes them to perform the same task. . | A sequential solution takes as longas the sum of all its steps. . | A parallel computing solution takes as long as its sequential tasks plus the longest of its parallel tasks. . | The “speedup” of a parallel solution is measured in the time it took to complete the task sequentially divided by the time it took to complete the task when done in parallel. . | Parallel computing consists of a parallel portion and a sequential portion. . | Solutions that use parallel computing can scale more effectively than solutions that use sequential computing. . | Distributed computing allows problems to be sovled that ould not be solved in a single computer because of either the processing time or the stroage needs involved. . | Distributed computing allows much larger problems to be solved quicker than they could be solved using a single computer. . | When increasing the use of parallel computing in a solution, the efficiency of the solution is still limited by the sequential portion. This means that at some point, adding parallel portions will no longer meaningfully increase efficiency. . | . Popcorn Hack #3 . Explain the difference between Sequential, Parallel, and Distributive computing in 1-2 sentences. Try to not look at answers above, and put it in your own words. . HOMEWORK . Fault Tolerance: . Make two data flowcharts like the examples above, you can use MS paint, canva, any design website. Make one Fault Tolerant and one not fault tolerant, and explain what needs to be changed to the flowchart in order to make the network fault tolerant. Doing these will get you over a .90: . Neat design, easy to understand | real network examples; don’t label each point as A-B-C etc. | . Parallel and Distributed Computing: . First make a simple code that runs sequentially, for example loops ten times before stopping. | Then make code that completes the same job quicker by running parallel. | .",
            "url": "http://localhost:4100/teacher_portfolio/2023/11/30/P1_Routing_Computing_IPYNB_2_.html",
            "relUrl": "/2023/11/30/P1_Routing_Computing_IPYNB_2_.html",
            "date": " • Nov 30, 2023"
        }
        
    
  
    
        ,"post38": {
            "title": "P4 Digital Divide",
            "content": "College Board Concepts . 1.C.1: Internet access varies between three main groups: demographic, socioeconomic, and geographic categories; as well as countries . 1.C.2: “Digital Divide” refers to differing access to computing devices and the Internet based on the three groups stated above . Demographics include age, religion, race, etc . Some countries: Computers not common rurally Only small number of websites, also those that are permitted by govt . Internet is used to protect and advocate the government . High level of internet surveillance . 1.C.3: Can affect multiple groups and also individual . 1.C.4: Raises questions about issues of equity, access, and influence both globally and locally . 1.C.5: Digital divide is affected by the actions of individuals, organizations, and governments Discuss positive solutions to digital divide . . Team Teach: Digital Divide . Introduction . Welcome to today’s lesson on the digital divide! We’ll explore how disparities in technology access impact individuals and societies, and what can be done to bridge these gaps. . Digital Divide . Digital Divide Definied: The digital divide refers to the gap between individuals, communities, or countries that have access to modern information and communication technology (ICT) and those that do not. This divide can manifest in various forms, including differences in access to the internet, availability of computers and other digital devices, and the ability to use and benefit from digital resources. . The divide exists in two main dimensions: access and usage . Access involves the availability of internet and devices, while usage looks at how people utilize technology. Both dimensions contribute to the overall digital inequality. . Internet access varies between three main groups: demographic, socioeconomic, and geographic categories; as well as countries. . . Demographic . Demographics include age, race, religion, etc. These different groups have different access to CS and technology. . Examples of disparities: . Economic disparities: Individuals without access to digital technologies may find it challenging to participate in the modern economy, access online job markets, or acquire the digital skills needed for high-demand professions. This can lead to a perpetuation of existing socioeconomic gaps and hinder social mobility. . Educatioinal disparities: Students without access to these resources may fall behind in terms of academic achievement and miss out on the benefits of interactive and technology-enhanced learning experiences. . Geographical disparities: Rural and remote areas may lack the necessary digital infrastructure, leading to limited access to broadband internet and advanced technologies. This can result in isolation from economic opportunities, education, and healthcare services available online. . Elderly disparities: Older individuals may experience challenges in adopting and adapting to new digital technologies. The lack of digital literacy among the elderly can lead to social isolation, limited access to healthcare information, and difficulties in participating in online activities. . Socioeconomic . The digital divide is often linked to broader socioeconomic disparities. Individuals with higher incomes and better educational backgrounds may be more likely to have access to and utilize digital technologies compared to those with lower socioeconomic status. . In easy terms... an example would be that Higher-income individuals have more accessibility to the newest tech which lets them access technology before other people. . Popular Socioeconomic Issues: . . Innovation Gaps . Issue: . Access to digital technologies is a key driver of innovation. Communities and nations that lack access to advanced digital infrastructure may miss out on opportunities for technological advancements and innovation. This contributes to a widening gap between technologically advanced and less developed regions, impacting economic growth. . Productivity Losses: . Issue: . Businesses and workers with limited access to digital tools may experience lower productivity compared to their digitally connected counterparts. This is particularly relevant in industries where digital technologies enhance efficiency, collaboration, and innovation. . Digital Skills Gap: . Issue: . The digital divide contributes to a digital skills gap, where a portion of the population lacks the skills necessary for contemporary workplaces. This gap can hinder workforce productivity, limit employability, and reduce the overall competitiveness of a nation’s workforce. . Reduced Access to Financial Services: . Issue: . Digital technologies have revolutionized financial services, offering convenient and accessible banking solutions. However, individuals without digital access may struggle to access basic financial services, hindering their ability to save, invest, and participate fully in the financial system. . Global Competitiveness Impact: . Issue: . Nations that do not address the digital divide may find themselves at a disadvantage in the global marketplace. A lack of digital infrastructure and skills can impede a country’s competitiveness in industries driven by technology and innovation. . Geographic . Geographic issues play a significant role in the digital divide, contributing to disparities in digital access and connectivity across different regions. Here are key points to consider when discussing the geographic aspects of the digital divide: . . Rural-Urban Disparities: . One of the prominent geographic issues in the digital divide is the disparity between rural and urban areas. Urban centers often have better digital infrastructure, including high-speed internet and access to advanced technologies, while rural areas may lack these resources. This urban-rural gap hinders equal participation in the digital economy and limits access to online educational and healthcare resources in rural communities. . Limited Infrastructure in Remote Areas: . Remote and isolated areas face challenges in establishing and maintaining digital infrastructure. Building the necessary broadband networks and technology infrastructure in these areas can be cost-prohibitive, leading to limited or no access to high-speed internet and digital services. . Geographical Barriers to Education: . The digital divide impacts educational opportunities based on geography. Students in rural areas may face challenges accessing online learning resources, participating in virtual classrooms, and benefitting from digital educational tools. This creates a knowledge gap between students in urban and rural settings. . Economic Opportunities and Innovation Gaps: . Geographic differences in digital access contribute to disparities in economic opportunities and innovation. Urban centers with robust digital infrastructure are better positioned to attract businesses, foster innovation, and participate in the digital economy, while rural areas may face economic stagnation due to limited connectivity. . Emergency and Disaster Response Limitations: . In times of emergencies or natural disasters, areas with limited digital infrastructure face challenges in communication, coordination, and access to critical information. This can hamper emergency response efforts and exacerbate the impact of disasters on communities. . Global Connectivity Challenges: . On a global scale, some regions face challenges in connecting to the broader internet. Developing countries, especially those in remote or isolated regions, may lack the necessary infrastructure to participate fully in the global digital landscape, impacting economic development and global competitiveness. . . Popcorn Hack . How would you attempt to fix the digital divide or prevent it from being as prevalent in our community? What are some things that are already being done? what are some things we can add? . Example Answer . Public libraries are places that help prevent the digital divide in our communities. They offer free internet and technology for those who have limited access. . YOUR answer . Answer: . . Harmful Impacts of the Digital Divide . The impact is widespread, affecting education, employment, and social participation. For instance, the ‘homework gap’ highlights how students without internet access face challenges in completing assignments and accessing educational resources. . Governments, the private sector, and communities play pivotal roles in addressing the digital divide. Initiatives such as broadband expansion and digital literacy programs are crucial steps toward creating a more inclusive digital society. . A seen change: Schools are relying more on technology because the inability to access tech forces underprivileged students to fall behind . Disparities in the availability of content and services online can contribute to the digital divide. Some communities may have limited access to educational resources, job opportunities, or other online services that are crucial for personal and professional development. . Common Negative Effect: The wealthy and those with access to Internet are the ones who can use it. Since tech gives space for many platforms we don’t hear from those who don’t have access to it. . Ethical Impacts . - Internet is used to protect and advocate the government - High level of internet surveillance - Can affect multiple groups and also individual - Raises questions about issues of equity, access, and influence both globally and locally . Educational Impact . - Students especially through the pandemic relied on technology to learn - Those without technology were forced to fall behind - Those who weren’t connected suffered . Employment Opportunities . - Those without tech cannot easily find jobs - Stable internet is an important factor for employees . Conclusion . In conclusion, addressing the digital divide is crucial for creating a more equitable society. By understanding its dimensions, causes, and potential solutions, we can work towards a future where everyone has equal access to the opportunities provided by digital technologies. . Reducing the Digital Divide . Organizations provide funding to give tech to those who can’t afford it and also reach out to teach people how to use technology . Links: . Federal Communications Commission (FCC): https://www.fcc.gov/ . EveryoneOn: https://www.everyoneon.org/ . Code.org: https://www.everyoneon.org/ . Digital Promise: https://www.everyoneon.org/ . . HOMEWORK . Question 1: What is the digital divide? . a) A gap between old and new technologies . b) The difference in internet speed between urban and rural areas . c) The gap between those who have access to modern information and communication technology and those who do not . d) The disparity in smartphone ownership . Question 2: Which of the following factors contributes to the digital divide? . a) Economic status . b) Geographic location . c) Educational background . d) All of the above . Question 3: What is the term for the lack of access to affordable, reliable internet in certain areas? . a) Bandwidth divide . b) Connectivity gap . c) Net neutrality . d) Broadband barrier . Question 4: Which demographic group is often disproportionately affected by the digital divide? . a) Seniors . b) Teenagers . c) College students . d) Middle-aged adults . Question 5: What does the term &quot;information poverty&quot; refer to in the context of the digital divide? . a) Lack of access to relevant and timely information . b) Too much information available . c) Lack of interest in information . d) Overreliance on traditional media . Question 6: Which organization plays a crucial role in addressing the global digital divide? . a) UNESCO . b) FIFA . c) WHO . d) Greenpeace . Question 7: In addition to access, what is another dimension of the digital divide? . a) Technological literacy . b) Social media popularity . c) Smartphone brand preference . d) Online gaming skills . Question 8: What term describes the use of technology to bridge the digital divide by providing internet access to underserved areas? . a) Digital inclusion . b) Cybernetic equality . c) Virtual unity . d) Tech assimilation . Question 9: Which region is often cited as having a significant digital divide due to disparities in infrastructure and economic development? . a) North America . b) Europe . c) Sub-Saharan Africa . d) Asia-Pacific . Question 10: What are some potential consequences of the digital divide? . a) Limited access to educational resources . b) Restricted economic opportunities . c) Reduced civic participation . d) All of the above . . Instructions for Homework . After you record your answers in this cell, take a screen shot and DM it on Slack to Arushi Pandey &amp; Ananya Asudani (in one message). There will be a penalty of 5% off your grade for each day the assignment is late. The homework will be due Monday December 11th at 11:59 PM. . Answers . Answer questions below with solely the letter name! Make sure to have your popcorn hack completed as well. . - [] Question 1 - [] Question 2 - [] Question 3 - [] Question 4 - [] Question 5 - [] Question 6 - [] Question 7 - [] Question 8 - [] Question 9 - [] Question 10 .",
            "url": "http://localhost:4100/teacher_portfolio/2023/11/28/P4_Digital_Divide_IPYNB_2_.html",
            "relUrl": "/2023/11/28/P4_Digital_Divide_IPYNB_2_.html",
            "date": " • Nov 28, 2023"
        }
        
    
  
    
        ,"post39": {
            "title": "Selection / Local Storage",
            "content": "Player Selection Screen . Make a lesson and code around Parallax. Integrate ideas so they can be adapted by Teacher project. . Pick your Player. Look into a technique to change player froom default Mario sprite to alternate Sprite. Save the Player to personal settings. . Sprite Selection . Create a sprite selection screen where players can choose their character. | Save the selected sprite in local storage for continuity. Customizable Controls | . Other Settings Add setting or controls to game . Allow player to alter game speed | Allow players to define or redefine key mappings for movements (like arrow keys, spacebar) | . Google ideas Platformer controls .",
            "url": "http://localhost:4100/teacher_portfolio/2023/11/28/CSSE-selection.html",
            "relUrl": "/2023/11/28/CSSE-selection.html",
            "date": " • Nov 28, 2023"
        }
        
    
  
    
        ,"post40": {
            "title": "Parallax / Scrolling",
            "content": "Parallax and Scrolling Effects . Make a lesson and code around Parallax. Integrate ideas so they can be adapted by Teacher project. Add elements to improve transitions screens and backgrounds. Below are a couple of ideas, but there should be many more. . Use a transition effect to smoothly move from the start screen to the game screen, etc. . | Overlaying Backgrounds Implement a dual-layered background system where the primary background is static, and a passive background moves to create a parallax effect. | Adjust the opacity or blending mode to avoid shadows of screen moving over screen. | . | Association with Character Movement Trigger the scrolling screen movement when the player reaches a specific x-coordinate. | Synchronize the screen scrolling speed with the player’s movement speed. | Consider incorporating easing functions for a smoother scrolling effect. | . | . Resources . Quick Google . What is a parallax effect . 17 unique websites with parallax scrolling effects .",
            "url": "http://localhost:4100/teacher_portfolio/2023/11/28/CSSE-scrolling.html",
            "relUrl": "/2023/11/28/CSSE-scrolling.html",
            "date": " • Nov 28, 2023"
        }
        
    
  
    
        ,"post41": {
            "title": "Platforms",
            "content": "Spawning and Synchronization . Make a lesson and code around jumping onto platforms. Integrate ideas so they can be adapted by Teacher project. . Provided in code is the beginning of a tube obstacle. This is a new GameObject class. Review logic to detect when the player interacts with the obstacle. This ultimately triggers a Callback that ends the level. . Introduce platforms for jumping and avoiding enemies. Obtain coins and scoring points. . Resources . ptatformer spawing platforms .",
            "url": "http://localhost:4100/teacher_portfolio/2023/11/28/CSSE-platforms.html",
            "relUrl": "/2023/11/28/CSSE-platforms.html",
            "date": " • Nov 28, 2023"
        }
        
    
  
    
        ,"post42": {
            "title": "Leaderboard",
            "content": "Player Selection Screens . Make a lesson and code around a leaderboard. Integrate ideas so they can be adapted by Teacher project. . Start a leaderboard on start and gameover screen. Use localstorage to record game play sessions, automatically at first. Time and points by level could be used as stats. . Leaderboard Integration Create a leaderboard system that records time and points for each game session. . Allow players to review and filter the leaderboard. . Start Screen Add features to start screen(s) to allow things like … . Leaderboard and Statistics | Provide an option to reset or clear statistics | . Gameover Navigation Options . Add name or initials and score to leaderboard | . Google ideas Platformer leaderboard .",
            "url": "http://localhost:4100/teacher_portfolio/2023/11/28/CSSE-leaderboard.html",
            "relUrl": "/2023/11/28/CSSE-leaderboard.html",
            "date": " • Nov 28, 2023"
        }
        
    
  
    
        ,"post43": {
            "title": "Enemies",
            "content": "Spawning and Synchronization . Make a lesson and code around Enemies and Obstacles. Integrate ideas so they can be adapted by Teacher project. . Provided in code is the beginning of a tube obstacle. This is a new GameObject class. Review logic to detect when the player interacts with the obstacle. This ultimately triggers a Callback that ends the level. . NPC Characters shoud extend Character Introduce new NPC GameObject class for Goombas. Implement game logic for NPC movement and collision with the player. . Collision Detection: . Implement collision detection between the player and enemies. Assign points based on successful interactions, considering the type of interaction (e.g., jumping on a Goomba versus colliding with a Gomba). | . Google searches . Super Mario Glitches Spawning and Synchronization .",
            "url": "http://localhost:4100/teacher_portfolio/2023/11/28/CSSE-enemies.html",
            "relUrl": "/2023/11/28/CSSE-enemies.html",
            "date": " • Nov 28, 2023"
        }
        
    
  
    
        ,"post44": {
            "title": "Animation Transitions",
            "content": "Player Animation Improvements . Make a lesson and code around Parallax. Integrate ideas so they can be adapted by Teacher project. . Improve animations and movements of player. . Idle Animation, idle(). Add an idle animation that plays when the player is not moving. Include subtle movements to make the character appear more dynamic. | Transitioning Movement, moveLeft() and moveRight() | . | Gradually transition from walking to running animations based on the duration of key presses. Implement a deceleration effect when the player stops moving. | . | Attack Animation attack(). Create an attack animation/scene that plays when the player interacts with enemies. Implement logic to avoid enemy kills through proper timing of attacks. | . | . Google search Platformer transition animation .",
            "url": "http://localhost:4100/teacher_portfolio/2023/11/28/CSSE-animation.html",
            "relUrl": "/2023/11/28/CSSE-animation.html",
            "date": " • Nov 28, 2023"
        }
        
    
  
    
        ,"post45": {
            "title": "RPG elements",
            "content": "API screens . Make a lesson and code around and RPG related game elements. Integrate ideas so they can be adapted by Teacher project, perhas as a different level(s). . Ideally, some interactions would be added to platformer game. Or, there could be a new level to game that is more RPG like. . Resources . Platformers with RPG elements .",
            "url": "http://localhost:4100/teacher_portfolio/2023/11/28/CSSE-RPG.html",
            "relUrl": "/2023/11/28/CSSE-RPG.html",
            "date": " • Nov 28, 2023"
        }
        
    
  
    
        ,"post46": {
            "title": "APIs",
            "content": "API screens . Make a lesson and code around APIs related to games like Mario. Integrate ideas so they can be adapted by Teacher project. Add an API to make Game content more interesting. . iTunes API example . | Add API to impact game design . Implement an API to the game | Implement an API to select player or object | . | . Resources . Quick Google . RAWG APIs . Search for Mario . Franchise Data .",
            "url": "http://localhost:4100/teacher_portfolio/2023/11/28/CSSE-API.html",
            "relUrl": "/2023/11/28/CSSE-API.html",
            "date": " • Nov 28, 2023"
        }
        
    
  
    
        ,"post47": {
            "title": "Java, Security | JWT",
            "content": "The Code . JWT | SecurityConfig | . Simple Explanation of each java file . A majority of the code was taken from https://www.javainuse.com/spring/boot-jwt. The new dependencies we need is in this Commit. This site provided the basic code needed to generate a jwt token and how we would configure the backend to require authorization when accessing a page. (Commit1 &amp; Commit2). . JwtTokenUtil.java, just like its name, contains utilities/functions that is needed to generate JWT tokens and get information like the email from the JWT tokens which is needed for making sure the JWT token is valid. . JWTUserDetailsService.java implements the Spring Security UserDetailsService interface and overrides the loadUserByUsername so we can later get user details from the database using the username. . The name JwtAuthenticationController.java on the article was changed to JwtApiController.java to fit the already existing API controllers and this creates an API endpoint of /authenticate which validates that the given email and password in the body is validate and then generates a JWT token for the credentials if it was valid. . We did not need the JwtRequest.java because it is used to store each user as an object and that is the Person class we’ve already coded. We also do not need JwtResponse.java. . The JwtRequestFilter.java extends the Spring Web Filter OncePerRequestFilter class and overrides the doFilterInternal function so each request sent to the server is processed through the function. The function checks if the JWT token is valid and sets the Authentication in the context to specify that the current user is authenticated. . JwtAuthenticationEntryPoint.java implements AuthenticationEntryPoint and overrides the commence function to specify what to do when a user was not authenticated, which is to return an unauthorized error. . WebSecurityConfig.java is our existing SecurityConfig.java. It extends WebSecurityConfigurerAdapter and overrides configure to allow /authenticate to not need the request be authenticated because /authenticate is where you generate the JWT token is get authenticated, add the jwtRequestFilter.java filter to validate the token with every request, and configure other features of web security like a stateless session. This can also be used to allow specific roles when that is configured (as seen in last year’s csa project). . Bigger changes differing from the article . JWTUserDetailsService.java was changed from the article because we already have a database storing users while the article hardcoded a user and password because it did not. . In the article, it assumed that our passwords stored inside the database was already encrypted using bcrypt, therefore, we have to configure /post to encrypt the passwords when adding users (Commit). . Since the article coded for /authenticate to return the JWT token inside its body, the frontend would have to take the JWT token and configure it into the browser. This would be susceptible to Cross Site Scripting Attacks. We can avoid forcing the frontend’s javascript to set the cookie by coding for /authenticate api’s response to automatically set the browser’s cookies with the JWT token using the Set-Cookie header. For this part, I followed along with https://reflectoring.io/spring-boot-cookies/ and made some changes to JwtApiController.java. Now the request sent by the browser would contain the JWT token using a HttpOnly cookie, so we have to code JwtRequestFilter.java so it gets the JWT token from the request’s Cookie header instead of its Authorization header (Commit). . Testing . Postman Testing . Using the existing account’s credentials test2@gmail.com and test2 to generate JWT Token through /authenticate. . Trying to access /api/person/ without jwt token stored in Cookies . Trying to access /api/person/ with a wrong jwt token stored in Cookies . Trying to access /api/person/ with a jwt token that does not have the signature . Accessing /api/person/ with generated jwt token stored in Cookies header . Testing the use of cookies in Chrome console . At first, when you access http://localhost:8085/, it will return a 401 Unauthorized error because you do not have a jwt cookie. We can use Chrome console with fetch to model what a frontend would do, set data = {email:&quot;toby@gmail.com&quot;, password:&quot;123Toby!&quot;}; then fetch(&quot;http://localhost:8085/authenticate&quot;, {method: &#39;POST&#39;, headers: {&#39;Content-Type&#39;: &#39;application/json&#39;}, body: JSON.stringify(data)});: Notice how we have a jwt cookie now Reload and http://localhost:8085/ should load without 401 error . Changes . There have been some changes like the implementation of UserDetailsService and dependency upgrades to the code above. . Upgrade to Spring from 2.4 to 3.1 .",
            "url": "http://localhost:4100/teacher_portfolio/c7.0/2023/11/27/jwt-java-spring.html",
            "relUrl": "/c7.0/2023/11/27/jwt-java-spring.html",
            "date": " • Nov 27, 2023"
        }
        
    
  
    
        ,"post48": {
            "title": "Java, Exploits | CORS | DotEnv",
            "content": "Ideas . Using two or more systems in computing requires addition security. . CORS MVC Config | Nginx Config | . | . Using external APIs requires managing access tokens on server, without putting these tokens into GitHub. . DotEnv Managing Secret Keys | Storing key on localhost and AWS server | . | . Below is article that talks about attacks. . Overview . Making a website is fun and all but if you aren’t careful, it may be vulnerable to exploits. Why should you care? Because many of your user’s important info like name, email, and dob may be leaked. Accidently leaking info can make people to stray away from using your website. Let’s try to not let that happen. . Basic Knowledge . HTTP: a communication protocol to deliver data over the internet . The client makes a request (ex: POST, GET), server consults database and returns an output | . Database: collection of information that is organized, where the server can quickly query data and add/delete data . SQL is the language used for managing these databases (which are made up of tables each with data) | Databases store data in the website, such as passwords or FLAGS | SQL syntax: SELECT * FROM table_name | . | Selects all data from specific table (this can be exploited) | . Proxy: a server that redirects your browsing activity before accessing the web . The web request first gets sent to the proxy and then to the web instead of straight to the web, masking IP address | Also provides a way to edit the request before it leaves (BURP SUITE) | . Types of Basic Web Insecurities . Being an idiot and having sensitive info on html or js . Hardcoded Credentials: Storing usernames, passwords, API keys, or other sensitive credentials directly in the source code . | Client-Side Storage: Storing sensitive data in client-side storage mechanisms like cookies, local storage, or session storage without proper encryption or security controls is risky. Attackers can manipulate or extract this data using techniques like cross-site scripting (XSS) attacks. . | Sensitive info in JS: Including sensitive information within inline JavaScript code can expose it to attackers. Inline scripts can be easily viewed or modified by anyone with access to the page source. . | . Simple fixes (common sense) . Not having important stuff on HTML (encoding it in a cipher doesn’t fix) . | Proper encryption and configuration of JWT cookies . | Not having sensitive info in JS (don’t like console.log a cred and stuff duh) . | . Big Boy exploits . SQL Injection . Before you read anything about SQL Injection, make sure you understand everything in the “Basic Knowledge” section . Definition . SQL injection is a type of web application vulnerability that occurs when an attacker maliciously inserts or “injects” unauthorized SQL code into a database query. It takes advantage of improper handling of user-supplied input, typically in a web application that interacts with a database using SQL queries. . Confused? Here is an example: . Example . Let’s say you want to buy a gift on Amazon and go to this link https://amazon.com/products?category=Gifts . This causes the SQL query to retrieve details from the database . SELECT * FROM products WHERE category = ‘Gifts’ AND released = 1 . Where . “*” = everything | Products = table name | The restricts are that the category is ‘Gifts’ and released is equal to 1 (in this example this means the gift is released) | . Now what if we want to get stuff from the database that isn’t released? How would we bypass the “released=1”? . This is where SQL injection comes into play! Before we tackle how to do it, let’s go over some syntax . Syntax . Two dashes (- -) is an SQL comment | ” |   | ” is concatenate | . | SELECT * FROM users WHERE username = ‘william’ AND password = ‘Password1!’ Stuff between single quotes are strings | Everything else is an SQL query | . | . IMPORTANT . A single quote (‘) helps you break out of a string and write more SQL query! | “AND” statement always runs before “OR” statement | . Now we are getting into the good stuff . How the attack works . Remember that a login page uses a sql query to search the db if the user and password entered is correct. Remember this syntax: SELECT * FROM users WHERE username = ‘william’ AND password = ‘Password1!’ Whatever you enter into the login page will be set as “username” and “password”. My syntax examples has username as ‘william’ and password as ‘Password1!’. Notice how they are between single quotes. Anything between quotes is a string and everything outside of it is a SQL query. . But what if you enter a single quote ‘ into the login page? Then you will break out of the string and be able to run SQL queries! This is the basis of the two payloads below: . OR Payload: Having an OR statement that is always true | . Let’s say we enter admin’ OR ‘1’=’1’ for the username field. Then our sql query will look like this: SELECT * FROM users WHERE username = ‘admin’’ OR ‘1’=’1’ AND password = ‘Password1!’ . Now remember how a single quote ‘ will break out of a string and run sql query commands. We are basically running OR ‘1’=’1’ which will obviously always evaulate as true. And since a OR statement will be true if one side of the argument is true, we basically bypass both the username and the password. Thus both fields could be incorrect but we would still be able to login! . Comment Payload: Commenting parts of the query in order to bypass stuff | . Remember how two dashes (–) is an SQL comment? Well we can abuse this to bypass some info. . For example, we can bypass the password by inputting admin’– in the username box. The sql query would be: SELECT * FROM users WHERE username = ‘admin’’– AND password = ‘Password1!’ . This will lead to the AND password section not being executed. Thus we don’t need to input the correct password in order to login. In fact, we don’t even need to input a username as sql validates it as an empty string and the whole expression would take the first user. So uh you won’t need to have either info. . How to protect . Learning how the exploits are cool and all but the whole point of this blog is to learn how to protect your website. Here is one way you can protect against sql injections . Use of Prepared Statements (with Parameterized Queries) . Instead of directly embedding user-supplied data in SQL queries, prepared statements use placeholders for the input data. The SQL statement and the input data are sent separately to the database, preventing malicious input from altering the structure of the query. | . Here’s an example of not protected code: . import java.sql.*; public class DatabaseExample { // Assuming you have established a database connection // Without any protection measures public static void createUser(String username, String password) { String sql = &quot;INSERT INTO users (username, password) VALUES (&#39;&quot; + username + &quot;&#39;, &#39;&quot; + password + &quot;&#39;)&quot;; try (Connection connection = DriverManager.getConnection(&quot;jdbc:mysql://localhost:3306/db_name&quot;, &quot;username&quot;, &quot;password&quot;); Statement statement = connection.createStatement()) { statement.executeUpdate(sql); } catch (SQLException e) { e.printStackTrace(); } } public static void main(String[] args) { // Example usage String username = &quot;john&quot;; String password = &quot;secretpassword&#39;; DROP TABLE users; --&quot;; createUser(username, password); } } . With protection . import java.sql.*; public class DatabaseExample { // Assuming you have established a database connection // Option 1: Use of Prepared Statements (with Parameterized Queries) public static void createUser(String username, String password) { String sql = &quot;INSERT INTO users (username, password) VALUES (?, ?)&quot;; try (Connection connection = DriverManager.getConnection(&quot;jdbc:mysql://localhost:3306/db_name&quot;, &quot;username&quot;, &quot;password&quot;); PreparedStatement statement = connection.prepareStatement(sql)) { statement.setString(1, username); statement.setString(2, password); statement.executeUpdate(); } catch (SQLException e) { e.printStackTrace(); } } public static void main(String[] args) { // Example usage String username = &quot;john&quot;; String password = &quot;secretpassword&quot;; createUser(username, password); } } . In this example, we have a createUser method that takes username and password as parameters. We define a SQL query string with placeholders (?) for the values. . Inside the method, we establish a connection to the database using JDBC. We then create a prepared statement using the SQL query string. The setString method is used to set the values for the placeholders. . Finally, we execute the update using executeUpdate to insert the user into the database. Any potential SQL injection attempts are prevented because the parameterized queries ensure that the user input is treated as data and not as part of the SQL syntax. . There are a lot more ways to protect against sql injection. Feel free to research them: . Use of Properly Constructed Stored Procedures . | Allow-list Input Validation . | Escaping All User Supplied Input . | . XSS (Cross Site Scripting) . The use of sending JavaScript that can be executed in the browser. Can modify the page, send more HTTP requests, and access cookies. . Basically some websites are dumb and think &lt; script&gt; is still html . Why should we care? Well JS is powerful. It can modify the html through the DOM, note down user inputs, and even read website cookies. It has the power and potential to do basiclaly anything, making it very crucial to protect against it. Here is a real life example of the exploit in action: https://www.youtube.com/watch?v=2GtbY1XWGlQ&amp;t=0s . Types . Reflected XSS: user input is identified as html but it’s now and it’s reflected back. For example if you input “&lt; script&gt;alert(“bruh”)&lt; /script&gt; into a text box and send a GET request, the alert JS will be run. | Stored XSS: same as reflected xss but instead of being reflected back to the user, it’s stored in the db. The user it then affected by the modified db. This is even more dangerous than reflected xss because it injects everyone who views the injected page! | . How to fix . You might think it’s a simple removing the ability to input script tags but it’s not because event handlers exist. Filtering ‘&lt;’ and ‘&gt;’ techincally works but could cause other problems. . So how do you actually fix? You could simply use a library called DOMPurify that filters everything for you :D . How to use DOMPurify . Note . Most of my knowledge from this blog came from my experience completing web exploit ctf (capture the flag) problems. This is just skimming the surface of web vulnerabilities but I hope it makes you more mindful of your website’s security. Also please don’t use the knowledge I gave you to go hack other websites lmao. This is for educational purposes ONLY. Go compete in CTFs (or do the hacks) if you really wanna exploit a website :D. . Resources . SQL Injection | Really good youtube SQL Injection vid | Prevent SQL Injection | XSS Website | XSS Vid | Google :drooling_face: | Chatgpt for definitions and code examples &lt;3 | . Hacks . SQL Inject this site: https://demo.testfire.net/login.jsp and blog your solution. | Play this fun game Google made on XSS: https://xss-game.appspot.com/. Beat all six levels and blog about them. . | Extra Credit: Create a PicoCTF account: https://play.picoctf.org/practice?category=1&amp;page=1 -&gt; go to Practice -&gt; go to Web Exploit -&gt; Complete any 7 challenges and blog about them. Many of these topics won’t be covered in this blog but it will show you common web exploitations. Feel free to google the answers whenever you get stuck but please attempt them first. | .",
            "url": "http://localhost:4100/teacher_portfolio/c2.2/2023/11/27/java_vulnerabilities_IPYNB_2_.html",
            "relUrl": "/c2.2/2023/11/27/java_vulnerabilities_IPYNB_2_.html",
            "date": " • Nov 27, 2023"
        }
        
    
  
    
        ,"post49": {
            "title": "P5 The Internet",
            "content": "4.1 The Internet . IP Address . What is an IP Address: A numeric label assigned to every device that uses the internet to communicate. IP stands for Internet Protocol. IP addresses are the identifiers that allow data to be sent over the internet. . contain location information | allows devices to communicate over internet | differentiates between computers, routers, and websites | . A set of 4 8-bit numbers seperated by periods. Each number is in the range 0-255. Exceptions are 0.0.0.0 and 255.255.255.255 . 4.20.0.255 | 16.23.234.1 | . . IP Addresses allow us to send information in three main ways. . Unicast - a specific device. Internet wide access. TCP is used | Multicast - a group of devices. It is specific range of IP addresses. Internet-wide access. UDP is used | Broadcast - all devices. LAN-wide. Data stops at the router. UDP is used | Popcorn Hack - Finding your IP . https://www.whatsmyip.org/ works for both mac and windows | Alternatively, you can open up a command prompt (cmd into search bar), and type ipconfig | . The OSI Model and TCP/IP Model . TCP/IP Protocols . A TCP/IP Protocol is a set of rules that governs something within computer communication. The IETF, or Internet Engineering Task Force, manages these rules and facilitates the open development of them. . Example: ASCII Protocol . ASCII (American Standard Code for Information Interchange) is a internet protocol that you may be familiar with, is a type of character encoding | ASCII is a protocol governing how text is represented as binary | 128 characters, 95 printable | . There are many more protocols, each governing a specific area of how computer communicate. Ex. ARP, DNS, FTP, UDP, PPP, SAP . We obviously can’t cover every protocol, but we’ll be talking about a few important ones today. . OSI Model . The OSI model, also known as the Open Systems Interconnection Model, helps represent communications between two computers. . The OSI model helps coordinate and classify standards | Each of the many protocols can be classified into one of the seven layers | Each layer has a function and the protocols in that layer all help with that function | . . Layer Name Function Example . 1 | Physical | Transport of data between tangible, physical things | DSL | . 2 | Data Link | Device identification and forwarding on a LOCAL network (i.e. home, school) | PPP | . 3 | Network | Manages identification and path that a device should take, very few of these protocols | STP | . 4 | Transport | Manages transport of data between computers (delivery method, i.e. fast vs slow) | UDP | . 5 | Session | Manages connectivity between devices | SAP | . 6 | Presentation | Translates from data sent between computers (binary) to something humans can understand | TLS | . 7 | Application | User Interaction, like resource sharing | HTTP | . Popcorn Hack . We just gave an example of a protocol, ASCII, above. What OSI Layer does ASCII fall into? | Give another example of a protocol from that layer | . TCP/IP Model . Another method of classifying protocols | Simplifies OSI model into four layers | Application, Presentation, Session layers are summarised into one Application layer | Data Link and Physical layers and summarised into one Link or Physical layer | This layer, also known as Network Access, is focused on the transport of bits (1s and 0s) between networks | . Protocols . DNS - Domain Name Service . DNS, or Domain Name Service, is a naming system for websites on the internet. | DNS assigns and has records that relate domain names to ip addresses | . What is a Domain Name? . Domain Names are strings used to identify addresses | They map hard to remember IP addresses into simple string of text | Would you rather remember 162.159.128.233 or discord.com? | Each website has its own IP address that you are sent to when you visit the website | https://www.nslookup.io/website-to-ip-lookup/ | nslookup (website) in command prompt | . Popcorn Hack . Open up a command prompt and type “nslookup google.com” | You should get 142.250.68.78, we mainly care about the bottom address for now | Try visiting that website in your search bar! | . Subdomains . Subdomains are a prefix added to a domain to separate parts of the website | There can many subdomains, up to 127, and each can be up to 64 characters long | We saw an example of this in our passion projects | (SUBDOMAIN).stu.nighthawkcodingsociety.com | . Domain Name Service Providers . DNS Providers manage and sell domain names | . . Popcorn Hack . List 4 more websites you use often and their IPs | What’s a subdomain of your passion project backend from last time? | What’s the domain of your current binary CPT project? | . HTTP vs HTTPS - HyperText Transfer Protocol . HTTP (Hypertext Transfer Protocol) and HTTPS (Hypertext Transfer Protocol Secure) are both protocols used for transferring data over the web. The key difference lies in the security aspect. . HTTP is the standard protocol for transmitting data over the internet. However, it does not provide any encryption, making it susceptible to eavesdropping and unauthorized access. This means that any information exchanged between the user’s browser and the website, such as login credentials or personal data, is sent in plain text. . HTTPS . On the other hand, HTTPS adds a layer of security by incorporating SSL/TLS (Secure Sockets Layer/Transport Layer Security) encryption. This encryption ensures that the data exchanged between the user and the website is encrypted, making it much more challenging for malicious actors to intercept or tamper with the information. . . We SSL based encryption last trimester with certbot. Certbot generated SSL certificates for us to ensure HTTPS connection between the client and your website. . . TCP and UDP - Transmission Control Protocol and User Datagram Protocol . TCP and UDP are both Transport protocols (layer 4 of OSI and layer 3 of TCP/IP). This means they are a set of rules that specify how data is exchanged between devices over the Internet. . TCP Packets . What’s in a TCP packet? Packets are a unit of information that are sent over the network. They contain user data, among other identification information. . . TCP Handshake . The TCP handshake process - this is how a TCP session is initiated. . Step 1: Client A requests a client-to-server communication session with Server B (SYN) . . Step 2: Server B acknowledges client-to-server communication session, requests server-to-client communication session (SYN-ACK) . . Step 3: Client A acknowledges server-to-client communication session (ACK) . . After these steps are executed in order, the communication pathway is established between Client A and Server B. . How does TCP actually send the data? . Client A wants to send some file to Server B. TCP will first split the data into 6 segments | TCP forwards the first 3 segments to the Server B | Server B must acknowledge that it has received the segments by sending back an ACK. If Client A doesn’t receive the ACK, it resends the segments | Client A sends the remaining 3 segments | Again, Server B must send back an ACK to confirm it has received the other 3 segments | TCP Session Termination . Client A sends segment to server B with the FIN flag to terminate the client-to-server session | Server B sends ACK to client A | Server B sends FIN to client A to terminate the server-to-client session | Client A sends ACK to server B | The session closes | . UDP . Enough about TCP… what about UDP? . UDP Pros: . Little cost | Faster | . UDP Cons: . Little data checking | Generally unreliable, as no ACK messages are sent | Packets may arrive out of order or have duplicates/missing packets | . UDP sends out all packets at once without any form of handshake or acknowledgement. . Popcorn Hack . When do we use UDP? While it seems terrible, try to think of some use cases! | When might we use TCP? | . Homework Questions . Please answer all of these questions on your personal blog and explain. Don’t just give an answer. Homework is due Sunday night at 6 pm . IP Addresses . Which of the following IP Addresses are possible? Explain (yes/no) for each answer choice. 1.1.1.1.1 | 23.23.23.23 | 134.492.100.0 | 255.256.55.255 | 2.93.255.19 | . | If Dian Du is at home on his home network and sends a message to every computer on the network, what is this an example of? Explain. Multicast | Unicast | Broadcast | . | Models . Three of the four following protocols are on the same layer. Identify which ones and what layer they are on, and why they are on each layer: ASCII (see above for information) | FTP (facilitates transfer of files over the internet) | TLS (see HTTPS section) | USB (permits data exchange between electronics) | . | Telnet is a internet protocol which allows remote access to other computers over a local network or the internet. What layer of the OSI model would this protocol be located on? What is the function of this layer? | DNS . Bob wants to use the domain bob.is.the.best.com. What domain should he buy from a DNS provider (assume it is available)? What would be the subdomains? | HTTP and HTTPS . What is a difference between HTTP and HTTPS? What protocol does HTTPS use that HTTP doesn’t? | . | Last trimester we sent HTTP requests for our passion projects Did we use HTTP or HTTPS? | What are the benefits and disadvantages of this? | . | TCP and UDP . Bob is setting up a video streaming service, and he needs the stream to be real time. What protocol should he use, TCP or UDP? Why? | What are some cons of this protocol? Give an example of a potential issue. | . | TCP has error checking, which ensures that all packets arrive properly. Why is this important? Give an example of how TCP ensures that there are no errors. | . | Server A computer is communicating with Server B. They have already initiated communication and Server A is now attempting to send data to Server B. How does Server B ensure that they have received any sent packets before Server A continues sending packets in TCP? In UDP? | What is another use of this? | . |",
            "url": "http://localhost:4100/teacher_portfolio/2023/11/27/P5_Internet.html",
            "relUrl": "/2023/11/27/P5_Internet.html",
            "date": " • Nov 27, 2023"
        }
        
    
  
    
        ,"post50": {
            "title": "P4 4.2 & 4.3 Routing and Computing",
            "content": "4.2 Routing (Fault Tolerance) . CSN-1.E.1 The Internet has been engineered to be fault-tolerant, with abstractions for routing and transmitting data. . CSN-1.E.2 Redundancy is the inclusion of extra components that can be used to mitigate failure of a system if other components fail. . CSN-1.E.3 One way to accomplish network redundancy is by having more than one path between any two connected devices. . CSN-1.E.4 If a particular device or connection on the Internet fails, subsequent data will be sent via a different route, if possible. . CSN-1.E.5 When a system can support failures and still continue to function, it is called fault-tolerant. This is important because elements of complex systems fail at unexpected times, often in groups, and fault tolerance allows users to continue to use the network. . CSN-1.E.6 Redundancy within a system often requires additional resources but can provide the benefit of fault tolerance. . CSN-1.E.7 The redundancy of routing options between two points increases the reliability of the Internet and helps it scale to more devices and more people. . Network Examples . In these examples the letters represent computing devices and the lines represent wires that connect the devices. . . 4.3 Sequential, Parallel, and Distributed Computing . Computer Tasks . A computer needs to handle many tasks as it operates: System Tasks : the operating system has dozens of tasks, like scheduling what it will be doing next, managing hardware, working with the network, etc. . | User Tasks : executing programs that the user has selected, such as running MS Excel and MS Word, or computer games . | . | Tasks need to be scheduled by the operating system. Balance tasks so all CPUs are being used evenly and fully. | Running tasks can be done sequentially, in parallel, and be distributed to other computers. | . Sequential Computing . Sequential Computing : Tasks are done one after another. It is a computational model in which operations are performed in order one at a time. . | The computer works tasks A, B, C, … one at a time. | Why do this? It has limited hardware: It only has one CPU (older hardware) | Its tasks are dependent: Task B depends on Task A, Task C depends on Task B, so the needed order is A, B, and finally C. | . | Execution Time: Sequential Operations add up all the individual task execution times. | Example: Task A takes 50 ms | Task B takes 40 ms | Task C takes 35 ms | Total processing time is 50 ms + 40 ms + 35 ms = 125 ms | . | Think of sequential computing as items one at a time on a conveyor belt. . . | . Parallel Computing . Parallel Computing : A computational model where the program is broken into multiple smaller sequential computing operations, some of which are performed simultaneously. . schedules tasks to be executed at the same time | normally done on the same computer | consists of a parallel portion and a sequential portion | . | Comparing efficiency of solutions can be done by comparing the time it takes to perform the same set task. | Why Parallel Computing? Hardware Driven : New hardware has several processors in one system, called cores. 1 CPU can have 64+ cores. Graphic cards for gaming can have thousands of cores. . | Faster Operations: Supercomputers link hundreds of CPUs together to work the same problem. | Data Driven : A lot of data can be processed the same way (video gaming), called SIMD (Single Instruction Multiple Data) . | Solutions that use parallel computing can scale more effectively than solutions that use sequential computing | . | Execution Time: Time equals the longest time taken on any given processor, | A parallel computing solution takes as long as its sequential tasks plus the longest of its parallel tasks. | Parallel processing works best when the tasks are independent from each other– they don’t depend on each other’s answers. | . | Example: Core 1: Task A takes 45 ms | Core 2: Task B takes 50 ms | Core 3: Task C takes 25 ms; Task D takes 30 ms | Core 4: Task E takes 40 ms | Total time needed: 55 ms (Core 3 with Tasks C and D in sequence) | . . | . Popcorn Hack 1 . A particular computer has two identical processors which can run in parallel. Each process must be executed on a single processor and each processor can only run one process at a time. The table below lists the amount of time it takes to execute each of the processes on a single computer. None of the processes are dependent on any of the others. What is the minimum amount of time (approximate) to execute all three processes when the two processors are run in parallel? | Process | Execution Time on Either Processor | | -- | -- | | X | 50 seconds | | Y | 10 seconds | | Z | 30 seconds | Comparing Efficiency of Solutions . Comparing efficiency of solutions can be done by comparing the time it takes them to perform the same task. | Sequential Execution Time : . Sequential Operations add up all the individual task execution times. Core 1: Task A takes 50 ms | Core 1: Task B takes 40 ms | Core 1: Task C takes 35 ms | Total processing time is 50 ms + 40 ms + 35 ms = 125 ms | . | . | Parallel Execution Time : . Time equals the longest time taken on any given processor. | Parallel processing works best when the tasks are independent from each other–they don’t depend on each other’s answers. Core 1: Task A takes 50 ms | Core 2: Task B takes 40 ms + Task C takes 35 ms | Total time needed: 75 ms (Core 2 with Tasks B and C in sequence) | . | . | . Parallel Sequential . time = longest time taken on any given processor, aka faster | time = add up all individual task times aka slower | . tasks done simultaneously | tasks done individually | . good for big problems | good for small problems | . harder to implement | easier to implement | . less portable | more portable | . Speedup Time . The “speedup” of a parallel solution is measured in the time it took to complete the task sequentially divided by the time it took to complete the task when done in parallel. Sequential Total processing time is 50 ms + 40 ms + 35 ms = 125 ms | Parallel Total time needed = 75 ms | Speedup 125 ms / 75 ms = 1.67 ms | . | . NOTE: When increasing the use of parallel computing in a solution, the efficiency of the solution is still restricted by the sequential portion. This means that at some point, adding parallel portions will no longer significantly increase efficiency. . Distributed Computing . Distributed Computing : the sending of tasks from one computer to one or more others. It is a model in which multiple devices are used to run a program. . can mix sequential and parallel computing, based on how it sends out tasks to other computers to work | allows problems to be solved that could not be solved on a single computer because of either the processing time or storage needs involved | . | Examples: Google Web Search: you ask for a search, and Google sends the request to its thousand of servers in the background. | Web Services: standards on how computers can ask for task execution over the web. This includes protocols like SOAP, RSS, REST, etc. | Beowulf Clusters : special software to group different computers together . | . | How is it different from sequential and parallel execution? Uses more than one physical computer | The computers, data, and tasks can be very different from each other | Needs a network | Is a mix of sequential and parallel execution of tasks | Can take longer based on the network and waiting for responses from other computers | . . | . Hacks: Multiple Choice . Record your answers in the cell below, titled “Write Answers Here.” . Which of the following is NOT a benefit of a fault-tolerant network? A) Data has more than one path to travel from one device to another. | B) If part of the netowrk fails, the network can still function by using other parts. | C) Data will only take one route from one device to another, no matter the number of routes available. | D) More devices creates more connections and makes the network stronger. | . | What causes network redundancy? A) Having more than one path between any two connected devices | B) Having one path between any two connected devices | C) Having no path between any two connected devices | D) All networks are redundant | . | . A computer has two duplicate processors that are able to run in parallel. The table below shows the amount of time it takes each processor to execute each of the two processes. Neither process is dependent on the other. | Process Execution Time on Either Processor . A | 25 seconds | . B | 45 seconds | . What is the difference in execution time between running the two processes in parallel in place of running them one after the other on a single processor? . A) 50 seconds | B) 25 seconds | C) 70 seconds | D) 22 seconds | . . A computer has two processors that can run in parallel. The table below indicates the amount of time it takes each processor to execute four different processes. None of the processes is dependent on any of the other processes. | Process Execution Time on Either Processor . A | 25 seconds | . B | 25 seconds | . C | 10 seconds | . D | 40 seconds | . How should the program assign the four processes to optimize execution time? . A) Processes B and C should be assigned to one processor and A and D to the other processor. | B) Process B should be assigned to one processor and Process C to the other processor. | C) There is no way to optimize execution time; this will be very slow. | D) Processes A and B should be assigned to one processor and C and D to the other processor. | . Write Answers Here . After you record your answers in this cell, take a screen shot of the cell and DM it to Nikki Hekmat on Slack. There will be a penalty of 10% off your grade for each day the assignment is late. The homework will be due Monday December 4th at 11:59 PM. . Popcorn Hack Answer . [blank] seconds . MC Hacks Answers . Simply put A, B, C, or D next to each number to indicate the correct answers for the questions above. . | | | |",
            "url": "http://localhost:4100/teacher_portfolio/2023/11/27/P4_Routing_and_Computing_IPYNB_2_.html",
            "relUrl": "/2023/11/27/P4_Routing_and_Computing_IPYNB_2_.html",
            "date": " • Nov 27, 2023"
        }
        
    
  
    
        ,"post51": {
            "title": "P2 The Internet",
            "content": "Understanding the Internet . The internet is a vast network of interconnected computers and devices that allows for the exchange of information and communication on a global scale. It is a fundamental part of modern life, influencing the way we work, socialize, and access information. Let’s explore how the internet works and its key functionalities. . How the Internet Works . 1. Network Infrastructure: . The internet is a network of networks, comprised of millions of devices connected through various technologies such as cables, fiber optics, and wireless connections. | The internet is decentralized, meaning that there is no central authority that controls it. Instead, it is made up of many smaller networks that are connected to each other. This allows for greater flexibility and resilience in the face of disasters or attacks. | . 2. Protocols: . Communication on the internet relies on protocols, which are standardized sets of rules that govern data transmission. For example, HTTP is used for web browsing. | Protocols are used to ensure that data is transmitted reliably and efficiently. They also allow for interoperability between different devices and networks. For example, HTTP allows web browsers to communicate with web servers. This means that you can access any website from any device as long as it supports HTTP. This is why you can use your phone to browse the internet even though it doesn’t have a keyboard or mouse. HTTPS is a secure version of HTTP that encrypts data before sending it over the network. This prevents eavesdroppers from intercepting sensitive information such as passwords or credit card numbers. There are many other versions of HTTP, each with its own purpose and features. | . GET /index.html HTTP/1.1 Host: www.example.com . IP Addresses: . Every device connected to the internet is assigned a unique identifier called an IP address. This address helps in routing data to the correct destination. www.example.com -&gt; 192.168.1.1 This is similar to how your home address is used to deliver mail to your house. IP addresses are typically represented in a 32-bit format, with each 8-bit segment separated by a period. However, with the growth of the internet, the number of available IP addresses is running out. To solve this problem, a new standard called IPv6 was introduced, which uses a 128-bit format. . Popcorn Hack 1 . Log into your AWS account. Which type of ip address is used in the AWS server? . Data Packets &amp; Transfering: . Information is broken down into small packets for efficient transmission. These packets travel independently across the network and are reassembled at their destination. There are many examples on how data sends their packets but the most common one is messaging with your friends. . Data packets are like letters that are sent through the mail. They contain information about the sender, recipient, and contents of the letter. Similarly, data packets contain information about the source and destination of the data, as well as the data itself. This allows for efficient transmission of information over the internet. An example of a data packet is shown below: . . Bandwith . Bandwith measures how fast data sends to the recipent. Think about cars, they go in miles per hour, but in this case, as we are talking about computers, we measure this in bits per second. In a car the slower the miles per hour, the slower the car. Same logic applies here as well, when the bandwith is lower, the data takes a longer time to send resulting in lag. . Routing . Routing in simple terms is the path in which the sender sends a message and the router helps give a “route” to the sender through a series of packets. Without a router, packets cannot be sent and devices won’t be able to communicate with each other. . Popcorn Hack . . Brief Overview into Domains and Subdomains . Domain name: For example in https://docs.google.com/, google is the domain name Subdomain name: In the same example as above, docs is the subdomain name. . Protocols and Transfering of Data (Briefly Explained) . . The OSI Model consists of 7 steps in which devices communicate with each other. Each step contains its own different steps and going over them will take a long time, so review over them after the lesson is over. . In the Narrow Waist, there are 4 layers in which devices communicate with each other. . The Network Access Layer there is a connection between a hardware device (ethernet and others) and its connected to a physical device like a computer in order to send packets and information that way. . The Internet Layer, is the layer which is built off the Network Access Layer in which packets are sent via the IP addresses. These packets contain metadata in which there is information stored inside. (Routers also play a role!) . Internet Scalability: Based on what we learned, the internet is very scalable, its able to send information (via packets) to many devices which are all part of a LAN or Local Area Network. These LANs are part of a router in which the intranet is. LANs can also exchange information with each other. . TCP (Transmission Control Protocol): . Reliable Delivery: TCP makes sure that data sent between devices arrives safely and in the right order. . Connection Setup: Before sending data, TCP sets up a connection between devices. . Checks and Corrections: It double-checks to confirm data is sent and received correctly. If anything gets lost, it sends it again. . Efficiency: It controls how fast data moves so that a fast sender doesn’t overwhelm a slow receiver. . TCP guarantees the safe and ordered delivery of data, similar to a registered mail service. It’s often used for applications like web browsing, email, file transfer, and etc. . UDP (User Datagram Protocol): Not So Safe Delivery: UDP doesn’t promise that your data will arrive or be in the right order. . No Handshake: It doesn’t say “hello” before sending data; it just shoots out the packets without checking if they reached the other side. . Less Checking: It doesn’t spend time correcting errors like TCP does, which makes it faster. . Speed Matters: UDP is used in things like online games, live videos, and voice calls where being fast matters more than making sure every piece of data gets there perfectly. . Think of UDP as a protocol that’s akin to sending a postcard; it’s fast and efficient, but there’s no confirmation that the postcard arrived at its destination, and it might get lost or arrive out of order. . DNS (Domain Name System) Internet Phone Book: DNS is like an internet directory that matches human-readable website names (like “google.com”) to their actual computer-friendly addresses called IP addresses (like “192.168.1.1”). . Translation Service: It translates website names into IP addresses so devices can find and connect to the correct websites or services on the internet. Routing Requests: When you type a website name in a browser, DNS helps your device locate the right server by providing the IP address associated with that name. . Simplifying Access: Instead of remembering complicated strings of numbers, DNS makes it easier for people to access websites using simple and memorable names. . Wrap-Up / Popcorn Hack . Information Retrieval: . The internet serves as a vast repository of information. Search engines like Google help users find relevant content by indexing and ranking web pages. Question: How does a search engine determine the relevance of web pages? . Entertainment: . Streaming services for music, movies, and games provide entertainment options, accessible to users at any time. Question: Briefly explain how streaming services deliver content to users in real-time. . Collaboration: . Tools like Google Docs and cloud storage services facilitate collaboration, allowing individuals and teams to work on projects together, regardless of location. Question: How does cloud storage ensure data availability and accessibility? . Conclusion . In summary, the internet is a dynamic and ever-evolving network that plays a crucial role in our daily lives. Understanding its basic components and functionalities is essential for navigating the digital landscape effectively. .",
            "url": "http://localhost:4100/teacher_portfolio/2023/11/27/P2_Internet_IPYNB_2_.html",
            "relUrl": "/2023/11/27/P2_Internet_IPYNB_2_.html",
            "date": " • Nov 27, 2023"
        }
        
    
  
    
        ,"post52": {
            "title": "P1 The Internet",
            "content": "4.1 The Internet . Part 1 . How did the internet come to life? It all began by these massive computers. They were isolated and very hard to work on. As a result, the idea of the internet came to life. It was to easily communicate between users and opened many gateways to digital communication. . | The internet is basically a way for computers to talk to each other using networks . | A packet is a small amount of data or information sent over a network that includes information about the sender and destination. . | . . A computer network is a group of computing devices interacting with each other in some sort of way | . How do computers send data to each other? . In a process called packet switching, a message(file) is broken up into packets which are reassembled by the receiver. It is often times converted into something the computer can understand like binary. . | A path is between the sender and receiver and the router will help find the path. For example, If you’re accessing a website, routers determine the optimal path for the data packets to traverse the internet (routing), following a series of interconnected devices (paths) to reach the web server. . | Routing is a process that finds a path from the sender to receiver . | Bandwidth is the maximum amount of data that can be sent in a computer network . | . Popcorn Hack 1 . . What is the diagram showing? | . Bandwidth | Computer Network | Packet Switching | Operating System | Two possible answers | . Answer . Part 2 . Protocols are sets of rules for the way data is transferred throughout the internet . | There are two acceptable models that show the layers that data is sent by protocols OSI | TCP/IP TCP/IP is more widely accepted but OSI is still used | . | . | The OSI(Open Systems Interconnect) model shows the 7 layers you have to go throught to communicate between other computers | . . TCP(Transmission Control Protocol) is a protocol for how to send messages between devices | . . . Popcorn Hack 2 . A request from the frontend to the backend is being made and the response returns JSON. What layer(s) did the data go through? . Application | Transport | Internet | Network Access | All layers | Answer . What is an example of the OSI/TCP Model . . Network Access/Internet Layer . The process usually starts with the Internet layer where the user’s computer is assigned a unique IP address so it can communicate with other computers or web servers A DHCP(Dynamic Host Configuration Protocol) assigns the computer its unique IP address | . | . Application/Transport Layer . The user sends a request to a server or page | If the user wants to go to a website like amazon.com, it has its unique IP address but it isn’t readable by humans so a DNS(Domain Name Service), which stores the IP address inside of a database, sends it over the user | During this process, the user sent a TCP request for the IP of amazon.com to the DNS server and the DNS server sent a TCP response in the form of packets for the IP of amazon.com | Now, the user can send a request to the IP of the webpage like amazon.com | The last step is for a router to send the user to the correct destination of the IP. In this case, amazon.com. | Popcorn Hack 3 . How does a user get the IP for a web page when they enter the url? . It goes through layers when the request is made to the webp | The DNS sends it to the user in the form of a TCP response | There is no need for the user to know the ip when going to the url | The user automatically knows | Answer . Protocols used here are: . HTTP - Hyper Text Transfer Protocol HTTP is a protocol that says how data is transferred over the internet | Used for sending requests from a user and receiving a response in the form of HTML or JSON from the server. | In last trimester, you made a request to the backend from the frontend using HTTP and it sent a response in the form of JSON | . | HTTPS HTTPS is HTTP with security. In last trimester’s final project, the devops person used certbot to make the HTTP requests to the backend secure. | . | . . TCP/IP - Transmission Control Protocol, Internet Protocol TCP/IP is important because HTTP requests and responses depend on a TCP connection between the client and server | Once a TCP connction is made, HTTP requests are carried in TCP packets | IP sends the TCP packets to the correct location | When you made the HTTP request from the frontend to the backend, your request was broken up into TCP packets and sent to the correct location by IP | . | . . Homework . Bandwidth: . In the context of computer networks, elaborate on the concept of bandwidth. Discuss how bandwidth influences the speed and efficiency of data transfer. Provide examples of scenarios where both high and low bandwidth can impact the performance of internet connected devices. | Computer Network: . Explore computer networks by detailing the key components and their interplay. Discuss the significance of scalability, security, and reliability in designing computer networks. Provide real-world examples of how different types of computer networks, such as local area networks (LANs) and wide area networks (WANs), serve distinct purposes in various settings. | Packet Switching: . Investigate packet switching and its role in modern communication systems. Compare and contrast packet switching with alternative methods, such as circuit switching, highlighting the advantages that packet switching brings to data transmission. Describe the journey of a data packet through a network. | ## .",
            "url": "http://localhost:4100/teacher_portfolio/2023/11/27/P1_internet_IPYNB_2_.html",
            "relUrl": "/2023/11/27/P1_internet_IPYNB_2_.html",
            "date": " • Nov 27, 2023"
        }
        
    
  
    
        ,"post53": {
            "title": "OOP, CSSE mini project Part 2",
            "content": "Overview | Player | Platform | Background | Tube | Block | Goomba | . OOP, Game Levels . Using heirarchy below, the start screen, game screens, and game over screens have been created. . GameEnv | ├── Attributes: │ | ├── levels │ | ├── gameObjects | │ └── ... | | | ├── Methods: │ | ├── update: update, draw │ | ├── destroy: all gameObjects │ | └── ... │ ├── GameObject │ ├── Player: sprite animation, wasd │ ├── Background: fit to screen, scrolling │ ├── Platform: fixed to bottom, scrolling │ └── ... │ ├── GameLevel | ├── Tag: key │ ├── Attributes: │ | ├── playerAssets │ | ├── backgroundAssets │ | ├── platformAssets │ | └── ... | | │ └── Methods: │ | ├── load: &quot;new&quot; GameObject created from assets │ | └── ... | └── GameControl │ ├── Methods: | | ├── gameLoop: drive action of game level │ | ├── transitionToLevel: destroys and creates objects for game level │ | └── ... | | │ └── ... . Content Setup . Each level has a tag, background, platform, player, and callback function. These attributes will be extended over time. Immediately, it is very apparent, description is missing elements like enemies and objects in the game. But, this progressive structure, enables Game Control to cycle from level to level on callback completion detection. . start/home sequence contains entry screen of game, this level could contain all game setup: player choice, speed, leader board. | hills would contain classic mario game level(s) | alien would contain adapted/personalized game level(s) | gameover should contain logic for persistence, saving state in local storage, resume at point, start over, … | . /* ========================================== * ========== Game Level setup ============== * ========================================== * Start/Homme sequence * a.) the start level awaits for button selection * b.) the start level automatically cycles to home level * c.) the home advances to 1st game level when button selection is made */ GameLevel.create(&#39;start&#39;, &#39;&#39;, &#39;&#39;, &#39;&#39;, startGameCallback); GameLevel.create(&#39;home&#39;, &#39;&#39;, &#39;&#39;, &#39;&#39;, homeScreenCallback); // Game Screens GameLevel.create(&#39;hills&#39;, &#39;&#39;, &#39;&#39;, &#39;&#39;, testerCallBack); GameLevel.create(&#39;alien&#39;, &#39;&#39;, &#39;&#39;, &#39;&#39;, testerCallBack); // Test Game Screens, used during development and test // GameLevel.create(&#39;noPlatform&#39;, &#39;&#39;, &#39;&#39;, &#39;&#39;, testerCallBack); // GameLevel.create(&#39;noBackgroun&#39;, &#39;&#39;, &#39;&#39;, &#39;&#39;, testerCallBack); // Game Over GameLevel.create(&#39;gameOver&#39;, &#39;&#39;, &#39;&#39;, &#39;&#39;, gameOverCallBack); . Callbacks . The callback on level currently supports advancement indicator. The callback is continually be monitored in gameLoop and . store game status or game state to local storage | capturing events in game that accumulate and store points | . This below code is considered dummy code and is looking for purposefull implementation. The callback is likely different for each game play level. . // Level completion tester function testerCallBack() { // console.log(GameEnv.player?.x) if (GameEnv.player?.x &gt; 500) { return true; } else { return false; } } . Game Play . After creating GameLevel, game begins by starting the gameLoop. . // start game GameControl.gameLoop(); . Hacks: Next Steps . This “Hacks” is focused on student lessons and learning. It is believed that the structure of the game so far is flexible and scalable. . All (software) engineering is a progressive set of tasks, a series of design, coding, tests, an failures. Each progression may spawn new features, adapt the current design and evolve the requirements of the game (levels). . Student Teaching tasks allow each person to adapt or extend the game. As you work with other student teaching teams, you will cooperatively extend and grow this project. .",
            "url": "http://localhost:4100/teacher_portfolio/2023/11/27/CSSE-tri2-oop2.html",
            "relUrl": "/2023/11/27/CSSE-tri2-oop2.html",
            "date": " • Nov 27, 2023"
        }
        
    
  
    
        ,"post54": {
            "title": "Dynamic Game Levels",
            "content": "Start Game Invert Restart",
            "url": "http://localhost:4100/teacher_portfolio/2023/11/27/CSSE-oop-game-levels.html",
            "relUrl": "/2023/11/27/CSSE-oop-game-levels.html",
            "date": " • Nov 27, 2023"
        }
        
    
  
    
        ,"post55": {
            "title": "Socket.io Multiplayer Game",
            "content": "Start Game Invert Restart",
            "url": "http://localhost:4100/teacher_portfolio/2023/11/27/CSSE-mutliplayer-game.html",
            "relUrl": "/2023/11/27/CSSE-mutliplayer-game.html",
            "date": " • Nov 27, 2023"
        }
        
    
  
    
        ,"post56": {
            "title": "P4 The Internet",
            "content": "Internet History Fun Facts . A catalyst in the formation of the Internet was the heating up of the Cold War. The Soviet Union’s launch of the Sputnik satellite spurred the U.S. Defense Department to consider ways information could still be disseminated even after a nuclear attack. | ARPANET was created in 1969 and provided the foundation for what came to be known as the Internet | January 1, 1983 is the official birthday of the modern internet | . OSI Model . The OSI (Open Systems Interconnection) model is a conceptual framework that standardizes the functions of a telecommunication or computing system into seven abstraction layers. Each layer in the OSI model performs specific functions, and together they facilitate communication between different systems. Here’s a brief overview of what each layer does: . 1. Physical Layer (Layer 1): . Manages the physical connection and transmission of raw data bits. | . 2. Data Link Layer (Layer 2): . Ensures reliable communication over a physical layer, handling framing and addressing. | . 3. Network Layer (Layer 3): . Focuses on logical addressing and routing data between different networks. | . 4. Transport Layer (Layer 4): . Manages end-to-end communication, ensuring reliable and ordered data delivery. | . OSI Model in a network . 1. Physical Layer (Layer 1): . Layer 1 is how devices transmit information to each other (ethernet, network adaptors) . When we send information, we send it “physically” hence the name physical layer . 2. Data Link Layer (Layer 2): . When we send information, we send it in binary, frames are the units of binary data, they are the information we send from one device to another (in the same network network) . For example, if i want to send the message “Hello” to my brother on the same network, the frame will be sent within the network to the corresponding MAC address(Media Access Control) address, sometimes referred to as a hardware or physical address, is a unique, 12-character alphanumeric attribute that is used to identify individual electronic devices on a network. . Frames can only be sent on the same network . A switch is a fundamental networking device that operates at the Data Link Layer (Layer 2) of the OSI model. Its primary function is to connect devices within the same local area network (LAN) and facilitate communication between them. Here’s how switches work and why they are crucial in network setups: . . 3. Network Layer (Layer 3): . . If I wanted to play Valorant with a friend, I would need to connect to the WiFi, why? . Unlike frames, my friend is not on the same network as me, which means MAC Addresses aren’t enough to locate the device so they cannot communicate with eachother . So we need to identify Hanlun Li on a specific network, how do we do that? IP addresses . IP Addresses are supposedly a unique identifier for each device on the network, to access a seperate device on the network, we must give a destination IP address. . Packets are basically just frames, but with an IP address included in them . 4. Transport Layer (Layer 4): . Layer 4 has two protocols UDP and TCP, you can think of it as UDP you just spam packets to the other network without acknowledgement whereas TCP you need to acknowledge everything sent to the other network. . In other words, TCP is slower but more reliable, while UDP is faster but less reliable . For example: . If I’m sending an important email to my boss, I would use TCP because I wouldn’t want the data to be corrupted or lost. . But, If I’m playing a FPS game, I would use UDP because I need speed to load in whats happening within the game . Application Layer (Layer 7) The Application Layer is the topmost layer in the OSI (Open Systems Interconnection) model, which is a conceptual framework that standardizes the functions of a telecommunication or computing system into seven abstraction layers. The Application Layer (Layer 7) is the layer closest to end-users and provides network services directly to applications. . HTTP (Hypertext Transfer Protocol): Used for transmitting hypertext (web pages) on the World Wide Web. | Supports the communication between web browsers and web servers. | . | HTTPS (Hypertext Transfer Protocol Secure): Similar to HTTP but uses a secure SSL/TLS connection for encrypted communication. | Used for secure online transactions, login pages, and sensitive data transfer. | . | FTP (File Transfer Protocol): Facilitates the transfer of files between computers on a network. | Allows for the upload and download of files. | . | DNS (Domain Name System): Resolves domain names to IP addresses. | Essential for translating human-readable domain names to machine-readable IP addresses. | . | SSH (Secure Shell): Provides a secure, encrypted channel for remote access to devices. | A more secure alternative to Telnet. | . | 1. Physical Layer (Layer 1) Example: . Scenario: Transmitting data over an Ethernet cable. | Functionality: Manages the physical connection between devices. | Handles the transmission of raw data bits over the Ethernet cable. | Deals with aspects like cable types, connectors, and signal modulation. | . | . Key Terms: Ethernet . Data Link Layer (Layer 2) Example: . Scenario: Communication between two computers over an Ethernet network. | Functionality: Breaks data into frames with start and stop bits for accurate transmission. | Manages MAC addresses for unique identification of devices. | Regulates frame flow to prevent network congestion. | Implements error-checking mechanisms like checksums or CRC for data integrity. | . | . Switches . Network Layer (Layer 3) Example: . Scenario: Routing data between two networks. | Functionality: Focuses on logical addressing to uniquely identify devices on different networks. | Determines optimal paths for data to travel from the source to the destination. | Manages communication between networks using routers. | Provides a foundation for end-to-end communication across interconnected networks. | . | . Routers - How frames are encapsulated into packets IPV4 Addresses/IPV6 Addresses - Unique Identifiers on Internet . Transport Layer (Layer 4) Example: . Scenario: Ensuring reliable communication between two applications. | Functionality: Manages end-to-end communication, ensuring data arrives reliably and in the correct order. | Provides error detection and recovery mechanisms for data integrity. | Uses protocols like TCP for connection-oriented and reliable communication. | Supports protocols like UDP for connectionless and faster communication when some data loss is acceptable. | . | . Transport Layer (Layer 4) - TCP vs. UDP . TCP (Transmission Control Protocol) . Scenario: Reliable communication requiring guaranteed data delivery. | Functionality: Establishes a connection between sender and receiver before data transfer. | Ensures reliable and ordered delivery of data. | Implements error detection and correction mechanisms. | Well-suited for applications where data integrity is crucial, such as file transfers and web browsing. | . | . UDP (User Datagram Protocol) . Scenario: Faster communication with acceptable data loss. | Functionality: Connectionless protocol without establishing a connection before data transfer. | Does not guarantee reliable or ordered delivery of data. | Suitable for real-time applications like video streaming and online gaming, where speed is prioritized over perfect data transmission. | Minimal overhead, making it more lightweight than TCP. | . | . TCP and UDP are two different approaches to data transport, each suited to specific application requirements. The choice between them depends on the priorities of the application: reliability (TCP) or speed (UDP). . Multiple-Choice Questions (MCQs): . What does the Data Link Layer (Layer 2) focus on in a network? a. Logical addressing | b. Physical addressing | c. Network routing | d. Transport protocols | . | Which device operates at the Data Link Layer and uses MAC addresses for forwarding frames? a. Router | b. Hub | c. Switch | d. Repeater | . | In networking, what does a MAC address uniquely identify? a. Devices on the same network | b. Devices on different networks | c. IP addresses | d. Subnets | . | What is the main function of switches in a network? a. Logical addressing | b. Frame forwarding | c. IP addressing | d. Network routing | . | Which layer of the OSI model deals with physical transmission, like Ethernet and network adaptors? a. Network Layer (Layer 3) | b. Physical Layer (Layer 1) | c. Data Link Layer (Layer 2) | d. Transport Layer (Layer 4) | . | What does Layer 3 (Network Layer) use for unique device identification between different networks? a. IP addresses | b. MAC addresses | c. Port numbers | d. Subnet masks | . | Which protocol operates at Layer 4 and ensures reliable communication by acknowledging data receipt? a. UDP (User Datagram Protocol) | b. HTTP (Hypertext Transfer Protocol) | c. TCP (Transmission Control Protocol) | d. DNS (Domain Name System) | . | What is the main difference between UDP and TCP in Layer 4? a. TCP is faster but less reliable. | b. UDP is slower but more reliable. | c. TCP acknowledges data receipt, while UDP doesn’t. | d. UDP is used for emails, and TCP for gaming. | . | In a network, what does the Transport Layer manage? a. Physical transmission | b. MAC addresses | c. Traffic flow between networks | d. Framing of data | . | Why would you choose UDP over TCP for a real-time application like online gaming? a. UDP is more reliable. | b. TCP is faster. | c. UDP provides faster communication. | d. TCP ensures every message is acknowledged. | . | ANSWER KEY ƃuᴉssǝɹppɐ ʅɐɔᴉsʎɥԀ .q :ɹǝʍsu∀ ɥɔʇᴉʍS .ɔ :ɹǝʍsu∀ ʞɹoʍʇǝu ǝɯɐs ǝɥʇ uo sǝɔᴉʌǝᗡ .ɐ :ɹǝʍsu∀ ƃuᴉpɹɐʍɹoⅎ ǝɯɐɹᖵ .q :ɹǝʍsu∀ (⇂ ɹǝʎɐ⅂) ɹǝʎɐ⅂ ʅɐɔᴉsʎɥԀ .q :ɹǝʍsu∀ sǝssǝɹppɐ ԀI .ɐ :ɹǝʍsu∀ (ʅoɔoʇoɹԀ ʅoɹʇuoϽ uoᴉssᴉɯsuɐɹꓕ) ԀϽꓕ .ɔ :ɹǝʍsu∀ .ʇ╻usǝop ԀᗡՈ ǝʅᴉɥʍ ʻʇdᴉǝɔǝɹ ɐʇɐp sǝƃpǝʅʍouʞɔɐ ԀϽꓕ .ɔ :ɹǝʍsu∀ sʞɹoʍʇǝu uǝǝʍʇǝq ʍoʅⅎ ɔᴉⅎⅎɐɹꓕ .ɔ :ɹǝʍsu∀ .uoᴉʇɐɔᴉunɯɯoɔ ɹǝʇsɐⅎ sǝpᴉʌoɹd ԀᗡՈ .ɔ :ɹǝʍsu∀ . HW: Answer all HW questions with a line of reasoning WILL BE GRADED ON ACCURACY AND REASONING .",
            "url": "http://localhost:4100/teacher_portfolio/2023/11/26/P4_InternetLesson_IPYNB_2_.html",
            "relUrl": "/2023/11/26/P4_InternetLesson_IPYNB_2_.html",
            "date": " • Nov 26, 2023"
        }
        
    
  
    
        ,"post57": {
            "title": "P1 Beneficial and harmful effects",
            "content": "5.1 Beneficial and harmful effects . Beneficial and Harmful Effects of Technological Innovations . People are the driving force behind creating computing innovations. . | Innovations are crafted with specific goals in mind. But they can have unforeseen consequences, both positive and negative. . | A creator cant predict all the things that can be done with their innovation as there are so many things that could be done and as technology evolves, new uses are made . | . . Dopamine . Postives . Social Connection: Social media platforms allow people to connect with friends and family, especially those who may be geographically distant. It facilitates communication, sharing of experiences, and staying updated on each other’s lives. . | Learning Opportunities: Many video games are designed to be educational and can enhance cognitive skills such as problem-solving, strategic thinking, and hand-eye coordination. Some games even incorporate historical or scientific elements, providing players with additional knowledge. . | Creativity: Video games often stimulate creativity and imagination. Games with open-world exploration or creative building elements encourage players to think outside the box and express themselves in unique ways. . | Community Building: Both video games and social media can foster a sense of community. Gamers often form online communities where they share tips, strategies, and experiences. Social media also allows people with common interests to connect and form communities. . | . Negatives . Anthony Rosner story. | Played up to 18 hours every single day and became extremely succesfull in world of warcraft but suffered in every other aspect of his life: school and relationships | Eventually quit gaming, became a succesful DJ, and created a documentary. | . Example Beneficial and Corresponding Harmful Effects of Computing . Tik Tok . Postive: Platform for people to share their creativity and talents | Negative: “Doom Scrolling” | . . Popcorn Hack 1 . What is an example of a computing innovation with unintended consequences, whether positive or negative? . ANSWER | . Mitigating Risks/Responsiblity . Targeted advertising, machine learning, and data mining are all good exampels of how unintended uses can have both positive and negative effecs . | Even though it is impossible to predict all possibilities, a responsible programmer’s goal it to forsee and prevent any unintended/negative uses and effects . | Rapid sharing of a program can lead to events outside the creators control . | . Popcorn Hack 2 . How can responsible programming help contribute to minimizing unintended harmful impacts? . ANSWER | . Finding Balance . Finding a balance between innovation and responsibility is important . | Programmers shape the impact of their creations on society. . | Unintended uses of innovations may potentiallyhave harmful impacts on society . | While negative effects could occur, Innovations often bring unintended benefits by helping advance the current states of technology. . | . . Popcorn Hack 3 . Why is it important for programmers to consider the unintended consequences of their innovations? . ANSWER | . Bonus Hack(0.05 extra points) . Self Reflect on your use of technology? Whats your daily screen time? What beneficial effects of technology do you utilize and what are some negative consequences you succcumb to? . ANSWER | . Homework . Choose an innovation(Social media, computers, phones, etc.) and talk about an alternative use than what its actually use for. Then, give the potential positive and negative impacts of the use you came up with | . ANSWER | . How might you as a programmer implement code that helps your program have less unintented risks. | . ANSWER | .",
            "url": "http://localhost:4100/teacher_portfolio/2023/11/16/Beneficial-and-Harmful-Effect_IPYNB_2_.html",
            "relUrl": "/2023/11/16/Beneficial-and-Harmful-Effect_IPYNB_2_.html",
            "date": " • Nov 16, 2023"
        }
        
    
  
    
        ,"post58": {
            "title": "Big Idea 4.2 Routing | 4.3 Computing",
            "content": "Fault Tolerence . Know how to determine if vertex of graph has more than one connection. Multiple connections, in reference to a computing device, could be considered “Fault Tolerant”. Building “Fault Tolerant” systems makes the network or internet stronger. . Understanding Computer, Routers, Systems, and Purpose are a pre-requisite to understanding Fault Tolerance systems. Regarding College Board videos, for clarification, a Router is typically used to connect computers. Here is an illustration that is very similar to the key components we have used in this class and should be familiar to those who have done deployment. | . As we are at school, using an HTTP client we request a page via LAN or Campus Network. This Network has a router and an ISP router that directs us to the public internet. | DNS is used to translate https://nighthawkcodingsociety.com to an IP address, see What’s My DNS | This targets the Web Server, the request is directed through a router to the Server running Nginx, which intern directs request to Gunicorn application hosting the Flask Website. | . Fault tolerant “routing” and “systems” on the internet is achieved by having redundancy in routing paths and computer functions. Networks and Systems become stronger because of many routes and redundancy of function. This AWS picture shows load balancing, multiple zones, redundant equipment, standby and fail over equipment and paths. This is much more than just having multiple connections, there is A LOT of planning in making fault tolerance. This is why there is such a rise in companies like AWS, Azure, Google Cloud, etc. | . . The path the TCP/IP packet will follow might be different from other packets, for instance from the same HTTP communication. The routers in the network are responsible for the right addressing, depending on traffic volume, errors in the network, etc. Since the Internet is Fault Tolerant, there are many paths to a destination, similar to Google Maps providing alternate paths when we travel. Time can be seen with Ping. Routes and time can be see with TraceRoute command… | . MacBook-Pro-3:~ johnmortensen$ traceroute yahoo.com traceroute: Warning: yahoo.com has multiple addresses; using 74.6.231.20 traceroute to yahoo.com (74.6.231.20), 64 hops max, 52 byte packets 1 osync (192.168.1.1) 3.698 ms 2.227 ms 1.533 ms 2 142-254-184-101.inf.spectrum.com (142.254.184.101) 21.250 ms 16.529 ms 11.286 ms 3 76.167.26.181 (76.167.26.181) 35.013 ms 32.531 ms 45.001 ms 4 agg22.sndhcaax02r.socal.rr.com (72.129.1.142) 19.709 ms 26.443 ms 24.083 ms 5 agg22.tustcaft01r.socal.rr.com (72.129.1.2) 25.561 ms 22.516 ms 31.393 ms 6 bu-ether26.tustca4200w-bcr00.tbone.rr.com (66.109.3.232) 36.292 ms 209-18-43-72.dfw10.tbone.rr.com (209.18.43.72) 29.504 ms 37.647 ms 7 0.ae3.pr1.lax10.tbone.rr.com (107.14.19.56) 29.244 ms 22.536 ms 0.ae2.pr1.lax10.tbone.rr.com (107.14.19.54) 29.889 ms 8 xe-0-0-33-1.par2.lax.yahoo.com (216.115.96.14) 28.815 ms 21.496 ms 25.669 ms 9 unknown.yahoo.com (216.115.102.186) 20.551 ms 23.971 ms 35.320 ms 10 ae-9.pat2.pao.yahoo.com (209.191.64.246) 27.373 ms 27.639 ms 29.064 ms 11 ae-7.pat2.dnx.yahoo.com (209.191.65.9) 59.405 ms 67.980 ms 58.710 ms 12 ae-6.pat1.nez.yahoo.com (209.191.64.226) 74.793 ms ae-5.pat2.nez.yahoo.com (209.191.64.224) 81.188 ms 77.055 ms 13 et-1-0-0.msr2.ne1.yahoo.com (216.115.105.183) 87.602 ms et-1-0-0.msr1.ne1.yahoo.com (216.115.105.29) 78.726 ms et-19-1-0.msr1.ne1.yahoo.com (216.115.105.27) 78.340 ms 14 unknown.yahoo.com (98.138.97.37) 75.661 ms 76.450 ms et-19-1-0.clr1-a-gdc.ne1.yahoo.com (98.138.97.71) 81.867 ms 15 lo0.fab4-2-gdc.ne1.yahoo.com (98.138.51.3) 93.363 ms lo0.fab3-2-gdc.ne1.yahoo.com (98.138.51.2) 96.854 ms lo0.fab4-2-gdc.ne1.yahoo.com (98.138.51.3) 76.542 ms 16 usw2-1-lbd.ne1.yahoo.com (98.138.97.157) 78.076 ms 78.943 ms 75.405 ms 17 media-router-fp73.prod.media.vip.ne1.yahoo.com (74.6.231.20) 81.217 ms 77.895 ms 84.628 ms . Parallel and Distributed Computing . Single Core versus Multiple Cores allows allows parallel computing. Using multiple Cores allows a sequential job to be split up with minimum time being the length of longest job(s). What is best time for 30 seconds, 50 seconds, 40 seconds jobs on a two core computer? . Distributed Computing - Bitcoin mining is an example of distributed computing. A tough digital computing puzzle illustrates need for CPU/GPU power. A distributed ledger amongst multiple miners is verified to avoid fraud. The result of this distributed computing network is a new financial economy. | . . Parallel Computing - Chrome, the browser most of us use to run our Web Application is a great example of a multi process architecture. There are two primary types of processes in Chrome : the browser process and the render process. . Browser process interacts with information from internet. This has multiple functions: Web contents represents a tab within the browser. Render View manages all IPC (Inter Process Communication), for instance the HTTP actions. . | Render process is responsible for constructing a web page. Webkit is the engine and contains WebCore which constructs DOM (layout) and the JavaScript interpreter. . | . | . .",
            "url": "http://localhost:4100/teacher_portfolio/c7.1/c9.3/2023/11/14/CSP-the_network_computing.html",
            "relUrl": "/c7.1/c9.3/2023/11/14/CSP-the_network_computing.html",
            "date": " • Nov 14, 2023"
        }
        
    
  
    
        ,"post59": {
            "title": "Big Idea 4.1 The Internet",
            "content": "The Internet . To date, with deployment individuals and teams have been very active Computing Systems and Networks. Here are some key elements that have been a part of the students Internet experience… . HTTP/HTTPs protocol. Think about elements in videos and experience so far in class that relate to this College Board topic. | DNS. Where is this show in the College Board materials. Think about Domain Name Service provider and places where you configured or used a Domain. Also, identify a Sub Domain and how it is different than a Domain. Include in discussion usage an purpose of https://www.whatsmydns.net/, A record and CNAME. | IP Address. Try to describe at least 6 IP addresses you use daily. Try using and understanding https://www.whatsmyip.org/. | Observe Internet Traffic. Try Linux tools bandwidth tools Article | Finish up with OSI. Try to make it real, according to what we have done. | Web browsers and servers use TCP/IP protocols to connect to the Internet. Common TCP/IP protocols are . Internet, Word Wide Web, Local Area Network, HTTP, DNS, TCP, UDP, IP. Discussion focuses on Letters and Jig Saw puzzles as analogy for Source, Destination, and Packets. . HTTP - Hyper Text Transfer Protocol, HTTPS - Secure HTTP . HTTP takes care of the communication between a web server and the clients web browser. HTTP is used for sending requests from a web client to receive a response from the server. Response could be HTML or JSON. . | HTTPS takes care of secure communication between a web server and a web browser. In our deployment process we used certbot to make HTTP communication secure all the time. . | . | TCP/IP - Transmission Control Protocol, Internet Protocol . TPC/IP messages are broken up into small independent “packets” and sent between computers via the Internet. . | IP is responsible for “routing” each packet to the correct destination. When an IP packet is sent from a computer, it arrives at an IP router. The IP router is responsible for “routing” the packet to the correct destination, directly or via another router. . | . | Network Layer - The wireless and physical layers that move bits and bytes “11010001” across the internet. . | . . Hacks . Show individual, pair, and team knowledge of Systems and interactions of Systems. . Review Big Idea Unit 4.1 videos and questions | Produce a Blog showing idea in ths Blog thinking about Systems and Devops so far in your experience. This blog will also show how you are planning and taking notes for College Board and PBL topics. | Electronic and Wall diagrams are highly recommended. These should be incorporated into blog(s). | .",
            "url": "http://localhost:4100/teacher_portfolio/c7.2/2023/11/14/CSP-the_internet.html",
            "relUrl": "/c7.2/2023/11/14/CSP-the_internet.html",
            "date": " • Nov 14, 2023"
        }
        
    
  
    
        ,"post60": {
            "title": "Binary Logic | Key Indicators | Retrospective",
            "content": "Key Indicator Grading and Retrospective . This review includes requirements from both written and verbal instructions that were provided during Sprint 4. The term “retrospective” in agile development is an opportunity to make things better. . An agile retrospective is an opportunity for agile development teams to reflect on past work together and identify ways to improve. Agile teams hold retrospective meetings after a time-boxed period of work is complete (typically a sprint lasting two to four weeks). During the retrospective, the team discusses what went well, what did not go as planned, and how to make the next work period better. . Team Grading Prep (25 minutes) . This “retrospective” to “ideation” week will be used for teams to improve their work (retrospective) and transition into design (ideation) for the Official College Board CPT. . Review Ticket Content. Teams will provide the Teacher with a “Review Ticket” to capture scores, plans, highlight projects, what went well, and what needs improvement. . Utterance Comment. Team review ticket will be an Utterance comment on this blog. . Crossover Grades. Teams / Individuals will crossover grade another team. In the process of development, we often use this type of review to broaden our perspective. . Review Ticket Header . Use the templates below to assist in grading and retrospection with Review Ticket. This Table is a summary of the most important information between Student development teams and Teacher. . Team . Crossover Score | Runtime | Plan | GitHub | Analytics | . 0.87 | Binary Calculator | Binary Logic | teacher_portfolio | Deployments | . Individuals . Name | Team+Indi+Teacher | Runtime | Issues | Key Commit(s) | Analytics | . John M | 1.71=0.87+0.84+? | Binary Calculator | CORS example | SASS buttons, Binary Source | Commits, Profile | . Crossover Grade (25 minutes) . Teams / Individuals will perform crossover grading. . Crossover Scrum Master grading. Scrum Master Team A grades Scrum Master Team B. Place grading in the Header of Review Ticket according to the template. Also, perform individual crossover grading on each other. Be sure to be retrospective. | Crossover individual grading. Grade individual by individual (Team A to Team B), if there is an odd person working in a trio. Be sure that I know the name of each grader and who you are grading (i.e., John M grading of Shane L) | After grading is complete, Scrum Master or Individuals update scores on top of the review ticket. Scrum Master reviews sources for completeness and makes sure the addition is correct. | . Final Grading . Teacher Grading will consider any change to the final 0.1. Note, this would be considered both in meeting guidelines of the project or extra credit. . Retrospective improvement. Teams and individuals will have time to make improvements during the week. | Indicators in Crossover are final. Do not change scoring after these initial indicators are made. This will be considered “doctoring”, | Extra credit. If there are concerns about score, understanding, or completeness in this process… It is possible to add to seed. Individuals will be responsible to come up with action. | . Key Indicators Team Template . Grade each checkmark below on a scale of 0 to .9. Total and divide by 5 for the final score. . Cut Copy and Paste . Team Review &quot;Scrum Master A&quot; grading &quot;Scrum Master B&quot; - [ ] The team should have a Web Pages that teach: Binary, Data, Data Structures, Data Abstraction. Team Review ticket containing key Team and individual contributions - [ ] Growth/Accomplishments in work is according to historical Team Plan, or they show revisions to plan according to work - [ ] Short falls/Improvement that could be made in Work or Team Plan, team highlights next steps or improvements that could be made - [ ] Showing key accomplishments according to requirement in Frontend such as Binary Math, ASCII, Unicode, Color Codes, Logic Gates, etc. - [ ] Showing key user interaction and learning(s). For instance how you visualized Algorithms, Data, Data Structures. Or, how you provided response and Feedback to user on their success in learning. Per check. 0.55 not attempted/no check 0.7 attempted, incoomplete, but some runtime 0.8 mastery and runtime 0.9 above and beyond. Freeform comment. Provide positivies and growth summary. Justify or comment on final score. Be sure to provide extra details on anything below 0.7 average or above 0.8. . Key Indicators Individual Template . Grade each checkmark below on scale 0 to .9. Total and divide by number of bullets for final score. . Cut Copy and Paste to Team Review Ticket . Individual Review &quot;My name&quot; grading &quot;Their name&quot; - [ ] Individual should show that they were key contributor and example to team. This includes their participation in ideas, plans, creating individual issues, providing code commits to project, crossover grading participation, being on task and positive example in the classroom. Individuals Video, Issue(s), Commits(s) - [ ] Video in CPT caption style , includes Web demo of key contribution to project, 1 minute - [ ] Issue(s) that show plans/progress to team objectives - [ ] Highlights of key commit(s) in Issues, summarizes code contributions - [ ] Review GitHub analytics for key commits in each weeks during the project, shows consistent participation for 3 weeks Per check. 0.55 not attempted/no check 0.7 attempted, incoomplete, but some runtime 0.8 mastery and runtime 0.9 above and beyond. Freeform comment. Provide positivies and growth summary. Justify or comment on final score. Be sure to provide extra details on anything below 0.7 average or above 0.8. . Example from CSA .",
            "url": "http://localhost:4100/teacher_portfolio/2023/11/14/CSP-binary_logic_retro.html",
            "relUrl": "/2023/11/14/CSP-binary_logic_retro.html",
            "date": " • Nov 14, 2023"
        }
        
    
  
    
        ,"post61": {
            "title": "Binary Logic | CPT | Requirements",
            "content": "Binary, Data, Data Structures, Data Abstraction (ASCII, Unicode, Color Codes) . Algorithms, Data, Data Structures, and Visualization can go together. To start this warmup project, use Classroom and CPT requirements to venture into Algorithms. This blog is a collection of binary, data and data structures and should be a great CPT practice project. . Explore a topic in Computer Science manner (research, jupyter notebooks, frontend / backend coding) | Tour the Code. Use Binary Frontend Code to get you started. Obtain code form teacher project drag and drop _posts/2023-09-14-javascript-binary-U2-1.ipynb to your project and Debug | This Tech Talk will introduce requirements and finish with required hacks. Consider this blog and Binary Frontend Code as part of your research. | . Math in Binary . Learn binary by bitwise operators and more. Shifting bits is a common computer operation and does wonderful things in math like multiply and divide. Last bit always determines odd or even. Look for shift on w3schools . Logic of Shift . Explore right and left shifts with binary numbers. . In an arithmetic shift, the bits that are shifted out of either end are discarded. You need to be aware of how many bits you have to avoid overflow in math operations. | In a left arithmetic shift, zeros are shifted in on the right. | . Understand binary Numbers by elaboration of Shift (2^^0, 2^^1, 2^^2) . How does the Power of 2 work? What is a binary number? What is Base2, Base10, Base16. . This example uses an 8-bit register. Math can be represented in much in many more bits, 32 bits or 2 bytes is common for integer in modern computer languages. | Most Significant Bit (MSB), least (LSB) | This example shows negative and positive numbers, using technique called Twos Complement. | In the first case, the leftmost digit was shifted past the end of the register, and a new 0 was shifted into the rightmost position. Positive Multiply. | In the second case, the rightmost 1 was shifted out, and a new 1 was copied into the leftmost position, preserving the sign of the number. Negative Divide, this example obviously needs more study. | . UI Concept/Design . Conceptualize a UI that will illustrate binary and decimal. In learning these concepts, it is best to code and example to illustrate what is happening. . n Right Shifts (divides by 2^n); n Left Shifts (multiplies by 2^n) | Add buttons for “«” and “ »” | . ASCII and Unicode . Computers represent more than Math. Mostly everyone is familiar with the characters on a keyboard and Emojis. These are all represented in binary, the data abstraction being the characters we visualize. 😂 . Character Data Abstraction . How are characters stored? How many bits do they take? . ASCII is 8 bits, it generally represent keys on keyboard. Look up ASCII Table. | Unicode can be UTF-8, 16 or 32, each representing bits. ASCII is preserved in Unicode. | ASCII - 7 bits, extended to 8 bits with Unicode | UTF-8 | UTF-16 | UTF-32 Sample of Unicode characters. | . Character Concept/Design . The ASCII value in picture should be changed based off of the bits in evaluation you are doing. Bits displayed, label, and evaluation would be specific to evaluation type: Original ASCII . Color Codes . Pixels are little dots on Monitors and TVs that make up the display. Each pixel has an Red Green and Blue value (RGB). All pictures we see or take are composed of RGB using a density measurement. These are stored and then represented by digitally or in print. . Monitors 1280 x 1024 Super-eXtended Graphics Array (SXGA) | 1366 x 768 High Definition (HD) | 1600 x 900 High Definition Plus (HD+) | 1920 x 1080 Full High Definition (FHD) | 1920 x 1200 Wide Ultra Extended Graphics Array (WUXGA) | . | TVs 4K Ultra HD: The term 4K means the screen is about 4,000 pixels wide. … | 1080p (Full HD): This resolution is 1,920 x 1,080 pixels. … | 720p (HD Ready): This is mostly found on smaller TVs, and it has a resolution of 1,280 x 720. | . | Camera |Sensor Resolution (megapixels)|Typical Image Resolution (pixels)| |2.16|1800 x 1200| |3.9|2272 x 1704| |5.0|2592 x 1944| |7.1|3072 x 2304| |8.0|3264 x 2448| |10.0|3648 x 2736| |12.1|4000 x 3000| |14.7|4416 x 3312| |21.0|5616 x 3744| | . A Color code is a 24 bit abstraction . There are 8 bits for Red, 8 bits for Blue, and 8 bits for Green. . Name | Hex Code | RGB Code | . Black | #000000 | rgb(0, 0, 0) | . Red | #FF0000 | rgb(255, 0, 0) | . Maroon | #800000 | rgb(128, 0, 0) | . Yellow | #FFFF00 | rgb(255, 255, 0) | . 255 * 255 * 255 combinations of R, G, B . Color UI Design . Here is a sample program a student used to visualize color by turning buttons on and off. by Anthony Vo 3 rows representing R, G, B Resulting color displayed in block . Logic Gates . The fundamentals of all decisions in computers is made by logic gates. These gates are visualized by permuting 1 and 0 across many different types of decisions. The result is an expression that evaluated to 1 or 0. These are called Truth Tables. . Logic Gates can be simulated with 2 bits . Look for bitwise operators on w3schools . Logic UI Concept . Visual concept of logic gates . Establish check boxes for A / B on and off | Show result of Boolean Expression using Gate visual Logic Gates | . Logic UI Design . Logic gate lab in JavaScript by Kylie Scharf AB checkboxes with Submit button Table with Symbol, Description, and Result . Logic of Logic Gates . A logic gate can have two inputs (a,b) and by how changing these inputs it impacts the output(c). . There are four possible inputs: 0 0 | 0 1 | 1 0 | 1 1 | . | Understanding the output enables us to understand a logical expressions. All outputs are routed in Logic Gates (similar to how a language is routed in Latin). AND is true for 1 1; NAND is true opposite of AND 0 0, 0 1, 1 0 | OR is true for 1 1, 0 1, 1 0, NOR is true opposite of OR 0 0 | XOR is true for 0 1, 1 0 | . | . Practical Application . Logic gates are used everywhere . Unsigned Addition . Here we are requesting 3 rows of bits to simulate Math. This could be done with 4, 8, or 16 bits. . Initial UI Implementation . Action buttons for +1 and -1 Additional actions for Turn On and Turn Off . Unsigned Addition Exanoke . . Signed Addition . Integers in most languages are int8, int16, int32, or int64. They typically reserve left most bit for sign. . Common concept for Integer Math . Positive number . Basic concept, but not typically used . Negative number . Inverting numbers, twos complement . Two’s complement allows adding for signed and unsigned numbers . Basic concept is to invert/negate bits to produce negative. This allows numbers to be added together for expected results. » and »&gt; have been adapted to handle signed and zero filled shifting. . Technical helpers . Harvard CS50 minute 0 to minute 50 to provide background on some of the information below . Algorithm in Jinja2 to limit Bits per row . 8 images per row by Kylie Scharf, Modulo 8 algorithm add &lt;tr&gt; for every eight bits (code). . Research Helpers . CHAPTER 8 - Binary Addition and Two’s Complement Overview find by Val Wilson . Hacks . Data, Data Structures, Algorithm, and Visualization work together. Data helps supply an interests/topic to an algorithm. It will be expected that you build topics above into your team mini project. . This project will be two weeks long and will incorporate Ideation, Design, Feature Implementation, Integration, Test Complete phases. | Add “Science” into your process*** (research, jupyter notebook, and ultimately running application) | Topics used for teaching, not listed in this blog need to be approved by Teacher. | Topics need to focus on data ideas from Unit 2 of AP Classroom. | Visualization require style using GitHub Pages Theme techniques (SASS) | .",
            "url": "http://localhost:4100/teacher_portfolio/1.d/2.b/3.c/c4.4/2023/11/14/CSP-binary_logic.html",
            "relUrl": "/1.d/2.b/3.c/c4.4/2023/11/14/CSP-binary_logic.html",
            "date": " • Nov 14, 2023"
        }
        
    
  
    
        ,"post62": {
            "title": "Abstract Fibonacci",
            "content": "/* * Creator: Nighthawk Coding Society * Mini Lab Name: Fibonacci sequence, featuring a Stream Algorithm * */ import java.util.ArrayList; import java.util.HashMap; import java.util.stream.Stream; /* Objective will require changing to abstract class with one or more abstract methods below */ abstract class Fibo { String name; // name or title of method int size; // nth sequence int hashID; // counter for hashIDs in hash map ArrayList&lt;Long&gt; list; // captures current Fibonacci sequence HashMap&lt;Integer, Object&gt; hash; // captures each sequence leading to final result /* Zero parameter constructor uses Telescoping technique to allow setting of the required value nth @param: none */ public Fibo() { this(8); // telescope to avoid code duplication, using default as 20 } /* Construct the nth fibonacci number @param: nth number, the value is constrained to 92 because of overflow in a long */ public Fibo(int nth) { this.size = nth; this.list = new ArrayList&lt;&gt;(); this.hashID = 0; this.hash = new HashMap&lt;&gt;(); //initialize fibonacci and time mvc this.init(); } /* This Method should be &quot;abstract&quot; Leave method as protected, as it is only authorized to extender of the class Make new class that extends and defines init() Inside references within this class would change from this to super Repeat process using for, while, recursion */ protected abstract void init(); /* Number is added to fibonacci sequence, current state of &quot;list&quot; is added to hash for hashID &quot;num&quot; */ public void setData(long num) { list.add(num); hash.put(this.hashID++, list.clone()); } /* Custom Getter to return last element in fibonacci sequence */ public long getNth() { return list.get(this.size - 1); } /* Custom Getter to return last fibonacci sequence in HashMap */ public Object getNthSeq(int i) { return hash.get(i); } /* Console/Terminal supported print method */ public void print() { System.out.println(&quot;Init method = &quot; + this.name); System.out.println(&quot;fibonacci Number &quot; + this.size + &quot; = &quot; + this.getNth()); System.out.println(&quot;fibonacci List = &quot; + this.list); System.out.println(&quot;fibonacci Hashmap = &quot; + this.hash); for (int i=0 ; i&lt;this.size; i++ ) { System.out.println(&quot;fibonacci Sequence &quot; + (i+1) + &quot; = &quot; + this.getNthSeq(i)); } } } . public class FiboFor extends Fibo { public FiboFor() { super(); } public FiboFor(int nth) { super(nth); } @Override protected void init() { super.name = &quot;FiboFor extends Fibo&quot;; long limit = this.size; // for loops are likely the most common iteration structure, all the looping facts are in one line for (long[] f = new long[]{0, 1}; limit-- &gt; 0; f = new long[]{f[1], f[0] + f[1]}) this.setData(f[0]); } /* Tester class method. */ static public void main(int... numbers) { for (int nth : numbers) { Fibo fib = new FiboFor(nth); fib.print(); System.out.println(); } } } FiboFor.main(2, 3, 4, 5); . Init method = FiboFor extends Fibo fibonacci Number 2 = 1 fibonacci List = [0, 1] fibonacci Hashmap = {0=[0], 1=[0, 1]} fibonacci Sequence 1 = [0] fibonacci Sequence 2 = [0, 1] Init method = FiboFor extends Fibo fibonacci Number 3 = 1 fibonacci List = [0, 1, 1] fibonacci Hashmap = {0=[0], 1=[0, 1], 2=[0, 1, 1]} fibonacci Sequence 1 = [0] fibonacci Sequence 2 = [0, 1] fibonacci Sequence 3 = [0, 1, 1] Init method = FiboFor extends Fibo fibonacci Number 4 = 2 fibonacci List = [0, 1, 1, 2] fibonacci Hashmap = {0=[0], 1=[0, 1], 2=[0, 1, 1], 3=[0, 1, 1, 2]} fibonacci Sequence 1 = [0] fibonacci Sequence 2 = [0, 1] fibonacci Sequence 3 = [0, 1, 1] fibonacci Sequence 4 = [0, 1, 1, 2] Init method = FiboFor extends Fibo fibonacci Number 5 = 3 fibonacci List = [0, 1, 1, 2, 3] fibonacci Hashmap = {0=[0], 1=[0, 1], 2=[0, 1, 1], 3=[0, 1, 1, 2], 4=[0, 1, 1, 2, 3]} fibonacci Sequence 1 = [0] fibonacci Sequence 2 = [0, 1] fibonacci Sequence 3 = [0, 1, 1] fibonacci Sequence 4 = [0, 1, 1, 2] fibonacci Sequence 5 = [0, 1, 1, 2, 3] . public class FiboStream extends Fibo { public FiboStream() { super(); } public FiboStream(int nth) { super(nth); } @Override protected void init() { super.name = &quot;FiboStream extends Extends&quot;; // Initial element of stream: new long[]{0, 1} // Lambda expression calculate the next fibo based on the current: f -&gt; new long[]{f[1], f[0] + f[1]} Stream.iterate(new long[]{0, 1}, f -&gt; new long[]{f[1], f[0] + f[1]}) .limit(super.size) // stream limit .forEach(f -&gt; super.setData(f[0]) ); // set data in super class } /* Tester class method. */ static public void main(int... numbers) { for (int nth : numbers) { Fibo fib = new FiboFor(nth); fib.print(); System.out.println(); } } } FiboStream.main(7); . Init method = FiboFor extends Fibo fibonacci Number 7 = 8 fibonacci List = [0, 1, 1, 2, 3, 5, 8] fibonacci Hashmap = {0=[0], 1=[0, 1], 2=[0, 1, 1], 3=[0, 1, 1, 2], 4=[0, 1, 1, 2, 3], 5=[0, 1, 1, 2, 3, 5], 6=[0, 1, 1, 2, 3, 5, 8]} fibonacci Sequence 1 = [0] fibonacci Sequence 2 = [0, 1] fibonacci Sequence 3 = [0, 1, 1] fibonacci Sequence 4 = [0, 1, 1, 2] fibonacci Sequence 5 = [0, 1, 1, 2, 3] fibonacci Sequence 6 = [0, 1, 1, 2, 3, 5] fibonacci Sequence 7 = [0, 1, 1, 2, 3, 5, 8] . Hacks . Solve Fibonacci using two additional algorithms. .",
            "url": "http://localhost:4100/teacher_portfolio/1.b/4.c/5.a/c4.8/c4.9/2023/11/13/java_fibonaccii_abstract_IPYNB_2_.html",
            "relUrl": "/1.b/4.c/5.a/c4.8/c4.9/2023/11/13/java_fibonaccii_abstract_IPYNB_2_.html",
            "date": " • Nov 13, 2023"
        }
        
    
  
    
        ,"post63": {
            "title": "View/Frontend",
            "content": "GitHub Pages Organization and Design . HTML, JavaScript, and a JavaScript fetch are all things you can do in a GitHub Pages View. Additionally, every GitHub page inherits from Theme, minimizing need to define a lot of CSS. Some key elements… . Style, the visual design. SASS files in assets/css/style.scss, review GitHub pages theme for instructions | . | Head and Body. The HTML tags used to structure every page. Layout files in _layouts/default.html, structure is provided by GitHub pages theme | Supplement layout with files in _includes, for instance _layouts/home.html is used to add menu selections to pages by including it in _layouts/default.html. | . | Page. Markdown or HTML is defined and constructed into page using Jekyll Build, refer to content reference in _layouts/default.html. Observe how files are built by looking at generated html files under _site. | . View/CRUD Concepts . In a database project, the key idea is to build a system for capturing key information. For instance, student information on students and allowing *blogging to a Teacher would have Frontend View elements that correspond to a Backend Database. . Backend Database CRUD operations are as follows… . Create new student records | Read a list of students | Update student data | Delete records | . Frontend Visual concepts of the Idea . . HTML to Obtain Input is a key step (aka Create/Input Step) . HTML5 table is a way to organize input . th labels | td input types | onclick action | . /* &lt;table&gt; &lt;tr&gt; &lt;th&gt;&lt;label for=&quot;name&quot;&gt;Name&lt;/label&gt;&lt;/th&gt; &lt;th&gt;&lt;label for=&quot;email&quot;&gt;Email&lt;/label&gt;&lt;/th&gt; &lt;th&gt;&lt;label for=&quot;password&quot;&gt;Password&lt;/label&gt;&lt;/th&gt; &lt;th&gt;&lt;label for=&quot;phone&quot;&gt;Phone&lt;/label&gt;&lt;/th&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;&lt;input type=&quot;text&quot; name=&quot;name&quot; id=&quot;name&quot; required&gt;&lt;/td&gt; &lt;td&gt;&lt;input type=&quot;email&quot; name=&quot;email&quot; id=&quot;email&quot; placeholder=&quot;abc@xyz.org&quot; required&gt;&lt;/td&gt; &lt;td&gt;&lt;input type=&quot;password&quot; name=&quot;password&quot; id=&quot;password&quot; required&gt;&lt;/td&gt; &lt;td&gt;&lt;input type=&quot;tel&quot; name=&quot;phone_num&quot; id=&quot;phone_num&quot; pattern=&quot;[0-9]{3}-[0-9]{3}-[0-9]{4}&quot; placeholder=&quot;999-999-9999&quot;&gt;&lt;/td&gt; &lt;td &gt;&lt;button onclick=&quot;create_User()&quot;&gt;Create&lt;/button&gt;&lt;/td&gt; &lt;/tr&gt; &lt;/table&gt; */ . Table . Name Email Password Phone . | | | | Create | . HTML5 form is another way to organize input . form action vs onclick | p labels and input, in real implementation combine with CSS | . /* &lt;form action=&quot;create_User()&quot;&gt; &lt;p&gt;&lt;label&gt; Name: &lt;input type=&quot;text&quot; name=&quot;name&quot; id=&quot;name&quot; required&gt; &lt;/label&gt;&lt;/p&gt; &lt;p&gt;&lt;label&gt; User ID: &lt;input type=&quot;text&quot; name=&quot;uid&quot; id=&quot;uid&quot; required&gt; &lt;/label&gt;&lt;/p&gt; &lt;p&gt;&lt;label&gt; Password: &lt;input type=&quot;password&quot; name=&quot;password&quot; id=&quot;password&quot; required&gt; Verify Password: &lt;input type=&quot;password&quot; name=&quot;passwordV&quot; id=&quot;passwordV&quot; required&gt; &lt;/label&gt;&lt;/p&gt; &lt;p&gt;&lt;label&gt; Phone: &lt;input type=&quot;tel&quot; name=&quot;phone_num&quot; id=&quot;phone_num&quot; pattern=&quot;[0-9]{3}-[0-9]{3}-[0-9]{4}&quot; placeholder=&quot;999-999-9999&quot;&gt; &lt;/label&gt;&lt;/p&gt; &lt;p&gt;&lt;label&gt; Birthday: &lt;input type=&quot;date&quot; name=&quot;dob&quot; id=&quot;dob&quot;&gt; &lt;/label&gt;&lt;/p&gt; &lt;p&gt; &lt;button&gt;Create&lt;/button&gt; &lt;/p&gt; &lt;/form&gt; */ . Form . Name: . User ID: . Password: Verify Password: . Phone: . Birthday: . Create . JavaScript Fetch and Response (aka Post Step) . After Input call action | Extract data from DOM | Build url | Fetch | Add response to end of table | . function create_User(){ // extract data from inputs const name = document.getElementById(&quot;name&quot;).value; const email = document.getElementById(&quot;email&quot;).value; const password = document.getElementById(&quot;password&quot;).value; const phone = document.getElementById(&quot;phone&quot;).value; const requestOptions = { method: &#39;POST&#39;, headers: { &#39;Content-Type&#39;: &#39;application/json&#39;, &#39;Authorization&#39;: &#39;Bearer my-token&#39;, }, }; //url for Create API const url=&#39;/crud_api/create/&#39; + name + &#39;/&#39; + email+ &#39;/&#39; + password + &#39;/&#39; + phone; //Async fetch API call to the database to create a new user fetch(url, requestOptions).then(response =&gt; { // prepare HTML search result container for new output const resultContainer = document.getElementById(&quot;result&quot;); // trap error response from Web API if (response.status !== 200) { const errorMsg = &#39;Database response error: &#39; + response.status; console.log(errorMsg); // Email must be unique, no duplicates allowed document.getElementById(&quot;pswError&quot;).innerHTML = &quot;Email already exists in the table&quot;; return; } // response contains valid result response.json().then(data =&gt; { console.log(data); //add a table row for the new/created userId const tr = document.createElement(&quot;tr&quot;); for (let key in data) { if (key !== &#39;query&#39;) { //create a DOM element for the data(cells) in table rows const td = document.createElement(&quot;td&quot;); console.log(data[key]); //truncate the displayed password to length 20 if (key === &#39;password&#39;){ td.innerHTML = data[key].substring(0,17)+&quot;...&quot;; } else{ td.innerHTML = data[key];} //add the DOM data element to the row tr.appendChild(td); } } //append the DOM row to the table table.appendChild(tr); }) }) } . HTML and JavaScript Display Table . JavaScript below shows elements needed to construct the rows of data in the table. . JSON is required, it is hardcoded in this example. Typically JSON will come from a JavaScript fetch. | JSON object is required, it is created from JSON string. This allows access to to elements in JSON using JavaScript dot notation (user._name) | DOM editing is a huge part of the remainder of this example. DOM elements often nest inside of other DOM elements. For instance each td is nested in tr. Find examples of DOM create and append in the code below. | Notice the definition of table and build you own map or visual of how these things are put together. | . /* &lt;table&gt; &lt;thead&gt; &lt;tr&gt; &lt;th&gt;Name&lt;/th&gt; &lt;th&gt;ID&lt;/th&gt; &lt;th&gt;Actions&lt;/th&gt; &lt;/tr&gt; &lt;/thead&gt; &lt;tbody id=&quot;table&quot;&gt; &lt;!-- javascript generated data --&gt; &lt;/tbody&gt; &lt;/table&gt; */ // Static json, this can be used to test data prior to API and Model being ready const json = &#39;[{&quot;_name&quot;: &quot;Thomas Edison&quot;, &quot;_uid&quot;: &quot;toby&quot;}, {&quot;_name&quot;: &quot;Nicholas Tesla&quot;, &quot;_uid&quot;: &quot;nick&quot;}, {&quot;_name&quot;: &quot;John Mortensen&quot;, &quot;_uid&quot;: &quot;jm1021&quot;}, {&quot;_name&quot;: &quot;Eli Whitney&quot;, &quot;_uid&quot;: &quot;eli&quot;}, {&quot;_name&quot;: &quot;Hedy Lemarr&quot;, &quot;_uid&quot;: &quot;hedy&quot;}]&#39;; // Convert JSON string to JSON object const data = JSON.parse(json); // prepare HTML result container for new output const table = document.getElementById(&quot;table&quot;); data.forEach(user =&gt; { // build a row for each user const tr = document.createElement(&quot;tr&quot;); // td&#39;s to build out each column of data const name = document.createElement(&quot;td&quot;); const id = document.createElement(&quot;td&quot;); const action = document.createElement(&quot;td&quot;); // add content from user data name.innerHTML = user._name; id.innerHTML = user._uid; // add action for update button var updateBtn = document.createElement(&#39;input&#39;); updateBtn.type = &quot;button&quot;; updateBtn.className = &quot;button&quot;; updateBtn.value = &quot;Update&quot;; updateBtn.style = &quot;margin-right:16px&quot;; updateBtn.onclick = function () { alert(&quot;Update: &quot; + user._uid); }; action.appendChild(updateBtn); // add action for delete button var deleteBtn = document.createElement(&#39;input&#39;); deleteBtn.type = &quot;button&quot;; deleteBtn.className = &quot;button&quot;; deleteBtn.value = &quot;Delete&quot;; deleteBtn.style = &quot;margin-right:16px&quot; deleteBtn.onclick = function () { alert(&quot;Delete: &quot; + user._uid); }; action.appendChild(deleteBtn); // add data to row tr.appendChild(name); tr.appendChild(id); tr.appendChild(action); // add row to table table.appendChild(tr); }); . View/Blog Concepts . A notes/blog would be created to add Notes between students and teacher, part of original concept. Notes could be used for many types of applications. Details on creating notes will be part of another blog, but for now we want you to think about design. . In this design, most recent messages are on top | Messages are intended to support markdown and inclusion of images | Think about technique to format images in conjunction with Text | . . Hacks . Build and correlate a technical design between frontend view and backend model. This blog is focussing on frontend view., and visual concepts on how CRUD operations are presented to user of system. This particular Jupyter Notebook and code within it are used to help establish technical ideas. Start a design for your project… . Each project must have a View (as pictured) and Model (json data is fetched into the View). Describe your project. | Describe your View. Use Markdown, HTML, UML, other visuals, tables are used to characterize a project. This shows the Teacher and Graders understanding of planning Model and View. | Transition from pure design and start inserting code elements, like inputs. Also, try build a table with json data versus fetching data. | Issues should discuss problems/challenges, in Teacher/Student data here are a couple … This design will have many JavaScript actions, at least one for each CRUD operation. In this design, developer needs think of JavaScript functions to replace placeholder alerts in example code above. | There can be different roles for CRUD operations. For instance, student will only interact with their own account. Teacher may interact with many accounts. | Given these CRUD operations what kind of APIs are needed? They should map closely button/on click actions, as each action will fetch or manipulate data differently. | . | . Extra Credit. Student(s) could assist in rework of my Flask project from last year into a Frontend / Backend solution. Additionally, if Frontend is done correctly it could easily be modified to work with both Spring and Flask backends. . References . Here are some working samples . Fetching table data . | Obtaining input . | .",
            "url": "http://localhost:4100/teacher_portfolio/cpt/view",
            "relUrl": "/cpt/view",
            "date": " • Nov 13, 2023"
        }
        
    
  
    
        ,"post64": {
            "title": "UX-BE, Spring/Thymeleaf",
            "content": "Tour of Frontend . . This visual shows files for a Java Spring Boot Web Application project. The frontend of the project contains HTML files that are infused with Thymeleaf. Each frontend file has a backend has a Controller that loads the HTML template. In this illustration Greet.java loads greet.html, Birds.java loads birds.html, index.html is using default/non-visible Controller to load its page. This article will discuss the HTML files, the backend will discuss the Java files Read more or review files in the Spring Boot Reference Documentation . . HTML page (index.html) . The index.html file is infused with page specific fragments via Thymeleaf, it uses layouts/base.html as the template. Thus, files in this project are NOT pure HTML. The Thymeleaf pre-processor runs across all HTML files in this project, taking fragments and base to form pure HTML prior to files being sent to the Web Browser. Review comments in source code for understanding … . &lt;!-- This page is illustrative and contains ideas about HTML formatting --&gt; &lt;!DOCTYPE HTML&gt; &lt;!-- Signals HTML to understand Thymeleaf Layout Dialect --&gt; &lt;html xmlns:layout=&quot;http://www.w3.org/1999/xhtml&quot; xmlns:th=&quot;http://www.w3.org/1999/xhtml&quot; layout:decorate=&quot;~{layouts/base}&quot; lang=&quot;en&quot;&gt; &lt;head&gt; &lt;!-- Thymeleaf inserts below th:block into the &lt;head&gt; from layout/base.html --&gt; &lt;th:block layout:fragment=&quot;head&quot; th:remove=&quot;tag&quot;&gt; &lt;title&gt;Intro&lt;/title&gt; &lt;/th:block&gt; &lt;/head&gt; &lt;body&gt; &lt;!-- Thymeleaf inserts below into the &lt;body&gt; from layout/base.html --&gt; &lt;th:block layout:fragment=&quot;body&quot; th:remove=&quot;tag&quot;&gt; &lt;!-- Start of body content specific to page --&gt; &lt;div class=&quot;px-5 py-5 mx-auto&quot;&gt; &lt;h1&gt;&lt;strong&gt;Java Home Page&lt;/strong&gt;&lt;/h1&gt; &lt;!-- This page uses BootStrap defined in layout/base.html --&gt; &lt;div class=&quot;row&quot;&gt; &lt;!-- each row has 12 logical positions --&gt; &lt;div class=&quot;col-4&quot;&gt; &lt;!-- each card is grated 4 positions, 3 cards to a row --&gt; &lt;div class=&quot;card&quot;&gt; &lt;img class=&quot;card-img-top&quot; th:src=&quot;@{/images/java.png}&quot; alt=&quot;Java Development&quot; height=&quot;250&quot;&gt; &lt;div class=&quot;card-body&quot;&gt; &lt;h5 class=&quot;card-title&quot;&gt;What should Java Developers learn?&lt;/h5&gt; &lt;p class=&quot;card-text&quot;&gt; &lt;ol&gt; &lt;li&gt;Java 11-17 is used for PBL. Java 8 appears to be College Board standard. Java features like Reactive Streams, HTTP2 client, JShell, React JS are more recent than 8.&lt;/li&gt; &lt;li&gt;GitHub. Learning to master managing change, branches, pull requests, and more.&lt;/li&gt; &lt;li&gt;Development DevOps. Java programmers should have a passion for managing the environment and learning automation (Git, Maven, Docker).&lt;/li&gt; &lt;li&gt;REST and Microservice using Spring. Mastering creating and consuming RESTful APIs&lt;/li&gt; &lt;/ol&gt; &lt;/p&gt; &lt;a href=&quot;#&quot; class=&quot;btn btn-primary&quot;&gt;Go somewhere&lt;/a&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;col-4&quot;&gt; &lt;div class=&quot;card&quot;&gt; &lt;img class=&quot;card-img-top&quot; th:src=&quot;@{/images/spring.png}&quot; alt=&quot;Spring Development&quot; height=&quot;250&quot;&gt; &lt;div class=&quot;card-body&quot;&gt; &lt;h5 class=&quot;card-title&quot;&gt;What is Spring?&lt;/h5&gt; &lt;p class=&quot;card-text&quot;&gt; &lt;ol&gt; &lt;li&gt;Spring Framework is the most popular application development framework of Java. &lt;/li&gt; &lt;li&gt;Spring Boot helps to create a stand-alone application with less configuration.&lt;/li&gt; &lt;li&gt;Spring MVC is a model view controller-based web framework under the Spring framework.&lt;/li&gt; &lt;li&gt;ThymeLeaf is a server-side Java template engine, supports HTML5 JVM web development, and provides full integration with Spring Framework.&lt;/li&gt; &lt;/ol&gt; &lt;/p&gt; &lt;a href=&quot;#&quot; class=&quot;btn btn-primary&quot;&gt;Go somewhere&lt;/a&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;col-4&quot;&gt; &lt;div class=&quot;card&quot;&gt; &lt;img class=&quot;card-img-top&quot; th:src=&quot;@{/images/pojo.jpeg}&quot; alt=&quot;Java Persistence&quot; height=&quot;250&quot;&gt; &lt;div class=&quot;card-body&quot;&gt; &lt;h5 class=&quot;card-title&quot;&gt;How do you create Persistent data?&lt;/h5&gt; &lt;p class=&quot;card-text&quot;&gt; &lt;ol&gt; &lt;li&gt;Java Persistent API (JPA) provides a query language that allows create, read, update, and delete objects from a database.&lt;/li&gt; &lt;li&gt;Beans, Controller Code, and Business logic interact with the JPA to manage data in and out of the Database.&lt;/li&gt; &lt;li&gt;An Object-Relational Model (ORM) mapping Java classes (entities + supporting structures) with a relational database&lt;/li&gt; &lt;li&gt;Plain Old Java Objects (POJO) are the Class definitions that are foundations for JPA and ORM, see the @entity declaration over the Class definition.&lt;/li&gt; &lt;/ol&gt; &lt;/p&gt; &lt;a href=&quot;#&quot; class=&quot;btn btn-primary&quot;&gt;Go somewhere&lt;/a&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;!-- End of body content specific to page --&gt; &lt;/th:block&gt; &lt;/body&gt; &lt;/html&gt; . Layouts Folder . This folder contains a base.html and two fragments: footer.html and nav.html. These files form the standards for each HTML page in this Web Application project. The layouts/base.html is structural beginning file for index.html, greet.html, birds.html or any future file added to this project. This connection is made at the top of each HTML template, layout:decorate=”~{layouts/base}”. . As you look at the contents of the layouts/base.html think of it as the structure and common contents that will be in every HTML file. As you look back at the index.html, consider that it is starting with layouts/base.html and inserting its page specific fragments for the head and body. . Thymeleaf will put all these things together through a pre-process step. In the end, every HTML pages that is given to the Web Browser has style and structure from layouts/base, but content from its own HTML head and body. . &lt;!-- This page is illustrative and contains ideas about HTML layouts --&gt; &lt;!DOCTYPE HTML&gt; &lt;html xmlns:layout=&quot;http://www.w3.org/1999/xhtml&quot; xmlns:th=&quot;http://www.w3.org/1999/xhtml&quot; lang=&quot;en&quot;&gt; &lt;head&gt; &lt;!-- Required meta tags --&gt; &lt;meta charset=&quot;utf-8&quot;&gt; &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1, shrink-to-fit=no&quot;&gt; &lt;meta http-equiv=&quot;Content-Type&quot; content=&quot;text/html; charset=UTF-8&quot; /&gt; &lt;!-- JQuery CSS --&gt; &lt;script th:src=&quot;@{https://code.jquery.com/jquery-3.3.1.slim.min.js}&quot; integrity=&quot;sha384-q8i/X+965DzO0rT7abK41JStQIAqVgRVzpbzo5smXKp4YfRvH+8abtTE1Pi6jizo&quot; crossorigin=&quot;anonymous&quot;&gt;&lt;/script&gt; &lt;!-- Bootstrap CSS --&gt; &lt;link th:href=&quot;@{https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/css/bootstrap.min.css}&quot; rel=&quot;stylesheet&quot; integrity=&quot;sha384-EVSTQN3/azprG1Anm3QDgpJLIm9Nao0Yz1ztcQTwFspd3yD65VohhpuuCOmLASjC&quot; crossorigin=&quot;anonymous&quot;&gt; &lt;!-- Project CSS --&gt; &lt;link rel=&quot;stylesheet&quot; type=&quot;text/css&quot; th:href=&quot;@{/scss/custom.css}&quot;&gt; &lt;th:block layout:fragment=&quot;head&quot; th:remove=&quot;tag&quot;&gt;Head details are added by ThymeLeaf layout consumer&lt;/th:block&gt; &lt;/head&gt; &lt;body&gt; &lt;th:block th:replace=&quot;layouts/nav :: header&quot; th:remove=&quot;tag&quot;&gt;Standard header and Navigation&lt;/th:block&gt; &lt;th:block layout:fragment=&quot;body&quot; th:remove=&quot;tag&quot;&gt;Body details are added by ThymeLeaf layout consumer&lt;/th:block&gt; &lt;th:block th:replace=&quot;layouts/footer :: footer&quot; th:remove=&quot;tag&quot;&gt;Standard footer&lt;/th:block&gt; &lt;!-- Bootstrap 5.0 Bundle with Popper --&gt; &lt;script th:src=&quot;@{https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/js/bootstrap.bundle.min.js}&quot; integrity=&quot;sha384-MrcW6ZMFYlzcLA8Nl+NtUVF0sA7MsXsP1UyJoMp4YLEuNSfAP+JcXn/tWtIaxVXM&quot; crossorigin=&quot;anonymous&quot;&gt;&lt;/script&gt; &lt;/body&gt; &lt;th:block layout:fragment=&quot;script&quot; th:remove=&quot;tag&quot;&gt;&lt;/th:block&gt; &lt;/html&gt; . Resources Overview . . Resources are structure in standard directories for many reasons: familiarity amongst developer, tool defaults, deployment defaults, cache optimizations, etc. Here are some of introductions: . static/images - this is where a web server typically expects images that do not change after deployment. Service in deployment will cache these files for quick loading over the internet. | static/sccs - these are cached as well. This location and the sccs name state this will work with node tools. The standard is called Sassy and is the same as used in Python Flask projects. | templates/error - error pages can be placed here. Can you guess were you would put a 500 error page. | application.properties - this resource is used to define defaults for the application. Most of these default are used by backed, for instance this will be used to define location of a database. This is similar to __init__.py. | . .",
            "url": "http://localhost:4100/teacher_portfolio/2023/11/13/PBL-spring_thymeleaf.html",
            "relUrl": "/2023/11/13/PBL-spring_thymeleaf.html",
            "date": " • Nov 13, 2023"
        }
        
    
  
    
        ,"post65": {
            "title": "UX, Styling with SASS",
            "content": "User Experience Design . At Qualcomm, I was involved in projects related to Customer Experience. In this design phase, Corporate User Experience designers would create concepts of what that system would look like. As a second phase, I would give those concepts to Frontend Designers that would put the concepts into code with motion. We are trying to simulate these steps through Markdown, a little HTML, images, etc. In this process, we can build a concept of a system, prior to having functional code behind the scenes, aka JavaScript, APIs, Backend. | . GitHub Page . Before SASS it may be good to review key concepts in GitHub pages: https://carpentries-incubator.github.io/jekyll-pages-novice/aio/index.html . Build GitHub pages SASS files . Build and explore the output of scss. . | Build per instruction in Project README . | . ### Jekyll ### _site .sass-cache .jekyll-cache .jekyll-metadata . Explore output CSS, for example look at customization for h1, h2, … _site/assets/css/style.css | . | Look at other assets, see all the work that goes into Style. Learn to leverage off of it. Learn to customize on top of it using SASS tips in the blog. | . Stylesheet Notes from Midnight Theme . Altering GitHub theme and adding custom styles: . Create a file called /assets/css/style.scss in your site | Add the following content to the top of the file, exactly as shown: . @import &quot;minima&quot;; . | Add any custom CSS (or Sass, including imports) you’d like immediately after the @import line | Note: If you’d like to change the theme’s Sass variables, you must set new values before the @import line in your stylesheet. . Layouts Notes from Midnight Theme . If you’d like to change the theme’s HTML layout: . For some changes such as a custom favicon, you can add custom files in your local _includes folder. The files provided with the theme provide a starting point and are included by the original layout template. | For more extensive changes, copy the original template from the theme’s repository(Pro-tip: click “raw” to make copying easier) | Create a file called /_layouts/default.html in your site | Paste the default layout content copied in the first step | Customize the layout as you’d like | Welcome to SASS . SASS helps process a SASS file and compile it like the usual CSS file. Using SASS let’s us leverage off of a lot of implementation that has already been performed, such as GitHub pages. But it also lets you more programmatically build CSS. . . SASS Prerequisites . Skip downloads section unless you have issues. . Downloads / Command Prompt Lines . Check for npm --version to verify install, or download node.js here (just download the LTS version). . | This line of code is just used to check that you actually have npm installed, if not run installer : . | . npm --version . Next you will use check for sass : | . npm view sass version . Install sass if required : | . npm install -g sass . SASS Tips . Features / Functionality . As the great thing about scss is that it writes the css for you, making it much less tedious. There are many aspects as to why it actually simplifies the process. | . Aspect 1: Partials . Sass naturally transpiles all the .scss files directly. However, when you want to import a file, you do not need the file to be transpiled directly. Sass has a mechanism for this: If you start the filename with an underscore, Sass will not transpile it. Files named this way are called partials and they allow you to work in a much more organized space. | . Aspect 2: Defining Colors / Variables . Rather than retyping the hexadecimal values of each color every single time, you can define all of the ones you want to use in a partial and then just reference them with $[color] when you want to use it. However, make sure you import the partial into the scss file where you are going to use it in. | . $light: #f7f7f7; $dark: #222121; $lime: #00cc66; $orangeRed: #fb4b4e; $blue: #2541b2; . Example shown here: | . .navbar { background: $light; // see how instead of having to retype the hexadecimal, I can just reference it like this WOWOW so COOL height: 80px; display: flex; justify-content: space-between; padding: 0.5rem calc((100vw - 1200px) / 2); z-index: 10; position: relative; . Aspect 3: Nested Styling . Another unique aspect about scss is that you can actually nest styles, so if you want an aspect like let’s say color to apply to everything you are working on for that portion of the html, you can actually nest the rest of the formatting, animations, etc within that definition. | Implementation shown here with the Hero section in student scss: | . .hero { background-color: $light; // see how the rest of the code is indented / nested within .hero &amp;__container { display: grid; grid-template-columns: 1fr 1fr; align-items: center; justify-items: center; margin: 0 auto; height: 90vh; z-index: 1; width: 100%; max-width: 1200px; padding-right: 24px; padding-left: 24px; @include tablet { // @include tablet and @include mobile will be explained next grid-template-columns: 1fr; height: 100%; } &amp;--left { width: 100%; line-height: 1.2; @include tablet { padding: 5rem 0; } @include mobile { line-height: 1.5; } } &amp;--left h1 { font-size: 4rem; color: $lime; @include mobile { font-size: 1.5rem; } } &amp;--left h2 { font-size: 4rem; color: $dark; @include mobile { font-size: 2rem; } } &amp;--left p { font-size: 2rem; color: $dark; margin-top: 1rem; font-weight: 700; @include mobile { font-size: 1.5rem; } } &amp;--btn { font-size: 1rem; background-color: $lime; padding: 14px 32px; border: none; border-radius: 4px; color: $light; margin-top: 2rem; cursor: pointer; position: relative; transition: all 0.3s; outline: none; } &amp;--btn a { position: relative; z-index: 2; color: $light; text-decoration: none; } &amp;--btn:after { // code animates home page button so that it transitions to red when hovered position: absolute; content: &#39;&#39;; top: 0; left: 0; width: 0; height: 100%; background: $orangeRed; transition: all 0.3s; border-radius: 4px; } &amp;--btn:hover:after { width: 100%; } &amp;--right { text-align: center; } &amp;--img { height: 100%; width: 100%; } } } . You can see how this code works in tandem with the Hero section of the HTML, the class definitions are associated with every definition of styling coded above: | . &lt;!-- Hero HTML, each of the classes here correspond to what&#39;s defined above in the scss &lt;div class=&quot;hero&quot;&gt; &lt;div class=&quot;hero__container&quot;&gt; &lt;div class=&quot;hero__container--left&quot;&gt; &lt;h1&gt;College Apps Are Coming!&lt;/h1&gt; &lt;h2&gt;Be Prepared&lt;/h2&gt; &lt;p&gt;Sign up now to join the list.&lt;/p&gt; &lt;button class=&quot;hero__container--btn&quot;&gt;&lt;a href=&quot;#&quot;&gt;Sign Up&lt;/a&gt;&lt;/button&gt; &lt;/div&gt; &lt;div class=&quot;hero__container--right&quot;&gt; &lt;img src=&quot;images/img-2.svg&quot; class=&quot;hero__container--img&quot; /&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; --&gt; . Aspect 4: Easily Change Formatting Based on Device . With the power of scss, you can more easily than ever change the formatting of your site based on which device a person is using. | Such can be done by defining the resolutions in a partial like here: | . &lt;!-- @mixin tablet { @media screen and (max-width: 768px) { @content; } } @mixin mobile { @media screen and (max-width: 280px) { @content; } } --&gt; . Then you can use @include to reference these resolutions and change the css/formatting based on the device like here: | . &amp;--left h1 { font-size: 4rem; color: $lime; @include mobile { // in this case the font size changes because it&#39;s mobile font-size: 1.5rem; } } &amp;--left h2 { font-size: 4rem; color: $dark; @include mobile { font-size: 2rem; } } . Aspect 5: Extending, Inheritance, and Calculations . In scss, you can also use @extend if you want certain classes to inherit attributes from previously defined classes, sort of similar to nesting inheritance (where the classes nested within inherit the attributes from outermost classes). An example is shown below: | . &lt;!-- %align-center { display: flex; align-items: center; } logo { color: $dark; cursor: pointer; text-decoration: none; font-size: 2rem; margin-left: 24px; @extend %align-center; //it&#39;s inheriting the above values for display and align:items } --&gt; . Furthermore, you can actually use math operators like multiplication, addition, subtraction and division in scss. In the code below I use it to extend the animation of a button: | . &amp;--btn:hover:after { width: 100% * 4; //makes the animation extend way farther, past the border of the button } . Supporting Videos . These are just some videos Charlie found that he thinks are helpful, click on the images to go directly to the videos! | . Hacks . All hacks related to SASS are with respect to design of your project(s) | .",
            "url": "http://localhost:4100/teacher_portfolio/cpt/sass",
            "relUrl": "/cpt/sass",
            "date": " • Nov 13, 2023"
        }
        
    
  
    
        ,"post66": {
            "title": "JWT Project",
            "content": "JWT Project . Link for Repository’s . Frontend | Backend | . . Frontend . Login.html ( Login.html ) . The Login.html has a lot of styling and html due to there being a fucntional register and login in one html file. Let’s Break it down: . HTML Section : This part of the file is responsible for setting up the structure of the webpage. The HTML section of this file starts from the &lt;!DOCTYPE html&gt; declaration and extends till the closing &lt;/body&gt; tag. . It defines two main sections, Login and SignUp, enclosed within div tags with id attributes set as ‘login’ and ‘signup’ respectively. Each of these sections includes a combination of images and input fields to make up the form for user login and signup. | Input fields for username and password are provided along with corresponding images for better user experience. | . | . . . JavaScript Section : This section is responsible for the functionality of the webpage, i.e., what happens when a user interacts with the page. Lets Break it down: It includes functions to handle user authentication with the auth function, user registration (createUser function), and switching between login and signup views (switchPage function). | The auth function makes a POST request to a the backend deployed URL which has all the endpoints, with the user’s entered username and password. If the authentication is successful, the user is redirected to ‘/index.html’ succesfully, with a token. | The createUser function similarly makes a POST request to create a new user when a user registers, and if successful, the user is logged in automatically, and the log in is saved for future uses. | There are also a number of functions responsible for adjusting the layout based on the window size for a responsive design and switching between the login and register on the same page. | . | The include env.js which will inject the content of env.js at that point in the HTML file before the server sends it to the client. This is a way to provide dynamic content in the HTML file before it is sent to the client. | Env.js Contains: const api = [‘localhost’, ‘127.0.0.1’].includes(window.location.hostname) ? “http://localhost:8570” : “https://nighthawkguessr.duckdns.org”; and this is used with the fetch function to fetch from either local host or from depoloyed backend link. This is a very crucial part of the code | . . Index html . This page is the home page of the website and is locked untill you login succesfully and have a token. Javascript Part is the only thing playing a role in JWT in the index.html so here it is: . JavaScript Section JavaScript functions are defined to handle various interactions on the page, such as authenticating a login, signing out, updating difficulty, redirecting to the game page, and handling UI changes when a difficulty option is selected. | An asynchronous function authenticateLogin fetches the user’s authentication status from the server and makes the webpage content visible only if the user is authenticated. If the authentication fails, the user is redirected to the login page. | The signOut function clears all cookies and reloads the page, effectively signing the user out. | Other functions like updateDifficulty, resetScoreCookie, and gameRedirect are used to manage the game’s difficulty level and user scores. | The resize function adjusts the positions, text sizes, and image sizes of various elements on the page depending on the window size, ensuring that the webpage is responsive to different screen sizes. | . | The nclude env.js which will inject the content of env.js at that point in the HTML file before the server sends it to the client. This is a way to provide dynamic content in the HTML file before it is sent to the client. | Env.js Contains: const api = [‘localhost’, ‘127.0.0.1’].includes(window.location.hostname) ? “http://localhost:8570” : “https://nighthawkguessr.duckdns.org”; and this is used with the fetch function to fetch from either local host or from depoloyed backend link. This is a crucial part of the code | . . Backend . Jwt File (JWT_Auth.py) . (Most Important File) . The jwt_auth.py script is a part of my backend application that is responsible for managing JSON Web Tokens (JWTs), which are used for user authentication. This module provides functions for user registration and authentication, and also includes a route that provides information on the current user’s authentication status. . breakdown of the different components of the jwt_auth.py script: . Authentication Function: The authenticate(username, password) function is used to authenticate users. This function looks in the database for a user with the given username, and if such a user is found, it checks if the provided password, when hashed, matches the stored hashed password for that user. If the password is correct, the function returns the User object; otherwise, it returns None. . | Identity Function: The identity(payload) function retrieves a user based on the identity payload of a JWT. This payload contains a user’s ID, and the function queries the database to find and return the user with this ID. . | . | JWT Routes: routes under the jwt_auth blueprint: . /auth_status: This GET route returns the username of the currently authenticated user, verifying the functionality of the JWT. . | /register: This POST route registers a new user. It first validates the request data to ensure a username and password are provided. Then, it checks the database to make sure a user with the provided username doesn’t already exist. If the username is available, it hashes the password using bcrypt, creates a new User object, adds it to the database session, commits the session to save the new user in the database, and finally sends a response indicating that the new user was successfully created. . | . | . Creating Database File (DB_Create.py &amp; User.py) . db_create.py: . The db_create.py script is responsible for setting up the database structure for my application. It’s one of the first steps taken in the lifecycle of my application, even before you can start registering users or performing any other actions. The crucial functionality it performs is calling db.create_all(), which is an SQLAlchemy command that looks at all of the classes that inherit from db.Model and creates corresponding tables in the database. . | In the context of JWT registration, db_create.py is the script that creates the user table in the database, where user data will be stored. Without this table, you would have no place to store or retrieve user details, so user registration (and subsequent authentication) would not be possible. . | . | Let’s now move to user.py: . user.py file defines the User model class. This class is a representation of the user table in the database. Each instance of this class corresponds to a row in the user table. It consists of three columns - id, username, and password. . | id is a unique identifier for each user. | username is a string that stores the username of a user. It has been set as non-nullable and unique which means each user must have a username and that username must be unique. | password is a string that stores the hashed password of a user. It’s non-nullable meaning every user must have a password. | When a new user registers, the register() function in jwt_auth.py creates a new instance of the User class, filling in the username and hashed password provided by the user. It then adds this new user to the database. | . | . In the authentication process, the User model is used to look in the database for a user with a specific username or ID. This is essential in both the authenticate() function, which checks the submitted password against the stored hashed password for a username, and the identity() function, which retrieves a user based on their ID as stored in the JWT. . Init.py Files . The init.py files in my application play an essential role in managing and facilitating dependencies among the modules. . nighthawkguessr_api/init.py: This file mainly sets up the Flask application and its dependencies. In the context of JWT registration, it creates an instance of Flask and configures it to use a SQLite database. Additionally, it sets a secret key, which is critical for creating and verifying JWTs, and it prepares the SQLAlchemy object (db), which manages database interactions. The db object is later imported in the user model (User) and in the authentication routes (jwt_auth.py) to query and persist user information in the database. . | nighthawkguessr_api/model/init.py: This file is essentially the entry point for my models, and its primary role is to make the importing of different models simpler and more streamlined. In other words, instead of importing models individually from each file, you can import all at once from the model package. This is useful when multiple parts of the application need to access these models. Regarding JWT registration, the User model imported in this file is critical, as it is used in the jwt_auth.py file to handle user data during registration and authentication. . | . Main.py . In my Flask application, the main.py script plays a crucial role in JWT (JSON Web Token) authentication. JWT is a compact, self-contained method for securely transmitting information between parties as a JSON object. The information is verified and trusted because it is digitally signed. JWTs can be signed using a secret (with the HMAC algorithm) or a public/private key pair using RSA or ECDSA. . | In the application, the jwt_auth.py file defines the authenticate and identity methods which are integral to the JWT authentication process. These two functions are utilized in main.py to set up JWT for the Flask app. . The authenticate function, defined in jwt_auth.py, takes in a username and password as parameters and authenticates the user. It checks if the user exists in the database and whether the provided password matches the stored (hashed) password for the user. If the credentials are correct, it returns the user object. This function is used during the generation of a JWT when a user logs in. . | The identity function, also defined in jwt_auth.py, takes the payload of a JWT as a parameter and extracts the user id from it. It then retrieves the user associated with this id from the database and returns the user object. This function is used to get the current user (who claims to own the token) when a JWT is provided in a request to a protected endpoint. . | . | In the main.py script, these two functions are given as arguments to the JWT constructor, establishing a JWT object: . jwt = JWT(app, jwt_auth.authenticate, jwt_auth.identity) This line is crucial as it sets up JWT handling in my Flask app. It uses jwt_auth.authenticate for authenticating users when they log in, and jwt_auth.identity for identifying users from incoming JWTs in requests to protected routes. . | Another crucial part of the main.py is cors = CORS(app, origins=re.compile(“.*”), supports_credentials=True) This line enables CORS and the supports_credentials = True is extremely important because it allows cookies or authenticated requests to be made cross origins. . | . | . Requirements.txt . -e file:./vendor/flask-jwt#egg=Flask-JWT . This line in requirements.txt is installing the Flask-JWT package from a local directory (./vendor/flask-jwt) in editable mode. This way, I am not dependent on the version available on PyPI or any changes made by the maintainers of the original package. . . AWS Deployment . Nginx Changes . . .",
            "url": "http://localhost:4100/teacher_portfolio/cpt/jwt",
            "relUrl": "/cpt/jwt",
            "date": " • Nov 13, 2023"
        }
        
    
  
    
        ,"post67": {
            "title": "API/Control",
            "content": "API/Control Terms . APIs work with methods to GET, POST, PUT, and UPDATE data. Control helps with Requests, Response, and handling JSON. Control is glue layer, thus the term Model-View-Control (or MVC). . POST APIs interact with CREATE methods in Model. | GET with READ | PUT with UPDATE. | DELETE with DELETE. | . During development it is best to work with Model and Control without involving View initially. To support this type of development … . Become familiar with Postman | FYI, as an alternative you can become familiar with working with APIs through curl | . Resource . API Docs . Control/API code . Control/API concepts are receiving and API request and returning a response. . Define API flask objects (api/user.py). Flask contains object that help in API definition. | Register API objects (main.py). Every Flask object in the project needs to be registered with the “main” objects. | Create/POST method. Post method contains a lot of checking code, but ultimately it creates a database row in the Model and returns that row to the View. | Read/GET method. This shows off Object Relational Manager performing a User (class operation) to extract all records from the table and putting them into User objects. | Define API endpoints. Endpoints are somewhat patterns to be matched. Note, url_prefix at top of file supplies “/api/users” prefix for each pattern. Each pattern when matched invokes the correspond class. Methods are defined in class to correspond to expectations (POST, GET, UPDATE, DELETE). | from flask import Blueprint, request, jsonify from flask_restful import Api, Resource # used for REST API building from datetime import datetime from model.users import User # blueprint, which is registered to app in main.py user_api = Blueprint(&#39;user_api&#39;, __name__, url_prefix=&#39;/api/users&#39;) # API docs https://flask-restful.readthedocs.io/en/latest/api.html#id1 api = Api(user_api) class UserAPI: class _Create(Resource): def post(self): &#39;&#39;&#39; Read data for json body &#39;&#39;&#39; body = request.get_json() &#39;&#39;&#39; Avoid garbage in, error checking &#39;&#39;&#39; # validate name name = body.get(&#39;name&#39;) if name is None or len(name) &lt; 2: return {&#39;message&#39;: f&#39;Name is missing, or is less than 2 characters&#39;}, 210 # validate uid uid = body.get(&#39;uid&#39;) if uid is None or len(uid) &lt; 2: return {&#39;message&#39;: f&#39;User ID is missing, or is less than 2 characters&#39;}, 210 # look for password and dob password = body.get(&#39;password&#39;) dob = body.get(&#39;dob&#39;) &#39;&#39;&#39; #1: Key code block, setup USER OBJECT &#39;&#39;&#39; uo = User(name=name, uid=uid) &#39;&#39;&#39; Additional garbage error checking &#39;&#39;&#39; # set password if provided if password is not None: uo.set_password(password) # convert to date type if dob is not None: try: uo.dob = datetime.strptime(dob, &#39;%m-%d-%Y&#39;).date() except: return {&#39;message&#39;: f&#39;Date of birth format error {dob}, must be mm-dd-yyyy&#39;}, 210 &#39;&#39;&#39; #2: Key Code block to add user to database &#39;&#39;&#39; # create user in database user = uo.create() # success returns json of user if user: return jsonify(user.read()) # failure returns error return {&#39;message&#39;: f&#39;Processed {name}, either a format error or User ID {uid} is duplicate&#39;}, 210 class _Read(Resource): def get(self): users = User.query.all() # read/extract all users from database json_ready = [user.read() for user in users] # prepare output in json return jsonify(json_ready) # jsonify creates Flask response object, more specific to APIs than json.dumps # building RESTapi endpoint api.add_resource(_Create, &#39;/create&#39;) api.add_resource(_Read, &#39;/&#39;) . Testing APIs . Backend Testing of APIs is best done through Browser for simple GET APIs, but other API methods (POST, UPDATE, DELETE) will require a tool like PostMan. . Download Postman. This tool test APIs effectively on localhost and is great aid for debugging. . | Main.py runtime configuration. This configuration is setup to produce same port and localhost as deployment. . | Run locally as you develop Select main.py file in VSCode and press Play button, or press down arrow next to Play button to activate Debug testing. The below dialog will appear in Terminal, though IP address will match you machines. . (base) machine:flask_portfolio user$ cd /Users/user/vscode/flask_portfolio ; /usr/bin/env /Users/user/opt/anaconda3/bin/python /Users/user/.vscode/extensions/ms-python.python-2022.20.2/pythonFiles/lib/python/debugpy/adapter/../../debugpy/launcher 61127 -- /Users/user/vscode/flask_portfolio/main.py * Serving Flask app &quot;__init__&quot; (lazy loading) * Environment: production WARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead. * Debug mode: on * Running on all addresses. WARNING: This is a development server. Do not use it in a production deployment. * Running on http://192.168.1.75:8086/ (Press CTRL+C to quit) * Restarting with watchdog (fsevents) * Debugger is active! * Debugger PIN: 403-552-045 . Test API GET locally with Postman. Observe that tests may be saved. . Test API POST locally with Postman. In this case, Postman can be used to add new records to the table. Observe options to pass data using Body raw-json. . Hacks . Objective of these hacks is to complete full stack. This include Model (flask database), View (github pages markdown), and Control (flask API endpoint). . Make Create and Read API endpoints for your project | Test API endpoints by creating test cases in Postman | Build a Frontend for Create and Read endpoints | Make a 30-60 second video showing this work |",
            "url": "http://localhost:4100/teacher_portfolio/cpt/api",
            "relUrl": "/cpt/api",
            "date": " • Nov 13, 2023"
        }
        
    
  
    
        ,"post68": {
            "title": "OOP, CSSE mini project Part 1",
            "content": "Overview | Player | Platform | Background | Tube | Block | Goomba | . OOP Conversion Outline . The OOP hierarchy shown below is designed to promote reusability, encapsulation, and a clear separation of entities. . GameEnv manages the overall game state variables | GameObject provides a common base for defining game entities (Player, Background, …) | GameLevel holds level-specific assets and creates GameObjects | GameControl handles the transition between different Game Levels | . GameEnv | ├── Attributes: │ | ├── levels │ | ├── gameObjects | │ └── ... | | | ├── Methods: │ | ├── update: update, draw │ | ├── destroy: all gameObjects │ | └── ... │ ├── GameObject │ ├── Player: sprite animation, wasd │ ├── Background: fit to screen, scrolling │ ├── Platform: fixed to bottom, scrolling │ └── ... │ ├── GameLevel | ├── Tag: key │ ├── Attributes: │ | ├── playerAssets │ | ├── backgroundAssets │ | ├── platformAssets │ | └── ... | | │ └── Methods: │ | ├── load: &quot;new&quot; GameObject created from assets │ | └── ... | └── GameControl │ ├── Methods: | | ├── gameLoop: drive action of game level │ | ├── transitionToLevel: destroys and creates objects for game level │ | └── ... | | │ └── ... . Game Environment . GameEnv is the overarching environment class that holds the game levels, game objects, and manages environment updates. . class GameEnv { // defined and current game levels static levels = []; static currentLevel = null; // active Game Objects static gameObjects = []; // initialize for Game Environment static initialize() { // store width and height based on screen size this.setTop(); this.setBottom(); // ... } // resize Game Objects static resize() { this.initialize(); // Update dimensions // Call the sizing method on all game objects for (var gameObj of GameEnv.gameObjects){ gameObj.size(); } } // gameLoop method to update Game Objects static update() { // Update game state, including all game objects for (const gameObject of this.gameObjects) { gameObject.update(); gameObject.draw(); } } } . GameObject . GameObject is the base class for all objects in the game. It contains common attributes and methods. . // Common attributes, methods, prototype methods for all objects in the Game. class GameObject { constructor(canvas, config) { this.x = config.x; this.y = config.y; this.canvas = canvas; this.ctx = canvas.getContext(&#39;2d&#39;); this.image = config.image; this.frame = config.frame; this.width = config.width; this.height = config.height; this.aspect_ratio = this.width / this.height; this.speedRatio = config.speedRatio; this.speed = GameEnv.gameSpeed * this.speedRatio; this.collisionWidth = 0; this.collisionHeight = 0; this.collisionData = {}; GameObject.gameObjects.push(this); } destroy() { const index = GameObject.gameObjects.indexOf(this); if (index !== -1) { // Remove the canvas from the DOM this.canvas.parentNode.removeChild(this.canvas); GameObject.gameObjects.splice(index, 1); } } update() { } draw() { } size() { } isCollision(object) { } collisionAction(object) { } handleCollision(object) { if (this.isCollision(object)) { this.collisionAction(object); } } } . Player . Player is a class specific to the player character, extending GameObject and adding properties like speed, jump height, etc. . // Create a class specifically for the player character, extending the GameObject class. class Player extends GameObject { constructor(canvas, config) { super(canvas, config); this.speed = config.speed; this.jumpHeight = config.jumpHeight; this.health = config.health; // Set up event listeners for user input document.addEventListener(&#39;keydown&#39;, this.handleKeyDown.bind(this)); document.addEventListener(&#39;keyup&#39;, this.handleKeyUp.bind(this)); } handleKeyDown(event) { // Handle key down events (e.g., move left or right, jump) switch (event.key) { case &#39;ArrowLeft&#39;: this.moveLeft(); break; case &#39;ArrowRight&#39;: this.moveRight(); break; case &#39;Space&#39;: this.jump(); break; // Handle other keys as needed } } handleKeyUp(event) { // Handle key up events (e.g., stop moving) switch (event.key) { case &#39;ArrowLeft&#39;: case &#39;ArrowRight&#39;: this.stopMoving(); break; // Handle other keys as needed } } moveLeft() { /* Implement left movement logic */ } moveRight() { /* Implement right movement logic */ } stopMoving() { /* Implement stop movement logic */ } jump() { /* Implement jump logic */ } attack() { /* Implement attack logic */ } } . Platform . Platform is a class for platforms that the player can stand on, extending GameObject. . // Create a class for platforms that the player can stand on. class Platform extends GameObject { constructor(canvas, config) { super(canvas, config); } // Additional platform-specific methods or properties } . Game Level . GameLevel stores the assets and attributes specific to a particular level. It has properties like background, platforms, player, … . // Store the assets and attributes of the Game at the specific GameLevel. class GameLevel { constructor(tag) { this.tag = tag; this.backgroundImg = null; this.platformImg = null; this.playerImg = null; this.isComplete = null; // function that determines if level is complete } setBackgroundFile(file) { this.backgroundImg = file; } // ... setIsComplete(callBack) { this.isComplete = callBack; // callBack is function to test for level completion } // Load level data load() { /* Load level data */ } // ... // Add a GameLevel to the array levels static create(tag, backgroundFile, platformFile, playerFile, isComplete) { const newLevel = new GameLevel(tag); newLevel.setBackgroundFile(backgroundFile); newLevel.setPlatformFile(platformFile); newLevel.setPlayerFile(playerFile); newLevel.setIsComplete(isComplete); GameEnv.levels.push(newLevel); } } . Game Control . The gameLoop and the setup and teardown between game levels . const GameControl = { // Level transition method (destroy then newlevel) async transitionToLevel(newLevel) { this.inTransition = true; // Destroy existing game objects GameEnv.destroy(); // Load GameLevel objects await newLevel.load(); GameEnv.currentLevel = newLevel; // Trigger a resize to redraw canvas elements window.dispatchEvent(new Event(&#39;resize&#39;)); // Update invert property, twice means same as before toggleCanvasEffect.dispatchEvent(new Event(&#39;click&#39;)); toggleCanvasEffect.dispatchEvent(new Event(&#39;click&#39;)); this.inTransition = false; }, // Game control loop gameLoop() { // Turn game loop off during transitions if (!this.inTransition) { // Get current level GameEnv.update(); const currentLevel = GameEnv.currentLevel; // currentLevel is defined if (currentLevel) { // run the isComplete callback function if (currentLevel.isComplete &amp;&amp; currentLevel.isComplete()) { const currentIndex = GameEnv.levels.indexOf(currentLevel); // next index is in bounds if (currentIndex !== -1 &amp;&amp; currentIndex + 1 &lt; GameEnv.levels.length) { // transition to the next level this.transitionToLevel(GameEnv.levels[currentIndex + 1]); } } // currentLevel is null, (ie start or restart game) } else { // transition to beginning of game this.transitionToLevel(GameEnv.levels[0]); } } // recycle gameLoop, aka recursion requestAnimationFrame(this.gameLoop.bind(this)); }, }; .",
            "url": "http://localhost:4100/teacher_portfolio/2023/11/13/CSSE-tri2-oop1.html",
            "relUrl": "/2023/11/13/CSSE-tri2-oop1.html",
            "date": " • Nov 13, 2023"
        }
        
    
  
    
        ,"post69": {
            "title": "Mario Hills Background",
            "content": "Invert",
            "url": "http://localhost:4100/teacher_portfolio/2023/11/13/CSSE-mario-background.html",
            "relUrl": "/2023/11/13/CSSE-mario-background.html",
            "date": " • Nov 13, 2023"
        }
        
    
  
    
        ,"post70": {
            "title": "Innovation, CPT Project",
            "content": "| Home | DB | View | API | Style | JWT | Animate | Game | . Innovation Week, Create Performance Task Objectives . Students and teams will soon transition to “Create Performance Task” projects. At that transition, time will be allocated toward coding of this task. Additionally, you will use this project in Trimester 2 N@tM presentations. . Before that time, you will plan youand code a warm-up project using the Create Performance Task requirements. . Teacher requirement for N@tM project . These requirements are in addition to CPT requirements. These elements have enabled student to score well and answer CPT questions. . styling frontend with SASS | creating frontend for CRUD operations | learning more about APIs connecting to Database Tables | supporting backend Databases CRUD actions and OOP | . These requirements provide depth for students projects, the type of depth that will enable you to score well and also be ready for Computer Science internships. . add user login and site security | have features to upload, scale, and store images | design frontend pages with animation and OOP | support complex SQL data types to support images and JSON | support primary and foreign key relations in SQL | . Teams will start projects with Design Documents. Performing these tasks will help students work more effectively in teams. . Use tools to design screens before implementation | Use draw.io to do story mapping and test planning | Use draw.io to create uml activity | Use draw.io to create uml class 0r Use draw.io to draw entity relationship diagram | . College Board requirements for CPT . Groups in Create Performance task can be 1-4 people can work on a project, but everyone must have their own features that meet all the College Board requirements. . CPT Requirements | . Program Design, Function, and Purpose . Students should be prepared to respond to prompts about their program that assess any of the following learning objectives: . CRD-2.A: Describe the purpose of a computing innovation. | CRD-2.B: Explain how a program or code segment functions. | CRD-2.C: Identify input(s) to a program. | CRD-2.D: Identify output(s) produced by a program. | CRD-2.E: Develop a program using a development process. | CRD-2.F: Design a program and its user interface. | CRD-2.G: Describe the purpose of a code segment or program by writing documentation. | . Algorithm Development . Students should be prepared to respond to prompts about their program that assess any of the following learning objectives: . CRD-2.B: Explain how a program or code segment functions. | AAP-2.E.b: Evaluate expressions that use relational operators (&lt;, &gt;, ==, etc). | AAP-2.F.b: Evaluate expressions that use logic operators (and, or, not). | AAP-2.H.b: Determine the result of conditional statements. | AAP-2.J: Express an algorithm that uses iteration without using a programming language. | AAP-2.K.b: Determine the result or side effect of iteration statements. | AAP-2.L: Compare multiple algorithms to determine if they yield the same side effect or result. | AAP-2.M.a: Create algorithms. | AAP-2.M.b: Combine and modify existing algorithms. | . Errors and Testing . Students should be prepared to respond to prompts about their program that assess any of the following learning objectives: . CRD-2.I.a: Identify the error. | CRD-2.I.b: Correct the error. | CRD-2.J: Identify inputs and corresponding expected outputs or behaviors that can be used to check the correctness of an algorithm or program. | . Data and Procedural Abstraction . Students should be prepared to respond to prompts about their program that assess any of the following learning objectives: . AAP-1.D.a: Develop data abstraction using lists to store multiple elements. | AAP-1.D.b: Explain how the use of data abstraction manages complexity in program code. | AAP-2.O.a: Write iteration statements to traverse a list. | AAP-2.O.b: Determine the result of an algorithm that includes list traversals. | AAP-3.B: Explain how the use of procedural abstraction manages complexity in a program. | .",
            "url": "http://localhost:4100/teacher_portfolio/2023/11/13/CSP-tri2_cpt.html",
            "relUrl": "/2023/11/13/CSP-tri2_cpt.html",
            "date": " • Nov 13, 2023"
        }
        
    
  
    
        ,"post71": {
            "title": "Retrospective, CSA Mini Project",
            "content": "Key Indicator Grading and Retrospective . This review includes requirements from both written and verbal instructions that were provided during Sprint 4. The term “retrospective” in agile development is an opportunity to make things better. . An agile retrospective is an opportunity for agile development teams to reflect on past work together and identify ways to improve. Agile teams hold retrospective meetings after a time-boxed period of work is complete (typically a sprint lasting two to four weeks). During the retrospective, the team discusses what went well, what did not go as planned, and how to make the next work period better. . Team Grading Prep (25 minutes) . This “retrospective” to “ideation” week will be used for teams to improve their work (retrospective) and transition into design (ideation) for the Two Trimester passion projects. . Review Ticket Content. Teams will provide the Teacher with a “Review Ticket” to capture scores, plans, highlight projects, what went well, and what needs improvement. . Utterance Comment. Team review ticket will be an Utterance comment on this blog. . Crossover Grades. Teams / Individuals will crossover grade another team. In the process of development, we often use this type of review to broaden our perspective. . Review Ticket Header . Use the templates below to assist in grading and retrospection with Review Ticket. This Table is an illustrative summary of the most important information between Student development teams and Teacher. . Team . Crossover Score | Runtime | Plan | GitHub | Analytics | . 0.87 | Fibonacci Frontend | http://127.0.0.1:4100/teacher_portfolio//2023/11/13/CSA-tri2-analysis.html | nighthawk_csa | Commits | . Individuals . Name | Team+Indi+Teacher | Runtime | Issues | Key Commit(s) | Analytics | . John M | 1.71=0.87+0.84+? | Binary Calculator | CORS example | SASS buttons, Binary Source | Commits, Profile | . Crossover Grade (25 minutes) . Teams / Individuals will perform crossover grading. . Crossover Scrum Master grading. Scrum Master Team A grades Scrum Master Team B. Place grading in the Header of Review Ticket according to the template. Also, perform individual crossover grading on each other. Be sure to be retrospective. | Crossover individual grading. Grade individual by individual (Team A to Team B), if there is an odd person working in a trio. Be sure that I know the name of each grader and who you are grading (i.e., John M grading of Shane L) | After grading is complete, Scrum Master or Individuals update scores on top of the review ticket. Scrum Master reviews sources for completeness and makes sure the addition is correct. | . Final Grading . Teacher Grading will consider any change to the final 0.1. Note, this would be considered both in meeting guidelines of the project or extra credit. . Retrospective improvement. Teams and individuals will have time to make improvements during the week. | Indicators in Crossover are final. Do not change scoring after these initial indicators are made. This will be considered “doctoring”, | Extra credit. If there are concerns about score, understanding, or completeness in this process… It is possible to add to seed. Individuals will be responsible to come up with action. | . Key Indicators Team Template (1 Point) . Grade each checkmark below on a scale of 0 to .9. Total and divide by number of bullets to obtain final score. . Cut Copy and Paste . Team Review &quot;Scrum Master A&quot; grading &quot;Scrum Master B&quot; - [ ] The team should have a Web Page(s) that teach/explain: Fibonacci, Algorithm, etc. - [ ] The team should have a Web Page(s) that teach/explain: Sorting, Timing, Compares Swaps, etc. Team Review ticket containing key Team and individual contributions - [ ] Growth/Accomplishments in work is according to historical Team Plan, or they show revisions to plan according to work - [ ] Short falls/Improvement that could be made in Work or Team Plan, team highlights next steps or improvements that could be made - [ ] Showing key accomplishments according to requirement in Java Backend such as API, Abstract Class(es), Inheritance, Polymorphic behavior, Sorting Algorithms, etc. In Sorting, there should NOT be static classes or static methods. - [ ] Showing key user interaction and learning(s). For instance how you visualized Sorting Algorithm: Bubble, Insertion, Selection, Merge... how you captured Big O, analytical data, usage of Data Structures... And/or, how you provided response and Feedback to user on their success in learning or experiencing your interface. Per check. 0.55 not attempted/no check 0.7 attempted, incoomplete, but some runtime 0.8 mastery and runtime 0.9 above and beyond. Freeform comment. Provide positivies and growth summary. Justify or comment on final score. Be sure to provide extra details on anything below 0.7 average or above 0.8. . Key Indicators Individual Template (1 Point) . Grade each checkmark below on scale 0 to .9. Total and divide by number of bullets to obtains final score. . Cut Copy and Paste to Team Review Ticket . Individual Review &quot;My name&quot; grading &quot;Their name&quot; - [ ] Individual should show that they were key contributor and example to team. This includes their participation in ideas, plans, creating individual issues, providing code commits to project, crossover grading participation, being on task and positive example in the classroom. Individuals Video, Issue(s), Commits(s) - [ ] Video, includes Web demo of key contribution to project, 1 minute - [ ] Issue(s) that show plans/progress to team objectives - [ ] Highlights of key commit(s) in Issues, summarizes code contributions - [ ] Review GitHub analytics for key commits in each weeks during the project, shows consistent participation for 3 weeks Per check. 0.55 not attempted/no check 0.7 attempted, incoomplete, but some runtime 0.8 mastery and runtime 0.9 above and beyond. Freeform comment. Provide positivies and growth summary. Justify or comment on final score. Be sure to provide extra details on anything below 0.7 average or above 0.8. .",
            "url": "http://localhost:4100/teacher_portfolio/2023/11/13/CSA-tri2-retro.html",
            "relUrl": "/2023/11/13/CSA-tri2-retro.html",
            "date": " • Nov 13, 2023"
        }
        
    
  
    
        ,"post72": {
            "title": "Analysis, CSA Mini Project",
            "content": "Algorithms and Analysis Mini Project . In treos, work on Fibonnaci and Sorting algoritms. The objective of this mini project is to go through development processes (innovation, feature, integration, final), learn more Java, and learn more frontend. . Obtain a deeper understanding of Abstract Classes and Inhertance | Create several algorithms to solve the same type of problem(s) | After implementation, study algorithms for efficiency using analytical measurments | Try to use unique and different coding styles in solutions, but measure the same way and from the same starting point | Consider how you will visualize and present these algoritms in the frontend to show your conclusions | . Hacks . Fibonacci . Create 2 additional methods to solve nth result in the Fibonacci Sequence. Build a frontend output to show results and analysis. . Sample of Fibonacci Frontend . Sorts . Using Abstract Class build a means to evaluate complexity and performance of serveral College Board sorting algorithms. . In each sort, you could share a progression of the algorithm. This is a sample of capturing progressions using of a Palindrome algorithm. . Build a Sort class for each unique sort. Use Fibonacci Abstraction heirarchy as guide to build an init/sort method for each unique sort. Sorts include bubble, insertion, selection, and merge. | Teacher expects to see usage pf extends. In Parent class store the number of iterations, comparisons, merges/swaps. | In parent class contain logic for timing each sort algorithm, creating random elements for data structure, … | . | Analyze the Big O complexity on Sorts. Consider the number of operations, time, and space used when analyzing a sort algorithm. Establish analytics including: time to sort, number of comparisons and number of swaps. | Average the results for each each Sort, run each at least 12 times with 5000 random elements. You should throw out High and Low when doing analysis. | Make your final/judgement on best sort: Number of Comparisons, Number of Swaps, Big O complexity, and Total Time. | . | Build frontend visualizationthe to compare statistics from sorts and describe BigO complexity in relation to statistics. Be sure to create a mock up for visualization before coding. | In visualization start with Console output | Final visualization wll be in the Frontend. The output will require thought and design on how to paas data through API. | . | .",
            "url": "http://localhost:4100/teacher_portfolio/2023/11/13/CSA-tri2-analysis.html",
            "relUrl": "/2023/11/13/CSA-tri2-analysis.html",
            "date": " • Nov 13, 2023"
        }
        
    
  
    
        ,"post73": {
            "title": "U10 | Recursion | Student P3",
            "content": "Learning Targets: . Determine the result of executing recursive method. | . Essential Knowledge: . Recursion is a method that calls itself. | Recursive methods contain at least one base case, which halts the recursion, and at least one recursive call. To accomplish this is a recursive method contains a conditional. | . | each recursive call has its own set of local variables, including formal parameters. | parameter values capture the progress of a recursive process, much like a loop control variable vales capture the progress of a loop. | any recursive sloution can be replicated throu the user of an i word (iteration, index, or integer) approach. exclusion statement: writing recursive program code is outside the scope of the AP CSA course and exam but it is allowed. but sometimes it is more straightforward than iterative. Example of recursion: . public static void main(String[] args) { System.out.println(&quot;Hello World!&quot;); main(args); } . Example of recursion with a base case: . public static void main(String[] args) { System.out.println(&quot;Hello World!&quot;); if (args.length &gt; 0) { main(args); } } . Example of recursion with a base case and a recursive call including formal parameters: . public static void main(String[] args) { System.out.println(&quot;Hello World!&quot;); if (args.length &gt; 0) { main(args); } } . | . | . This is a recursive code, do we all agree with that? . note : pay attention . // void recursive method public static void simpleRecur(int n) { System.out.println(n); if (n &gt; 2) // the if statement cuases the recursion to end when n &lt;. 2 since the recursive call // since the recursive call only occurs when n &gt; 2 simpleRecur(n-1); System.out.println(n); } simpleRecur(4); . lets trace the call simpleRecur(4) | Call Stack | Variable trace for call | |—|—| | simpleRecur(4) | n=4 4&gt;2, T | | simpleRecur(3) | n=3 2&gt;2, T | | simpleRecur(2) | n=2 2&gt;2, F | . pop corn hack!!!!!! . Note: 0.01 extra credit for each correct answer, we have limit Paraas to 3 answers. . What would be the output of the code above? (0.01 extra credit) . here is a modified code from above, what would be the output of the code above? and what would be the base case? (0.01 extra credit) . // infinite public static void simpleRecur(int n) { System.out.println(n); if (n &gt; 2) simpleRecur(n+3); System.out.println(n); } . Call Stack Variable trace for call . simpleRecur(4) | n=4 4&gt;2, T | . simpleRecur(7) | n=7 7&gt;2, T | . simpleRecur(10) | n=10 10&gt;2, T | . n is getting larger infinitely. java will eventually run out of memory and cause a CallStackOverflowException. . // non-void recursive method public static void simpleRecur(int n) { system.out.println(n); if (n == 0) return 0; return n + system.out.println(n); } . Call Stack Variable trace for call . simpleRecur(8)=8 + simpleRecur(4) | n=8 8==0 F | . simpleRecur(4)=4 + simpleRecur(2) | n=4 4==0 F | . simpleRecur(2)=2 + simpleRecur(1) | n=2 2==0 F | . simpleRecur(1)=1 + simpleRecur(0) | n=1 1==0 F | . simpleRecur(0)=0 | n= 0==0 T | . but where does it return 0 to? . Enter the password to answer: . Reveal Text where it was called!!!! in this case, 0 was recalled in simpleRecur(0), the 0 replaces it so 1+ 0 = 1 and 1 tries to do the same as zero . what would be the return of simpleRecur(8)? . Enter the password answer: . Reveal Text 8 . most of this might have flew over your head, but don’t fret. . real world examples of recursion: . Russian dolls . Russian dolls are a set of wooden dolls of decreasing size placed one inside another. | The dolls are made in such a way that each doll can be opened in half to reveal a smaller doll inside. | Lets set the smallest as the base case | The dolls are a recursive structure because each doll is a smaller version of the previous doll. | . . mr. finn here is gonna talk about how to visualize recursion better. . 10.2 . James and Justin | . linear search . int Array- | 0 | 2 | 4 | 6 | 8 | 10 | 12 | 14 | 16 | 18 | 20 | 22 | . target 12 . with linear search, we just iterate through each value, starting at the start of the list. here, we need 7 iterations to find 4. . iterative binary search . //iterative approach to binary search // This is a method for performing a binary search on a sorted integer array. // It returns the index of the target element if found, or -1 if the element is not in the array. public static int binarySearch(int[] intArray, int lowPosition, int highPosition, int target) { int midPosition; // Use a while loop to repeatedly divide the search range in half. while (lowPosition &lt;= highPosition) { // Calculate the middle position of the current search range. midPosition = (highPosition + lowPosition) / 2; // If the element at the middle position is less than the target, // we narrow our search to the right half of the current range. if (intArray[midPosition] &lt; target) { lowPosition = midPosition + 1; } // If the element at the middle position is greater than the target, // we narrow our search to the left half of the current range. else if (intArray[midPosition] &gt; target) { highPosition = midPosition - 1; } // If the element at the middle position is equal to the target, // we have found our target, and we return its index. else { return midPosition; } } // If the while loop completes without finding the target, we return -1 to indicate it&#39;s not in the array. return -1; } . recursive binary search . public static int recBinarySearch(int[] intArray, int lowPosition, int highPosition, int target) { int midPosition; // Check if the lower index is greater than the higher index, indicating an empty search range. if (lowPosition &gt; highPosition) { // If the low index is greater than the high index, the target element is not found. return -1; } else { // Calculate the middle index of the current search range. midPosition = (lowPosition + highPosition) / 2; // If the element at the middle index is less than the target, search in the right half of the array. if (intArray[midPosition] &lt; target) { // Recursively call the function with an updated search range (right half). return recBinarySearch(intArray, midPosition + 1, highPosition, target); } // If the element at the middle index is greater than the target, search in the left half of the array. if (intArray[midPosition] &gt; target) { // Recursively call the function with an updated search range (left half). return recBinarySearch(intArray, lowPosition, midPosition - 1, target); } // If the element at the middle index is equal to the target, we found the target element. // Return the index where the target element is found (midPosition). return midPosition; } } . tracing through a runthrough . int Array: |0|2|4|6|8|10|12|14|16|18|20|22| Target: 12 . recBinarySearch(intArray, 0, 10, 12); . Call 1: Midpoint calculated as (0 + 10) / 2 = 5 The target value 12 is greater than the midpoint value at index 5 (10). So, we narrow our search to values greater than the midpoint. . Call 2: recBinarySearch(intArray, mid1, high, target) Midpoint 1 calculated as (mid + high) / 2 = 7 . The midpoint value at index 7 is 14, which is greater than 12, so the next call is between low and mid. . Call 3: Another recursive call finds the midpoint value at index 6, as it’s between low and mid, which is our target number. . If the target does not exist, we would print -1 as the value is not found. . popcorn hack . edit the following code so that running the cell will sort through an array of your creation. . public static int recBinarySearch(int[] intArray, int lowPosition, int highPosition, int target) { int midPosition; // Check if the lower index is greater than the higher index, indicating an empty search range. if (lowPosition &gt; highPosition) { // If the low index is greater than the high index, the target element is not found. return -1; } else { // Calculate the middle index of the current search range. midPosition = (lowPosition + highPosition) / 2; // If the element at the middle index is less than the target, search in the right half of the array. if (intArray[midPosition] &lt; target) { // Recursively call the function with an updated search range (right half). return recBinarySearch(intArray, midPosition + 1, highPosition, target); } // If the element at the middle index is greater than the target, search in the left half of the array. if (intArray[midPosition] &gt; target) { // Recursively call the function with an updated search range (left half). return recBinarySearch(intArray, lowPosition, midPosition - 1, target); } // If the element at the middle index is equal to the target, we found the target element. // Return the index where the target element is found (midPosition). return midPosition; } } // int[] intArray = {}; // uncomment these lines and fill them in with the info needed for the code to run and find your target. // recBinarySearch(some code should go here); . takeaways . Data must be in sorted order for binary search to work. . The binary search algorithm starts in the middle of the sorted array or arraylist and and eliminates half of the array or arraylist in each iteration until the desired value is found or all elements have been eliminated . Binary search can be more effective than linear search . binary search algorithm can be written linearly or recursively . topic 2 recursive sorting and searching . APPLY RECURSIVE LOGIC TO sort arrays for elements . mergeSort(myList) { mergeSort(left) mergeSort(right) } // left, right merge . example trace (look at the whiteboard, I will draw it out maybe) . Original List: |5|25|8|-9|14|0|-2|2| . The first recursive call begins by splitting the list into the left and right sides: (5, 25, 8, -9). . Another recursive call is made on the left side, which further splits into (5, 25). . The left and right sides are split into individual elements, and the two elements (5 and 25) are merged, resulting in (5, 25). . The current list becomes (5, 25, -9, 8). . The current list is sorted, resulting in (-9, 5, 8, 25). . Current List: . -9 | 5 | 8 | 25 | 14 | 0 | -2 | 2 | . The final left side is sorted, and a recursive call is made for the right side: (14, 0, -2, 2). . The right side is further split into (14, 0). . These two elements (14 and 0) are merged into (0, 14). . The remaining elements (-2 and 2) are merged into (-2, 2). . The right side is now (0, 14, -2, 2). . Current List: |-9|5|8|25|0|14|-2|2| . The left and right sides are finally merged together: . Left: -9, 5, 8, 25 . Right: 0, 14, -2, 2 . The two merged sides are sorted, resulting in the final sorted list: |-9|0|2|5|8|14|25| . The merge sort process is complete, and the original list is sorted: Sorted List: |-9|0|2|5|8|14|25| . Merge Method The **merge** method . // work from left to right in each virtual myArray // compare elements to return them to the original array in order int[] myArray = {3, 4, 6, 8, 1, 2, 5, 7} // think of the temporary array as two virtual arrays int[] myArray1 = {3, 4, 6, 8}; int[] myArray2 = {1, 2, 5, 7}; // have to throw an exception for the last one to end the code // if any elements remain in the lower half of the temporary array, return them to the original array . 1 &lt; 3, 1 goes to the first place | 2 &lt; 3, 2 goes to the second place | 3 &lt; 5, 3 goes to the third place | 4. 4 &lt; 5, 4 goes to the fourth place . 5. 5 &lt; 6, 5 goes to the fifth place . 6. 6 &lt; 7, 6 goes to the sixth place . 7. 7 &lt; 8, 7 goes tot the seventh place . 8. 8 goes to the last place &lt;/detail&gt; java public class sort { public static int[] output; public static void __mergeSort(int[] myArray, int left, int right) { if(left &lt; right) { int i; int center = (left + right) / 2; int p = 0; int j = 0; int k = left; __mergeSort(myArray, left, center); // sort front part __mergeSort(myArray, center + 1, right); // sort back part for(i = left; i &lt;= center; i++) { output[p++] = myArray[i]; } // comparing the elements and put in myArray while (i &lt;= right &amp;&amp; j &lt; p) { if (output[j] &lt;= myArray[i]) { myArray[k] = output[j]; j++; } else { myArray[k] = myArray[i]; i++; } k++; } // put the remain in myArray while (j &lt; p) { myArray[k++] = output[j++]; } } } public static void mergeSort(int[] myArray) { output = new int[myArray.length]; __mergeSort(myArray, 0, myArray.length - 1); output = null; } public static void printArray(int[] array) { for(int data: array) { System.out.print(data + &quot; &quot;); } System.out.println(); } public static void main(String[] args) { int[] array = {3, 4, 6, 8, 1, 2, 5, 9}; System.out.println(&quot;before&quot;); printArray(array); mergeSort(array); System.out.println(&quot;after&quot;); printArray(array); } } sort.main(null); # TAKEAWAYS Mergesort is a recursive sorting algorithm that can be used to sort elements in an array or ArrayList for the AP test, you must remember how it works. remember the left-right merge rule. # hack Question: what are the usage cases of merge sort? what about usage cases of recursive binary sort? try and come up with a real life scenario for each usage case. # Recursion Visualized - Finn Carpenter - XCHART Library ## Important Note - If you hit the X button to close the window it breaks the kernel - Two Options - Have a bunch of those windows, when done the close - Keep refreshing kernel by switching to python and then back to java ## Basic X Chart Code java %maven org.knowm.xchart:xchart:3.5.2 import org.knowm.xchart.*; public class Example0 { public static void main(String[] args) throws Exception { // these vars hold your X and Y values double[] xData = new double[] { 0.0, 1.0, 2.0 }; double[] yData = new double[] { 2.0, 1.0, 0.0 }; // Create Chart XYChart chart = QuickChart.getChart(&quot;Sample Chart&quot;, &quot;X&quot;, &quot;Y&quot;, &quot;y(x)&quot;, xData, yData); // Show it new SwingWrapper(chart).displayChart(); } } Example0.main(null); ## X Chart Graphs with recursion - What is the shape of the graph going to look like when the recursive function is done - The equation would be ______ java private static void graph(double[] xData, double[] yData, int index, double x, int maxIndex, double stepSize) { if (index &gt; maxIndex) { return; } xData[index] = x; yData[index] = x * x; graph(xData, yData, index + 1, x + stepSize, maxIndex, stepSize); } java %maven org.knowm.xchart:xchart:3.5.2 import org.knowm.xchart.*; public class recursiveGraph { public static void main(String[] args) throws Exception { int numPoints = 100; double[] xData = new double[numPoints]; double[] yData = new double[numPoints]; plotParabola(xData, yData, 0, -5.0, numPoints - 1, 0.1); // Create Chart XYChart chart = QuickChart.getChart(&quot;Parabola&quot;, &quot;X&quot;, &quot;Y&quot;, &quot;y(x)&quot;, xData, yData); // Show it new SwingWrapper(chart).displayChart(); } private static void plotParabola(double[] xData, double[] yData, int index, double x, int maxIndex, double stepSize) { if (index &gt; maxIndex) { return; } xData[index] = x; yData[index] = x * x; plotParabola(xData, yData, index + 1, x + stepSize, maxIndex, stepSize); } } RecursiveGraph.main(null); ## XChart 2 - What is the shape of the graph going to look like when the recursive function is done - The equation would be ______ java private static void plot(double[] xData, double[] yData, int index, double x, int maxIndex, double stepSize, double base) { if (index &gt; maxIndex) { return; } xData[index] = x; yData[index] = Math.pow(base, x); plot(xData, yData, index + 1, x + stepSize, maxIndex, stepSize, base); } java %maven org.knowm.xchart:xchart:3.5.2 import org.knowm.xchart.*; public class recursiveGraph2 { public static void main(String[] args) throws Exception { int numPoints = 100; double[] xData = new double[numPoints]; double[] yData = new double[numPoints]; plotExponential(xData, yData, 0, -5.0, numPoints - 1, 0.1, 2.0); // You can adjust the base as needed (e.g., 2.0 for 2^x) // Create Chart XYChart chart = QuickChart.getChart(&quot;Mati Yapping Graph&quot;, &quot;Seconds of Mati Yapping&quot;, &quot;My Anger&quot;, &quot;y(x)&quot;, xData, yData); // Show it new SwingWrapper(chart).displayChart(); } private static void plotExponential(double[] xData, double[] yDawta, int index, double x, int maxIndex, double stepSize, double base) { if (index &gt; maxIndex) { return; } xData[index] = x; yData[index] = Math.pow(base, x); plotExponential(xData, yData, index + 1, x + stepSize, maxIndex, stepSize, base); } } recursiveGraph2.main(null); # Hacks - Finish all popcorn hacks for the lesson - Follow the directions bellow for the XChart Hacks # Example of Cool Function for the Hacks - If you are having trouble with thinking of a cool equation to put into a recursion form, follow these tips - Look up the shape/symbol you would like to put into the graph - Try to split the equation up into what math methods you will need - Ask the friend who know most about coding (wink wink) - Make sure to take a screenshot of the graph and display it next to it&#39;s respective code block java %maven org.knowm.xchart:xchart:3.5.2 import org.knowm.xchart.*; public class HeartShapeGraph { public static void main(String[] args) throws Exception { int numPoints = 100; double[] xData = new double[numPoints]; double[] yData = new double[numPoints]; plotHeartShape(xData, yData, 0, 0, numPoints - 1); // Create Chart XYChart chart = QuickChart.getChart(&quot;Heart Shape&quot;, &quot;X&quot;, &quot;Y&quot;, &quot;y(x)&quot;, xData, yData); // Show it new SwingWrapper(chart).displayChart(); } private static void plotHeartShape(double[] xData, double[] yData, int index, double t, int maxIndex) { if (index &gt; maxIndex) { return; } //Chat GPT Math xData[index] = 16 * Math.pow(Math.sin(t), 3); yData[index] = 13 * Math.cos(t) - 5 * Math.cos(2 * t) - 2 * Math.cos(3 * t) - Math.cos(4 * t); plotHeartShape(xData, yData, index + 1, t + (2 * Math.PI) / maxIndex, maxIndex); } } HeartShapeGraph.main(null); .",
            "url": "http://localhost:4100/teacher_portfolio/2023/10/31/java_recursion-P3_IPYNB_2_.html",
            "relUrl": "/2023/10/31/java_recursion-P3_IPYNB_2_.html",
            "date": " • Oct 31, 2023"
        }
        
    
  
    
        ,"post74": {
            "title": "U10 | Recursion | Student P1",
            "content": "10.1 Recursion . A method calling itself to repeat a certain number of times. . Popcorn Hack: What is recursion? . Vocabulary . Base Case - this sets the __ __ for when the recursion will stop | Formal Parameters - __ within the method (local variables) | . Method Calling Itself . We will first be looking at how a method can call itself. . /* DO NOT RUN THIS if you do run this accidentally press `ctrl + c` twice */ public class Recursion1 { public static void recursionCount(int n) { // original method definition System.out.println(n); recursionCount(n - 1); // calling the method again } public static void main(String[] args) { recursionCount(3); // original call of the method } } Recursion1.main(null); . In this example, you will receive an overflow error because the method is calling itself infinitely. To avoid this you would create a __ __. . A base case usually uses an if-then statement to turn the loop off after a certain condition is met. . public class Recursion2 { public static void recursionCount(int n) { if (n &lt;= 0) { // added base case, telling the program to stop when n is less than or equal to 0 System.out.println(&quot;done&quot;); } else { System.out.println(n); recursionCount(n - 1); // method recursion } } public static void main(String[] args) { recursionCount(3); // calling original function } } Recursion2.main(null); . 3 2 1 done . Popcorn Hack: Create your own quick recursive program. . // Add code here . Calling With Different Parameters . You can also call the method with multiple different __ __, also known as local variables. . In this example we call an integer and string. . public class Recursion3 { public static void recursionPrint(int n, String a) { // formal parameters are within this method if (n &lt;= 0) { // base case System.out.println(&quot;done&quot;); return; } System.out.println(&quot;n = &quot; + n + &quot; a = &quot; + a); // printing each var with each call of the method String addChar = a + &quot;!&quot;; // mutating string with each recursion int addN = n - 1; // mutating integer with each recursion recursionPrint(addN, addChar); // recursive function } public static void main(String[] args) { recursionPrint(5, &quot;test&quot;); // initial call } } Recursion3.main(null); . n = 5 a = test n = 4 a = test! n = 3 a = test!! n = 2 a = test!!! n = 1 a = test!!!! done . Here we just __ each string and subtract one from every previous number. . Capturing Progression Through Recursion . You can also capture the progression through recursion. This is useful for doing specific tasks in specific steps through recursion. . public class Recursion4 { public static void recursionCount(int n, int progress) { if (n &lt;= 0) { System.out.println(&quot;done&quot;); } else { if (n == progress) { System.out.println(&quot;Reached halfway through the array.&quot;); // special action done only when the program has reached a certain point } System.out.println(n); recursionCount(n - 1, progress); // recursive call } } public static void main(String[] args) { int n = 6; int progress = n / 2; // progress is set to half of the array length recursionCount(n, progress); // initial call } } Recursion4.main(null); . 6 5 4 Reached halfway through the array. 3 2 1 done . Popcorn Hack: What other situations could we use capturing progression for? . Converting Recursion to Iteration . Any recursive process can be made iterative, however this is not needed for the AP test. It is, however, still useful. . Recursive Version . public class Recursion5 { public static void recursionCount(int n) { if (n &lt;= 0){ System.out.println(&quot;done&quot;); } else { System.out.println(n); recursionCount(n - 1); // recursive function } } public static void main(String[] args) { recursionCount(3); // initial call } } Recursion5.main(null); . 3 2 1 done . Iterative Version . public class Iteration { public static void iterationCount(int n) { for (int i = n; i &gt;= 1; i--) { // using a for loop to iterate, notice we go only so i is greater than 1 and not 0 System.out.println(i); } System.out.println(&quot;done&quot;); } public static void main(String[] args) { iterationCount(3); // same initial call } } Iteration.main(null); . 3 2 1 done . Popcorn Hacks: We we go only so i is greater than or equal to 1 and not 0. Why? . Traversing With Recursion . You can traverse many things with recursion. Here I will show traversal through a string, array, and an ArrayList object. . String Traversal . You can traverse through a string, finding a specific character in the string. . public class FindChar { public static boolean findChar(String s, char target, int index) { if (index &gt;= s.length()) { // checks for if the index we are looking for is greater than the word length return false; } if (s.charAt(index) == target) { // checks for if there is a character the index we are searching return true; } return findChar(s, target, index + 1); // recalls method, recursion } public static void main(String[] args) { String sampleString = &quot;words&quot;; // example string char targetChar = &#39;s&#39;; // character we are looking for System.out.println(&quot;Sample String: &quot; + sampleString); boolean isCharFound = findChar(sampleString, targetChar, 0); // checks if the character we are looking for is found, based on boolean if (isCharFound) { System.out.println(&quot;Character &#39;&quot; + targetChar + &quot;&#39; is found.&quot;); // if it is found, show this } else { System.out.println(&quot;Character &#39;&quot; + targetChar + &quot;&#39; is not found.&quot;); // if not show this } } } FindChar.main(null); . Sample String: words Character &#39;s&#39; is found. . You can also find and print a certain range of characters from the string. . public class PrintRange { public static void printRange(String s, int startIndex, int endIndex) { if (startIndex &lt; 0 || endIndex &gt; s.length() || startIndex &gt;= endIndex) { // checks for invalid declaration or end (negative index, index larger than string length, index start has reached the end) return; } System.out.print(s.charAt(startIndex)); // print the characters in the range printRange(s, startIndex + 1, endIndex); // recursive calling } public static void main(String[] args) { String sampleString = &quot;example&quot;; // string int startIndex = 0; int endIndex = 5; System.out.println(&quot;Word: &quot; + sampleString); System.out.println(&quot;Start: &quot; + startIndex + &quot;, End: &quot; + endIndex); System.out.print(&quot;Characters in the specified range: &quot;); printRange(sampleString, startIndex, endIndex); // initial call } } PrintRange.main(null); . Word: example Start: 0, End: 5 Characters in the specified range: examp . Popcorn Hack: Make it so that we can find two different ranges and print them. . // Enter code here . Array Traversal . You can also traverse arrays using recursion. . public class ArrayTraversal { public static int findIndex(int[] arr, int targetIndex, int currentIndex) { if (currentIndex &lt; 0 || currentIndex &gt;= arr.length) { // checks for invalid (index less than 0, index greater than array length) return -1; // returns invalid } if (currentIndex == targetIndex) { // if the index is found return currentIndex; } return findIndex(arr, targetIndex, currentIndex + 1); // recursion } public static void main(String[] args) { int[] sampleArray = {1, 4, 6, 8, 4, 9, 12}; int targetIndex = 2; // target int foundIndex = findIndex(sampleArray, targetIndex, 0); if (foundIndex != -1) { // checks what has been outputted int value = sampleArray[foundIndex]; // found index value System.out.println(&quot;Index &quot; + targetIndex + &quot; is found in the array at position &quot; + foundIndex + &quot; with a value of &quot; + value); // found } else { System.out.println(&quot;Index &quot; + targetIndex + &quot; is not found in the array.&quot;); // not found } } } ArrayTraversal.main(null); . Index 2 is found in the array at position 2 with a value of 6 . ArrayList Object Traversal . We can also traverse the ArrayList object. . import java.util.ArrayList; public class ArrayListTraversal { public static int findIndex(ArrayList&lt;Integer&gt; list, int targetIndex, int currentIndex) { if (currentIndex &lt; 0 || currentIndex &gt;= list.size()) { // checks for invalid return -1; } if (currentIndex == targetIndex) { // finds index return currentIndex; } return findIndex(list, targetIndex, currentIndex + 1); // recusion } public static void main(String[] args) { ArrayList&lt;Integer&gt; sampleList = new ArrayList&lt;&gt;(); // created ArrayList object sampleList.add(1); sampleList.add(4); sampleList.add(6); sampleList.add(8); sampleList.add(4); sampleList.add(9); sampleList.add(12); int targetIndex = 2; // target int foundIndex = findIndex(sampleList, targetIndex, 0); if (foundIndex != -1) { // checks for if found or not int value = sampleList.get(foundIndex); // gets found index from ArrayList object System.out.println(&quot;Index &quot; + targetIndex + &quot; is found in the ArrayList at position &quot; + foundIndex + &quot; with a value of &quot; + value); } else { System.out.println(&quot;Index &quot; + targetIndex + &quot; is not found in the ArrayList.&quot;); } } } ArrayListTraversal.main(null); . Index 2 is found in the ArrayList at position 2 with a value of 6 . Conclusion . Must Knows: . How to create recursive code (recalling a method within itself, with parameters that change) | Record progression through recursion (completing certain tasks through the progression) | Traversal of strings, arrays, and the ArrayList object | . Overall, recursion is useful as an alternative to iteration. Recursion is usually chosen for problems that can naturally be divided into parts, like sorting which will be talked about in the next part. . 10.2 Binary Search . Binary Search vs Linear Search . target number - 24 . intArray - 0 2 4 6 8 10 12 14 16 18 20 22 24 26 28 30 32 34 36 38 40 . Popcorn hack: . How many times iterated through for Linear Search? . Answer: . Example of Binary Search with Recursion . public class BinarySearch { public static void main(String[] args) { int[] intArray = {0, 2, 4, 6, 8, 10, 12, 14, 16, 18, 20, 22, 24, 26, 28, 30, 32, 34, 36, 38, 40}; // Example array int target = 24; // Example target value int result = recBinarySearch(intArray, 0, intArray.length - 1, target); if (result == -1) { System.out.println(&quot;Target not found in the array.&quot;); } else { System.out.println(&quot;Target found at index: &quot; + result); } } public static int recBinarySearch(int[] intArray, int lowPosition, int highPosition, int target) { //method if (lowPosition &gt; highPosition) { return -1; // Element not found in the array } else { int midPosition = (lowPosition + highPosition) / 2; if (intArray[midPosition] &lt; target) { return recBinarySearch(intArray, midPosition + 1, highPosition, target); } else if (intArray[midPosition] &gt; target) { return recBinarySearch(intArray, lowPosition, midPosition - 1, target); } else { return midPosition; // Element found at midPosition } } } } BinarySearch.main(null); . Target found at index: 12 . Call 1 . Index = 0 - 20, midPosition = 10, midPosition value = 20 . Since 24 &gt; 20, . then… . lowPosition = midPosition + 1 = 11 highPosition = highPosition = 20 . Call 2 . Index = 11-20, midPosition index = 15, midPosition value = 30 . Since 24 &lt; 30, . then… . lowPosition = lowPosition = 11 high position = midPosition - 1 = 14 . Call 3 . Index = 11-14, midPosition index = 12, midPosition value = 24 . Since 24 = 24, . then… . return midPosition; . In total, our recursive calls to the method 3 times. . Recursive Logic behind Merge Sort . What is Merge Sort? Merge sort is a recursive sorting algorithm that can be used to sort elements in an array or ArrayList . Follows a divide and conquer approach | . . Notes: . List: [38,27,43,3,9,82,10] sudocode version: mergeSort(List) { mergeSort(left) mergeSort(right) merge(left &amp; right) } . Must finish call above it in order to finish the call | . Call 1: . Splitting List into half | Left side: [38, 27, 43, 3] | Must finish call 1 in order to do the right side and do the merge | Recursively calls mergesort and splits the list in half again | Call 2: . New Left side List: [38, 27] | Method calls are stacking on top of each other | . Notes: . Element 5 can’t be split into the left or the right, nor can it be merged with itself | Consider the left call complete! | . Notes: . Same thing applies with the right, element 25 can’t be split to the left or the right, nor can it merge with itself. | Now we will merge them back in order: [5, 25] | Important concepts: . When making new recursive call, we are NOT making a new list, array, or a new set of elements. | Basically updating all the way back to the original list | . Notes: . When merging back together, it will merge back from least to greatest. | . Popcorn Hack: What will the final list be? . Answer: . The mergeSort Method . //sudocode mergeSort(myArray, low, high) { if (low &lt; high) { middle = (low + high)/2; //find middle mergeSort(myArray, low, middle); //make a recursive call from low to middle (look at left hand side) mergeSort(myArray, middle + 1, high); //once low is no longer less than high, make a new recursive call (look at right hand side) merge (myArray, low, middle, high); //merge back together } } . int [] myArray = {3, 4, 6, 8, 1, 2, 5, 7}; . Steps: . Split the Array in half | Left side: {3, 4, 6, 8}; Right side {1, 2, 5, 7}; | . Compare the first indexes in each individual array (which would be index 0 and index 4) | . . Since 1&lt;3, our new index 0 value would be 1 when we merge the array back together | . . Since 5&gt;3, our new index 2 value would be 3 when we merge the array back together | Popcorn Hack: What will the final array return? . Answer: {} . Wait, but there’s an issue… . . . After comparing index 3 and index 7, we then need to compare index 3 and index, but there is no index 8… | Will recieve an index out of bounds exception. | . No worries! Since we are done with the sort, we can just move the rest of the elements to the end of the array because we are already done sorting. . Index 3 will now become index 7. . Hacks . Create a 2D array either with just a regular array variable that you can recursively traverse through. | Each value in this 2D array must be a string that you can individually traverse through. | You must output a result of all string values that have a user inputted letter. | . import java.util.Scanner; public class String2DArrayTraversal { public static void main(String[] args) { // code in here } public static void traverseString2DArray(String[][] array, char letter, int row, int col) { // code in here } } String2DArrayTraversal.main(null); . Create your own merge chart (like the first image in this 10.2 lesson) with your own values from a list, array, or arraylist (doesn’t matter). Explain how recursion works in the merge chat. . // code in here .",
            "url": "http://localhost:4100/teacher_portfolio/2023/10/31/java_recursion-P1_IPYNB_2_.html",
            "relUrl": "/2023/10/31/java_recursion-P1_IPYNB_2_.html",
            "date": " • Oct 31, 2023"
        }
        
    
  
    
        ,"post75": {
            "title": "U9 | Inheritance | Student P3",
            "content": "9.1 What is inheritance? . Inheritance is like a family, except the kids only have one parent instead of two | For example: | . . The java code for it: . class Mom{ // CODE } class Son extends Mom{ // CODE } class Daughter extends Mom{ // CODE } . In this example, the Son and Daughter inherits the Mom, meaning it inherit the components of the mother. This makes the “Son” and “Daughter” classes the __ of the “Mom” class as they inherit the “Mom” class components and the “Mom” class the ___. . 9.2 Using the Super keyword for Constructors . One keyword to know is the super keyword | The super keyword allows the subclass to store key variables in the main class’s __ (also known as the super class) | Example below: | . public class Vehicle { //This is the Superclass, it inherits the key variables for its subclasses public String Name; //They don&#39;t have to be public, but I just put public word for fun public String Sound; public int creation; public int Mph; public Vehicle(String name, int dateMade, String sound, int mph){ //Similar to the constructor used in Javascript. It maintains values within this superclass Name = name; Sound = sound; creation = dateMade; Mph = mph; } } public class Car extends Vehicle { public int capacity; public Car(String name, int dateMade, String sound, int mph, int passangerCapacity){ super(name, dateMade,sound, mph); //Uses the superclass&#39;s constructor to store the key variables for the Car subclass capacity = passangerCapacity; } public void Information(){ //Prints out the values the super class&#39;s constructors inherits System.out.println(super.Sound + &quot; &quot; + this.Sound); System.out.println(&quot;I am the &quot; + super.Name); System.out.println(&quot;I was made in &quot; + super.creation); System.out.println(&quot;I move at &quot; + super.Mph +&quot; miles per hour&quot;); System.out.println(&quot;I hold at most &quot; + capacity + &quot; people&quot;); } } public class Test { public static void main(String[] args){ Car Tesla = new Car(&quot;Tesla&quot;, 2003, &quot;VROOM!&quot;, 200, 5); Tesla.Information(); } } Test.main(null); . VROOM! VROOM! I am the Tesla I was made in 2003 I move at 200 miles per hour I hold at most 5 people . Popcorn Hack: . Make it so that a new instance of Bob runs . public class Worker{ String Name; int Age; int Salary; public Worker(String name, int age, double salary){ //Write codes that inherits its key properties } } public class Bob extends Worker{ public Bob(String name, int age, double salary, position){ //Write code that maintains bob&#39;s information } public void Information(){ //Write code that writes out Bob&#39;s key information } } public class Test{ public static void main(String[] args){ //Make sure that it runs } } . 9.3 Overriding Methods . Method overriding is a concept in object-oriented programming (OOP) that allows a subclass to provide a specific implementation of a method that is already defined in its superclass. This enables a subclass to provide its own behavior for a method while maintaining a relationship with its superclass. . In the context Java, here’s how method overriding works: . Inheritance: Method overriding is closely related to inheritance. You have a superclass (or base class) and a subclass (or derived class). The subclass inherits properties and behaviors from the superclass. . Superclass Method: The superclass defines a method. This method can be overridden by the subclass. . Subclass Overrides: In the subclass, you can provide a new implementation of the same method. This is done by using the same method name, return type, and parameter list. . @Override Annotation (Java): In Java, it’s common to use the @Override annotation to explicitly indicate that a method in the subclass is intended to override a method in the superclass. This helps catch errors during compilation if the method doesn’t correctly match the superclass method signature. . Why Override Methods: . Method overriding is used for several reasons: . Customization: It allows you to customize or extend the behavior of a superclass method in the subclass to meet the specific needs of the subclass. . Polymorphism: Method overriding is a key component of polymorphism. It enables you to treat objects of the subclass as if they were objects of the superclass, promoting flexibility and extensibility. . Consistency: Method overriding helps maintain a consistent interface for classes in an inheritance hierarchy. Code that uses the superclass doesn’t need to be changed when a subclass overrides a method. . Code Reusability: It promotes code reusability by allowing you to build on existing code in the superclass. . class Animal { void makeSound() { System.out.println(&quot;Animals make sounds&quot;); } } class Dog extends Animal { @Override void makeSound() { System.out.println(&quot;Dog barks&quot;); } } class Cat extends Animal { @Override void makeSound() { System.out.println(&quot;Cat meows&quot;); } } public class Main { public static void main(String[] args) { Animal animal = new Animal(); Animal dog = new Dog(); Animal cat = new Cat(); animal.makeSound(); // Output: Animals make sounds dog.makeSound(); // Output: Dog barks cat.makeSound(); // Output: Cat meows } } Main.main(null); . Animals make sounds Dog barks Cat meows . In this example: . We have a base class Animal with a method makeSound(). . We create two subclasses, Dog and Cat, which inherit from the Animal class. . Both Dog and Cat classes override the makeSound() method with their own implementations. . In the main method, we create instances of the base class and its subclasses. . We demonstrate polymorphism by calling the makeSound() method on objects of the base class and the subclasses. The method called depends on the actual type of the object, not the reference type. . This showcases how method overriding allows you to provide specific implementations for methods in subclasses, promoting polymorphism and custom behavior for each subclass. . Another Example: . &lt;img class=”image” src=”https://github.com/AniCricKet/musical-guacamole/assets/91163802/576237f9-cdc4-409b-84f9-96dffe0cdd5c” width=32%&gt; &lt;img class=”image” src=”https://github.com/AniCricKet/musical-guacamole/assets/91163802/03923e22-2b6e-4e4d-9244-1d5145f6c6d9” width=32%&gt; &lt;img class=”image” src=”https://github.com/AniCricKet/musical-guacamole/assets/91163802/5fe0c72c-c17b-4edb-a567-8c9098998aac” width=32%&gt; . Imagine you’re building a program to manage sports team rosters. You can have a base class ‘Athlete’ representing common attributes and actions of all athletes. Then, create subclasses for specific sports like ‘FootballPlayer’, ‘BasketballPlayer’, and ‘SoccerPlayer’. . // Base Class class Athlete { String name; int age; int jerseyNumber; String position; public Athlete(String name, int age, int jerseyNumber, String position) { this.name = name; this.age = age; this.jerseyNumber = jerseyNumber; this.position = position; } public void train() { System.out.println(name + &quot; is training.&quot;); } public void displayInfo() { System.out.println(&quot;Athlete Info:&quot;); System.out.println(&quot;Name: &quot; + name); System.out.println(&quot;Age: &quot; + age); System.out.println(&quot;Jersey Number: &quot; + jerseyNumber); System.out.println(&quot;Position: &quot; + position); } } Athlete athlete = new Athlete(&quot;John Mortensen&quot;, 19, 4, &quot;Teacher&quot;); athlete.train(); athlete.displayInfo(); . John Mortensen is training. Athlete Info: Name: John Mortensen Age: 19 Jersey Number: 4 Position: Teacher . class FootballPlayer extends Athlete { public FootballPlayer(String name, int age, int jerseyNumber, String position) { super(name, age, jerseyNumber, position); } @Override public void train() { System.out.println(name + &quot; is practicing football drills.&quot;); } @Override public void displayInfo() { super.displayInfo(); } } class BasketballPlayer extends Athlete { public BasketballPlayer(String name, int age, int jerseyNumber, String position) { super(name, age, jerseyNumber, position); } @Override public void train() { System.out.println(name + &quot; is shooting 3s on the court.&quot;); } @Override public void displayInfo() { super.displayInfo(); } } class SoccerPlayer extends Athlete { public SoccerPlayer(String name, int age, int jerseyNumber, String position) { super(name, age, jerseyNumber, position); } @Override public void train() { System.out.println(name + &quot; is practicing taking free kicks.&quot;); } @Override public void displayInfo() { super.displayInfo(); } } . FootballPlayer footballPlayer = new FootballPlayer(&quot;Tyreek Hill&quot;, 28, 10, &quot;Wide Receiver&quot;); BasketballPlayer basketballPlayer = new BasketballPlayer(&quot;Jimmy Butler&quot;, 32, 22, &quot;Small Forward&quot;); SoccerPlayer soccerPlayer = new SoccerPlayer(&quot;Neymar Jr&quot;, 31, 10, &quot;Left Winger&quot;); footballPlayer.train(); footballPlayer.displayInfo(); System.out.println(); basketballPlayer.train(); basketballPlayer.displayInfo(); System.out.println(); soccerPlayer.train(); soccerPlayer.displayInfo(); System.out.println(); . Tyreek Hill is practicing football drills. Athlete Info: Name: Tyreek Hill Age: 28 Jersey Number: 10 Position: Wide Receiver Jimmy Butler is shooting 3s on the court. Athlete Info: Name: Jimmy Butler Age: 32 Jersey Number: 22 Position: Small Forward Neymar Jr is practicing taking free kicks. Athlete Info: Name: Neymar Jr Age: 31 Jersey Number: 10 Position: Left Winger . Explanation: . In this Java code, you have a basic “Athlete” class with information and actions that all athletes share. Then, there are specific types of athletes (football, basketball, and soccer players) that inherit these common traits but also have their unique behaviors, like training routines. Method overriding lets them have their own way of training while keeping the shared information, making the code easy to manage and reuse for different types of athletes. . Popcorn Hack: . Why is it helpful to have a common base class like ‘Athlete’ for all these different types of athletes? How does it make the code more organized? . 9.4 Using Super keyword for Methods . Why only use super for constructors when you can use them for methods too? | With the super key word, not only can you store variables, but also store methods | . class Animal{ public void Introduction(String name){ System.out.println(&quot;I am a &quot; + name); } } class Dog extends Animal{ public void Woof(){ super.Introduction(&quot;Dog&quot;);//Inherits the introduction method in the Animal Class, then introduces itself as a dog System.out.println(&quot;Woof!&quot;); //Does its own thing } } class Cow extends Animal{ public void Moo(){ super.Introduction(&quot;Cow&quot;);//Inherits the introduction method in the Animal Class, then introduces itself as a cow System.out.println(&quot;MOOOO!&quot;);//Does its own thing } } class Test{ public static void main(String[] args){ Dog dog = new Dog(); Cow cow = new Cow(); dog.Woof(); cow.Moo(); } } Test.main(null); . I am a Dog Woof! I am a Cow MOOOO! . 9.4 Hack . Finish up the code with this criteria: All subclasses must say their origin, the origin can be from SchoolSupply class, and it must run through main. . class SchoolSupply{ public void BasicInfo(){ //Code } } class Pencil extends SchoolSupply{ public void Information(){ //Code } } class Eraser extends SchoolSupply{ public void Information(){ //Code } } public class Test{ public static void main(String[] args){ //Code } } . 9.5 Creating References Using Inheritance Hierarchies . Inheritance can be thought as an upside down tree with the __ on the top and the __ on the bottom. The __ is the superclass while the __ are the subclasses of this superclass. A visual representation of this tree is called a type diagram or hierarchy tree. . A sample structure would be like: . public class A public class B extends A public class C extends B public class D extends C public class E extends I public class F extends I public class G extends H public class H extends A public class I extends H . Popcorn Hack . Draw a hierarchy tree for the above structure and add the picture here | . This structure works as C not only inherits properties from B, but it also inherits properties from A. B is like C’s parent and A is like C’s grandparent. Think about it like real life, all families inherit something from their ancestors. . In addition, you could also create objects like this: . C c = new C(); B c = new C(); A c = new C(); . // This is the above example in code form class A {} class B extends A {} class C extends B {} public class Main { public static void main(String[] args) { C c = new C(); // variable c is of type C B b = new C(); // variable b is of type B, but refers to an instance of C A a = new C(); // variable a is of type A, but refers to an instance of C } } . 9.6 Polymorphism . A _____ variable is polymorphic when it can refer to objects from different classes at different points in time . A reference variable can store a reference to its declared class or any subclass of it’s declared class | . A method or operator are considered polymorphic when they are ____ in at least one subclass . Polymorphism is the act of executing an overridden non-_____ method from the correct class at runtime based on the actual object type . Polymorphism allows __ for a method call to be executed based on the class of the object referenced instead of the declared class . Example 1 . Java polymorphism is mainly split into 2 types . R_____ . Process in which a function call to the overridden method is resolved at Runtime. This type of polymorphism is achieved by Method Overriding. | . C_____ . Also known as static polymorphism. This type is achieved by function overloading or operater overloading | Note: But java doesnt support Operator Overloading | When there are multiple functions with the same name but different parameters then these functions are said to be overloaded. Functions can be overloaded by changes in the number of arguments or/and a change in the type of arguments. | . Here is an example of compile polymorphism . // Class 1 // Helper class class Helper { // Method 1 // Multiplication of 2 numbers static int Multiply(int a, int b) { // Return product return a * b; } // Method 2 // // Multiplication of 3 numbers static int Multiply(int a, int b, int c) { // Return product return a * b * c; } } // Class 2 // Main class class GFG { // Main driver method public static void main(String[] args) { // Calling method by passing // input as in arguments System.out.println(Helper.Multiply(2, 4)); System.out.println(Helper.Multiply(2, 7, 3)); } } GFG.main(null) . 8 42 . Example 2 &amp; Popcorn Hack . Before executing cell, look at the example below. Think about which methods compiles? Which methods execute? . import java.util.Random; public class Entertainer{ private String talent; public Entertainer (String t){ talent = t; } public String getTalent(){ return talent; } } public class Comedian extends Entertainer{ private ArrayList&lt;String&gt; jokes; public Comedian(String t, ArrayList&lt;String&gt; jks){ super(t); jokes = jks; } public String getTalent(){ return &quot;Comedy style: &quot; + super.getTalent(); } public String tellJoke(){ return jokes.get((int)(Math.random()*jokes.size())); } } // Which one of these will run? Which one of these will not? Comment out the line that isn&#39;t working and explain why Entertainer kevin = new Entertainer(&quot;Musician&quot;); System.out.println(kevin.getTalent()); System.out.println(kevin.tellJoke()); ArrayList&lt;String&gt; oneLiners = new ArrayList&lt;String&gt;(); //Add code which adds jokes to oneLiners like... Why did the programmer quit his job?.. Why did the developer go broke?.. Entertainer soham = new Comedian(“satire”, oneliners); System.out.println(soham.getTalent()); System.out.println(((Comedian)soham).tellJoke()); . Example 3 . Here is an example of runtime polymorphism . // Class 1 // Helper class class Parent { // Method of parent class void Print() { // Print statement System.out.println(&quot;parent class&quot;); } } // Class 2 // Helper class class subclass1 extends Parent { // Method void Print() { System.out.println(&quot;subclass1&quot;); } } // Class 3 // Helper class class subclass2 extends Parent { // Method void Print() { // Print statement System.out.println(&quot;subclass2&quot;); } } // Class 4 // Main class class GFG { // Main driver method public static void main(String[] args) { // Creating object of class 1 Parent a; // Now we will be calling print methods // inside main() method a = new subclass1(); a.Print(); a = new subclass2(); a.Print(); } } GFG.main(null) . subclass1 subclass2 . 9.7 Object Superclass . Now that we have learned about inheritance, what even allows our classes and objects that we have created to work the way they do? Where do the general characteristics of all objects come from? The answer lies in the __ class. . The __ class is the superclass of all other classes as well as arrays and other data types. The Object class is part of the java.lang package. . When we call a constructor to a “top-level class” that the coder hasn’t declared a superclass for, the Object constructor is implicitly called. In other words, the Object constructor is implicitly called when we call a constructor in a class that doesn’t explicitly extend another class. This will give the object some properties and methods that are common to all classes. . Example 1 . public class Person { String name; int age; public Person(String name, int age) { this.name = name; this.age = age; } public static void main(String[] args) { Person person1 = new Person(&quot;Jane Doe&quot;, 30); Person person2 = new Person(&quot;Jane Doe&quot;, 30); System.out.println(person1.equals(person1)); // Since person1 and person1 are the same object, the equals() method will return true System.out.println(person1.equals(person2)); // Since person1 and person2 are different objects, the equals() method will return false even though they have the same contents } } Person.main(null); // The equals() method is inherited from the Object class // By default, the equals() method in the Object class checks for object identity, which means it compares memory addresses to see if two references point to the exact same object // In the code, person1 and person2 are distinct objects, so they have different memory addresses // When we call person1.equals(person2), it checks if the memory addresses are the same (which they are not), so it returns false. . true false . Example 2 . public class Book { String title; String author; public Book(String title, String author) { this.title = title; this.author = author; } public static void main(String[] args) { Book book = new Book(&quot;The Catcher in the Rye&quot;, &quot;J.D. Salinger&quot;); int hashCode = book.hashCode(); System.out.println(&quot;HashCode: &quot; + hashCode); // The output will be a unique integer value representing the object&#39;s hash code. The integer value will be different every time you run it } } Book.main(null); // The hashCode() method in the Object class returns a unique integer value for each object // This value is typically based on the object&#39;s memory address. // In the code, when we call book.hashCode(), it generates a unique integer value representing the book object // This value can be useful for various purposes, such as organizing objects in collections like HashMaps or HashSet where it helps in efficient retrieval of objects. . HashCode: 2094718255 . Hacks . Popcorn Hacks (0.2): Participate in the discussion and fill in all of the blanks. | MC Questions (0.1): Answer the 10 MC questions below with short explanations | FRQ Hacks (0.5): Make a complex FRQ that involves everything we taught. Be sure to have a sample solution along with scoring guidlines and how the solution is scored. | Challenge (0.1): Make an example that uses everything we taught and it must run through main and uses input and output. Points will be awarded for complexity and creativity | . MC Questions . .",
            "url": "http://localhost:4100/teacher_portfolio/2023/10/30/java_inheritance-P3_IPYNB_2_.html",
            "relUrl": "/2023/10/30/java_inheritance-P3_IPYNB_2_.html",
            "date": " • Oct 30, 2023"
        }
        
    
  
    
        ,"post76": {
            "title": "U9 | Inheritance | Student P1",
            "content": "9.1 Superclasses and Subclasses . A hierarchy of classes is created, extending attributes into subclasses of information (ie. Automobile –&gt; Trucks and Sedans –&gt; Ford, BMW, Nissan, Toyota). . Pre-Requisites . Before we start you need to remember what classes and methods are. Scopes of variables are also important to this section because you need to know which classes can access which variables before extending a variable across classes. . Scope of Variables: . Variables can be declared as private or public. . Popcorn Hack: What are scope do private and public variables allow? . Private Public . only directly accessible within the class they are declared | accessible anywhere inside and outside their class | . These are different types of variables. Only INSTANCE and STATIC variables can be declared as __ or __. . Variable Type Definition Scope within Class Scope to Subclasses .   | variables within methods | cannot be accessed outside method | cannot be accessed outside class | .   | variables within a class but not inside a method | can be accessed in entire class | can be accessed in subclasses | .   | variables that belong to a class, not instance | can be accessed in entire class | can be accessed in subclasses | .   | variables specific in passing values to the method | cannot be accessed outside method | do not affect inheritance | . Now we can go into class hierarchies. . Class Hierarchy . Definitions . Superclasses - a class that contains all the common __ and __ that could be shared among other classes (a blueprint for subclasses) | Subclasses - extends the __ to is specified by a superclass; can also have additional specific attributes | “Is-A” Relationship - the relationship when a subclass __ a superclass (ie. Automobile –&gt; Sedan; a Sedan “is-a” automobile) | . extends Keyword . extends the __ from the __ . class Automobile { public String brand; // public instance var private String model; // private instance var public Automobile(String brand, String model) { this.brand = brand; this.model = model; } public void start() { System.out.println(&quot;Car is starting&quot;); } } class Truck extends Automobile { public int cargoCapacity; // subclass specific var // instance that is specific to the Truck subclass, with vars from Automobile class public Truck(String brand, String model, int cargoCapacity) { super(brand, model); // inherited vars this.cargoCapacity = cargoCapacity; } // specific method to Truck public void loadCargo() { System.out.println(&quot;Loading cargo into the truck&quot;); } } class Sedan extends Automobile { public boolean isLuxury; // subclass specific var // instance that is specific to the Sedan subclass, with vars from Automobile class public Sedan(String brand, String model, boolean isLuxury) { super(brand, model); // inherited vars this.isLuxury = isLuxury; } // specific method to Sedan public void accelerate() { System.out.println(&quot;Sedan is accelerating&quot;); } } public class Main { public static void main(String[] args) { Automobile car = new Automobile(&quot;Toyota&quot;, &quot;Camry&quot;); Truck truck = new Truck(&quot;Ford&quot;, &quot;F-150&quot;, 1000); Sedan sedan = new Sedan(&quot;BMW&quot;, &quot;328i&quot;, true); // automobile methods and variables System.out.println(car.brand); // Accessing public variable // System.out.println(car.model); // compilation error because of the private var car.start(); // truck methods and variables System.out.println(truck.brand); // inherited public var System.out.println(truck.cargoCapacity); // public var specific to truck truck.loadCargo(); // sedan methods and variables System.out.println(sedan.brand); // inherited public var System.out.println(sedan.isLuxury); // public var specific to sedan sedan.accelerate(); } } Main.main(null); . Toyota Car is starting Ford 1000 Loading cargo into the truck BMW true Sedan is accelerating . This example shows how the Automobile class is extended twice, with the Truck and Sedan subclasses. . Popcorn Hack: If I were to declare a variable color that is private in the class Automobile, would I be able to extend and directly access that variable to the subclass Truck or Sedan? . A: No, you would need to encapsulate the private variable as shown above, through a method in the superclass and then inherit that var with super(), which will be explained later. . 9.2 Writing Constructors for Subclasses . Learning Objectives . Constructors are not inherited | When a subclass’s constructor doesn’t explicitly call a superclass’s constructor using super, Java inserts a call to the superclass’s no-argument constructor. | The actual parameters passed in the call to the superclass constructor provide values that the constructor can use to initialize the object’s instance variables. | Regardless of whether the superclass constructor is called implicitly or explicitly, the process of calling superclass constructors continues until the Object constructor is called. At this point, all of the constructors within the hierarchy execute beginning with the Object constructor. | . Important note: Constructors are NOT inherited by the subclass. See this in action below. . // TO BE INCLUDED EARLIER IN THE LESSON. IT IS NECESSARY FOR THE FUNCTIONALITY OF THIS SECTION. class Vehicle { public int year; public String manufacturer; public Vehicle(int year, String manufacturer) { // constructor for parent class this.year = year; this.manufacturer = manufacturer; } public Vehicle() { this.year = 2000; this.manufacturer = &quot;Unknown&quot;; } // method to be used later public void drive() { System.out.println(&quot;The driver is driving the car.&quot;); } } . class Car extends Vehicle { public String model; public Car(String model) { this.model = model; } } public class VehicleDemonstration { public static void main(String[] args) { Car myCar = new Car(&quot;Altima&quot;); System.out.println(&quot;Year: &quot; + myCar.year); System.out.println(&quot;Manufacturer: &quot; + myCar.manufacturer); System.out.println(&quot;Model: &quot; + myCar.model); } } VehicleDemonstration.main(null); . Year: 2000 Manufacturer: Unknown Model: Altima . As you can see, the output uses the no-argument construction info from the base Vehicle constructor. . The super keyword can be used to change parent constructor values. . class NewCar extends Vehicle { public String model; public NewCar(int year, String manufacturer, String model) { super(year, manufacturer); // see the use of super here // what happens if you use no arguments with super()? see reminders below this.model = model; } } public class VehicleDemonstration2 { public static void main(String[] args) { NewCar myCar = new NewCar(2016, &quot;Nissan&quot;, &quot;Altima&quot;); System.out.println(&quot;Year: &quot; + myCar.year); System.out.println(&quot;Manufacturer: &quot; + myCar.manufacturer); System.out.println(&quot;Model: &quot; + myCar.model); } } VehicleDemonstration2.main(null); . Year: 2016 Manufacturer: Nissan Model: Altima . Key Reminders: . If you do call super() in your constructor, it has to be the first line of the constructor. | You cannot assign values to parent attributes/variables without using super(). | If you call super() with no arguments, it will use the no-argument parent constructor. This also happens automatically if you don’t include any super() call. | 9.3 Overriding Methods . Learning Objectives . Method overriding occurs when a public method in a subclass has the same method signature as a public method in the superclass. | Any method that is called must be defined within its own class or its superclass. | A subclass is usually designed to have modified (overwritten) or additional methods or instance variables. | A subclass will inherit all public methods from the superclass; these methods remain public in the subclass. | . There are three options for methods to be used by subclasses: . Methods inherited from the parent class | Unique methods written for the subclass | Override parent methods to modify its implementation | The first two should make sense. Let’s see an example of overriding parent methods below. . public class NuroCar extends Vehicle { private String deliveryItem; // unique constructor public NuroCar(int year, String manufacturer, String deliveryItem) { super(year, manufacturer); // another use of super this.deliveryItem = deliveryItem; } // HERE is the overridden function public void drive() { System.out.println(&quot;This car is driving itself!&quot;); } } public class VehicleDemonstration3 { public static void main(String[] args) { NuroCar pizzaCar = new NuroCar(2023, &quot;Nuro&quot;, &quot;Pizza&quot;); // here&#39;s the call to the overridden function pizzaCar.drive(); } } VehicleDemonstration3.main(null); . This car is driving itself! . This can be very helpful if you want a certain parent method to function slightly differently for a certain subclass. . Popcorn Hack . A parent class Animal is often used to show how subclasses can differ from their parent classes. An Animal parent class is provided in the cell below. Create a subclass of a certain species that overrides a parent method and uses `super` to call to the parent&#39;s constructor while adding its own unique attributes. . Hint: See Hint . Not all animals &quot;run&quot; like the `move()` function says... // parent class public class Animal { private String species; private int milesPerHour; // no argument constructor public Animal() { this.species = &quot;Unknown&quot;; this.milesPerHour = 10; } // constructor with arguments public Animal(String species, int milesPerHour) { this.species = species; this.milesPerHour = milesPerHour; } // parent method public void move() { System.out.println(&quot;The &quot; + this.species.toLowerCase() + &quot; runs at &quot; + this.milesPerHour + &quot; miles per hour.&quot;); } } // your subclass goes here . 9.4 Super Keyword . Using the super keyword to call a superclass’s method. . public class Performer { //superclass public void practice(){ System.out.println(&quot;Honing my craft!&quot;); } public void perform(){ System.out.println(&quot;Performing for an audience!&quot;); } } public class Dancer extends Performer { //subclass public void perform(){ System.out.println(&quot;Dancing on the stage!&quot;); } } public class BalletDancer extends Dancer { //subclass public void jete(){ System.out.println(&quot;Leaping...&quot;); } public void pirouette(){ System.out.println(&quot;Spinning...&quot;); } public void perform(){ jete(); pirouette(); } public static void main(String[] args){ BalletDancer derrick = new BalletDancer(); derrick.practice(); derrick.perform(); } } System.out.println(&quot;BalletDancer class: &quot;); BalletDancer.main(null); . BalletDancer class: Honing my craft! Leaping... Spinning... . public class Performer { //superclass of Dancer class public void practice(){ System.out.println(&quot;Honing my craft!&quot;); } public void perform(){ System.out.println(&quot;Performing for an audience!&quot;); } } public class Dancer extends Performer { //superclass of BalletDancer class public void perform(){ System.out.println(&quot;Dancing on the stage!&quot;); } } public class BalletDancer extends Dancer { public void jete(){ System.out.println(&quot;Leaping...&quot;); } public void pirouette(){ System.out.println(&quot;Spinning...&quot;); } public void perform(){ perform();//Why is this wrong? jete(); pirouette(); } public static void main(String[] args){ BalletDancer derrick = new BalletDancer(); derrick.practice(); derrick.perform(); } } System.out.println(&quot;BalletDancer class: &quot;); BalletDancer.main(null); . Note: . Super keyword can be placed in any order as it prints out chronologically. . public void perform(){ super.perform(); jete(); pirouette(); } . &quot;Honing my craft! Dancing on the stage! Leaping... Spinning...&quot; . However, if we were to write: . public void perform(){ jete(); pirouette(); super.perform(); } . &quot;Honing my craft! Leaping... Spinning... Dancing on the stage!&quot; . What if we use 2 super keywords? . public class Performer { //superclass public void practice(){ System.out.println(&quot;Honing my craft!&quot;); } public void perform(){ System.out.println(&quot;Performing for an audience!&quot;); } } public class Dancer extends Performer { //subclass public void perform(){ super.perform(); System.out.println(&quot;Dancing on the stage!&quot;); } } public class BalletDancer extends Dancer { //subclass public void jete(){ System.out.println(&quot;Leaping...&quot;); } public void pirouette(){ System.out.println(&quot;Spinning...&quot;); } public void perform(){ super.perform(); jete(); pirouette(); } public static void main(String[] args){ BalletDancer derrick = new BalletDancer(); derrick.practice(); derrick.perform(); } } System.out.println(&quot;BalletDancer class: &quot;); BalletDancer.main(null); . BalletDancer class: Honing my craft! Performing for an audience! Dancing on the stage! Leaping... Spinning... . Popcorn Hack . Create a subclass and a superclass by calling the methods from the superclass from the subclass using the keyword super. . // place code here . 9.5 Creating References Using Inheritance Hierarchies . Inheritance Hierarchies is the idea that: . If we have a public superclass (A) that then has a public subclass (B) and that public subclass then has another public subclass (C), then the subclass C is also a subclass of the superclass A and so subclass C is extending superclass A | . Here is an example of this: . // Class Declarations: // Superclass (A) public class Vehicles{} // Subclass (B) public class Car extends Vehicles{} // Subclass (C) public class Sedan extends Car{} // Subclass (D) public class Truck extends Vehicles{} . Here is a diagram displaying this relationship: . . This diagram shows the the vehicle superclass which then has two subclasses: Car and Truck, however, Car has another subclass called Sedan . | Based on this diagram, we know that Truck has a “is-a” relationship with Vehicle, Car also has a “is-a” relationship with Vehicle, and since Car has an “is-a” relationship with Vehicle, so does Sedan . | So Sedan also has a “is-a” relationship with Vehicle . | . If we assume that all of the class contain a constructor with no arguments, this then allows for us to declare a superclass reference variable to hold a subclass object: . Vehicles v1 = new Truck(); Vehicles v2 = new Car(); // instead of doing Car v3 = new Sedan(); // We have the option to do this instead Vehicles v4 = new Sedan(); . However, it is important to remember that you can’t declare a Subclass variable and put in a Superclass object . // don&#39;t do this Sedan v5 = new Vehicle(); . Popcorn Hack: Using a superclass and subclasses of your choice, assuming that the classes contain a constructor with no arguments, create Class Declarations and Superclass References . // show here . Why would we want to do this? . When doing object oriented programming, we are able to create a superclass with common attributes and then have subclasses with more specific traits . | By doing this, we get rid of code redundancy and it also makes the easier to reuse common aspects without needing to write them out every time while still presenting the option to override any attribute from the superclass to better represent the subclass . | All the subclasses adhere to one superclass so this makes updates to code much easier and allows you to take advantage of polymorphism to unify the code and allow for more flexible and manageable code (more about this in 9.6) . | . Here is a Complete Example of the Inheritance Hierarchy from above: . class Vehicle { private String brand; // private instance variable private int year; // private instance variable public Vehicle(String brand, int year) { this.brand = brand; this.year = year; } public void displayInfo() { // common variables for each vehicle System.out.println(&quot;Brand: &quot; + brand); System.out.println(&quot;Year: &quot; + year); } } class Truck extends Vehicle { // feature that only a truck can have private double maxLoadCapacity; public Truck(String brand, int year, double maxLoadCapacity) { super(brand, year); // Inherits the variables from superclass this.maxLoadCapacity = maxLoadCapacity; } @Override // Override allows for displayInfo to now also show the trait specific to the Truck while still keeping the main variables public void displayInfo() { super.displayInfo(); // Reuse the displayInfo method from the superclass System.out.println(&quot;Max Load Capacity: &quot; + maxLoadCapacity + &quot; tons&quot;); } } class Car extends Vehicle { // something that cars have private int numberOfDoors; public Car(String brand, int year, int numberOfDoors) { super(brand, year); this.numberOfDoors = numberOfDoors; } @Override // Override allows for displayInfo to now also show the trait specific to the Car while still keeping the main variables public void displayInfo() { super.displayInfo(); // Reuse the displayInfo method from the superclass System.out.println(&quot;Number of Doors: &quot; + numberOfDoors); } } class Sedan extends Car { // Sedan is luxury so trait specific to sedan private boolean leatherSeats; public Sedan(String brand, int year, int numberOfDoors, boolean leatherSeats) { super(brand, year, numberOfDoors); this.leatherSeats = leatherSeats; } @Override // Override allows for displayInfo to now also show the trait specific to the Sedan while still keeping the main variables public void displayInfo() { super.displayInfo(); // Reuse the displayInfo method from the superclass System.out.println(&quot;Leather Seats: &quot; + leatherSeats); } } public class Main { public static void main(String[] args) { Vehicle v1 = new Truck(&quot;Ford&quot;, 2023, 10.5); Vehicle v2 = new Car(&quot;Toyota&quot;, 2023, 4); Vehicle v3 = new Sedan(&quot;Honda&quot;, 2023, 4, true); System.out.println(&quot;Truck Information:&quot;); v1.displayInfo(); System.out.println(&quot; nCar Information:&quot;); v2.displayInfo(); System.out.println(&quot; nSedan Information:&quot;); v3.displayInfo(); } } Main.main(null) . Truck Information: Brand: Ford Year: 2023 Max Load Capacity: 10.5 tons Car Information: Brand: Toyota Year: 2023 Number of Doors: 4 Sedan Information: Brand: Honda Year: 2023 Number of Doors: 4 Leather Seats: true . Popcorn Hack: In your own words describe the importance of Inheritance Hierarchies . 9.6 Polymorphism . Learning Objectives . MOD-3.D: Call methods in an inheritance relationship. MOD-3.D.1: Utilize the Object class through inheritance. MOD-3.D.2: At compile time, methods in or inherited by the declared type determine the correctness of a non-static method call. MOD-3.D.3: At run-time, the method in the actual object type is executed for a non-static method call. . What is Polymorphism? . Polymorphism is a greek word meaning many-formed (poly=many, morph=form). In the context of programming, Polymorphic behavior is defined as being able to reference objects of different types at different points during compilation. . One example of Java polymorphism, is our ability to store references to objects instantiated from any class AND its subclasses in a variable. Another example is for methods, where we override the behavior of a method in a subclass such that it differs from the parent class. We successfully perform polymorphism when we override non-static methods and execute them from the correct, corresponding class at runtime. . Here is a simple example of polymorphism: . // This is our Parent class class Shape { public void draw() { System.out.println(&quot;Drawing a shape&quot;); } } // Subclass 1 class Circle extends Shape { @Override public void draw() { System.out.println(&quot;Drawing a circle&quot;); } } // Subclass 2 class Rectangle extends Shape { @Override public void draw() { System.out.println(&quot;Drawing a rectangle&quot;); } } public class Main { public static void main(String[] args) { // Here we have reference variables circle and rectangle defined with static type &quot;Shape&quot; Shape circle = new Circle(); // Circle has dynamic type &quot;Circle&quot; Shape rectangle = new Rectangle(); // Rectangle has dynamic type &quot;Rectangle&quot; // Calling the draw() method circle.draw(); // Output: Drawing a circle rectangle.draw(); // Output: Drawing a rectangle } } Main.main(null); . Even though the circle and rectangle have identical data-types, the compiler knows to call the correct method at run-time. We have successfully performed polymorphism . Popcorn hack . Create any example of polymorphism, perferably with a class from your project, with corresponding methods and attributes as well. | // Program your code here . Static and Dynamic types . Typically in Java, a reference variable storing an object instantiated from a child class can only store other objects of that class. If we try to store an object of another class, we’d get an error i.e. . Integer myNumber = new Integer(6); // Instantiates an Integer object System.out.println(myNumber); // Would print Integer type 6 normally myNumber = new Double(6.1); // Compile error occurs, incompatible types System.out.println(myNumber); // This line is not reached . But what if we want want a reference variable to store objects of other classes? We get an error . Compile-time vs Runtime methods . Sometimes, when we perform polymorphism, we have to be careful to distinguish between our compile time and run-time methods. When we instantiate a dynamic variable that is of a different type from our static variable, our program at run time will attempt to search for the methods and attributes in the superclass, NOT the child class that we created. Although the compiled program will still output the correct outputs of the method in the child class, it will not be able to find a method that exists in the child class but not in the parent class. . To resolve this issue, we need use Down-casting. . Downcasting: Essentially telling the compiler to refer to a variable’s subclass (the programmer specifies this), instead of the static type. We are telling the compiler to search our dynamic type for the methods and attributes that we want to access. | . Below is an example of compile versus run-time methods and downcasting that I used in our group’s project. . import java.util.HashMap; // This is our parent class for all child classes that make up a graph public class GraphObject { private int value; // constructor public GraphObject(int value) { this.value = value; } // getter method public int getValue() { return this.value; } // setter method public void setValue(int value) { this.value = value; } // Method overloading to print object to terminal @Override public String toString() { return Integer.toString(this.value); } } // This is our child class. Represents a vertex or a node in a graph public class GraphNode extends GraphObject { private HashMap&lt;Integer,Integer&gt; edges; // Hashmap of destination vertices and weights of paths &lt;Target:Weight&gt; // Constructor of child class public GraphNode(int value, HashMap&lt;Integer,Integer&gt; edges){ super(value); // super keyword to run constructor of parent class, which sets the value of the node this.edges = edges; // adds any needed edges } public HashMap&lt;Integer,Integer&gt; getEdges() { return this.edges; } public void addEdge(int targetId, int weight) { this.edges.put(targetId, weight); } public void removeEdge(int targetId) { this.edges.remove(targetId); } // Overloading the toString method of the parent class, using super to get the output of the parent class @Override public String toString() { return &quot;GraphNode[value=&quot; + super.toString() + &quot;,edges=&quot; + this.edges + &quot;]&quot;; } } HashMap&lt;Integer, Integer&gt; node1Connections = new HashMap&lt;Integer, Integer&gt;(); node1Connections.put(2, 7); node1Connections.put(3, 2); node1Connections.put(4, 10); GraphObject node1 = new GraphNode(1, node1Connections); System.out.println(node1.toString()); ((GraphNode)node1).addEdge(5,6); // Here, we downcast node1, which is a GraphObject, to what it references, which is GraphNode // node1.addEdge(5,6); // This wouldn&#39;t work as the compiler attempts to find addEdge() in GraphObject, which it can&#39;t, throwing an error System.out.println(node1.toString()); . Popcorn Hacks . Define each of the following terms in your own words Downcasting | Static Type | Dynamic Type | Polymorphism | Compile-time method | Run-time method | . | // Do popcorn hack here . 9.7 Object Superclass . The Object class is the superclass of all other classes as well as data types and is a part of the java.lang package . | If a parent class doesn’t specify by using the extends keyword, the class will inherit from the Object . | String toString() and boolean equals(object other) are the most frequently used and subclasses of Object override the equals and toString methods by using class-specific implementations . | . Normally when you use the toString method without overriding it, it returns a hash code value as seen in the example below: . class Person { private String name; private int age; public Person(String name, int age) { this.name = name; this.age = age; } } public class ToStringNoOverride { public static void main(String[] args) { Person person = new Person(&quot;Alice&quot;, 25); // When you print this out, it will return the hash code since its using the default method for toString System.out.println(person); } } ToStringNoOverride.main(null) . REPL.$JShell$18$Person@4da14117 . However, we can fix this by creating a new method by overriding the normal toString method and building our own representation of the object . class Person { private String name; private int age; public Person(String name, int age) { this.name = name; this.age = age; } @Override public String toString() { // We override the toString method here return &quot;Person Name: &quot; + name + &quot; nPerson Age: &quot; + age; // We then add our own custom string representation } } public class ToStringOverride { public static void main(String[] args) { Person person = new Person(&quot;Alice&quot;, 25); // When you print the person object, it calls the overridden toString method we made System.out.println(person); } } ToStringOverride.main(null) . Person Name: Alice Person Age: 25 . Now, we want to compare 2 people by using boolean equals(Object other) and determine if they are the same . class Person { private String name; private int age; public Person(String name, int age) { this.name = name; this.age = age; } @Override public String toString() { return &quot;Person Name: &quot; + name + &quot; nPerson Age: &quot; + age; } } public class EqualsNoOverride { public static void main(String[] args) { Person person1 = new Person(&quot;Alice&quot;, 25); Person person2 = new Person(&quot;Bryce&quot;, 25); System.out.println(&quot;Person 1 Age equals Person 2 Age: &quot; + person1.equals(person2)); // use the equals method to compare the two people } } EqualsNoOverride.main(null) . Person 1 equals Person 2: false . False is returned when you use the boolean equals(Object other) because the parameters is of Type Object superclass is unable to detect them since the Object class saves them under two different memory addresses and to fix this, we have to make an override method for this. . To do this, we use instanceof and casting . class Person { private String name; private int age; public Person(String name, int age) { this.name = name; this.age = age; } @Override // We override the equals method public boolean equals(Object other) { if (!(other instanceof Person)) // Using instanceof, we are making sure that the we compare objects of the same class return false; Person that = (Person) other; // Here we perform casting to make sure that other is converted to Person return this.age == that.age; } @Override public String toString() { return &quot;Person Name: &quot; + name + &quot; nPerson Age: &quot; + age; } } public class EqualsOverride { public static void main(String[] args) { Person person1 = new Person(&quot;Alice&quot;, 25); Person person2 = new Person(&quot;Bryce&quot;, 25); System.out.println(&quot;Person 1 Age equals Person 2 Age: &quot; + person1.equals(person2)); } } EqualsOverride.main(null) . Person 1 Age equals Person 2 Age: true . Hacks . Create a superclass with at least 2 subclasses based on your own topic. . Create a DrawIO diagram for your structure and label them with superclasses and subclasses | Create a superclass on your own topic | Create at least two subclasses | Each class must create at least two methods, one private and public variable, and examples of local, static, instance, and parameter variables | Override at least one method | Use the super keyword at least once | .",
            "url": "http://localhost:4100/teacher_portfolio/2023/10/30/java_inheritance-P1_IPYNB_2_.html",
            "relUrl": "/2023/10/30/java_inheritance-P1_IPYNB_2_.html",
            "date": " • Oct 30, 2023"
        }
        
    
  
    
        ,"post77": {
            "title": "P5 Simulation",
            "content": "Simulations . A simulation is the use of a computer software to represent the dynamic responses of one system by the behaviour of another system modeled after it. A simulation uses a mathematical descriptions, or models, of a real system in the form of a computer program. . . College Board Essential Knowledge . Simulation are absractions of more complex objects or phenomena for a specific purpose . Mimic Real World Events | Allows investigation of phenomenons without contraints of the Real World | Helps you draw accurate inferences | . Simulations utilize varying sets of values to reflect the changings states of a phenomenon . simulations can simplfly things for functionality | Simulations can contain bias from real world elements, that were chosen to be included or excluded | . Simulations work best when the real world experemnts are too impractical or time consuming. For example, simulating how different cars behave when they crash, would be much better than crashng actual cars in the real world, which would be expensive and dangerous. . . Rolling the Dice . . Simulating something like a dice roll in real life would require accounting for things like: weight, flaws in design, thrust, and gravity. . KEEP IT SIMPLE! just use a random-number generator! Ignore minor causes of variablility | . Random . “Random” is a built-in python function that allow the user to draw a random value from a set range. | A Random Number Generator (RNG) is a common simulation that selects a random value from an array. | The following code cell utilizes “random” to select a number from 1 to 100. | . #imports random module so we can use it in our code import random #sets variable random_number as a random number between 1 and 100 random_number = random.randint(1, 100) #Printing out your random Number print(random_number) . More complex usage of “random”; Coin Toss Simulation . import random def flip_coin(): return random.choice([&quot;Heads&quot;, &quot;Tails&quot;]) def coin_flip_simulation(num_flips): heads_count = 0 tails_count = 0 for _ in range(num_flips): result = flip_coin() if result == &quot;Heads&quot;: heads_count += 1 else: tails_count += 1 return heads_count, tails_count if __name__ == &quot;__main__&quot;: num_flips = 1000 #This is the number of coin flips you want to simulate heads, tails = coin_flip_simulation(num_flips) print(&quot;Number of Heads: &quot;+ str(heads)) print(&quot;Number of Tails: &quot; + str(tails)) print(&quot;Heads Probability: &quot;+ str({heads / num_flips})) print(&quot;Tails Probability: &quot;+ str({tails / num_flips})) . Number of Heads: 501 Number of Tails: 499 Heads Probability: {0.501} Tails Probability: {0.499} . Popcorn Hack #1 . Utilize “random” to create a basic simulation of a rolling TWO dice. Print the sum of both dice rolls. Remember to practice good syntax when naming your variables. . import random #Code, Code, Code . Algorithms . Simulations often utilize algorithms and equations to perform tasks because simulations don’t always have the same output . the output of a simulation depends on the input | . An algorithm is a finite sequence of instructions used to solve problems or perform computations. . commonly used alongside functions | . Example Algorithm in a function . #Defining Function def algorithm(input): #Manipulating input and preparing it for the output. output = input+2 #Return the output return output #Call the Function to start the algorithm algorithm(5) . 7 . Mathematics . Math can also prove to be very useful in certain types of situations. | Commonly used along with Algorithms when simulating various things | . . Popcorn Hack #2 . Simulate how long an object will fall for using an algorithm, with user-inputed variables for height dropped. Use the following formula as a reference. . . t = time (output) | h = height dropped from (input) | g = constant (given) | . # Constant, Acceleration due to gravity (m/s^2) G = 9.81 def simulation(height_dropped): # Code Code Code . Using Loops in Simulations . For loops can also be used in simulations . They can simulate events that repeat but don’t always have the same output | . # Example For Loop #Creating For Loop to repeat 4 times for i in range(4): #Action that happens inside for loop print(&quot;This is run number: &quot; + str(i)) . This is run number: 0 This is run number: 1 This is run number: 2 This is run number: 3 . Popcorn Hack #3 . You are gambling addict (sigma). . Each session you roll 2 dice. . If your dice roll is greater than or equal to 9 you win the session. . If you win over 5 sessions, you win the jackpot. . Simulate your odds to predict if you will hit the jackpot (how many rounds did you win?) using a for loop and random. . # Code Code Code . BONUS POPCORN HACK . Welcome to Flight Simulator! Your goal is to complete a Python program that simulates a flight We’ve set up some initial values for altitude, speed, and fuel. Your task is to update these values to make the flight more realistic. . Your mission: | . Use random changes to simulate altitude, speed, and fuel changes. | Keep the flight going until it reaches 10,000 feet or runs out of fuel. | Make sure altitude, speed, and fuel remain realistic. | import random # Initial parameters altitude = 0 speed = 0 fuel = 100 print(&quot;Welcome to Flight Simulator!&quot;) # Code Code Code . QUIZ TIME . Quick true or false quiz, whoever answers this correctly(raise your hand) gets a piece of gum or a dinero. | . . T or F . A simulation will always have the same result. T or F | A simulation investigates a phenomenom without real-world constraints of time, money, or safety. T or F | A simulation has results which are more accurate than an experiment, T or F | A simulation can model real-worl events that are not practical for experiments | . HOMEWORK HACK #1 . First finish Popcorn Hack #3. Expand the simulation to involve your own money. . starting money: $100 . (Dice Roll &lt;= 3) → lose $70 . ( 6&gt; Dice Roll &gt;3) → lose $40 . ( 9&gt; Dice Roll &gt;=6) → win $20 . ( Dice Roll&gt;= 9 + Session Win) → win $50 . Jackpot → win $100 . # Code Code Code . HOMEWORK HACK #2 . Given initial parameters for a car simulation, including its initial speed, acceleration rate, deceleration rate, maximum speed, and initial distance, write a program to simulate the car’s journey and determine the final speed, distance covered, and time taken before it either covers 1000 meters or slows down to below 5 m/s? . # Initial parameters speed = 0 # Initial speed acceleration = 2 # Acceleration rate in m/s^2 deceleration = 1 # Deceleration rate in m/s^2 max_speed = 60 # Maximum speed in m/s distance = 0 # Initial distance time = 0 # Initial time #Code Code Code .",
            "url": "http://localhost:4100/teacher_portfolio/2023/10/27/P5_Simulations_IPYNB_2_.html",
            "relUrl": "/2023/10/27/P5_Simulations_IPYNB_2_.html",
            "date": " • Oct 27, 2023"
        }
        
    
  
    
        ,"post78": {
            "title": "P4 Simulation",
            "content": "Simulations: . 3.16, 3.17: Simulations and Algorithmic Efficiency . What is a Simulation? . A simulation, in context of computer science, is a digital representation of a situation in the real world. | Examples: Experiments: When an experiment is to dangerous to perform in the real world or too expensive, a simulation can be made of it and be performed digitally. | Training and Education: Simulations such as flight simulators and medical simulation can be very practical in aiding dangerous proffesions to receive training. | Video Games: Some video games try to aim to be as releastic as possible with physics and graphics to try to simulate the real world. | . | . Simple Dice Roll python import random def roll_die(): # Gives random integer between 1 and 6 return random.randint(1, 6) # Defines the variable &quot;result&quot; as the result of function roll_die() result = roll_die() print(&quot;Roll:&quot;, result) Dice Roll python import random def roll_die(): # Gives random integer between 1 and 6 return random.randint(1, 6) def main(): # Allows user to control how many rolls are executed num_rolls = int(input(&quot;How many times would you like to roll the die? &quot;)) # Makes sure that the entered value is a valid integer if num_rolls &lt;= 0: print(&quot;Please enter a valid number of rolls.&quot;) return print(&quot;Rolling the die&quot;, num_rolls, &quot;times:&quot;) for i in range(num_rolls): roll_result = roll_die() print(&quot;Roll&quot;, i + 1, &quot;:&quot;, roll_result) if __name__ == &quot;__main__&quot;: main() ## Popcorn Hack #1 -Create a similation that generates a random number using the random library and randint like shown above. Be creative. python #Enter code here ## 3.17 Algorithmic Efficiency - A problem is a general description of a task that can (or cannot) be solved algorithmically - A decision problem is a problem with a yes/no answer - An optimization problem is a problem with the goal of finding the &quot;best&quot; solution among many - Efficiency is an estimate of the amount of computational resources used by an algorithm - An algorithm&#39;s efficiency is determined through formal or mathematically reasoning One way do demonstrate how algorithmic efficiency can be used to improve a program is through a simple sorting program. ## Bubble Sort Bubble Sort is a simple sorting algorithm that repeatedly steps through the list, compares adjacent elements, and swaps them if they are in the wrong order. The pass through the list is repeated until no swaps are needed, which means the list is sorted. python def bubble_sort(list): n = len(list) for i in range(n): for j in range(0, n - i - 1): if list[j] &gt; list[j + 1]: list[j], list[j + 1] = list[j + 1], list[j] import random list = [random.randint(1, 10) for _ in range(10)] bubble_sort(list) print(&quot;Bubble Sorted listay is:&quot;, list) ## Popcorn Hack 2 - Using bubble sort, make multiple strings that sort alphabetically. python #Enter code here ## Quick Sort Quick Sort is a popular divide-and-conquer sorting algorithm. It divides the array into smaller sub-arrays and recursively sorts them. It&#39;s generally more efficient than Bubble Sort for larger lists. python def quick_sort(list): if len(list) &lt;= 1: return list else: pivot = list[0] less_than_pivot = [x for x in list[1:] if x &lt;= pivot] greater_than_pivot = [x for x in list[1:] if x &gt; pivot] return quick_sort(less_than_pivot) + [pivot] + quick_sort(greater_than_pivot) import random list = [random.randint(1, 10) for _ in range(10)] list = quick_sort(list) print(&quot;Quick Sorted listay is:&quot;, list) ## Homework Hacks # Hack 1 - Create a random decision maker that choses between 2 string options. python #Enter code here # Hack 2 Modify the following function that calculates the sum of a range of numbers from 1-99999999 more efficient. Hints: - The formula for finding the sum of an arithmetic series is n/2 * (first_number + last_number) where n is the number of terms. - To find the number of terms in a list, use len(list) - To index the first term of a list, use list[0] and to index the last term, use list[-1]. python #edit this code def calculate_sum(numbers): total = 0 for num in numbers: total += num return total #numbers = [i for i in range(1, 9999999)] print(calculate_sum(numbers)) .",
            "url": "http://localhost:4100/teacher_portfolio/2023/10/27/P4_Simulations_IPYNB_2_.html",
            "relUrl": "/2023/10/27/P4_Simulations_IPYNB_2_.html",
            "date": " • Oct 27, 2023"
        }
        
    
  
    
        ,"post79": {
            "title": "Refactored Alien World with Coyote",
            "content": "Invert",
            "url": "http://localhost:4100/teacher_portfolio/2023/10/26/javascript-background-coyote.html",
            "relUrl": "/2023/10/26/javascript-background-coyote.html",
            "date": " • Oct 26, 2023"
        }
        
    
  
    
        ,"post80": {
            "title": "U8 | 2D Array | Student P3",
            "content": "8.1 . What is a 2D array . A 2D array is an array of arrays. . . Why use 2D arrays? . 1D array of people . { &quot;Patrick Mahomes&quot; &quot;Mr. Mortensen&quot; &quot;Taylor Swift&quot; &quot;Margot Robbie&quot; } . 2D array of men and women . { { &quot;Patrick Mahomes&quot;, &quot;Mr. Mortensen&quot;} , {&quot;Taylor Swift&quot;, &quot;Margot Robbie&quot;} } . Declaring a 2D Array . Very similar to declaring a 1D array. . DataType[] name // 1D array DataType[][] name // 2D array . int[][] intArray; //primitive String[][] stringArray; //object . Initalizing a 2D Array . public class TwoDArrayExample { public static void main(String[] args) { int rows = 3; int cols = 4; // Declare and initialize a 2D array int[][] myArray = { {1, 2, 3, 4}, {5, 6, 7, 8}, {9, 10, 11, 12} }; // Access and print elements for (int i = 0; i &lt; rows; i++) { for (int j = 0; j &lt; cols; j++) { System.out.print(myArray[i][j] + &quot; &quot;); } System.out.println(); } } } TwoDArrayExample.main(null) . 1 2 3 4 5 6 7 8 9 10 11 12 . Popcorn HACK 1 . public class TwoDArrayHack1 { public static void main(String[] args) { // Declare and initialize a 2D array with 5 rows (arrays) and 4 columns (elements per array) of int data type. } } . More Initializing and Accessing Array Elements of a 2D Array . class Student { private String name; private int age; // Constructor to initialize a Student object public Student(String name, int age) { this.name = name; this.age = age; } // Getter method to retrieve the student&#39;s name public String getName() { return name; } // Getter method to retrieve the student&#39;s age public int getAge() { return age; } // Method to print student information public void printInfo() { System.out.println(&quot;Name: &quot; + name); System.out.println(&quot;Age: &quot; + age); } } public class TwoDArrayHack2 { public static void main(String[] args) { // Declare and initialize a 2D array with 6 rows and 6 columns of Student objects Student[][] studentArray = new Student[6][6]; // Creating and initializing Student objects in the array studentArray[0][0] = new Student(&quot;Yuri&quot;, 16); studentArray[1][2] = new Student(&quot;Gorlcok&quot;, 135); // Accessing and using the Student objects&#39; methods String studentName = studentArray[0][0].getName(); int studentAge = studentArray[0][0].getAge(); System.out.println(&quot;Student Name: &quot; + studentName); System.out.println(&quot;Student Age: &quot; + studentAge); studentArray[1][2].printInfo(); } } TwoDArrayHack2.main(null) . More Initializing + Accessing + Popcorn HACK 2 . class NFLTeams { private String teamName; private String city; private int championships; // Constructor to initialize NFL team data public NFLTeams(String teamName, String city, int championships) { this.teamName = teamName; this.city = city; this.championships = championships; } // Method to display team information public void displayTeamInfo() { System.out.println(&quot;Team: &quot; + teamName); System.out.println(&quot;City: &quot; + city); System.out.println(&quot;Championships: &quot; + championships); } } public class NFLTeams2DArray { public static void main(String[] args) { // Declare a 2D array of NFLTeams to store data for 5 teams and 5 columns NFLTeams[][] nflArray = { {new NFLTeams(&quot;Team1&quot;, &quot;City1&quot;, 2), new NFLTeams(&quot;Team2&quot;, &quot;City2&quot;, 3), new NFLTeams(&quot;Team3&quot;, &quot;City3&quot;, 1), new NFLTeams(&quot;Team4&quot;, &quot;City4&quot;, 0), new NFLTeams(&quot;Team5&quot;, &quot;City5&quot;, 5)}, {new NFLTeams(&quot;Team6&quot;, &quot;City6&quot;, 3), new NFLTeams(&quot;Team7&quot;, &quot;City7&quot;, 4), new NFLTeams(&quot;Team8&quot;, &quot;City8&quot;, 0), new NFLTeams(&quot;Team9&quot;, &quot;City9&quot;, 1), new NFLTeams(&quot;Team10&quot;, &quot;City10&quot;, 2)}, {new NFLTeams(&quot;Team11&quot;, &quot;City11&quot;, 1), new NFLTeams(&quot;Team12&quot;, &quot;City12&quot;, 0), new NFLTeams(&quot;Team13&quot;, &quot;City13&quot;, 3), new NFLTeams(&quot;Team14&quot;, &quot;City14&quot;, 2), new NFLTeams(&quot;Team15&quot;, &quot;City15&quot;, 4)}, {new NFLTeams(&quot;Team16&quot;, &quot;City16&quot;, 2), new NFLTeams(&quot;Team17&quot;, &quot;City17&quot;, 4), new NFLTeams(&quot;Team18&quot;, &quot;City18&quot;, 1), new NFLTeams(&quot;Team19&quot;, &quot;City19&quot;, 5), new NFLTeams(&quot;Team20&quot;, &quot;City20&quot;, 3)}, {new NFLTeams(&quot;Team21&quot;, &quot;City21&quot;, 0), new NFLTeams(&quot;Team22&quot;, &quot;City22&quot;, 2), new NFLTeams(&quot;Team23&quot;, &quot;City23&quot;, 5), new NFLTeams(&quot;Team24&quot;, &quot;City24&quot;, 3), new NFLTeams(&quot;Team25&quot;, &quot;City25&quot;, 1)} }; // Print out Team 17&#39;s Team info nflArray[3][1].displayTeamInfo(); // Print out Team 21&#39;s Team Info // Print out Team 3&#39;s team Info } } NFLTeams2DArray.main(null) . Updating 2D Arrays . public class Update2DArray { public static void main(String[] args) { // Create a 3x3 2D array of integers int[][] matrix = { {1, 2, 3}, {4, 5, 6}, {7, 8, 9} }; // Display the original 2D array System.out.println(&quot;Original 2D Array:&quot;); printArray(matrix); // Update specific elements in the array matrix[0][0] = 11; // Update the element in the first row, first column matrix[1][1] = 22; // Update the element in the second row, second column matrix[2][2] = 33; // Update the element in the third row, third column // Display the updated 2D array System.out.println(&quot; nUpdated 2D Array:&quot;); printArray(matrix); } // Helper method to print the 2D array public static void printArray(int[][] arr) { for (int i = 0; i &lt; arr.length; i++) { for (int j = 0; j &lt; arr[i].length; j++) { System.out.print(arr[i][j] + &quot; &quot;); } System.out.println(); } } } Update2DArray.main(null) . Popcorn HACK 3 . public class Update2DArrayHACK { // Helper method to print the 2D integer array public static void printIntArray(int[][] arr) { for (int i = 0; i &lt; arr.length; i++) { for (int j = 0; j &lt; arr[i].length; j++) { System.out.print(arr[i][j] + &quot; &quot;); } System.out.println(); } } public static void main(String[] args) { // Declare and Initialize a 2D integer array with the same dimensions (5x5) int[][] integerArray = { {1, 2, 3, 4, 5}, {6, 7, 8, 9, 10}, {11, 12, 13, 14, 15}, {16, 17, 18, 19, 20}, {21, 22, 23, 24, 25} }; // Update the element in the first row, first column to 250 // Update the element in the third row, third column to 69 // Update the element in the fifth row, fifth column to 96 // Update the element in the first row, fifth column to 125 // Update the element in the second row, third column to 135 // Display the updated 2D integer array printIntArray(integerArray); } } Update2DArrayHACK.main(null) . Popcorn HACK 4 - Review Quiz . What is a 2D array? A. A single row of elements. B. A data structure with rows and columns. C. A list of 2 elements. D. A binary representation of data. How do you declare a 2D array in Java? A. int myArray = new int[3][3]; B. 2DArray myArray = new 2DArray[3][3]; C. int[][] myArray; D. myArray = declare 2D array; How do you access an element in a 2D array at row 2 and column 3? A. myArray[3][2] B. myArray[2][3] C. myArray[1][2] D. myArray[2][1] What is the purpose of initializing a 2D array? A. To specify its data type. B. To allocate memory for the array. C. To access its elements. D. To declare the number of rows and columns. In a 2D array, what does myArray[2][3] represent? A. The element in the second row and third column. B. The element in the third row and second column. C. The element in the third row and third column. D. The element in the second column and third row. What happens when you update an element in a 2D array in Java? A. The entire array is cleared. B. Only the updated element is affected. C. The entire row is shifted. D. The element is removed from the array. Which of the following represents a 2D array with 4 rows and 3 columns in Java? A. int[4][3] myArray; B. myArray[4,3] = int; C. int[3][4] myArray; D. myArray[3][4] = int; . HACKS . Finish Popcorn HACKS, type DONE Here when you finish . HACK 1 . Create a class (for object 2D arrays), and declare and initialize a 2D array | Show updating a 2D array with object functionality | . 8.2 . Traversing . Traversing is known to acsess each element in a array also known as itteration, in the case of 2D Arrays we will acsess elements in the 2D array, but we will need to use specfiic methods of nested for loops, and enhanced for loops. | . public class ArrayTraversalExample { public static void main(String[] args) { // Array that is created in order to be traversed/itterate through int[] numbers = {1, 2, 3, 4, 5}; // Traverse the array and print each element // How this works: 1. First it sets i to 0 in order to keep track of the index by using a for loop // Then it checks if the number is greater index if so then it will continue // uses i++ to continue to go through the indicies // prints outs the number if greater than index for (int i = 0; i &lt; numbers.length; i++) { System.out.println(&quot;Element at index &quot; + i + &quot; is: &quot; + numbers[i]); } } } ArrayTraversalExample.main(null) . Element at index 0 is: 1 Element at index 1 is: 2 Element at index 2 is: 3 Element at index 3 is: 4 Element at index 4 is: 5 . Nested For Loop . A nested for loop is a type of loop that contains an inner loop and outer loop, allowing to create a two dimensional piece that will now allow us to traverse through 2D Arrays. | . public class NestedLoops { public static void main(String[] args) { for (int outer = 1; outer &lt; 5; outer++) { for (int inner = 1; inner &lt; 3; inner++) { System.out.print(inner + &quot; &quot;); } System.out.println(); } } } NestedLoops.main(null) . 1 2 1 2 1 2 1 2 . Enhanced For Loop . public class EnhancedForLoopExample { public static void main(String[] args) { String[] fruits = {&quot;Apple&quot;, &quot;Banana&quot;, &quot;Cherry&quot;, &quot;Date&quot;, &quot;Fig&quot;}; // Here you use a en enhanced for loop to itterate through the array of strings for (String fruit : fruits) { System.out.println(fruit); } } } EnhancedForLoopExample.main(null) . Apple Banana Cherry Date Fig . Cumulative Knowledge . Hint: Popcorn Hacks | From the class discussion fill these out . | What does traverse mean? | What is a nested loop | What is an enhanced for loop | . Nested Loops traversing through a 2D Array . public class TwoDArrayTraversal { public static void main(String[] args) { // First Create the 2D array int[][] twoDArray = { {1, 2, 3}, {4, 5, 6}, {7, 8, 9} }; // Using a Nested loops to traverse the 2D array for (int row = 0; row &lt; 3; row++) { for (int col = 0; col &lt; 3; col++) { int element = twoDArray[row][col]; System.out.print(element + &quot; &quot;); } System.out.println(); } } } TwoDArrayTraversal.main(null) . 1 2 3 4 5 6 7 8 9 . Popcorn Hack . What would you replace the question marks with if we didnt know the dimensions of this 2D Array | . public class TwoDArrayTraversal { public static void main(String[] args) { // First Create the 2D array int[][] twoDArray = { {1, 2, 3}, {4, 5, 6}, {7, 8, 9} }; // Using a Nested loops to traverse the 2D array for (int row = 0; row &lt; ???; row++) { //grid makes sense becuase it gives you dimension for (int col = 0; col &lt; ???; col++) { // colliumn makes senseas it starts at 0 int element = twoDArray[row][col]; System.out.print(element + &quot; &quot;); } System.out.println(); } } } TwoDArrayTraversal.main(null) . Practice . Create a 2D Array Based and Traverse through it using a nested loop based on this problem | . public class 2DPractice { public static void main(String[] args) { int[][] complexIntArray = { {1, 2, 3, 4}, {5, 6, 7, 8}, {9, 10, 11, 12} }; // MISSING CODE HERE } } . Using Enhanced For- Loops to Traverse an Array . public class EnhancedForLoop2DArray { public static void main(String[] args) { // Define and initialize a 2D array int[][] twoDArray = { {1, 2, 3}, {4, 5, 6}, {7, 8, 9} }; // Use nested enhanced for loops to traverse the 2D array for (int[] row : twoDArray) { for (int element : row) { System.out.print(element + &quot; &quot;); } System.out.println(); // Move to the next row } } } EnhancedForLoop2DArray.main(null) . 1 2 3 4 5 6 7 8 9 . Row Major Order Vs Column Major Order . PopCorn Hacks . | Whats the difference between row major order and column major order . | . public class PrintArray { public static void printArray(String[][] grid) { for (int row = 0; row &lt; grid.length; row++) { for (int col = 0; col &lt; grid[0].length; col++) { System.out.print(grid[row][col] + &quot; &quot;); } System.out.println(); } } public static void main(String[] args) { String[][] myGrid = { {&quot;A&quot;, &quot;B&quot;, &quot;C&quot;}, {&quot;D&quot;, &quot;E&quot;, &quot;F&quot;}, {&quot;G&quot;, &quot;H&quot;, &quot;I&quot;} }; printArray(myGrid); } } PrintArray.main(null) . A B C D E F G H I . public class PrintArray { public static void printArray(String[][] grid) { for (int col = 0; col &lt; grid[0].length; col++) // outer loop for collums switched { for (int row = 0; row &lt; grid.length; row++) //notice the outer is switched with the inner loop for rows { System.out.print(grid[row][col] + &quot; &quot;); } System.out.println(); } } public static void main(String[] args) { String[][] myGrid = { {&quot;A&quot;, &quot;B&quot;, &quot;C&quot;}, {&quot;D&quot;, &quot;E&quot;, &quot;F&quot;}, {&quot;G&quot;, &quot;H&quot;, &quot;I&quot;} }; printArray(myGrid); } } PrintArray.main(null) . A D G B E H C F I . Practice . Print My AP CS A Class Rocks Using a column major traversal. | . public class PrintArray { public static void printArray(String[][] grid) { for (???) { for (???) { System.out.print(grid[???][???] + &quot; &quot;); } } } public static void main(String[] args) { String[][] message = { {&quot;My&quot;, &quot;Ap&quot;, &quot;Cs&quot;, &quot;R&quot;}, {&quot;AP&quot;, &quot;A&quot;, &quot;Class&quot;, &quot;o&quot;}, {&quot;C&quot;, &quot;p&quot;, &quot; &quot;, &quot;c&quot;}, {&quot;S&quot;, &quot; &quot;, &quot; &quot;, &quot;k&quot;}, {&quot;s&quot;, &quot; &quot;, &quot;s&quot;, &quot;!&quot;}, }; printArray(message); } } PrintArray.main(null) . Algorithms That use 2D Arrays Traversing . public class SearchExample { public static boolean search(String[][] chart, String name) { for (int r = 0; r &lt; chart.length; r++) { for (int c = 0; c &lt; chart[0].length; c++) { if (chart[r][c].equals(name)) { return true; } } } return false; // Name not found in the array } public static void main(String[] args) { String[][] chart = { {&quot;Alice&quot;, &quot;Bob&quot;, &quot;Charlie&quot;}, {&quot;David&quot;, &quot;Eve&quot;, &quot;Frank&quot;}, {&quot;Grace&quot;, &quot;Hannah&quot;, &quot;Isaac&quot;} }; String nameToSearch = &quot;Krishiv&quot;; boolean found = search(chart, nameToSearch); if (found) { System.out.println(nameToSearch + &quot; is in the array.&quot;); } else { System.out.println(nameToSearch + &quot; is not in the array.&quot;); } } } SearchExample.main(null) . Krishiv is not in the array. . Hacks 8.2 . Complete the popcorn hacks | Main Hack: Traverse Through a 2D Array Using Any of the following methods that we learned | Traverse Through A 2D Array Using Specfically The Collumn Major Order. (Make Sure your using correct type of nested loop ) | Create your own situration of an Algorthm that needs to traverse a 2D array and then write the code for it | Extra: Create an Extra Problem or Go further in depth about something we learned (MUST HAVE CODE FOR CREDIT!) | . | . Image Representation with 2D Arrays . Digital images are essentially a collection of small, discrete elements called pixels. Pixels are organized in a 2D grid, where each pixel represents a single point of color or intensity. Each element (pixel) in the 2D array corresponds to one pixel in the image. In a color image, each pixel contains three color components: Red, Green, and Blue (RGB), while in grayscale images, each pixel has a single intensity value. . Traversing and Processing an Image . Traversing an image’s 2D array involves systematically visiting every pixel in the image grid. This process often uses nested loops, with the outer loop iterating over the rows and the inner loop iterating over the columns. By traversing the array, you gain access to each pixel’s information, such as color values or intensity. This structured access is fundamental for various image processing tasks. . import java.io.*; import java.net.URL; import javax.imageio.ImageIO; // ImageIO is a class in Java libraries which gives an easy way to use different image formats import java.awt.image.BufferedImage; // BufferedImage is a class in Java libraries to help perform operations on images (read + write) public class ImageProcessing { public static void main(String[] args) { String imageUrl = &quot;https://user-images.githubusercontent.com/111609656/277895130-d15b0768-01d9-4522-8ef7-4f8bcf69c42e.png&quot;; String outputFolder = &quot;../images&quot;; String customFileName = &quot;MORT1.png&quot;; try { String outputPath = outputFolder + File.separator + customFileName; URL url = new URL(imageUrl); // create URL object try (InputStream in = url.openStream(); // try-catch block where errors are handled OutputStream out = new FileOutputStream(outputPath)) { // input stream reads data and output stream writes the data byte[] buffer = new byte[1024]; int bytesRead; while ((bytesRead = in.read(buffer)) != -1) { out.write(buffer, 0, bytesRead); } // reading the data from the URL and writes in 1024 byte chunks } System.out.println(&quot;Image downloaded and saved to: &quot; + outputPath); File imageFile = new File(outputPath); BufferedImage image = ImageIO.read(imageFile); int width = image.getWidth(); int height = image.getHeight(); // get the image dimensions System.out.println(&quot;Success! Image Dimensions (Width x Height): &quot; + width + &quot; x &quot; + height); // Process the image using a 2D array int[][] pixels = new int[width][height]; for (int x = 0; x &lt; width; x++) { for (int y = 0; y &lt; height; y++) { int pixel = image.getRGB(x, y); // Process the pixel here, e.g., apply filters or transformations pixels[x][y] = pixel; } } // Calculate resolution in pixels per inch (PPI) int ppi = (int) (image.getWidth() / (width * 0.0254)); System.out.println(&quot;Resolution: &quot; + ppi + &quot; pixels per inch (PPI)&quot;); } catch (IOException e) { e.printStackTrace(); } } } ImageProcessing.main(null) . Image downloaded and saved to: ../images/MORT1.png Success! Image Dimensions (Width x Height): 1030 x 1372 Resolution: 39 pixels per inch (PPI) . Grayscale Conversion with Images . Grayscale conversion is a fundamental image processing operation. When converting an image to grayscale, you effectively remove color information and retain only the pixel intensity. This is typically done by calculating the average intensity from the RGB components of each pixel. The result is a grayscale image where variations in pixel intensity represent the image’s features and details. This operation can serve as a starting point for more complex image processing techniques. . import java.awt.image.BufferedImage; import java.awt.image.ColorConvertOp; import java.io.*; import java.net.URL; import javax.imageio.ImageIO; public class ImageToGrayscaleWithArray { public static void main(String[] args) { String imageUrl = &quot;https://user-images.githubusercontent.com/111609656/277895164-5f93f1d8-88b5-4b08-b9a1-b54fb6d55d96.png&quot;; // Replace with the actual image URL String outputFolder = &quot;../images&quot;; String customFileName = &quot;MORT2_Grayscale.png&quot;; // Change this to your desired file name for the grayscale image try { // Define the output file path String outputPath = outputFolder + File.separator + customFileName; // Create a URL object from the image URL URL url = new URL(imageUrl); // Open a connection to the URL and get the input stream try (InputStream in = url.openStream(); OutputStream out = new FileOutputStream(outputPath)) { // Read data from the URL and save it to the output file byte[] buffer = new byte[1024]; int bytesRead; while ((bytesRead = in.read(buffer)) != -1) { out.write(buffer, 0, bytesRead); } } // Read the downloaded image BufferedImage originalImage = ImageIO.read(new File(outputPath)); int width = originalImage.getWidth(); int height = originalImage.getHeight(); // Create a 2D array to store grayscale values int[][] grayscaleArray = new int[width][height]; // Convert the image to grayscale and populate the array for (int x = 0; x &lt; width; x++) { for (int y = 0; y &lt; height; y++) { int pixel = originalImage.getRGB(x, y); int red = (pixel &gt;&gt; 16) &amp; 0xFF; int green = (pixel &gt;&gt; 8) &amp; 0xFF; int blue = pixel &amp; 0xFF; int gray = (red + green + blue) / 3; grayscaleArray[x][y] = gray; } } // Save the grayscale image String grayscaleOutputPath = outputFolder + File.separator + customFileName; BufferedImage grayscaleImage = new BufferedImage(width, height, BufferedImage.TYPE_BYTE_GRAY); for (int x = 0; x &lt; width; x++) { for (int y = 0; y &lt; height; y++) { int grayValue = grayscaleArray[x][y]; int grayPixel = (grayValue &lt;&lt; 16) | (grayValue &lt;&lt; 8) | grayValue; grayscaleImage.setRGB(x, y, grayPixel); } } ImageIO.write(grayscaleImage, &quot;png&quot;, new File(grayscaleOutputPath)); System.out.println(&quot;Success! Image converted to grayscale, downloaded, and saved to: &quot; + grayscaleOutputPath); } catch (IOException e) { e.printStackTrace(); } } } ImageToGrayscaleWithArray.main(null) . Success! Image converted to grayscale, downloaded, and saved to: ../images/MORT2_Grayscale.png . Image Conversion . . Why do we Convert Images ? . How Does Image Conversion Work: . import javax.imageio.ImageIO; // allows you to read and write images in various formats. import java.io.File; // allows you to work with files and directories in your file system. import java.io.IOException; // allows you to handle input and output exceptions that may occur during file operations. import java.awt.image.BufferedImage; // allows you to work with images stored in memory, providing methods to manipulate image data. public class ImageConverter { public static void main(String[] args) { try { // Input and output file paths String[] inputPaths = { &quot;/Users/nikhilchakravarthula/vscode/KPNSLESSON/images/woodworker_mort.png&quot;, &quot;/Users/nikhilchakravarthula/vscode/KPNSLESSON/images/Mort2.png&quot; }; String outputPath = &quot;/Users/nikhilchakravarthula/vscode/KPNSLESSON/imagesConvert&quot;; // Loop through each image in the array for (String inputPath : inputPaths) { // Read the image File inputFile = new File(inputPath); BufferedImage img = ImageIO.read(inputFile); // Buffered image is a class in java for handling image data // Write the image String outputFileName = &quot;converted_&quot; + new File(inputPath).getName().replace(&quot;.png&quot;, &quot;.gif&quot;); String outputFilePath = outputPath + File.separator + outputFileName; File outputFile = new File(outputFilePath); ImageIO.write(img, &quot;gif&quot;, outputFile); System.out.println(&quot;Image conversion successful for: &quot; + inputPath); } } catch (IOException e) { e.printStackTrace(); } } } ImageConverter.main(null) . Image conversion successful for: /Users/nikhilchakravarthula/vscode/KPNSLESSON/images/woodworker_mort.png Image conversion successful for: /Users/nikhilchakravarthula/vscode/KPNSLESSON/images/Mort2.png . import javax.imageio.ImageIO; import java.io.File; import java.io.IOException; import java.awt.image.BufferedImage; public class ImageConverter { public static void main(String[] args) { try { // Input and output file paths String inputPath = &quot;/Users/nikhilchakravarthula/vscode/KPNSLESSON/images/Mort2.png&quot;; String outputPath = &quot;/Users/nikhilchakravarthula/vscode/KPNSLESSON/imagesConvert&quot;; // Read the PNG image BufferedImage img = ImageIO.read(new File(inputPath)); // Convert image to RGB format BufferedImage rgbImage = new BufferedImage(img.getWidth(), img.getHeight(), BufferedImage.TYPE_INT_RGB); rgbImage.createGraphics().drawImage(img, 0, 0, null); // Define the output file name and path String outputFileName = inputPath.substring(inputPath.lastIndexOf(&quot;/&quot;) + 1).replace(&quot;.png&quot;, &quot;.jpeg&quot;); String outputFilePath = outputPath + File.separator + outputFileName; // Convert and save the image as JPEG ImageIO.write(rgbImage, &quot;jpeg&quot;, new File(outputFilePath)); System.out.println(&quot;Image conversion successful!&quot;); } catch (IOException e) { e.printStackTrace(); } } } ImageConverter.main(null); . Scaling the Image . import javax.imageio.ImageIO; import java.awt.*; import java.awt.image.BufferedImage; import java.io.File; import java.io.IOException; public class ImageScaler { public static void main(String[] args) { try { // Input and output file paths String inputPath = &quot;/Users/nikhilchakravarthula/vscode/KPNSLESSON/images/snow_mort.png&quot;; String outputPath = &quot;/Users/nikhilchakravarthula/vscode/KPNSLESSON/imagesConvert&quot;; // Desired width and height of the scaled image int scaledWidth = 100; int scaledHeight = 100; // Read the image File inputFile = new File(inputPath); BufferedImage inputImage = ImageIO.read(inputFile); // Scale the image BufferedImage scaledImage = scaleImage(inputImage, scaledWidth, scaledHeight); // Write the scaled image String outputFileName = &quot;scaled_&quot; + new File(inputPath).getName(); String outputFilePath = outputPath + File.separator + outputFileName; File outputFile = new File(outputFilePath); ImageIO.write(scaledImage, &quot;png&quot;, outputFile); System.out.println(&quot;Image scaling successful!&quot;); } catch (IOException e) { e.printStackTrace(); } } public static BufferedImage scaleImage(BufferedImage originalImage, int scaledWidth, int scaledHeight) { // Create a new BufferedImage with the desired width and height BufferedImage scaledImage = new BufferedImage(scaledWidth, scaledHeight, originalImage.getType()); // g2d more into // Create a Graphics2D object and set the rendering hints for scaling Graphics2D g2d = scaledImage.createGraphics(); g2d.setRenderingHint(RenderingHints.KEY_INTERPOLATION, RenderingHints.VALUE_INTERPOLATION_BILINEAR); // Draw the original image on the new BufferedImage with the desired width and height g2d.drawImage(originalImage, 0, 0, scaledWidth, scaledHeight, null); // Dispose of the Graphics2D object g2d.dispose(); return scaledImage; } } ImageScaler.main(null); . Image scaling successful! . Images Hack . Hack: Create a functioning code in which you convert a PNG image to a JPEG image (make it funny). . Grading for Hacks . 0.7 for Completing Lesson Hacks | 0.2 for Popcorn Hacks + Practice | 0.1 for Doing Extra Work | .",
            "url": "http://localhost:4100/teacher_portfolio/2023/10/26/java_2D-arrays_P3_IPYNB_2_.html",
            "relUrl": "/2023/10/26/java_2D-arrays_P3_IPYNB_2_.html",
            "date": " • Oct 26, 2023"
        }
        
    
  
    
        ,"post81": {
            "title": "U8 | 2D Array | Student P1",
            "content": "APCSA Unit 8 College Board Learning Objectives and Standards . Learning Objectives . The objective of today’s lesson is to… . Learn about 2D arrays, their use cases, and how to create them. | . Essential Knowledge . College Board wants you to know… . How to declare/initialize 2D arrays. | How to determine their size. | How to access and update the values of a 2D array. | How to traverse/access elements of a 2D array using nested iteration statements. | How nested iteration statements can be used to traverse 2D arrays in “row-major order” vs “column-major order.” | How to create algorithms that require the use of 2D array traversals. | . Warm Up . Answer the following questions as a group or individually. Write down your answers in your hacks notebook. . What are 2D arrays? | How are 2D arrays organized? | What are some real-world examples of 2D arrays? | . The Basics/Recap . 2D arrays, and higher dimension arrays overall, can be thought of as just an array that’s made up of other arrays or an array of arrays. One way of looking at 2D arrays is by thinking of them as a chess board. They have rows and columns, and every element is identified via row or column number or index. . Below is an illustration of a 2D array: . 1) How to declare/initialize 2D arrays . Initializing 2D arrays can be done in multiple different ways. Note: In Java whenever we declare an array we must specify the datatype of the elements in the array. The most common include: . 1) Initializing and populating the array in one go: . public class Main { public static void main(String[] args) { int[][] Array1 = { // 2d Array of integers {1, 2, 3}, {4, 5, 6}, {7, 8, 9} }; for (int i = 0; i &lt; Array1.length; i++) { // Loop through the rows for (int j = 0; j &lt; Array1[i].length; j++) { // Loop through the columns System.out.print(Array1[i][j] + &quot; &quot;); // Print out the element } System.out.println(); // Print a new line } } } Main.main(null) . 1 2 3 4 5 6 7 8 9 . public class Main { public static void main(String[] args){ String[][] Array2 = { // 2d Array of strings {&quot;one&quot;, &quot;two&quot;, &quot;three&quot;}, {&quot;four&quot;, &quot;five&quot;, &quot;six&quot;}, {&quot;seven&quot;, &quot;eight&quot;, &quot;nine&quot;} }; for (int i = 0; i &lt; Array2.length; i++) { // Loop through the rows for (int j = 0; j &lt; Array2[i].length; j++) { // Loop through the columns System.out.print(Array2[i][j] + &quot; &quot;); // Print out the element } System.out.println(); // Print a new line } } } Main.main(null) . one two three four five six seven eight nine . public class Main { public static void main(String[] args){ Object[][] Array3 = { // 2d Array of objects allows for having varying types in the same 2d array {1, &quot;two&quot;, 3.0}, {4, &quot;five&quot;, 6.0}, {7, &quot;eight&quot;, 9.0} }; for (int i = 0; i &lt; Array3.length; i++) { // Loop through the rows for (int j = 0; j &lt; Array3[i].length; j++) { // Loop through the columns System.out.print(Array3[i][j] + &quot; &quot;); // Print out the element } System.out.println(); // Print a new line } } } Main.main(null) . 1 two 3.0 4 five 6.0 7 eight 9.0 . 2) Creating an empty 2D array and then assigning values to individual elements as through accessing and changing each value via their corresponding row and column index: . public class Main { public static void main(String[] args){ int[][] myArray = new int[3][3]; // Defines the size of the array, think of the first number as x and the second number as y, for rows and columns. myArray[0][0] = 1; // Maps the desired value to a specific point in the array, think of this as an (x,y) coordinate. myArray[0][1] = 2; myArray[0][2] = 3; myArray[1][0] = 4; myArray[1][1] = 5; myArray[1][2] = 6; myArray[2][0] = 7; myArray[2][1] = 8; myArray[2][2] = 9; for (int i = 0; i &lt; myArray.length; i++) { // Loop through the rows for (int j = 0; j &lt; myArray[i].length; j++) { // Loop through the columns System.out.print(myArray[i][j] + &quot; &quot;); // Print out the element } System.out.println(); // Print a new line } } } Main.main(null) . 1 2 3 4 5 6 7 8 9 . 3) Using a nested loop to manually populate each element: . public class Main { public static void main(String[] args){ int rows = 3; // Define number of rows and columns here as variables int columns = 4; int[][] myArray = new int[rows][columns]; // Create an array based on the values of the aforementioned variables. // Create a nested for loop that iterates based on the number of rows and columns. for (int i = 0; i &lt; rows; i++) { for (int j = 0; j &lt; columns; j++) { // You can assign values to each element here myArray[i][j] = i * columns + j; } } // Print out the array for (int i = 0; i &lt; myArray.length; i++) { // Loop through the rows for (int j = 0; j &lt; myArray[i].length; j++) { // Loop through the columns System.out.print(myArray[i][j] + &quot; &quot;); // Print out the element } System.out.println(); // Print a new line } } } Main.main(null) . 0 1 2 3 4 5 6 7 8 9 10 11 . Popcorn Hack: Create a 2D Array with random values . public class Main { public static void main(String[] args){ } } Main.main(null) . 2) Accessing and updating the values of a 2D array . In order to access the value of a 2D array, you must use array indexing notation, which is as follows: . // Say you have myArray: int[][] myArray = { {1, 2, 3}, {4, 5, 6}, {7, 8, 9} }; // To access the third number of the third column, use array indexing notation: int desiredValue = myArray[2][2]; // REMEMBER BASE 0! // And print the value: System.out.print(desiredValue); . Assign the “coordinate point” of the desired value as a variable, using the “x” value for row number and “y” value for column number. . // Executable Version: public class Main { public static void main(String[] args) { int[][] myArray = { {1, 2, 3}, {4, 5, 6}, {7, 8, 9} }; int desiredValue = myArray[2][2]; System.out.print(desiredValue); } } Main.main(null) . 9 . In order to update the value of a specific point in a 2D array, assign the desired value to a specific point in the array, denoted by array indexing notation: . // Say you have myArray: int[][] myArray = { {1, 2, 3}, {4, 5, 6}, {7, 8, 9} }; // To change the third number of the third column, use array indexing notation: int desiredValue = 10; // Define what you want the new value to be. myArray[2][2] = desiredValue; // Use array indexing notation to insert the desired value at the specific desired point. // And print the updated value at the desired location: System.out.print(myArray[2][2]); . // Executable Version: public class Main { public static void main(String[] args) { int[][] myArray = { {1, 2, 3}, {4, 5, 6}, {7, 8, 9} }; int desiredValue = 10; myArray[2][2] = desiredValue; System.out.print(myArray[2][2]); } } Main.main(null) . 10 . Popcorn Hack: Print all the values on this 2D Array and update the last value to be 12. . // basic scaffolding to get you started :) public class Main { public static void main(String[] args) { int[][] myArray = { {1, 2, 3}, {4, 5, 6}, {7, 8, 9} }; } } Main.main(null) . 3) Traversing 2D Arrays . When we traverse a regular array we use a singular for loop to iterate through each element in the array. However, when we have 2D array we need to use nested for loops to iterate through each element in the array. Below is the difference between the two: | . // Regular array traversal for(int i = 0; i &lt; myArray.length; i++){ System.out.println(myArray[i]); } // 2D array traversal for(int i = 0; i &lt; myArray.length; i++){ for(int j = 0; j &lt; myArray[i].length; j++){ System.out.println(myArray[i][j]); } } . public class Main { public static void main(String[] args){ int[] myArray = {1, 2, 3, 4, 5, 6, 7, 8, 9}; // 1d array of integers int[][] my2dArray = { // 2d array of integers {1, 2, 3}, {4, 5, 6}, {7, 8, 9} }; System.out.println(&quot;1D Array n&quot;); // Print a new line for (int i = 0; i &lt; myArray.length; i++) { // Loop through the 1d array System.out.print(myArray[i] + &quot; &quot;); // Print out the element } System.out.println(&quot; n n2D Array n&quot;); // Print a new line for (int i = 0; i &lt; my2dArray.length; i++) { // First traversal condition for (int j = 0; j &lt; my2dArray[i].length; j++) { // Second traversal condition System.out.print(my2dArray[i][j] + &quot; &quot;); // Print out the element } System.out.println(); // Print a new line } } } Main.main(null) . 1D Array 1 2 3 4 5 6 7 8 9 2D Array 1 2 3 4 5 6 7 8 9 . Popcorn Hack: Traverse the following array and only print the values divisible by 7 . public class Main { public static void main(String[] args) { int[][] myArray = { {1, 2, 11}, {14, 5, 21}, {25, 28, 70} }; } } Main.main(null) . Row-Major Order vs Column-Major Order . Row-Major-Order: . The outer loop traverses the rows and the inner loop traverses the columns or the elements within the rows. Here is an example bellow of row-major order traversals: | . public class rowMajorOrder { public static void main(String[] args){ int[][] my2dArray = { // 2d array of integers {1, 2, 3}, {4, 5, 6}, {7, 8, 9} }; System.out.println(&quot;Row Major Order n&quot;); // Print a new line for (int i = 0; i &lt; my2dArray.length; i++) { // First traversal traverses by rows condition for (int j = 0; j &lt; my2dArray[i].length; j++) { // Iterates through the columns if (my2dArray[i][j] % 2 == 0) { // If the element is even } else{ my2dArray[i][j] = 0; // Otherwise set the element to 0 } System.out.print(my2dArray[i][j] + &quot; &quot;); // Print out the element } System.out.println(); // Print a new line } } } rowMajorOrder.main(null) . Row Major Order 0 2 0 4 0 6 0 8 0 . // Variation that only applies to forward row-wise major traversal public class rowMajorTraversalAlt{ public static void rowMajorOrderAlt(int[][] array){ for (int[] row: array){ for (int element: row){ System.out.print(element + &quot; &quot;); } System.out.println(); } } } rowMajorTraversalAlt.rowMajorOrderAlt(new int[][]{ {1, 2, 3}, {4, 5, 6}, {7, 8, 9} }); . 1 2 3 4 5 6 7 8 9 . Column-Major-Order: . The outer loop will traverse through the columns and the inner loop will traverses through each element in the columns or the rows. Here is an example bellow of column-major order traversals: | . public class columnWiseTraversal{ public static void main(String[] args){ int[][] my2dArray = { // 2d array of integers {1, 2, 3}, {4, 5, 6}, {7, 8, 9} }; System.out.println(&quot;Column Wise Traversal n&quot;); // Print a new line for (int j = 0; j &lt; my2dArray[0].length; j++) { // First traversal traverses by columns condition for (int i = 0; i &lt; my2dArray.length; i++) { // Iterates through the rows if (my2dArray[j][i] % 2 == 0) { // If the element is even } else{ my2dArray[j][i] = 0; // Otherwise set the element to 0 } System.out.print(my2dArray[j][i] + &quot; &quot;); // Print out the element } System.out.println(); // Print a new line } } } columnWiseTraversal.main(null) // Both row and column wise traversals in our examples do the same thing, but in different orders. However for certain functions one may be easier to use than the other. . Column Wise Traversal 0 2 0 4 0 6 0 8 0 . Algoirthms 2D Array Java . Linear search is a simple and sequential searching algorithm. It is used to find whether a particular element is present in the array or not by traversing every element in the array. While searching in the 2D array is exactly the same but here all the cells need to be traversed In this way, any element is searched in a 2D array. . Below is the implementation for linear search in 2D arrays . // Linear Search in 2D arrays import java.util.Arrays; public class GFG { public static void main(String[] args) { int arr[][] = { { 3, 12, 9 }, { 5, 2, 89 }, { 90, 45, 22 } }; int target = 89; int ans[] = linearSearch(arr, target); System.out.println(&quot;Element found at index: &quot; + Arrays.toString(ans)); } static int[] linearSearch(int[][] arr, int target) { for (int i = 0; i &lt; arr.length; i++) { for (int j = 0; j &lt; arr[i].length; j++) { if (arr[i][j] == target) { return new int[] { i, j }; } } } return new int[] { -1, -1 }; } } . Summary: Linear Search involves iterating through all elements in the matrix. Binary Search is applicable when the matrix is sorted. Binary Search treats the 2D matrix as a 1D array by converting the indices. These searching algorithms are fundamental and widely used. Practice applying them to different scenarios to solidify your understanding. Additionally, consider exploring more advanced searching techniques for 2D arrays as you become more proficient. . public class Main { public static int[] binarySearch(int[][] matrix, int target) { int rows = matrix.length; int cols = matrix[0].length; int left = 0; int right = rows * cols - 1; while (left &lt;= right) { int mid = left + (right - left) / 2; int midValue = matrix[mid / cols][mid % cols]; if (midValue == target) { return new int[] {mid / cols, mid % cols}; } if (midValue &lt; target) { left = mid + 1; } else { right = mid - 1; } } return new int[] {-1, -1}; // Target not found } } . Binary Search in a 2D Array: . Binary search is an efficient method of searching in an array. Binary search works on a sorted array. At each iteration the search space is divided in half, this is the reason why binary search is more efficient than linear search . // Binary Search on sorted 2D array import java.util.Arrays; class GFG { static int[] findAns(int[][] arr, int target) { int row = 0; int col = arr[row].length - 1; while (row &lt; arr.length &amp;&amp; col &gt;= 0) { if (arr[row][col] == target) { return new int[] { row, col }; } // Target lies in further row if (arr[row][col] &lt; target) { row++; } // Target lies in previous column else { col--; } } return new int[] { -1, -1 }; } // Driver Code public static void main(String[] args) { // Binary search in sorted matrix int arr[][] = { { 1, 2, 3, 4 }, { 5, 6, 7, 8 }, { 9, 10, 11, 12 } }; int[] ans = findAns(arr, 12); System.out.println(&quot;Element found at index: &quot; + Arrays.toString(ans)); } } . Enhanced For-Each Loop for 2D Arrays . Since 2D arrays are really arrays of arrays you can also use a nested enhanced for-each loop to loop through all elements in an array. We loop through each of the inner arrays and loop through all the values in each inner array. Notice the type of the outer loop array variable – it is an array that will hold each row, String[] in the example below for a 2D String array. The type of the variables in the for-each loops must match the type of the array. For-each loops are much simpler since you don’t have to use the indices and the []’s, but you can only use them if you are not going to change the values in an array of primitive types since the variable val below will not change the original array. . String[][] array; // Nested For-each loops that traverse a 2D String array for (String[] innerArray : array) { for (String val : innerArray) { System.out.println(val); } } . public class Average { public static double getAvg(int[][] a) { double total = 0; for (int[] innerArray : a) { for (int val : innerArray) { total = total + val; } } return total / (a.length * a[0].length); } public static void main(String[] args) { int[][] theArray = { {80, 90, 70}, {20, 80, 75}}; System.out.println(getAvg(theArray)); } } Average.main(null); . 69.16666666666667 . 4) How to create an algorithm that involves traversing a 2D Array . During the APCSA AP exam, we will be required to write an algorithm for a 2D array that solves a problem discussed in the prompt. Collegeboard will give you a situation, and you will have to write an algorithm based on said situation. . Here’s an example of an algorithm that was needed for the real Collegeboard APCSA exam in 2022: . For this problem, the question asked for the student to write the countIncreasingCols method, which returns the number of columns in grid that are in increasing order. grid is a 2D array with randomly populated numbers. . public int countIncreaseCols() { int count = 0; for (int j = 0; j &lt; grid[0].length; j++) { // Iterates through columns boolean isIncreasing = true; if (grid[0].length &gt; 1) { // Checks if there is more than one column to prevent out of bounds error for (int i = 1; i &lt; grid.length; i++) { // Iterates through rows if (grid[i][j] &lt;= grid[i - 1][j]) { // Checks if the current element is less than or equal to the previous element isIncreasing = false; // If so set isIncreasing to false and break out of loop break; } } if (isIncreasing) { // If the column is increasing increment count as if count++; // the value is not less than or equal to the previous // element then it must be increasing } } else if (grid[0].length == 1) { // To match the criteria of a single column being increasing count++; } else { // If there are no columns then break out of loop break; } } return count; } . Hacks: . 1) . Initialize a 5 x 5 2D array that is populated by random values. . // Add the code here: public class random2DA { } . 2) . a) Print the values 47, 51, and 20 by accessing them in the the given two-dimensional array. | b) Find the values from part a) using row major and column major order and print the values in each respective order. | . public class Problem2 { public static void main(String[] args) { int[][] arr = { {47,3,12},{51,74,20} }; } } Problem2.main(null); . 3) . The following 2d array myArray is populated with integers 1-9. Write an algorithm thath sorts the 2D array by column and returnst the values of the array in increaing order. . The expected output is: 1 4 7 2 5 8 3 6 9 . public class Problem3 { public static void main(String[] args) { int[][] MyArray = { // 2d array of integers {1, 2, 3}, {4, 5, 6}, {7, 8, 9} }; } } Problem3.main(null); . 4) . Replace the “ADD CODE HERE” below with the code to declare and create a 3 by 3 two-dimensional int array named table. The finished code will print the values 0 to 8. . public class Test1 { public static void main(String[] args) { // ADD CODE HERE // // Should print the values in table int count = 0; for (int row = 0; row &lt; table.length; row++) { for (int col = 0; col &lt; table.length; col++) { table[row][col] = count; count++; System.out.print(table[row][col] + &quot; &quot;); } } } } . 5) . Replace the “ADD CODE HERE” below with the code to declare and initialize a two-dimensional String array called students with the names “Brice, Marvin, Anna” in the first row and “Kamal, Maria, Elissa” in the second. The finished code will print all the names in the array starting with all in the first row followed by all in the second row. . public class Test1 { public static void main(String[] args) { // ADD CODE HERE // // Should print the values in students in order for (int row = 0; row &lt;= students.length; row++) { for (int col = 0; col &lt;= students.length; col++) { System.out.print(students[row][col] + &quot; &quot;); } } } } .",
            "url": "http://localhost:4100/teacher_portfolio/2023/10/26/java_2D-arrays_P1_IPYNB_2_.html",
            "relUrl": "/2023/10/26/java_2D-arrays_P1_IPYNB_2_.html",
            "date": " • Oct 26, 2023"
        }
        
    
  
    
        ,"post82": {
            "title": "P4 Libraries",
            "content": "3.12-3.13 Developing Procedures . *before we do this lesson, you will want to open a terminal on your desktop and pip install Requests, Pillow, Pandas, NumPy, Scikit-Learn, Tensorflow, and matplotlib. . Learning Objectives: . Select approproate libraries or existing code segments to use in creating new programs | . What are Libraries? In Python, a library is a collection of pre-written code, functions, and modules that extend the language’s capabilities. These libraries are designed to be reused by developers to perform common tasks, rather than having to write the code from scratch. Libraries are essential for simplifying and accelerating the development process, as they provide a wide range of tools and functions for various purposes. . Here are some key points about Python libraries: . Modules: Libraries in Python consist of modules, which are individual Python files containing functions, classes, and variables related to a specific set of tasks or a particular domain. You can import these modules into your own Python code to access their functionality. . | Standard Library: Python comes with a comprehensive standard library that includes modules for various tasks, such as working with files, networking, data processing, and more. These modules are readily available and do not require installation. . | Third-party Libraries: In addition to the standard library, there is a vast ecosystem of third-party libraries created by the Python community. These libraries cover a wide range of domains, including web development, data analysis, machine learning, game development, and more. Some popular third-party libraries include NumPy, Pandas, Matplotlib, TensorFlow, Django, Flask, and many others. . | How Do We Get Libraries into Our Code and Working?&lt;/strong&gt; To get libraries into our code, we use the import statement followed by the library we want to import. Lets start simply: . #In this code cell, we are importing the math library which allows us to do math operations, #and the random library which lets us take pseudorandom numbers and choices. import math import random #We use the libraries by first calling them by their name, then using one of their methods. #For example: num = 64 print(math.sqrt(num)) numList = [1,2,3,4,5,6] print(random.choice(numList)) #Here, &#39;math&#39; and &#39;random&#39; are the names of the libraries, and &#39;sqrt&#39; and &#39;choice&#39; are the names of the methods. . We can also import parts of libraries by adding a &quot;from&quot; in front of our import. . from math import sqrt from random import * num = 64 print(sqrt(num)) numList = [1,2,3,4,5,6] print(choice(numList)) . Now, we don&#39;t have to use math. in front of sqrt, and can just use the function by itself. We can also import *, or all, which makes it so that everything is imported. Here, we don&#39;t have to use random in front of choice, even though we didn&#39;t import choice specifically. Popcorn Hack #1 Import your own library from a list of provided libraries, and use one of its methods. This can be something very bare bones, such as printing the time, getting a random number in a list, or doing something after sleeping a certain amount of time python #math library module examples: sqrt(num), square(num), cube(num), factorial(num) #random library module examples: choice(list), randrange(lowest, highest, step[numbers chosen in multiples of {step}]) #datetime library module examples: datetime.now() #sleep library module examples: sleep(milliseconds) Documentation&lt;/strong&gt; Documentation in Python libraries refers to the written information and explanations provided to help users understand how to use the library, its classes, functions, and modules. It serves as a comprehensive guide that documents the library&#39;s functionality, usage, and often includes code examples. Documentation is typically created by the library developers and is an essential component of a well-maintained library. Examples of Documentation: An introductory section explaining the purpose of the library, a section on how to install the library, basic usage examples, etc. python calcAverage(grades) &#39;&#39;&#39; You know the name of the procedure and the perameters, but... You probably wouldn&#39;t be able to use this procedure with confidence because you don&#39;t know its function exactly (maybe you can guess that it finds the average, but you wouldn&#39;t know if it uses mean, mode, or median to find the average). You would also need more information on the perameters. &#39;&#39;&#39; Libraries and APIs&lt;/strong&gt; - A file that contains procedures that cane be used in a program is called a library - An Application Program Interface (API) provides specifications for how procedures in a library behave and can be used. APIs define the methods and functions that are available for developers to interact with a library. They specify how to make requests, provide inputs, and receive outputs, creating a clear and consistent way to use library features. Which libraries will be very important to us? Requests - Simplifies working with HTTP servers, including &#39;request&#39;-ing data from them, and recieving it | Pillow - Simplifies image processing | Pandas - Simplifies data analysis &amp; manipulation | Numpy - Vastly quickens functionality of arrays up to 50 times faster than regular python list | Scikit-Learn - Implements machine learning models and statistical modelling | Tensorflow - Data automation, model tracking, performance monitoring, and model retraining | Matplotlib - Creates static, animated, and interactive visualizations in Python | . DON&#39;T FORGET TO DOWNLOAD ALL OF THESE (pip install &quot;library&quot;) . Popcorn Hack #2 Using the requests library and the ? module (since we should already be using this in our backend) GET a request from the api at &quot;https://api.github.com&quot; python import requests #GET a request using the requests library. Remember to put your api link in quotes! If you get something along the lines of response [200] then you succeeded ## Scikit-Learn and Numpy This code uses NumPy to create an array, and Scikit-Learn to analyze the data. It creates a linear regression which describes the relationship between the x and y arrays which reperesent independent and dependent variables. In simpler terms, it is creating a line of best fit between the two data sets, just like how you would in something like desmos. &gt; python import numpy as np import numpy as np from sklearn.linear_model import LinearRegression from sklearn.model_selection import train_test_split from sklearn.metrics import mean_squared_error # Generate some example data X = np.array([1, 2, 3, 4, 5]).reshape(-1, 1) # Feature (independent variable) y = np.array([2, 4, 5, 4, 5]) # Target (dependent variable) # Split the data into training and testing sets X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42) # Create a Linear Regression model model = LinearRegression() # Fit the model to the training data model.fit(X_train, y_train) # Make predictions on the test data y_pred = model.predict(X_test) # Evaluate the model by calculating the Mean Squared Error mse = mean_squared_error(y_test, y_pred) # Print the model coefficients and MSE, model coefficient is the slope of the linear regression line, MSE is how well the model is performing, the closer it is to 0 the better print(&quot;Model Coefficients:&quot;, model.coef_) print(&quot;Mean Squared Error:&quot;, mse) intercept = model.intercept_ slope = model.coef_[0] print(f&quot;Linear Regression Equation: y = {intercept} + {slope} * X&quot;) ## Request - The requests module allows you to send HTTP requests using Python. - In order to download requests, you would have to type pip install requests in your terminal. ## Syntax - requests.methodname(params) python import requests x = requests.get(&#39;http://127.0.0.1:9008/&#39;) print(x.text) #not functional code, example of syntax python import requests # Replace this URL with the website you want to request url = &#39;https://www.example.com&#39; # Send a GET request to the URL response = requests.get(url) # Check if the request was successful (status code 200) if response.status_code == 200: # Print the content of the response (the HTML content of the webpage) print(response.text) else: # If the request was not successful, print an error message print(f&quot;Failed to retrieve the page. Status code: {response.status_code}&quot;) ## Pillow - Pillow is a imaging library that provides easy-to-use methods to include, change, save different image formats. - To dowload pillow onto your computer, you would enter the command pip install Pillow into your terminal. python from PIL import Image, ImageDraw, ImageFont # Create a new blank image width, height = 400, 200 image = Image.new(&quot;RGB&quot;, (width, height), &quot;white&quot;) # Create an ImageDraw object draw = ImageDraw.Draw(image) # Draw a red line from (50, 50) to (350, 150) line_color = (255, 0, 0) # Red color draw.line((50, 50, 350, 150), fill=line_color, width=3) # Add text to the image text = &quot;This was created using Pillow!&quot; text_color = (0, 0, 0) # Black color font_size = 20 font = ImageFont.load_default() # Use a default font text_position = (50, 160) draw.text(text_position, text, fill=text_color, font=font) # Save or display the image image.show() image.show() #This opens the image in your default image viewer and when you stop the code, it will return an error, but don&#39;t worry about that python from PIL import Image # Open an image original_image = Image.open(&#39;image.png&#39;) #replace image.png with valid image # Display information about the image width, height = original_image.size format = original_image.format print(f&quot;Original Image Size: {width}x{height}&quot;) print(f&quot;Original Image Format: {format}&quot;) # Resize the image to a new size new_size = (width // 2, height // 2) # Reduce the size by half resized_image = original_image.resize(new_size) # Save the resized image resized_image.save(&#39;resized_image.jpg&#39;) # Display information about the resized image resized_width, resized_height = resized_image.size print(f&quot;Resized Image Size: {resized_width}x{resized_height}&quot;) # Show both the original and resized images original_image.show() resized_image.show() FileNotFoundError Traceback (most recent call last) c: Users matth librarylesson lessons 2023-10-26-Libraries.ipynb Cell 26 line 4 1 from PIL import Image 3 # Open an image -&gt; 4 original_image = Image.open(&#39;image.png&#39;) 6 # Display information about the image 7 width, height = original_image.size File c: Users matth AppData Local Programs Python Python311 Lib site-packages PIL Image.py:3243, in open(fp, mode, formats) 3240 filename = fp 3242 if filename: -&gt; 3243 fp = builtins.open(filename, &quot;rb&quot;) 3244 exclusive_fp = True 3246 try: FileNotFoundError: [Errno 2] No such file or directory: &#39;image.png&#39; ## Pandas This code utilizes pandas in the DataFrame form to organize the data in to a table with the categories on the horizontal axis and their values on the vertical. Pandas creates a way for the user to organize data in a much simpler form and in different styles depending on what the user wants python #This code utilizes pandas which is a way for you as a user, to create data tables that are much more organized #imports pandas so it&#39;s able to be used import pandas as pd #data is created and will be sorted from left to right into top to bottom data = {&#39;Name&#39;: [&#39;Matthew&#39;, &#39;Lindsay&#39;, &#39;Josh&#39;, &#39;Ethan&#39;], &#39;Grade&#39;: [97, 92, 90, 80]} #defines a variable and utilizes pandas by using a DataFrame for the data df = pd.DataFrame(data) #tbere are other forms other than DataFrame, those are Series (single Column), Panel (3D), Multindex (multiple levels of index), and Categorical (categories), #increase the side count by one df.index += 1 print(df) Name Grade 1 Matthew 97 2 Lindsay 92 3 Josh 90 4 Ethan 80 Another example code, this time utilizing both numpy and pandas python import pandas as pd import numpy as np # Sample data data = { &#39;Grade&#39;: [&#39;A&#39;, &#39;B&#39;, &#39;A&#39;, &#39;C&#39;, &#39;B&#39;, &#39;C&#39;, &#39;A&#39;, &#39;B&#39;, &#39;A&#39;], &#39;Percent&#39;: [94, 82, 91, 76, 89, 79, 92, 87, 99] } # Create a Pandas DataFrame df = pd.DataFrame(data) # Calculate the mean of each Grade using NumPy means = df.groupby(&#39;Grade&#39;)[&#39;Percent&#39;].mean().reset_index() # Organize the results into a new data table result = pd.DataFrame({&#39;Grade&#39;: [&#39;A&#39;, &#39;B&#39;, &#39;C&#39;], &#39;Mean Grade&#39;: means[&#39;Percent&#39;]}) result.index += 1 # Display the result print(result) Grade Mean Grade 1 A 94.0 2 B 86.0 3 C 77.5 ## TensorFlow The provided code demonstrates a basic example of linear regression using TensorFlow and Keras. It begins by importing the necessary libraries, TensorFlow and NumPy. It then generates a synthetic dataset with 1000 samples, where the input features are random, and the target values are computed as a linear combination of the input features with added noise. A data pipeline is set up using TensorFlow, which includes shuffling and batching the data for efficient processing. A simple linear regression model is defined using Keras, consisting of one dense layer. The model is compiled with the Adam optimizer and mean squared error as the loss function. It is then trained on the synthetic data for ten epochs. After training, the model is used to make predictions on new data points, and the predictions are printed to the console. This code provides a basic illustration of how to perform a simple machine learning task with TensorFlow, from data generation to model training and prediction. python import tensorflow as tf import numpy as np # Create a synthetic dataset num_samples = 1000 input_data = np.random.rand(num_samples, 2) target_data = input_data[:, 0] * 2 + input_data[:, 1] * 3 + np.random.randn(num_samples) # Define a data pipeline using TensorFlow dataset = tf.data.Dataset.from_tensor_slices((input_data, target_data)) dataset = dataset.shuffle(buffer_size=num_samples) dataset = dataset.batch(32) dataset = dataset.prefetch(buffer_size=tf.data.AUTOTUNE) # Create a simple linear regression model using Keras model = tf.keras.Sequential([ tf.keras.layers.Dense(1, input_shape=(2,)) ]) model.compile(optimizer=&#39;adam&#39;, loss=&#39;mean_squared_error&#39;) # Train the model on the synthetic data model.fit(dataset, epochs=10) # Generate predictions new_data = np.array([[0.5, 0.7], [0.3, 0.2]]) predictions = model.predict(new_data) print(&quot;Predictions:&quot;, predictions) Epoch 1/10 32/32 [==============================] - 0s 2ms/step - loss: 3.8766 Epoch 2/10 32/32 [==============================] - 0s 2ms/step - loss: 3.6717 Epoch 3/10 32/32 [==============================] - 0s 2ms/step - loss: 3.4812 Epoch 4/10 32/32 [==============================] - 0s 2ms/step - loss: 3.3002 Epoch 5/10 32/32 [==============================] - 0s 2ms/step - loss: 3.1319 Epoch 6/10 32/32 [==============================] - 0s 1ms/step - loss: 2.9735 Epoch 7/10 32/32 [==============================] - 0s 2ms/step - loss: 2.8254 Epoch 8/10 32/32 [==============================] - 0s 2ms/step - loss: 2.6876 Epoch 9/10 32/32 [==============================] - 0s 2ms/step - loss: 2.5581 Epoch 10/10 32/32 [==============================] - 0s 2ms/step - loss: 2.4363 1/1 [==============================] - 0s 85ms/step Predictions: [[1.6355244] [0.9337466]] ## Matplotlib The provided Python code demonstrates the basic usage of Matplotlib, a popular library for creating data visualizations. In this example, we start by importing the Matplotlib&#39;s pyplot module, often aliased as plt. We define some sample data as lists for the X and Y values. Then, we create a figure and an axis object using plt.subplots(). Next, we plot the data points on the graph with ax.plot(x, y) and set a label for the line. We also add labels for the X and Y axes and set a title for the plot. To provide context for the plot, we include a legend with the label we set earlier. Finally, plt.show() is called to display the graph. When you run this code, it will generate a simple line plot displaying the data points with appropriate labels, a title, and a legend, making it a clear and informative visualization. python import matplotlib.pyplot as plt # Sample data x = [1, 2, 3, 4, 5] y = [2, 4, 6, 8, 10] # Create a figure and axis fig, ax = plt.subplots() # Plot the data ax.plot(x, y, label=&#39;Linear Line&#39;) # Set labels and title ax.set_xlabel(&#39;X-axis&#39;) ax.set_ylabel(&#39;Y-axis&#39;) ax.set_title(&#39;Simple Line Plot&#39;) # Add a legend ax.legend() # Display the plot plt.show() ![png](output_33_0.png) Homework Hack . 1) Create a code that makes a data table which organizes the average values(mean) from a data set the has atleast 5 values per category and using 2 libraries, ex: &lt;/br&gt; 2) Create a Python script that downloads images from a website using the requests library, processes them with the Pillow library, and then performs data analysis with the Pandas library. python #homework 1 python #homework 2",
            "url": "http://localhost:4100/teacher_portfolio/2023/10/26/P4_Libraries_IPYNB_2_.html",
            "relUrl": "/2023/10/26/P4_Libraries_IPYNB_2_.html",
            "date": " • Oct 26, 2023"
        }
        
    
  
    
        ,"post83": {
            "title": "P2 Python Libraries",
            "content": "What is a Library? . Essentially a list of pre-written code that you can use to streamline and clean up your program. . Libraries can help simplify complex programs . APIS are specifications for how the procedures in a library behave, and how they can be used . Documentations for an API/library is necessary in understanding the behaviors provided by the API/library and how to use them . Libraries that we will go over: Requests, Pillow, Pandas, Numpy, Scikit-Learn, TensorFlow, matplotlib. . Required Installations . Please run the following commands in your vscode terminal in order to continue the lesson . pip install numpy | pip install matplotlib | pip install scikit-learn | pip install pillow | pip install pandas | pip install tensorflow | pip install requests | . Images using requests and pillow libraries . ‘Requests’ is focused on handling HTTP requests and web data while ‘Pillow’ is designed for data manipulation and analysis It’s common to see them used together in data-related assignments where data is fetched by HTTP requests using Requests and then processed and analyzed with Pandas. . Here’s an example: . import requests from PIL import Image from io import BytesIO # Step 1: Download an image using Requests image_url = &quot;https://example.com/path/to/your/image.jpg&quot; # Replace with the actual URL of the image you want to download response = requests.get(image_url) if response.status_code == 200: # Step 2: Process the downloaded image using Pillow image_data = BytesIO(response.content) # Create an in-memory binary stream from the response content img = Image.open(image_data) # Open the image using Pillow # Perform image processing tasks here, like resizing or applying filters img = img.resize((x, y)) # Resize the image and replace x,y with desired amounts # Step 3: Save the processed image using Pillow img.save(&quot;processed_image.jpg&quot;) # Save the processed image to a file print(&quot;Image downloaded, processed, and saved.&quot;) else: print(f&quot;Failed to download image. Status code: {response.status_code}&quot;) . In this code, we use the Requests library to download an image from a URL and then if the download is successful the HTTP status code 200 will pop up, and from there we create an in-memory binary stream (BytesIO) from the response content. We then use the Pillow library to open the image, make any necessary changes, and save the processed image to a file. . Here’s a step by step tutorial on how we wrote this code: 1)We started by importing the necessary libraries, which were Requests, Pillow, and io. . 2)Download the Image . 3)Use the Requests library to send an HTTP GET request to the URL to download the image. Check the response status code to make sure the download goes through(status code 200). . 4)If the download is successful, create an in-memory binary stream (BytesIO) from the response content. Process the Image: . 5)Utilize the Pillow library to open the image from the binary stream. Change photo to desired preference(ie: size) Save the Processed Image: . 6)Save the processed image to a file using Pillow. Choose a filename and file format for the saved image. . Hack 1 . Write a Python code that accomplishes the following tasks: . Downloads an image from a specified URL using the Requests library. Processes the downloaded image (like resizing) using the Pillow library. Save the processed image to a file. . #Code here . Math Operations With Python Libraries . Numpy(Numerical Python) is used for numerical and scientific computing. It provides tools for handling large sets of numbers, such as data tables and arrays. Numpy makes it easier and more efficient to do mathematical tasks. . The Matplotlib library lets you create a visual representation of your data (graphs, charts, and etc.) . Example Sine Graph . Uses numpy and matplotlib libaries . import numpy as np import matplotlib.pyplot as plt # Generate sample data with NumPy x = np.linspace(0, 2 * np.pi, 100) # Create an array of values from 0 to 2*pi # 100 is included to have 100 points distributed between 0 and 2π to make graph smoother y = np.sin(x) # Compute the sine of each value # Create a simple line plot using Matplotlib plt.plot(x, y, label=&#39;Sine Function&#39;, color=&#39;blue&#39;, linestyle=&#39;-&#39;) # Create the plot plt.title(&#39;Sine Function&#39;) # Set the title plt.xlabel(&#39;x&#39;) # Label for the x-axis plt.ylabel(&#39;sin(x)&#39;) # Label for the y-axis plt.grid(True) # Display a grid plt.legend() # Show the legend plt.show() # Display the plot . Hack 2 . Using the data from the numpy library, create a visual graph using different matplotlib functions. . import numpy as np import matplotlib.pyplot as plt # Generate data for two lines x = np.linspace(0, 10, 50) # Create an array of values from 0 to 10 y1 = 2 * x + 1 # Set of data poits # Create and display a plot using Matplotlib # your code here . Tensor Flow is used in deep learning and neural networks, while scikit-learn is used for typical machine learning tasks. When used together, they can tackle machine learning projects. In the code below, Tensor Flow is used for model creation and training. Scikit-learn is used for data-processing and model evaluation. . Pip install tensorflow scikit-learn . import numpy as np import tensorflow as tf from sklearn.model_selection import train_test_split from sklearn.metrics import mean_squared_error from sklearn.preprocessing import StandardScaler from tensorflow import keras from tensorflow.keras import layers # Generate synthetic data np.random.seed(0) X = np.random.rand(100, 1) # Feature y = 2 * X + 1 + 0.1 * np.random.randn(100, 1) # Target variable with noise # Split the data into training and testing sets X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42) # Standardize the features scaler = StandardScaler() X_train = scaler.fit_transform(X_train) X_test = scaler.transform(X_test) # Create a simple linear regression model using TensorFlow and Keras model = keras.Sequential([ layers.Input(shape=(1,)), layers.Dense(1) ]) # Compile the model model.compile(optimizer=&#39;adam&#39;, loss=&#39;mean_squared_error&#39;) # Train the model model.fit(X_train, y_train, epochs=100, batch_size=32, verbose=2) # Make predictions on the test set y_pred = model.predict(X_test) # Calculate the Mean Squared Error on the test set mse = mean_squared_error(y_test, y_pred) print(f&quot;Mean Squared Error: {mse:.4f}&quot;) . A decrease in loss and time metrics (ms/epoch and ms/step) shows the efficiency increases as the training epochs increases . Hack . fill in the missing code to match the custom data set . import numpy as np import tensorflow as tf from sklearn.model_selection import train_test_split from sklearn.metrics import mean_squared_error from sklearn.preprocessing import StandardScaler from tensorflow import keras from tensorflow.keras import layers # Generate a custom dataset (replace this with your data loading code) # Synthetic data: House prices based on number of bedrooms and square footage np.random.seed(0) num_samples = 100 bedrooms = np.random.randint(1, 5, num_samples) square_footage = np.random.randint(1000, 2500, num_samples) house_prices = 100000 + 50000 * bedrooms + 100 * square_footage + 10000 * np.random.randn(num_samples) # Combine features (bedrooms and square footage) into one array X = np.column_stack((bedrooms, square_footage)) y = house_prices.reshape(-1, 1) # Split the data into training and testing sets # Standardize the features # Create a regression model using TensorFlow and Keras # Input shape adjusted to the number of features # Output layer for regression # Compile the model for regression # Using MSE as the loss function # Train the model # Make predictions on the test set # Calculate the Mean Squared Error on the test set . HOMEWORK 1 . Create a GPA calculator using Pandas and Matplot libraries and make: 1) A dataframe 2) A specified dictionary 3) and a print function that outputs the final GPA . Extra points can be earned with creativity. . # your code here . HOMEWORK 2 . Import and use the “random” library to generate 50 different points from the range 0-100, then display the randomized data using a scatter plot. . Extra points can be earned with creativity. . # your code here .",
            "url": "http://localhost:4100/teacher_portfolio/2023/10/26/P2-Python-Libraries_IPYNB_2_.html",
            "relUrl": "/2023/10/26/P2-Python-Libraries_IPYNB_2_.html",
            "date": " • Oct 26, 2023"
        }
        
    
  
    
        ,"post84": {
            "title": "Refactored Alien World",
            "content": "Invert",
            "url": "http://localhost:4100/teacher_portfolio/2023/10/25/javascript-background-alien.html",
            "relUrl": "/2023/10/25/javascript-background-alien.html",
            "date": " • Oct 25, 2023"
        }
        
    
  
    
        ,"post85": {
            "title": "Individual Review JM",
            "content": "Issue Recap . During the project, I have tried to keep issues to track work and progress. . Online Issues and suumary below… . Restructure of Index Files. This highlights problems addressed and before and after changes. Additionally, a big portion of this review document discussess index.html and some of its key challenges. | Resize Images. This is a quick discussion of how I resized my images. They were large and it was causing characters to slow down. After resize, things are faster and my eye can not tell the difference. | Dynamic Screen Resizing. Tho figure out how to resize background and characters took a lot of time and a few lines of code that are show. | ClassIO Diagram. This document has worked well to determine objects. Though, there has been some additions as project continues. The laregest is managing Game Objects in GameObjectArray. This is shown in use in index.html in GameLoop and Resizing. | Migrating to OOP. This is a sample and test of scaling index.html to only do background. This could be a great starting point to using code from this project to migrate your own system. | . Overview of game control - index.html . Main game page (aka Game Controller). This has been an area of learning and rework. . HTML Elements . HTML canvas container html (&lt;div id=&quot;canvasContainer&quot;&gt;&lt;/div&gt;. This is location where canvas elements are added to the DOM (background, dog, monkey, …). . Minima Layout. It is very important to know how a minima site works and layout files provided by a Theme. Everyting we do in the game is considered content in the minima layout. Thus, the game is content between GitHub Pages “header” and “footer”. . Minima Readme | Minima Layout | . &lt;!-- include head.html --&gt; &lt;body&gt; &lt;!-- include header.html --&gt; &lt;main class=&quot;page-content&quot; aria-label=&quot;Content&quot;&gt; &lt;div class=&quot;wrapper&quot;&gt; &lt;!-- content --&gt; &lt;/div&gt; &lt;/main&gt; &lt;!-- include footer.html --&gt; &lt;/body&gt; . This project inherits style from _sass/minima directory. Developers should start in this directory before adding CSS already defined in GitHub Pages. . custom-styles.scss is file used to customize style. Developers start here to differentiate style. | . @import &quot;minima/Nighthawkpages-dracula-highlight&quot;; @import &quot;minima/dark-mode&quot;; // Dracula Highlight recommended for dark mode . dark-mode.scss is file that provides inverted background feature for anyting inside a “canvas” tag, this is intended feature to go with idea of being on an alien planet | . :root { --default-canvas-filter: invert(100%); } /* more code not shown */ canvas { filter: var(--default-canvas-filter); } . JavaScript Module and Imports . In any system of size you will import code from other files. . Observe script tag becomes a “module” in order to support imports | The import commands reference code from files that contain the Class definitions that will be used to define “Game Objects”. | The imports are the key Classes in game that are used to create objects. | . &lt;script type=&quot;module&quot;&gt; import GameEnv from &#39;/teacher_portfolio/assets/js/alienWorld/GameEnv.js&#39;; import Background from &#39;/teacher_portfolio/assets/js/alienWorld/Background.js&#39;; import Character from &#39;/teacher_portfolio/assets/js/alienWorld/Character.js&#39;; import { initDog } from &#39;/teacher_portfolio/assets/js/alienWorld/CharacterDog.js&#39;; import {initMonkey} from &#39;/teacher_portfolio/assets/js/alienWorld/CharacterMonkey.js&#39;; // more code not shown &lt;/script&gt; . Game Constants . A game can have constants and static objects that are used to control game behavior. . // Setup Globals GameEnv.gameSpeed = 2; GameEnv.gravity = 3; . Game Assets . A game can have several assets. In this game we are using images for backgrounds and sprite images for characters. These are loaded into DOM prior to moving forward to game logic. . // Prepare HTML with Background Canvas const backgroundCanvas = document.createElement(&quot;canvas&quot;); backgroundCanvas.id = &quot;background&quot;; document.querySelector(&quot;#canvasContainer&quot;).appendChild(backgroundCanvas); // Background object const backgroundSpeedRatio = 0.2 new Background(backgroundCanvas, backgroundImg, backgroundSpeedRatio); // Prepare HTML with Platform Canvas const platformCanvas = document.createElement(&quot;canvas&quot;); platformCanvas.id = &quot;platform&quot;; document.querySelector(&quot;#canvasContainer&quot;).appendChild(platformCanvas); // Platform object const platformSpeedRatio = 0.2; initPlatform(platformCanvas, platformImg, platformSpeedRatio); //... . Game Loop . This code is the heartbeat of the game. All the Game Objects are refreshed. . gameLoop is a function that is activated when page loads | requestAnimationFrame recursively calls gameLoop according to refresh rate of computer screen | . // Game loop function gameLoop() { for (var gameObj of GameObject.gameObjectArray){ gameObj.update(); gameObj.draw(); } requestAnimationFrame(gameLoop); // cycle game, aka recursion } . Event Listeners . The start file, in this case the index.html, often will often act on events produced by user. . Resize. A common destop action is resize of window. This will impact many Game Object as they are in proporition to size of window. | . // Window resize window.addEventListener(&#39;resize&#39;, function () { GameEnv.setGameEnv(); // Update GameEnv dimensions // Call the sizing method on all game objects for (var gameObj of GameObject.gameObjectArray){ gameObj.size(); } }); // Toggle &quot;canvas filter property&quot; between alien and normal var isFilterEnabled = true; const defaultFilter = getComputedStyle(document.documentElement).getPropertyValue(&#39;--default-canvas-filter&#39;); toggleCanvasEffect.addEventListener(&quot;click&quot;, function () { for (var gameObj of GameObject.gameObjectArray){ if (isFilterEnabled) { // toggle off gameObj.canvas.style.filter = &quot;none&quot;; // remove filter } else { // toggle on gameObj.canvas.style.filter = defaultFilter; // remove filter } } isFilterEnabled = !isFilterEnabled; // switch boolean value }); . Game environment - assets/js/alienWorld/GameEnv.js . A technique used in Object Oriented Programming is to handle system wide constant values in a “static” variables. These variables are maintained in the “GameEnv” class and can be included and accessed with class name prefix. . In code in index.html you will see reference to GameEnv.speed and calls to set GamEnv.setGameEnv. Properties are set in this code that enable objects to reference things like Top of screen, or ratio of Object speed versus GameSpeed. . Class definition of Global attributes . export class GameEnv { // Prototype static variables static innerWidth; static prevInnerWidth; static innerHeight; static top; static bottom; static prevBottom; static gameSpeed; static gravity; // Make the constructor private to prevent instantiation constructor() { throw new Error(&#39;GameEnv is a static class and cannot be instantiated.&#39;); } // Setter for Top position static setTop() { // set top of game as header height const header = document.querySelector(&#39;header&#39;); if (header) { this.top = header.offsetHeight; } } // Setter for Bottom position static setBottom() { // set bottom of game as background height const background = document.querySelector(&#39;#background&#39;); if (background) { this.bottom = background.offsetHeight; } } // Setter for Game Environment static setGameEnv() { // store previous for ratio calculatins on resize this.prevInnerWidth = this.innerWidth; this.prevBottom = this.bottom; // game uses available width and heith this.innerWidth = window.innerWidth; this.innerHeight = window.innerHeight; this.setTop(); // this.setBottom() is ignored for now as resize of background object determinse bottom } } export default GameEnv; . Game objects - assets/js/alienWorld/GameObject.js . This is a more collaboritive area. . I had a big focus on starting static gameObjectArray [ ] as this was critical to events and main game loop. A | The collision code in game object and binary capture of status and relative position were key element in the code design below. | . import GameEnv from &#39;./GameEnv.js&#39;; class GameObject { // container for all game objects in game static gameObjectArray = []; constructor(canvas, image, speedRatio) { this.x = 0; this.y = 0; this.frame = 0; this.canvas = canvas; this.ctx = canvas.getContext(&#39;2d&#39;); this.image = image; this.width = image.width; // Image() width (meta data) this.height = image.height; // Image() height this.collisionWidth = 0; this.collisionHeight = 0; this.aspect_ratio = this.width / this.height; this.speedRatio = speedRatio; this.speed = GameEnv.gameSpeed * this.speedRatio; this.collisionData = {}; // Add this object to the game object array so collision can be detected // among other things GameObject.gameObjectArray.push(this); } // X position getter and setter getX() { return this.x; } setX(x) { this.x = x; } // Y position getter and setter getY() { return this.y; } setY(y) { this.y = y; } /* Default action is no action * override when you extend for custom action */ collisionAction(){ // no action } /* Collision checks * uses GameObject isCollision to detect hit * calls collisionAction on hit */ collisionChecks() { for (var gameObj of GameObject.gameObjectArray){ if (this != gameObj ) { this.isCollision(gameObj); if (this.collisionData.hit){ this.collisionAction(); } } } } /* Collision detection method * usage: if (player.isCollision(platform)) { // action } */ isCollision(otherGameObject) { this.collisionData = { hit: (this.x + this.collisionWidth &gt; otherGameObject.x &amp;&amp; this.x &lt; otherGameObject.x + otherGameObject.collisionWidth &amp;&amp; this.y + this.collisionHeight &gt; otherGameObject.y &amp;&amp; this.y &lt; otherGameObject.y + otherGameObject.collisionHeight), touchPoints: { this: { object: this, top: (this.y &gt; otherGameObject.y), bottom: (this.y &lt; otherGameObject.setY), left: (this.x &gt; otherGameObject.x), right: (this.x &lt; otherGameObject.x) }, other: { object: otherGameObject, top: (this.y &lt; otherGameObject.y), bottom: (this.y &gt; otherGameObject.y), left: (this.x &lt; otherGameObject.x), right: (this.x &gt; otherGameObject.x) } } }; } } export default GameObject; . Migrating to OOP - Background . To migrate to this project it can begin by changingthe background to your preference. This code starts in index.htmol and simply change the image in the frontmatter. . Swap beteen alien_planet.jpg and alien_plant2.jpg . index.html simply change yml to point to your preference | . image: /images/alien_planet.jpg . Rework ADJUST in Background.js to crop out imperfections in image . assets/js/alienWorld/Background.js change adjust if you want to reduce height of image | . size() { // Update canvas size const ADJUST = 1 // visual layer adjust; alien_planet.jpg: 1.42, try 1 for others // ... code not shown xxx } .",
            "url": "http://localhost:4100/teacher_portfolio/2023/10/25/Alien_World-Tangibles_IPYNB_2_.html",
            "relUrl": "/2023/10/25/Alien_World-Tangibles_IPYNB_2_.html",
            "date": " • Oct 25, 2023"
        }
        
    
  
    
        ,"post86": {
            "title": "U7 | ArrayLists | Student P3",
            "content": "Unit 7: ArrayList . Mastering the concept of Java’s ArrayList. AP Exam weighting: 2.5-7.5%. . 7.1: ArrayList Intro . ArrayLists are dynamic, meaning their size can grow or shrink as needed, but arrays are static in size | Instead of creating a new array of a different size and copying the data from the initial array to the new one, we can use ArrayLists | . Arrays ArrayLists . Fixed Length | Resizable Length | . Fundamental Java feature | Part of a framework | . An object with no methods | Class with many methods | . Not as flexible | Designed to be very flexible | . Can store primitive data | Not designed to store primitives | .   | Slightly slower than arrays | .   | Need an import statement | . In order to use the ArrayList class, the ArrayList class needs to be imported from the java util package. This can be done by writing import java.util.ArrayList at the top of the class file. . import java.util.ArrayList; // Import the ArrayList class // Declare and initialize an ArrayList of integers ArrayList&lt;Integer&gt; numbersList = new ArrayList&lt;&gt;(); . ArrayList objects are created in the same fashion as other object classes. The primary difference with ArrayLists is that the element type of the ArrayList must be specified using angled bracket &lt;&gt;. In this example, E represents the data type that will be used in the ArrayList. This can be replaced by an object data type: . ArrayList&lt;E&gt; list = new ArrayList&lt;E&gt;(); . We can actually declare ArrayLists without specifying the type that will be included in the ArrayList, but specifying the data type is smarter because it allows the compiler to find errors before run time, so its more efficient and easy to spot errors. . ArrayList list = new ArrayList(); . Quick lil popcorn hack . Create 2 ArrayLists, 1 called studentName and 1 called studentAge . public class Student { public static void main(String[] args) { //Initialize your ArrayLists } } . 7.2: ArrayList Methods . Learning Objectives . Students will be able to represent collections of related object reference data using ArrayList objects. . Essential Knowledge . Iteration statements provide a means to access all the elements stored within an ArrayList. This process is referred to as “traversing the ArrayList.” . | The following ArrayList methods, including what they do and when they are used, are part of the Java Quick Reference: . int size() - Returns the count of elements within the list. | boolean add(E obj) - Appends the object obj to the end of the list and returns true. | void add(int index, E obj) - Inserts obj at the specified index, shifting elements at and above that position to the right (incrementing their indices by 1) and increasing the list’s size by 1. | E get(int index) - Retrieves the element at the given index in the list. | E set(int index, E obj) - Replaces the element at the specified index with obj and returns the previous element at that index. | E remove(int index) - Deletes the element at the specified index, shifting all subsequent elements one index to the left, reducing the list’s size by one, and returning the removed element. | . | Java allows the generic ArrayList&lt;E&gt;, where the generic type E specifies the type of element. . | When ArrayList&lt;E&gt; is specified, the types of the reference parameters and return type when using the methods are type E. . | ArrayList&lt;E&gt; is preferred over ArrayList because it allows the compiler to find errors that would otherwise be found at runtime. . | . Size of the ArrayList . int size(); : Returns the number of elements in the list. | . Consider the following code: . ArrayList&lt;Integer&gt; a1 = new ArrayList&lt;&gt;(); System.out.println(a1.size()); . 0 . Adding Items to an ArrayList . boolean add(E obj); : Appends obj to the end of the list and returns true. | void add(int index, E obj) : Inserts obj at position index, as long as index is within the list’s length. It moves each element in the list 1 index higher and adds 1 to the list’s size. | . Consider the following code: . ArrayList&lt;Double&gt; a2 = new ArrayList&lt;&gt;(); a2.add(1.0); a2.add(2.0); a2.add(3.0); a2.add(1, 4.0); System.out.println(a2); . [1.0, 4.0, 2.0, 3.0] . Let’s Look at an Example . Consider the following code: . ArrayList&lt;String&gt; h = new ArrayList&lt;&gt;(); h.add(&quot;Hello&quot;); h.add(&quot;Hello&quot;); h.add(&quot;HeLLO&quot;); h.add(&quot;Hello&quot;); h.add(1, &quot;Hola&quot;); h.add(26.2); h.add(new String(&quot;Hello&quot;)); h.add(false); . Now, consider this code: . ArrayList&lt;String&gt; g = new ArrayList&lt;&gt;(); g.add(&quot;Hello&quot;); g.add(&quot;Hello&quot;); g.add(&quot;HeLLO&quot;); g.add(&quot;Hello&quot;); g.add(1, &quot;Hola&quot;); g.add(new String(&quot;Hello&quot;)); System.out.println(g); . [Hello, Hola, Hello, HeLLO, Hello, Hello] . Question: Why does this code work? . Deleting Items from an ArrayList . E remove(int index) : Removes the element at position index, and moves the elements at position index + 1 and higher to the left. It also subtracts one from the list’s size. The return value is the element formerly at position index. . // If you are confused of what list g is, look back at the previous code. g.remove(3); String former = g.remove(0); System.out.println(former); . Hello . Updating Items in an ArrayList . E set(int index, E obj) : Replaces the element at position index with obj and returns the element formerly at position index. . String helloFormer = g.set(1, &quot;Bonjour&quot;); System.out.println(helloFormer); System.out.println(g); . Hello [Hola, Bonjour, Hello, Hello] . Accessing Items in an ArrayList . E get(int index) Returns the element at position index in the list. . String hello = g.get(3); System.out.println(hello); System.out.println(g); . Hello [Hola, Bonjour, Hello, Hello] . Passing an ArrayList as a Method Parameter . The only time that it is wise to use ArrayList instead of ArrayList&lt;E&gt; is when it is as a function parameter and it is only using ArrayList&lt;&gt;.get(E) or ArrayList&lt;&gt;.size(). Consider the following code: . private void accessOnly(ArrayList arr) { if (arr.size() &gt; 0) { System.out.println(arr.get(0)); // Change the index to the one you want to access } else { System.out.println(&quot;Array is empty&quot;); } } ArrayList&lt;Integer&gt; myList = new ArrayList&lt;Integer&gt;(); accessOnly(myList); . Array is empty . Returning an ArrayList from a Method . In order for you to return an ArrayList, the data type must be specified, and the return type must be the same as the return value. Consider the following code: . private ArrayList&lt;String&gt; returnTheSame() { ArrayList&lt;String&gt; arr = new ArrayList&lt;String&gt;(); // Initialize the ArrayList arr.add(&quot;Hello&quot;); return arr; } ArrayList&lt;String&gt; result = returnTheSame(); System.out.println(result); . [Hello] . Hacks . The learning objective is that “Students will be able to represent collections of related object reference data using ArrayList objects.” What does this mean to you? . | Answer the following questions: . Look back at Size of the ArrayList. What does the code output and why? | Look back at Adding items to an ArrayList. What does the code output and why? What type of function is void, and what will be the return value? | Look back at Example 1. What two lines did we remove? Why? | If an ArrayList is being used as a parameter, what are the only two methods I can use from it? What would happen if I tried to use any other methods? | . | Using the Hack Helper, write code that will: . Add 2 items to the list. | Remove an item from the list anywhere of the user’s choice. | Replace am item anywhere in the list of the user’s choice. | Get the first and last element of the list, no matter the length. | Return the items added, removed, replaced, and the list’s size, in one string. | . | . Hack Helper . public class ArrayListMethodsExample { private String manipulateList(/* You can put parameters here if you want to... */) { // Your code here } public static void main(String[] args) { ArrayList&lt;Integer&gt; nums = new ArrayList&lt;&gt;(); ArrayListMethodsExample example = new ArrayListMethodsExample(); String output = example.manipulateList(); System.out.println(output); } } . 7.3: Traversing Arraylists . Learning Objectives: . With an Arraylist you can traverse objects using a for or while loop. . | Traversing objects is similar to iterating through objects. . | . Essential Knowledge: . Iteration statements can be used to accsess all the elements in an Arraylist. This is called traversing the Arraylist. . | Deleting elements during a traversal of an Arraylist requires special techniques to avoid skiping elements. This is called traversing the Arraylist. . | The indicies of an Arraylist start at 0; If you try to use any value lower than 0, you will get an ArrayIndexOutOfBoundsException error . | . import java.util.ArrayList; import java.util.List; public class Main { public static void main(String[] args) { ArrayList&lt;String&gt; roster = new ArrayList&lt;&gt;(); roster.add(&quot;Hello&quot;); roster.add(&quot;World&quot;); roster.add(&quot;Java&quot;); int sum = 0; for (int i = 0; i &lt; roster.size(); i++) { String element = roster.get(i); if (element != null) { sum += element.length(); } } System.out.println(sum); } } . Breakdown: . We are first declaring a new arraylist and adding a few elements. . | Next, we set the “sum” variable as 0. . | We set a for loop to traverse through the arraylist, iterating through all the indices in the arraylist and adding up the lengths of all the values. . | Lastly, we print it out. . | . Loop Conditions: . There are a few diffrent loop conditions you can use to traverse an Arraylist: | . First, there are three major parts of a for loop: Initialisation, in which you declare the index, can be modified to change where you want to traverse from. . Boolean condition, in which you declare the stop condition, can be modified in order to change the index you want to stop traversing in. . Update, in which you declare how many indexes to go through, can be modified to skip certain indicies and traverse in a certain direction. . Practice: . Suppose we have an arraylist named grades, and we want to remove the entries that are lower than 70. replace the question marks with code to solve the problem: . import java.util.ArrayList; import java.util.List; public class Main { public static void main(String[] args) { ArrayList&lt;int&gt; grades = new ArrayList&lt;&gt;(); grades.add(68.9); grades.add(71); grades.add(100); grades.add(80); for(int i = 0; i&lt;???; i???){ if(grades.get(i)&lt;70){ ??? } } System.out.println(grades); } } . Using Enhanced For-Loop With Traversing: . Using Enhanced for loop is easier to read and write and is also more concise and avoids errors. . | Indexes are not explicitly used and copies of the current element are made at each iteration. . | . import java.util.ArrayList; import java.util.List; public class Main { public static void main(String[] args) { List&lt;String&gt; roster = new ArrayList&lt;&gt;(); roster.add(&quot;Hello&quot;); roster.add(&quot;World&quot;); roster.add(&quot;Java&quot;); // Using an enhanced for loop to iterate through the ArrayList for (String element : roster) { System.out.println(element); } } } . Common mistakes: . Using the Wrong Data Type: Ensure that you declare your ArrayList with the correct data type. Using the wrong data type can lead to type mismatches and errors. . | Incorrect Indexing: Be cautious when using a standard for loop. Off-by-one errors or accessing elements that don’t exist can lead to runtime exceptions. . | Modifying the List During Iteration: Modifying an ArrayList (adding or removing elements) while iterating over it can lead to a ConcurrentModificationException. To avoid this, use an Iterator or create a copy of the list if modifications are needed. . | Not Checking for Null Elements: When using enhanced for loops or iterators, check for null elements if there’s a possibility that your list contains them to avoid NullPointerExceptions. . | Inefficient Searching: If you need to find a specific element, avoid using a linear search within a loop. Use appropriate methods like contains() or indexOf() to find elements efficiently. . | . Hacks: . Create a scenario which requires the use of arraylist traversal and create code to solve it. | Extra points to creative scenarios | 90% credit to any working code and scenario | 80% credit to incomplete code if you provide explanation of it | -10% deduction for late submition | . 7.4: Developing Algorithms Using ArrayLists . Learning Objectives . In the context of ArrayList objects, this module aims to teach the following skills: . a. Iterating through ArrayLists using for or while loops. . b. Iterating through ArrayLists using enhanced for loops. . In the realm of algorithms, within the context of specific requirements that demand the utilization of ArrayList traversals, students will be able to: . Recognize established algorithms. | Customize existing algorithms. | Create new algorithms. | . Essential Knowledge . Iteration statements provide a means to access all the elements stored within an ArrayList. This process is referred to as “traversing the ArrayList.” . | The following methods related to ArrayLists, their functions, and appropriate use are covered in the Java Quick Reference: . int size() - Returns the count of elements within the list. | boolean add(E obj) - Appends the object obj to the end of the list and returns true. | void add(int index, E obj) - Inserts obj at the specified index, shifting elements at and above that position to the right (incrementing their indices by 1) and increasing the list’s size by 1. | E get(int index) - Retrieves the element at the given index in the list. | E set(int index, E obj) - Replaces the element at the specified index with obj and returns the previous element at that index. | E remove(int index) - Deletes the element at the specified index, shifting all subsequent elements one index to the left, reducing the list’s size by one, and returning the removed element. | . | There exist established algorithms for ArrayLists that make use of traversals to: . Insert elements. | Remove elements. | Apply the same algorithms commonly used with 1D arrays. | . | . Popcorn Hacks: . Before you uncomment the code and run it, guess what the code will do based on what you’ve learned. . Let’s Look at an Example (Example 1) . public class ArrayListExample { private double findMax(double[] values) { // double max = values[0]; //for (int index = 1; index &lt; values.length; index++) { // if (values[index] &gt; max) { // max = values[index]; // } //} // return max; } public static void main(String[] args) { double[] nums = {1.0, 3.0, 2.0, 2.0, 1.0, 69.0, 2.0, 4.0, 6.0, 2.0, 5.0, 10.0}; ArrayListExample example = new ArrayListExample(); double max = example.findMax(nums); System.out.println(&quot;Maximum value: &quot; + max); } } ArrayListExample.main(null); . Take a closer look at the findMax() method. It takes in a list of doubles as parameters. It will then use a for loop to find the maximum value in the list. Now, using what we know, can we replace the list of doubles with an ArrayList of Doubles? We sure can! Take a look at how we can use ArrayList to do just that: . public class ArrayListExample { private double findMax(ArrayList&lt;Double&gt; values) { // double max = values.get(0); //for (int index = 1; index &lt; values.size(); index++) { // if (values.get(index) &gt; max) { // max = values.get(index); // } //} //return max; } public static void main(String[] args) { ArrayList&lt;Double&gt; nums = new ArrayList&lt;&gt;(); nums.add(1.0); nums.add(3.0); nums.add(2.0); nums.add(2.0); nums.add(1.0); nums.add(69.0); nums.add(2.0); nums.add(4.0); nums.add(6.0); nums.add(2.0); nums.add(5.0); nums.add(10.0); ArrayListExample example = new ArrayListExample(); double max = example.findMax(nums); System.out.println(&quot;Maximum value: &quot; + max); } } ArrayListExample.main(null); . Let’s Look at an Example (Example 2) . Take a look at this code: . public class ArrayListExample { private int findMin(int[] values) { //int min = Integer.MAX_VALUE; //for (int currentValue : values) { // if (currentValue &lt; min) { // min = currentValue; // } //} return min; } public static void main(String[] args) { int[] nums = {420, 703, 2034, 582, 1047, 4545}; ArrayListExample example = new ArrayListExample(); int min = example.findMin(nums); System.out.println(&quot;Minimum value: &quot; + min); } } ArrayListExample.main(null); . Now, can we use ArrayLists to make this code better? We sure can! Take a look at the new and improved code that uses ArrayLists: . public class ArrayListExample { private int findMin(ArrayList&lt;Integer&gt; values) { //int min = Integer.MAX_VALUE; //for (int currentValue : values) { // if (currentValue &lt; min) { // min = currentValue; // } //} return min; } public static void main(String[] args) { ArrayList&lt;Integer&gt; nums = new ArrayList&lt;&gt;(); nums.add(420); nums.add(703); nums.add(2034); nums.add(582); nums.add(1047); nums.add(4545); ArrayListExample example = new ArrayListExample(); int min = example.findMin(nums); System.out.println(&quot;Minimum value: &quot; + min); } } ArrayListExample.main(null); . Hacks . Answer the questions: Look back at the examples. What’s similar? What’s different? | Why do we use ArrayList? Why not just regular lists? | . | Demonstrate at least two ArrayList methods that aren’t ArrayList&lt;&gt;.size() and ArrayList&lt;&gt;.get(). | Write the method findSum() using the Hack Helper and incorporating ArrayList. | . Hack Helper . public class ArrayListHacks { private int findSum(ArrayList&lt;Integer&gt; values) { // Your code here return 0; } public static void main(String[] args) { ArrayList&lt;Integer&gt; nums = new ArrayList&lt;&gt;(); nums.add(0); nums.add(1); nums.add(2); nums.add(3); nums.add(5); nums.add(8); ArrayListHacks hacks = new ArrayListHacks(); hacks.findSum(nums); } } ArrayListHacks.main(null); . 7.5 Searching . Learning Objectives . Apply sequential/linear search algorithms to search for specific information in array or arraylist objects | . Essential Knowledge: . Sequential/linear search alogorithms check each element in order untill the desired value is found or all elementsin the array or arraylist have been checked | . Search Process . Linear searching fits a standard for loop perfectly! We need to specify each element, one at a time, and do not need to track the index after execution . | Inside the for loop, we retrieve the value from the structure at the specified index and compare it to the searched value . | If it matches we return the index, otherwise we keep looking! . | . Searching Linear Structures . Finding information with a computer is something we need to know how to do. Linear search algorithms are BEST used when we do not have any idea about the order of the data and so we need to look at each element to determine if what we are looking for is in fact inside the array or ArrayList. . When searching, we do need to remember that different data types require comparisons! . When looking at int values, the == operator is the tool to use! | When searching for a double value, we need to make sure the value is close enough by doing some math! | Object instances should always use the .equals(otheThing) method to check for a match! | . Searching an ArrayList of Double . public int where(double magicNumber, ArrayList&lt;Double&gt; realNumbers, double delta) { for (int index = 0; index &lt; realNumbers.size(); index++) { if (Math.abs(magicNumber - realNumbers.get(index)) &lt; delta) { return index; } } return -1; } . Explanation . The where function searches through a list of numbers to find and return the position of the first number that is very close to a specific target number, known as magicNumber. If no number in the list is close enough to the target number, the function returns -1, indicating that no match was found. . Searching an ArrayList of book for a String . public int findTheWord(String searchedPhrase, ArrayList&lt;Book&gt; myBooks) { for (int index = 0; index &lt; myBooks.size(); index++) { Book currentBook = myBooks.get(index); String currentPhrase = currentBook.getDescription(); if(currentPhrase.equals(searchedPhrase)) { return index; } } return -1; } . Explanation . This little code snippet is like a treasure hunt through a collection of books; it’s on a mission to find the one book whose description matches exactly with a special phrase you’re looking for. If it finds the perfect match, it’ll excitedly tell you where it is in the collection, but if not, it’ll sadly let you know with a -1 that the search was a bust. . Questions . Should we use == when looking for an Object? . No, that only will return true if the variable and the element stored at that index point to the same memory, are aliases of each other . Why did we subtract the double values? . To make sure that the lack of preciosin that is inherit in the data type is handled within our code . Why does order sometimes matter? . When searching for a value to remove from a list, if we search forward we have to make sure to adjust the loop control variable, or we might skip what we are looking for when removing! . 7.6 Sorting . Learning Objectives . Apply selection sort and insertion sort algorithms to sort the elements of array or ArrayList objects. | . Essential Knowledge: . Selection sort and insertion sort are iterative sorting algorithms that can be used to sort elements in an array or ArrayList. | . Selection Sort . This is one of the easiest sorts to demonstrate. The selection sort identifies either the maximum or minimum of the compared values and iterates over the structure checking if the item stored at the index matches that condition, if so, it will swap the value stored at that index and continue. This implementation uses a helper method to perform the swap operation since variables can hold only one value at a time! . Example: . // with normal arrays for (int outerLoop = 0; outerLoop &lt; myDucks.length; outerLoop ++) { int minIndex = outerLoop; for (int inner = outerLoop +1; inner &lt; myDucks.length; inner++) { if (myDucks[inner].compareT(myDucks[minIndex]) &lt; 0) { minIndex = inner; } } if (minIndex != outerLoop) { swapItems(minIndex, outerloop, myDucks); } } // with array lists for (int outerLoop = 0; outerLoop &lt; myDucks.size(); outerLoop++) { int minIndex = outerLoop; for (int inner = outerLoop + 1; inner &lt; myDucks.size(); inner++) { if (myDucks.get(inner).compareT(myDucks.get(minIndex)) &lt; 0) { minIndex = inner; } } if (minIndex != outerLoop) { swapItems(minIndex, outerLoop, myDucks); } } /* This code performs a selection sort on the myDucks ArrayList, ordering its elements based on the compareT method. During each iteration of the outer loop, it finds the index of the minimum element in the unsorted portion of the list and swaps it with the first element of the unsorted portion. */ . Insertion Sort Algorithm . The insertion sort is characterized by building a sorted structure as it proceeds. It inserts each value it finds at the appropriate location in the data structure. This is often accomplished by using a while loop as the inner loop. . Example: . for (int outer = 1; outer &lt; randomList.size(); outer++) { DebugDuck tested = randomList.get(outer); int inner = outer -1; while ( innter &gt;= 0 &amp;&amp; tested.compareTo(randomList.get(inner)) &lt; 0) { ramdomList.set(inner +1, randomList.get(inner)); inner--; } randomList.set(inner +1, tested) } // This code arranges a list of DebugDuck objects in order using the insertion sort method, // by moving through the list and putting each item in its proper place one by one. . 7.7: Ethical Issues around Data Collection . Learning Objectives: . Explaining the risks of privacy from collecting and storing personal data on computer systems. | . Essential Knowledge: . When using the computer, personal privacy is at risk. Programmers should attempt to safeguard personal privacy. | . Privacy Protection: . A simple way to protect privacy is to delete personal user info after done using it. | Another way is to minimize the amount of data used by the program in order to protect privacy. | Anonymizing personal data via the object method hashCode() is another way. | . Hacks: . Think of other ways to safeguard user privacy (any other method not listed is fine) | Extra points to creative solutions | 90% credit to any solution | 80% credit to incomplete solution (how did you do that?) | -10% deduction for late submition | . Grading: . 7.2 Hacks (0.19) | 7.3 Hacks (0.19) | 7.4 Hacks (0.19) | 7.7 Hacks (0.19) | Popcorn Hacks (0.19) | Anything else creative or above-and-beyond showing your understanding of ArrayLists (0.05) | .",
            "url": "http://localhost:4100/teacher_portfolio/2023/10/24/java_arraylist_P3_IPYNB_2_.html",
            "relUrl": "/2023/10/24/java_arraylist_P3_IPYNB_2_.html",
            "date": " • Oct 24, 2023"
        }
        
    
  
    
        ,"post87": {
            "title": "U7 | ArrayLists | Student P1",
            "content": "7.1 Intro to ArrayLists . An ArrayList is a utility from the java.util package . | To declare a variable, use the format ArrayList&lt;DataType&gt; variableName = new ArrayList&lt;DataType&gt;(initial number of elements); . | Unlike arrays, ArrayLists are mutable (can be resized after initialization) . | Functions as a more versatile array . Does technically take more space than an array but for the purposes of CSA it shouldn’t matter | . | . Difference between Array and Arraylist: . Array Arraylist . Fixed length | Resizable length | . Fundamental Java Feature | Part of a Framework | . An object with no methods | A Class with many methods | . Not very flexible | Flexible | . Can store primitives | Cannot store primitives - stores objects instead | . Example of Array: Basketball players on court . Example of Arraylist: Dodgeball players on court . Question . When should we use ArrayLists vs Arrays? . Answer: . Showing how ArrayLists are mutable: . import java.util.ArrayList; class ArrayListExample { public static void main(String[] args) { // Size of ArrayList int n = 5; // Declaring ArrayList with initial size n ArrayList&lt;Integer&gt; arr1 = new ArrayList&lt;Integer&gt;(n); // Declaring ArrayList without initial size ArrayList&lt;Integer&gt; arr2 = new ArrayList&lt;Integer&gt;(); // Printing ArrayList System.out.println(&quot;Array 1:&quot; + arr1); System.out.println(&quot;Array 2:&quot; + arr2); // Appending new elements to the end of the list for (int i = 1; i &lt;= n; i++) { arr1.add(i); arr2.add(i); } // Printing ArrayList System.out.println(&quot;Array 1:&quot; + arr1); System.out.println(&quot;Array 2:&quot; + arr2); } } ArrayListExample.main(null); . 7.1 Popcorn Hack . Create an ArrayList that stores the integers 5, 8, 14, 18, 24, 39, and 56 and only print the numbers that are divisible by 3. . import java.util.ArrayList; public class DivisibleBy3 { public static void main(String[] args) { // declare variable and add integers System.out.println(&quot;Numbers divisble by 3:&quot;); // write code here } } DivisibleBy3.main(null); . Vocabulary Refresher . An element is a single value in the array . | The **index** of an element is the position of the element in the array or ArrayList . The first index of an ArrayList, like arrays is also 0 | . | The length of an array is the number of elements in the array. . | . 7.2 Arraylist Methods . add() Adding a value to the ArrayList | Can be used to create an element at a specific index in the ArrayList - when this happens, everything at the positions of index and higher are moved to the right by 1 | . | get() Get the value of an index in the ArrayList | . | set() Change the value at an index in the ArrayList | . | remove() Delete the value at in index in the ArrayList | . | clear() Remove all values in an ArrayList | . | size() Get the length of the ArrayList | . | . import java.util.ArrayList; public class Test { public static void main(String[] args) { ArrayList&lt;Integer&gt; test = new ArrayList&lt;&gt;(); System.out.println(test.size()); test.add(1); //index 0 test.add(2); // index 1 test.add(3); // index 2 test.add(4); // index 3 test.add(5); // index 4 test.add(6); // index 5 test.add(7); // index 6 System.out.println(test); int i = test.set(1, 200); // prints what used to be at index 1 int x = test.remove(4); // prints what was removed System.out.println(i); System.out.println(x); System.out.println(test); } } Test.main(null); . Printing an ArrayList . You can’t print an array without a loop | You can print ArrayLists with just one System.out.println() | . import java.util.ArrayList; public class Main { public static void main(String[] args) { ArrayList&lt;String&gt; arr = new ArrayList&lt;String&gt;(); //initializes the arraylist object arr.add(&quot;I agree&quot;); arr.add(0, &quot;You agree&quot;); System.out.println(arr); arr.set(0, &quot;They agree&quot;); arr.add(&quot;I disagree&quot;); arr.remove(2); System.out.println(); System.out.println(arr); } } Main.main(null); . 7.2 Popcorn Hack . Finish the code below so that all duplicates in the ArrayList are removed. . import java.util.Arraylist; public class RemoveDuplicates { public static void main(String[] args) { ArrayList&lt;Integer&gt; arr = new ArrayList&lt;&gt;(); // creating new arraylist of integers // adding integers to the arraylist arr.add(1); arr.add(7); arr.add(9); arr.add(13); arr.add(3); arr.add(7); arr.add(9); arr.add(2); // add your code here } } RemoveDuplicates.main(null); . Array to ArrayList . You can use the Arrays.asList() method to convert an existing array to an ArrayList | . public class ArrayListFromArray { public static void main(String[] args) { String[] names = {&quot;Kim&quot;, &quot;Tay&quot;, &quot;Tran&quot;, &quot;Ethan&quot;, &quot;Sheng&quot;, &quot;Raymond&quot;}; ArrayList&lt;String&gt; namesList = new ArrayList&lt;String&gt;(Arrays.asList(names)); System.out.println(namesList); } } ArrayListFromArray.main(null); . 7.3 Traversing ArrayLists . You can traverse an ArrayList the same way as an array, with some exceptions: . | Deleting elements in the ArrayList while iterating over the ArrayList needs to be carefully done | Using an enhanced for loop can result in the ConcurrentModificationException error Do not delete elements in an ArrayList while using an enhanced for loop | . | . public static void main(String[] args) { ArrayList&lt;Integer&gt; arr = new ArrayList&lt;&gt;(); arr.add(1); arr.add(7); arr.add(9); arr.add(13); arr.add(3); arr.add(7); arr.add(9); arr.add(2); for (int i = 0; i &lt; arr.size(); i++) //for loop, would work the same as with an array { System.out.print(arr.get(i) + &quot; &quot;); } System.out.println(); for (Integer i : arr) //enhanced for loop without removing, same as an array { System.out.print(i + &quot; &quot;); } } main(null); . public static void main(String[] args) { ArrayList&lt;Integer&gt; arr = new ArrayList&lt;&gt;(); arr.add(1); arr.add(7); arr.add(9); arr.add(13); arr.add(3); arr.add(7); arr.add(9); arr.add(2); for (Integer i : arr) //throws a ConcurrentModificationException { if (i % 2 == 0) { arr.remove(i); } } } main(null); . Popcorn Hack . Traverse the following ArrayList using a loop. Remove each element that is a multiple of 4. . public static void main(String[] args) { ArrayList&lt;Integer&gt; arr = new ArrayList&lt;&gt;(); arr.add(1); arr.add(7); arr.add(9); arr.add(80); arr.add(13); arr.add(3); arr.add(7); arr.add(8); arr.add(2); arr.add(16); } main(null); . 7.4 Developing Algorithms Using ArrayLists . For the most part, algorithms in ArrayLists and arrays are very similar. | . Popcorn Hacks . Find the maximum, minimum, and sum of an ArrayList. . public static void main(String[] args) { ArrayList&lt;Integer&gt; arr = new ArrayList&lt;&gt;(); arr.add(1); arr.add(7); arr.add(9); arr.add(80); arr.add(13); arr.add(3); arr.add(7); arr.add(8); arr.add(2); arr.add(16); } . 7.5 Searching . Searching in an ArrayList allows you to find an element, if it exists, an index is returned | All that is needed to search any linear structure is a standard for loop and if block | Typically, if the element is not found then -1 is returned, however a boolean value can also be used | . Example of Linear Search . import java.util.ArrayList; public class LinearSearch { public static int linearSearch(ArrayList&lt;Integer&gt; list, int target) { for (int i = 0; i &lt; list.size(); i++) { if (list.get(i) == target) { return i; // return index of target element if found } } return -1; // return -1 if the target element is not in the array } public static void main(String[] args) { ArrayList&lt;Integer&gt; numbers = new ArrayList&lt;&gt;(); numbers.add(5); numbers.add(10); numbers.add(15); numbers.add(20); numbers.add(25); int target = 15; // target of search int result = linearSearch(numbers, target); if (result != -1) { System.out.println(target + &quot; found at index &quot; + result); } else { System.out.println(target + &quot; not found in the ArrayList.&quot;); } } } LinearSearch.main(null); . The linear search algorithm searches for a specific target value (15 in this example) within the ArrayList by iterating through its elements one by one | It checks if the element at the current index (list.get(i)) is equal to the target value | If a match is found, the index is returned; else, it continues the loop until the end of the ArrayList is reached | . Popcorn Hack . Finish the code below, write code that checks if favoriteFlavor is in chipsBag | Using a loop, print a message saying if favoriteFlavor is in the bag | . import java.util.ArrayList; import java.util.Scanner; public class FavoriteChip { public static void main(String[] args) { ArrayList&lt;String&gt; chipsBag = new ArrayList&lt;&gt;(); Scanner scanner = new Scanner(System.in); chipsBag.add(&quot;BBQ&quot;); chipsBag.add(&quot;Cheddar&quot;); chipsBag.add(&quot;Salt and Pepper&quot;); System.out.print(&quot;Enter your favorite chip flavor: &quot;); String favoriteFlavor = scanner.nextLine(); // implement your own search logic here } } FavoriteChip.main(null); . 7.6 Sorting . There are 2 main sorting algorithms that Collegeboard focuses on, selection sort and insertion sort | . Selection sort . Selection sort divides the ArrayList into two “subarrays,” the first is sorted and the second is unsorted. | Selection sort is easy to implement and is useful for sorting through small datasets. | . Example of Selection sort . import java.util.ArrayList; public class SelectionSort { public static void main(String[] args) { ArrayList&lt;Integer&gt; arrayList = new ArrayList&lt;&gt;(); arrayList.add(64); arrayList.add(25); arrayList.add(12); arrayList.add(22); arrayList.add(11); selectionSort(arrayList); System.out.println(&quot;Sorted ArrayList: &quot; + arrayList); } public static void selectionSort(ArrayList&lt;Integer&gt; arr) { int n = arr.size(); for (int i = 0; i &lt; n - 1; i++) { int minIndex = i; for (int j = i + 1; j &lt; n; j++) { if (arr.get(j) &lt; arr.get(minIndex)) { minIndex = j; } } // Swap the found minimum element with the element at index i int temp = arr.get(i); arr.set(i, arr.get(minIndex)); arr.set(minIndex, temp); } } } SelectionSort.main(null); . Start with an ArrayList, [64, 25, 12, 22, 11] . | We want to arrange these numbers in order from smallest to largest, like [11, 12, 22, 25, 64] . | selectionSort starts at the beginning of the list and looks for the smallest number in the whole list. In this case, it’s 11 . | It swaps 11 with the first number in the list (which is 64) so that 11 comes first . | Now, the list looks like [11, 25, 12, 22, 64] . | The function repeats this process for the remaining numbers, finding the next smallest (which is 12) and putting it in the second position . | This continues until all numbers are in order . | The final sorted list is [11, 12, 22, 25, 64] . | . Insertion Sort . In insertion sort, we assume that the first element is already sorted | The second element is then taken and is either inserted before the first element or kept in place to make the first 2 elements sorted | Insertion sort is adaptive as it does not need to perform as many comparisons and swaps as selection sort. If you expect the data to be partially ordered, insertion sort is the better option. | . Example of Insertion Sort . import java.util.ArrayList; public class InsertionSort { public static void insertionSort(ArrayList&lt;Integer&gt; arr) { int n = arr.size(); for (int i = 1; i &lt; n; i++) { int key = arr.get(i); int j = i - 1; // Move elements of arr[0..i-1] that are greater than key // to one position ahead of their current position while (j &gt;= 0 &amp;&amp; arr.get(j) &gt; key) { arr.set(j + 1, arr.get(j)); j = j - 1; } arr.set(j + 1, key); } } public static void main(String[] args) { ArrayList&lt;Integer&gt; arrayList = new ArrayList&lt;&gt;(); arrayList.add(12); arrayList.add(11); arrayList.add(13); arrayList.add(5); arrayList.add(6); System.out.println(&quot;Original ArrayList: &quot; + arrayList); insertionSort(arrayList); System.out.println(&quot;Sorted ArrayList: &quot; + arrayList); } } InsertionSort.main(null); . Start with an ArrayList of numbers, [12, 11, 13, 5, 6] . | We want to arrange these numbers in order from smallest to largest, like [5, 6, 11, 12, 13] . | insertionSort starts with the second element (11) . | It compares 11 to the elements on its left. It finds that 11 is smaller than 12, so it shifts 12 one position to the right to make space for 11 . | The ArrayList now looks like [11, 12, 13, 5, 6] . | The function repeats this process for each element in the list. It moves 13 to the right place and then 5 and 6 . | After sorting all the elements, the ArrayList is now sorted in ascending order: [5, 6, 11, 12, 13] . | . 7.6 Popcorn Hack . Given an ArrayList of String objects, sort the following ArrayLists on ascending order of word length. . 1) . import java.util.ArrayList; public class SortByLength { public static void main(String[] args) { ArrayList&lt;String&gt; words = new ArrayList&lt;&gt;(); // creating new arraylist // adding words to the list words.add(&quot;theater&quot;); words.add(&quot;connection&quot;); words.add(&quot;seasonal&quot;); words.add(&quot;feast&quot;); words.add(&quot;meeting&quot;); // add code for sorting by length here } } SortByLength.main(null); . 2) . import java.util.ArrayList; import java.util.Collections; import java.util.Comparator; class Student { String name; double gpa; public Student(String name, double gpa) { this.name = name; this.gpa = gpa; } } public class SortByGPA { public static void main (String[] args) { ArrayList&lt;Student&gt; students = new ArrayList&lt;&gt;(); // creating new arraylist to store student objects // add student objects to ArrayList // write code for sorting here } } SortByGPA.main(null); . 7.7 Ethical Issues Around Data Collection . When collecting data in a Java program, data security is VERY IMPORTANT. This involves any program that deals with . Necessary personal information | Information that is associated with results | . Removing Data . When collected data is no longer needed, be sure to remove the information from your application | Removal of unnecessary data reduces risk of data breaches and protects sensitive information from unauthorized access | . Anonymizing Data . When collecting user information, avoid asking for private information to identify users ie. phone numbers, social security numbers, etc. | . Collegeboard Example . Scanner inputScanner = new Scanner(System.in); String fullName = inputScanner.nextLine(); // implementation of code int identifier = fullName.hashCode(); fullName = null; // further implementation . In this example… . The user would type their full name in which it is used in the program | After, the identifier equates to the hash value of the original string and the fullName is set to null | Using the hash value instead of the actual name adds a degree of anonymity for the user | Turning the fullName to null also indicates that the code no longer needs to store the name of the user | . This minimizes the possible impact of the data by reducing the likelihood of unintentional exposure of the user’s name within the program. . Hacks for Unit 7 . Complete all questions and popcorn hacks | Write a Java program that creates an ArrayList of integers. Create methods for adding, removing, setting, getting, etc numbers and also sort the list. Then, utilize user input to determine which methods will actually be run and enable the user to also determine the specific index that a number will be added, removed. | . Challenge . You are given an ArrayList of Student objects. Each Student has a name (String) and a GPA (double). Create a program that sorts the Student objects in descending order of GPA. .",
            "url": "http://localhost:4100/teacher_portfolio/2023/10/24/java_arraylist_P1_IPYNB_2_.html",
            "relUrl": "/2023/10/24/java_arraylist_P1_IPYNB_2_.html",
            "date": " • Oct 24, 2023"
        }
        
    
  
    
        ,"post88": {
            "title": "P2 Developing Procedures",
            "content": "What is a procedure? . A procedure is a named group of programming instructions with a purpose and is called to perform a task based on the commands. . It is extremely important to name the procedure something that describes the purpose, method, or function because it makes it easier for others to read your code and for yourself when you revisit old code. Additionally, when there is an effefctively named procedure, it is much simpler to correct bugs and errors. . Which code is better? . . Hack 1: Naming Procedures . Rename the procedure below with a name that better describes the purpose of the procedure. . The procedure is currently just called “procedure.” It compares the current grade with the existing quiz grade and replaces the original score if the current is higher. . def procedure(quiz_grade, current_points, total_points): # calculate current grade current_grade = (current_points / total_points) * 100 if current_grade &gt; quiz_grade: quiz_grade = current_grade return quiz_grade quiz_grade = 85 # Initial quiz grade current_points = 90 # Current points earned total_points = 100 # Total points for the quiz new_quiz_grade = procedure(quiz_grade, current_points, total_points) print(f&quot;Old quiz grade: {quiz_grade}&quot;) print(f&quot;New quiz grade: {new_quiz_grade}&quot;) . Function Parameters . A function can have one or more parameters that can be passed into the function as local variables to use in the procedural function. The variables that can be passed in the function are called parameters. The data passed in when the function is called are called arguments. . Parameters: input values of a procedure . Arguments: specify the parameter values when a procedure is called . def triangle_area(length, width): # parameters passed in two variables: length and width, returns area area = 1/2 * length * width # calculates area from the length and width print(&quot;length:&quot;, length) print(&quot;width:&quot;, width) return area # returns area # examples print(triangle_area(3, 4)) # the arguments here are 3 and 4, which becomes the parameters length and width respectively print(triangle_area(6, 8)) print(triangle_area(12, 89)) . Procedure Algorithm / How Procedures Work . Remember that procedures are essentially a set of programming instructions, or lines of code, that accomplish a goal. When executed, each line of code is executed in order (step after step after step) to get to the goal. . Regular code/Python . # Procedure called &quot;applyTax&quot; that applies a percent tax to a price def applyTax(price, percentTax): # When writing a procedure, first decide what parameters you will need to accomplish your goal # Step 1: Calculate the amount taxed taxAmount = price * percentTax/100 # Step 2: Add the amount taxed to the price to get the end amount endAmount = price + taxAmount return endAmount # Use procedure to apply a 50% tax to a price of $10 cost = applyTax(10, 50) print(cost) . CollegeBoard Pseudo-Code . Note that the pseudo-code below has the exact same purpose as the actual code above. Ignore the breaks and spaces since they are used for formatting. Differences between prseudo-code and Python: . | Pseudo-code uses “PROCEDURE” instead of “def” | Pseudo-code uses “&lt;–” instead of “=” | Pseudo-code uses “{}” instead of “:” to mark where a procedure starts and ends | . Pseudo-code example . PROCEDURE applyTax (price, percentTax) {     taxAmount &lt;– price * percentTax/100     endAmount &lt;– price + taxAmount     return endAmount } . Hack 2: Robot Pseudo-Code . . Instructions: . The blue triangle represents a robot that moves in a grid of squares. The tip of the triangle indicates where the robot is facing. | Write a procedure that allows the robot to make a detour around a block by moving to the left. | . Commands . MOVE_FORWARD() - Moves the robot forward one square | MOVE_BACKWARD() - Moves the robot backward one square | ROTATE_LEFT() - Rotates the robot 90 degrees left | ROTATE_RIGHT() - Rotates the robot 90 degrees right | . Your code here: . Procedure Return Values . When a procedure is run, it executes a series of calculations or commands and at some point and needs to provide a useful result. The return statement is what allows us to return a useful value back to the calling code. The returns statement can return various types of values such as booleans, integers, strings, etc. . Procedure Calls . Calling: This involves specifying the function name followed by parentheses, and passing any required arguments inside the parentheses. . When a function is called, the program control jumps to the function definition, and the statements inside the function are executed. After the function completes its task, the control returns to the point where the function was called. . Hack 3: Create and Call a Procedure . Define a function named calculate_grade that takes a student’s score as a parameter and returns ‘Pass’ if the score is 50 or more, and ‘Fail’ otherwise. . # your code here . Homework . Instructions . There are two total problems: . An easy regular code (Python) problem | A medium pseudo-code problem | A hard regular code (Python) problem | Completing question 1 and 2 gets you 0.9/1 if you do it correctly. Completing/attempting question 3, adding creativity, and adding good comments will potentially raise you above 0.9. . Question 1 . Write a procedure to apply a percent discount to a set price. See the example about applying tax if you’re stuck. . # your code here . Question 2 . Create your own robot problem! Include a picture with a square grid to represent the map and triangle to represent the robot. Add a flag to a square to represent the end-point and a shaded-in block to represent a detour. Write a procedure in pseudo-code to move the robot from the start, past the detour, and to the end point. . Add your image here by adding the link between the “” and removing the comment formatting: . # your code here . Question 3 . Create a program that asks for user input of an integer n, and return an array that contains all the prime numbers up to the number n (inclusive). Remember to use multiple different functions to better organize the code and increase efficiency. . def primes(n): # your code here # tests print(primes(5)) print(primes(12)) print(primes(35)) .",
            "url": "http://localhost:4100/teacher_portfolio/2023/10/24/P2-Developing-Procedures_IPYNB_2_.html",
            "relUrl": "/2023/10/24/P2-Developing-Procedures_IPYNB_2_.html",
            "date": " • Oct 24, 2023"
        }
        
    
  
    
        ,"post89": {
            "title": "P4 Procedures",
            "content": "3.12-3.13 Developing Procedures . What is a procedure? . A procedure is a named group of programming instructions . 2 Main Types of Procedures: . Procedure that returns a value of data | Procedure that executes a block of statements | . Learning Objective: . Be able to look at code and determine the purpose, and be able to write a procedure to manage complexity of program. understand the following terms and what they look like as well as how to use them in code . Procedure Parameters: variables that are defined within the procedure’s parentheses and serve as placeholders for values that can be passed to the procedure when it is called, allowing the procedure to operate on different data or values each time it is executed. | Procedure Algorithms: a step-by-step set of instructions that defines a specific task or operation to be performed within a computer program | Procedure Return Values: data or results that a procedure can send back to the part of the program that called it, allowing the procedure to provide information or perform a specific task and then share the outcome with the rest of the program. | . Name, Parameters, Algorithm, Return Values, and Calling a Procedure . ## Example of Procedure that Updates A Quiz Grade def updatequiz(currentgrade, quizgrade): if quizgrade &gt; currentgrade: currentgrade = quizgrade return currentgrade currentgrade = 75 quizgrade = 88 currentgrade = updatequiz(currentgrade, quizgrade) print(currentgrade) . 88 . Popcorn Hack #1: . Identify the name of the procedure below, tell us the purpose and parameters of the procedure and identify the algorithm return value: . Name: | Parameters: | Algorithm (paste lines): | Return Value: | Calling Procedure Line | . def updateweather(currentweather, weather): if currentweather&gt; weather: weather = currentweather print(&quot;today is warmer than yesterday&quot;) else: print(&quot;today is colder than yesterday&quot;) return currentgrade currentweather = 71 weather = 66 currentgrade = updateweather(currentweather, weather) print(&quot;the temperature right now is&quot;, currentweather, &quot;degrees&quot;) . today is warmer than yesterday the temperature right now is 71 degrees . Costructing Classes for Names &amp; Data with Procedures . # Class Construction class Short: name = &quot;&quot; height = 0 class Tall: name = &quot;&quot; height = 0 # Procedure to Classify as Short or Tall def classify_person(name, height): if height &lt; 70: short_person = Short() short_person.name = name return short_person else: tall_person = Tall() tall_person.name = name return tall_person . Class Definitions: The code defines two classes, “Short” and “Tall,” each having two attributes: name and height. These attributes can be used to store the name and height of individuals. . Classification Procedure: The classify_person function takes two parameters: name and height. Depending on the provided height, it creates an instance of either the “Short” or “Tall” class. It sets the name attribute for the person and returns the corresponding instance. . Popcorn Hack #2: . Use the example above to use a procedure to create two classes of your choosing. Create at least 2 objects and class them with your procedure . # Popcorn Hack 2 . Calling Methods of an Object w/ Procedures . # Creating Classes class Short: name = &quot;&quot; height = 0 class Tall: name = &quot;&quot; height = 0 #Procedure to classify as short or tall def classify_height(name, height): if height &lt; 70: short_person = Short() short_person.name = name return short_person else: tall_person = Tall() tall_person.name = name return tall_person # Create objects and classify them as short or tall person1 = classify_height(&quot;Nihar&quot;, 70) person2 = classify_height(&quot;Will&quot;, 76) person3 = classify_height(&quot;Jayden&quot;, 75) person4 = classify_height(&quot;Howie&quot;, 70) # Display results for all four objects for person in [person1, person2, person3, person4]: print(f&quot;{person.name} is {&#39;Short&#39; if person is Short else &#39;Tall&#39;}.&quot;) . Nihar is Tall. Will is Tall. Jayden is Tall. Howie is Tall. . HW Hacks!! . Create a procedure that replaces a value with a new one (ex. update height) | Create a procedure that constructs classes of your choosing and create at least 4 objects to be sorted into your classes. Call your procedure to display your objects. | # HW Hack 1 . # HW Hack 2 .",
            "url": "http://localhost:4100/teacher_portfolio/2023/10/24/DevelopingProcedures_IPYNB_2_.html",
            "relUrl": "/2023/10/24/DevelopingProcedures_IPYNB_2_.html",
            "date": " • Oct 24, 2023"
        }
        
    
  
    
        ,"post90": {
            "title": "Project Documentation - Alien World",
            "content": "Introduction . There are many key parts to managing and finishing a project. . README.md. This contains information to help someone get started with the project. The alienWorld repository was built from NightHawk pages, so much of the README already contained many development guidelines. . | Project Plan. This contains a project plan and guide. This contains plan for the project and overviews the key elements of code. . | Issue Management. Issues help drive the work of the project. Open issues are assigned to individuals. Closed issues contain history of work that has been completed. . | GitHub Pages Blog. A big advantage of GitHub Pages as a frontend is that allows for classic frontend runtime and blogging to be contained in one place. In education, a huge part of our project is how it was made, and how we collaborated, and how we progressed through steps. . | GitHub Pages History/Time Box. Managing meetings and capturing history tell a big story for a team. Time Boxing history is a great way to share key elements of project. . | Anatomy of Alien World. This contains key thinking that went into designing code. This was build in same document as Project Plan. . | Code Comments. Almost everyone, including Teachers, do not remeber how code works withou comments. Be sure to comment key code block and algorithms. . |",
            "url": "http://localhost:4100/teacher_portfolio/2023/10/23/javascript_project_overview_IPYNB_2_.html",
            "relUrl": "/2023/10/23/javascript_project_overview_IPYNB_2_.html",
            "date": " • Oct 23, 2023"
        }
        
    
  
    
        ,"post91": {
            "title": "P1 Procedures",
            "content": "3.12 Parts of a Procedure: . Vocab . Procedure- A named group of programming instructions that may have parameters and return values They are referred to by different names, such as method or function, depending on the programming language . Parameter- input value of a procedure. Arguments specify the values of the parameters when a procedure is called . A Procedure call- interrupts the sequential execution of statements, causing the program to execute the statements wtithin the procedure before continuing . Once the last statement in the proceed has been executed, flow of control is returned to the point immediately following where procedure was called. . A procedure is a group of programming instructions. They’re also known as methods or functions, depending on the programming language. You can use a procedure to use the same set of instructions, again and again, without having to rewrite it into your code.In AP Pseudocode, here’s how they’ll represent procedures: . first_number = 5 second_number = 7 sum_value = first_number + second_number print (sum_value) . It goes without saying that, if you wanted to sum more than one set of numbers at a time, you’d have to rewrite these lines over and over again… . Let’s see how we’d go about writing this as a function, or a procedure in Python. . A function in Python looks like this: . def name_of_function (parameter1, parameter2): #code statements here . So our summing machine would look like this! . def summing_machine(first_number, second_number): print (first_number + second_number) . When you call a procedure, your program acts like those lines of code are written out. Once it’s done executing those code lines, your program goes back to reading code sequentially. . When you call that procedure with defined values or variables, those values are known as arguments. . def summing_machine(first_number, second_number): print (first_number + second_number) summing_machine(5, 7) #In this example, 5 and 7 are examples of arguments. . For example: . def summing_machine(first_number, second_number): value = first_number + second_number return (value) answer = summing_machine(5, 7) print (answer) #you can use this to manipulate the value the function returns as well. print (answer + 1) . LETS LOOK AT AN EXAMPLE: . In this example this is a simple procedure to create a code for calculating the area . # Define the calculate_area procedure def calculate_area(length, width): # Calculate the area here area = length * width return area # Call the procedure with different values length1 = 5 width1 = 3 area1 = calculate_area(length1, width1) # Print the results print(f&quot;The area of the first rectangle is {area1}&quot;) . The area of the first rectangle is 15 . Popcorn Hack 1 . a) Define Return Values and Output Parameters in your own words: . b )Code a procedure that finds the square root of any given . Answers . a return value basically returns whatever the program is running, which means that it keeps the program running. Output parameters are, I think, the values that the program exits, or outputs. So whatever is printed . x = 64 def sqrt(x): value = x**0.5 return value answer = sqrt(x) . Calling Procedures Quiz . Practice AP mq questions from collageboard: . 1 In Python, what can be done by a value returned by a procedure? . a. Define input variables for another procedure . b. Print it to console . c. Call another procedure with it . d. Assign it to a variable or use it in expressions . 2. When a Procedure is called, what happens to the programs execution? . a. it prints the result of the procedure . b. it exits the program and terminates execution . c. it moves to the next line of code in the program . d. it acts as if the lines of code on the procedure are written out . 3 Which of the following is an example of a procedural call in Python? . a. def summing_machine(first_number, second_number) . b. summing_machine(5, 7) . c. print(first_number + second_number) . d. return(value) . 3.13 Developing Procedures and Procedural Abstraction . Procedures are an example of abstraction. . (In fact, it’s part of a special form of abstraction known as procedural abstraction.) . This is because you can call a procedure without knowing how it works. A common built-in procedure in programming languages is the print() procedure. . Procedures allow you to solve a large problem based on the solution to smaller sub-problems. . Popcorn Hack #1 . Simplify code to make the output be one value that gets printed . firstnum = 1 secondnum = 2 thirdnum = 3 fourthnum = 4 print(firstnum, secondnum, thirdnum, fourthnum) . 1 2 3 4 . Answer . firstnum = 1 secondnum = 2 thirdnum = 3 fourthnum = 4 print(firstnum) . 1 . When you divide a computer program into separate sub-programs, it’s known as modularity. Procedures can also help you simplify your code and improve its readability. Instead of this: . first_number = 7 second_number = 5 sum_value = first_number + second_number print (sum_value) first_number = 8 second_number = 2 sum_value = first_number + second_number print (sum_value) first_number = 9 second_number = 3 sum_value = first_number + second_number print (sum_value) . 12 10 12 . you get this: . def summing_machine(first_number, second_number): sum_value = first_number + second_number print (sum_value) summing_machine(5, 7) summing_machine(8, 2) summing_machine(9, 3) . 12 10 12 . This is especially important in larger programs, where you might already be looking at hundreds of lines of code. . Procedures can be reused. Parameters usually represent general categories of data, such as numbers or strings. . This means you could use one procedure for a wide range of individual scenarios. . Remember that placing a return statement inside a procedure will cause an immediate return from the procedure back to where the procedure is called. . The return statement may appear at any point inside the procedure. . Procedural abstraction also allows programmers the flexibility to modify or fix procedures without affecting the whole program, as long as the procedure continues to function in the same way. . Furthermore, they can make a change or edit once, in the procedure, and it will be implemented everywhere the procedure is called. . Popcorn Hack #2: create a Python program that generates multiplication tables for a specific number up to a specified limit. . def generate_multiplication_table(number, limit): &quot;&quot;&quot; Generates a multiplication table for the given number up to the specified limit. :param number: The number for which to generate the table. :param limit: The upper limit of the table (e.g., how far the multiplication will go). &quot;&quot;&quot; print(f&quot;Multiplication Table for {number} (Up to {limit}): n&quot;) for i in range(1, limit + 1): result = number * i print(f&quot;{number} x {i} = {result}&quot;) # Usage generate_multiplication_table(5, 10) . Multiplication Table for 5 (Up to 10): 5 x 1 = 5 5 x 2 = 10 5 x 3 = 15 5 x 4 = 20 5 x 5 = 25 5 x 6 = 30 5 x 7 = 35 5 x 8 = 40 5 x 9 = 45 5 x 10 = 50 . Anatomy of Python Classes . Class Definition: Classes are defined using the class keyword, followed by the class name, and a colon. . The class body is indented beneath the class definition. . class MyClass: # class body Pass . Attributes: These are variables that belong to a class. . They can be accessed using the dot notation on an instance of the class. . class MyClass: def __init__(self, attribute1, attribute2): self.attribute1 = attribute1 self.attribute2 = attribute2 . Methods: These are functions that are defined within a class. . They can perform specific operations on the object or modify its attributes. . class MyClass: def my_method(self): # method body pass . Constructor: The init method is a constructor in Python classes. . It is called when an object is created and allows the class to initialize the object’s attributes. . class MyClass: def __init__(self, attribute1, attribute2): self.attribute1 = attribute1 self.attribute2 = attribute2 . Self: It represents the instance of the class and is used to access the class’s attributes and methods. . class MyClass: def my_method(self): print(self.attribute1) . Homework . 1) Write a Python function called procedural_abstraction that demonstrates procedural abstraction by performing a specific task. Your function should take at least one parameter and return a result. 2) Write a Python function called summing_machine that takes two parameters, first_number and second_number, and returns the sum of these numbers. Use this function to calculate the sum of 7 and 5. Print the result. .",
            "url": "http://localhost:4100/teacher_portfolio/2023/10/22/P1_Procedures_IPYNB_2_.html",
            "relUrl": "/2023/10/22/P1_Procedures_IPYNB_2_.html",
            "date": " • Oct 22, 2023"
        }
        
    
  
    
        ,"post92": {
            "title": "P5 Libraries",
            "content": "3.14 Libraries . A file that contains procedures that can be used in a program is called a library. An Application Program Interface, or API, contains specifications for how the procedures in a library behave and can be used. It allows the imported procedures from the library to interact with the rest of your code. . Types of Libraries . There are many types of libraries that modern day companies use, such as Requests, Pillow, Pandas, NumPy, SciKit-Learn, TensorFlow, and Matplotlib. Requests: The Requests library simplifies making HTTP requests in Python, making it easy to interact with web services and retrieve data from websites. . Pandas: Pandas is a data manipulation and analysis library for efficiently working with structured data, including data import, cleaning, transformation, and analysis in tabular form. . Scikit-Learn: Scikit-Learn is a machine learning library that offers simple and efficient tools for data analysis and modeling, including classification, regression, and clustering. . TensorFlow: TensorFlow is an open-source machine learning framework that facilitates deep learning and neural network development, supporting tasks like image recognition and natural language processing. . Matplotlib: Matplotlib is a versatile plotting library for creating 2D and 3D visualizations and figures in Python, enabling a wide range of plots, charts, and graphs for data visualization and analysis. . Libraries are, at their heart, a collection of other people’s code, and it would be difficult to understand how the procedures should be used without documentation. APIs explain how two separate pieces of software interact with each other, and they also need documentation to keep this communication going. . Popcorn Hack 1 . We have now hopefully all done or seen this type of question about getting a robot from point a to point b. But this can be very tedious because it may take a lot of code to do that. Luckily, there’s a saving grace called procedures, procedures essentially shorten the amount of code that is needed. So for a robot example we have displayed, we will use the procedure “moveBackwards” to shorten the amount of code we would normally need. This will rotate our triangle 180 degrees. Here is the example and solution . #Code goes here . Pillow: Pillow is a powerful image processing library for opening, manipulating, and saving various image formats in Python. . from PIL import Image # Example usage: image = Image.open(&#39;/home/lincolnc2008/vscode/student3/images/frog-game.jpg&#39;)#This is the path of the image image.show() . . from PIL import Image: . This line imports the Image module from the PIL library. PIL stands for Python Imaging Library, which is used for opening, manipulating, and saving image files. . image = Image.open(‘/home/lincolnc2008/vscode/student3/images/frog-game.jpg’): . This line opens an image file named ‘/home/lincolnc2008/vscode/student3/images/frog-game.jpg’ using the Image.open() method. It creates an Image object and assigns it to the variable image. . image.show(): . This line displays the image using the show() method. This will open the default image viewer on your system and display the image. . Popcorn Hack 2 . Do this same thing but with a different image. Make it personallized! . # Code goes here . NumPy: NumPy is a fundamental library for numerical computing in Python, providing support for multidimensional arrays and a wide range of mathematical functions. . import numpy as np # Example usage: arr = np.array([1, 2, 3, 4, 5]) print(arr) . [1 2 3 4 5] . import numpy as np: . This line imports the Numpy library with the alias np. Numpy is a powerful library in Python for numerical computations, particularly with arrays and matrices. . arr = np.array([1, 2, 3, 4, 5]): . This line creates a Numpy array named arr using the np.array() function. The array is initialized with the values [1, 2, 3, 4, 5]. . print(arr): . This line prints the array arr to the console . Popcorn Hack 3 . You are given two 1-dimensional Numpy arrays, A and B, of the same length. Perform the following element-wise operations and return the results: . Add each element of array A to the corresponding element of array B. Multiply each element of array A by the corresponding element of array B. Square each element of array A. . # Code goes here . import matplotlib.pyplot as plt # Example usage: x = np.linspace(0, 10, 100) y = np.sin(x) plt.plot(x, y) plt.show() . . import matplotlib.pyplot as plt: . This line imports the pyplot module from the Matplotlib library with the alias plt. Matplotlib is a powerful library in Python for creating visualizations and plots. . x = np.linspace(0, 10, 100) y = np.sin(x): . These lines create two Numpy arrays x and y. x is generated using np.linspace() which creates an array of 100 equally spaced points between 0 and 10. y is generated by taking the sine of each element in x. . plt.plot(x, y): . This line creates a line plot using the plot() function from Matplotlib. It takes x and y as the data for the x and y coordinates of the plot. . plt.show(): . This line displays the plot using the show() function. It opens a window with the generated plot. . Popcorn Hack 4 . You have a dataset representing the monthly sales of a company over a year. The data is provided as two lists: months (containing the names of the months) and sales (containing the corresponding sales figures). . Your task is to create a bar chart to visualize the monthly sales. . Write a Python function that takes the lists months and sales as input and generates a bar chart using Matplotlib. The function should also label the x-axis with the months and the y-axis with “Sales (in thousands)”. . # Code goes here months = [&#39;Jan&#39;, &#39;Feb&#39;, &#39;Mar&#39;, &#39;Apr&#39;, &#39;May&#39;, &#39;Jun&#39;, &#39;Jul&#39;, &#39;Aug&#39;, &#39;Sep&#39;, &#39;Oct&#39;, &#39;Nov&#39;, &#39;Dec&#39;] sales = [150, 170, 190, 200, 220, 250, 280, 300, 280, 250, 230, 190] . Optional Popcorn Hack . Now for extra credit, create a program(s) using all the libraries we provided (Pillow, NumPy, TensorFlow, etc). Try showing a basic understanding of how to use each one of these libraries. Try doing something fun or creative! . # Code goes here . Homework! . For our homework hack, Write a Python program that uses the NumPy library to generate an array of values for the sine and cosine functions over a specified range, and then use Matplotlib to create a plot that shows both functions on the same graph. The program should: Import the necessary libraries (NumPy and Matplotlib). Define a range of angles in degrees, e.g., from 0 to 360 degrees. Use NumPy to calculate the sine and cosine values for each angle in the range. Create a Matplotlib plot with the angles on the x-axis and the sine and cosine values on the y-axis. Label the plot with appropriate titles, axis labels, and a legend. Display the plot on the screen. . # Code goes here . Thank You! .",
            "url": "http://localhost:4100/teacher_portfolio/2023/10/21/P5_Libraries_IPYNB_2_.html",
            "relUrl": "/2023/10/21/P5_Libraries_IPYNB_2_.html",
            "date": " • Oct 21, 2023"
        }
        
    
  
    
        ,"post93": {
            "title": "U6 | Array | Student P3",
            "content": "Hello! wget this notebook RIGHT NOW . (Find the link in ‘coding’ on SLACK) . Topic 6.1 - Array Creation and Access (Sreeja) . Vocabulary . Array: a data strucutre used to implement a collection of object referance data | Element: a single value within an array | Index of an element: position of an element in the array (In java, the first element of an array is at index 0) | Length of an array: number of elements in the array | . Declaring an Array . Defines the array variable, specifying its data type and name. . // Syntax: dataType[] arrayName; int[] numbers; // Declare an integer array String[] names; // Declare a string array . Creating an Array . Gives memory for the array and specifies its size. . // Syntax: arrayName = new dataType[size]; numbers = new int[5]; // Create an integer array with 5 elements names = new String[3]; // Create a string array with 3 elements . Initializing an Array . Populates the array with initial values. . // Syntax: arrayName = new dataType[size]; numbers = new int[5]; // Create an integer array with 5 elements names = new String[3]; // Create a string array with 3 elements . Accessing Array Elements . Retrieves a specific element’s value from the array using its index. . int[] numbers = {10, 20, 30, 40, 50}; int element = numbers[2]; // Access the third element (30) using index 2 System.out.println(element); // Output: 30 . Array Length . Obtains and displays the number of elements in the array. . int[] numbers = {10, 20, 30, 40, 50}; int length = numbers.length; // Get the length of the array System.out.println(&quot;Array length: &quot; + length); // Output: Array length: 5 . Modifying Array Elements . Updates the value of a specific element in the array. . int[] numbers = {10, 20, 30, 40, 50}; numbers[2] = 35; // Change the third element to 35 . Iterating Through an Array . Loops through the array, printing each element. . int[] numbers = {10, 20, 30, 40, 50}; for (int i = 0; i &lt; numbers.length; i++) { System.out.println(numbers[i]); } . Enhanced For Loop (For-each) . Iterates through the array using a simplified loop structure, printing each element. . int[] numbers = {10, 20, 30, 40, 50}; for (int number : numbers) { System.out.println(number); } . Topic 6.2 - Traversing Array (1D) (Tanisha) . Using iteration statements (standard for loops and while loops) to access each element in an array. . Standard For Loop . An array in java is indexed from _ to the number of elements - _. | . Review on For Loops . init: The init expression is used for initializing a variable, and it is executed only once. | condition: It executes the condition statement for every iteration | incr/decr: It is the increment or decrement statement applied to the variable, updates the initial expression. | . . import java.util.Random; /* public class RandomArray { public static void main(String[] args){ int [] list = new int[6]; Random rand = new Random(); */ // FOR LOOP 1 for (int i = 0; i &lt; list.length; i++){ list[i] = rand.nextInt(4); } // FOR LOOP 2 for(int element: list){ System.out.println(element); } /* } } RandomArray.main(null); */ . Class Discussion-Take Notes, these will count for points in your hacks! . What do the for loops accomplish? ________ | What is the difference between how elements of the array list are accessed? ________ | BONUS: When the array list of ints was first created, what was each int in the list initialized to? _________ | . For loop : Accessing Some Elements of a List . Class Discussion-Take Notes, these will count for points in your hacks! . If I only wanted to access the elements at even indices of the list (0, 2, 4), what could I change in the statement below to accomplish that? . | What about odd? . | // EVEN int[] list = {0, 1, 2, 3, 4, 5}; System.out.println(&quot;Even Index&quot;); for(int index = 0; index &lt; list.length; index++){ System.out.println(list[index]); } // ODD int[] list = {0, 1, 2, 3, 4, 5}; System.out.println(&quot;Odd Index&quot;); for(int index = 0; index &lt; list.length; index++){ System.out.println(list[index]); } . Note: These are NOT traversals, even though these are for loops. This is because not every element in the array is accessed. . Standard While Loop . Does the following loop accomplish traversing the array? | int [] list = new int[5]; int index = 0; while (index &lt; list.length) { // Do something index ++; } . This while loop and the for loop we used earlier accomplish the same task. The main difference is that after the loop is completed, the variable ‘index’ in the while loop will still exist. The variable ‘i’ in the for loop will not. Why? | . Bounds Errors . When traversing an array, we need to be careful with the indices to avoid an ArrayIndexOutOfBoundsException being thrown. . ATTENTION: MOST COMMON MISTAKE: . What is wrong with the for loop and while loop below? Why does this produce an ArrayIndexOutOfBoundsException error? __ | for(int i = 0; i &lt;= list.length; i ++) . int index = 0; while (index &lt;= list.length) . Off by One Error : missing the first or last element of an array when trying to traverse . [0, 1, 2, 3, 4] . // This won&#39;t access the last element in the list for(int i = 0; i &lt;= list.length - 1; i ++) . // This won&#39;t access the first element in the list int index = 1; while (index &lt;= list.length) . Developing Methods Using Arrays . Reviewing common methods asked on AP Exam FRQs . Average Value . Complete the popcorn hack below in order to return the average value of the elements in the list numbers. . public class ArrayAverage { public static void main(String[] args) { int[] numbers = {5, 10, 15, 20, 25}; int sum = 0; double average; for (/* missing code */) { sum += /* missing code */; } average = (double) ____ / _______; /* missing code */ System.out.println(&quot;The average of the numbers is: &quot; + average); } } ArrayAverage.main(null); . 6.3 Enhanced for loop for Arrays (Vivian) . the enhanced for loop is also known as the “for each” loop | provides a simplified way to loop through elements in an array, collection, or other iterable data structures. | . //syntax for enhanced for loop for (dataType element : array) { // code to process &#39;element&#39; } . the data type in the loop must match the array’s element data type. | . //array of int matches element int int[] numbers = {1, 2, 3, 4, 5}; for (int num : numbers) { System.out.println(num); } . 1 2 3 4 5 . Comparing a regular for loop with the enhanced for loop . Popcorn Hack: Rewrite this code to use an enhanced for loop instead. make comments explaining what you added/changed . import java.util.List; class Quote { private List&lt;String&gt; quotes; private List&lt;String&gt; emotions; public Quote(List&lt;String&gt; quotes, List&lt;String&gt; emotions) { this.quotes = quotes; this.emotions = emotions; } public void printQuotesWithEmotions() { // Make a change in the code here! for (int i = 0; i &lt; quotes.size() &amp;&amp; i &lt; emotions.size(); i++) { String quote = quotes.get(i); String emotion = emotions.get(i); System.out.println(&quot;Quote: &quot;&quot; + quote + &quot; &quot;&quot;); System.out.println(&quot;Emotion: &quot; + emotion); System.out.println(&quot;&quot;); } } public static void main(String[] args) { List&lt;String&gt; quotes = List.of( &quot;Success is not final, failure is not fatal: It is the courage to continue that counts.&quot;, &quot;The only way to do great work is to love what you do.&quot;, &quot;The best way to predict the future is to create it.&quot; ); List&lt;String&gt; emotions = List.of( &quot;Courageous&quot;, &quot;Passionate&quot;, &quot;Innovative&quot; ); Quote quotePrinter = new Quote(quotes, emotions); quotePrinter.printQuotesWithEmotions(); } } Quote.main(null); . Quote: &quot;Success is not final, failure is not fatal: It is the courage to continue that counts.&quot; Emotion: Courageous Quote: &quot;The only way to do great work is to love what you do.&quot; Emotion: Passionate Quote: &quot;The best way to predict the future is to create it.&quot; Emotion: Innovative . What are some of the benefits of using an enhanced for loop in this case versus a regular for loop? . Limitations to enhanced for loop . it does not provide access to the index of the current element. This means you cannot easily determine the position of the element in the array or collection. | But when you want to search for a specific element in a collection and you don’t necessarily need to access the index | If you need to work with indices, you should use a traditional for loop instead. | . | read-only access to elements. You cannot modify the elements within the loop | Thus, when you need to modify a collection based on a condition. You should use a regular for loop | . | . For the next two code blocks, decide whether or not its better to use a regular for loop or an enhanced one, explain why. write the code for them . Searching for an Element in an ArrayList | ArrayList&lt;String&gt; names = new ArrayList&lt;&gt;(); String searchName = &quot;Vivian&quot;; //code goes here for () { } . Removing Even Numbers from an ArrayList | ArrayList&lt;Integer&gt; numbers = new ArrayList&lt;&gt;(); //code goes here for () { } . 6.4: Developing Algorithms Using Arrays (Isabelle) . How to identify the maximum or minimum value in an array . It is a common task to determine what the largest or smallest value stored is inside an array. In order to do this, we need a method that can take a parameter of an array of primitve values (int or double) and return the item that is at the appropriate extreme. . Inside the method a local variable is needed to store the current max or min value that will be compared against all the values in the array. You can assign the current value to be either the opposite extreme or the first item you would be looking at. . You can use either a standard for loop or an enhanced for loop to determine the max or min. Assign the temporary variable a starting value based on what extreme you are searching for. . Inside the for loop, compare the current value against the local variable; if the current value is better, assign it to the temporary variable. When the loop is over, the local variable will contain the appropriate value and is still available and within scope and can be returned from the method. . Find max in an array of double values . private double findMax(double [] values) { double max = values[0]; for (int index = 1; index &lt; values.length; index++) { if (values[index] &gt; max) { max = values[index]; } } return max; } . Find min in an array of int values . private int findMin(int [] values) { int min = Integer.MAX_VALUE; for (int currentValue: values) { if (currentValue &lt; min) { min = currentValue; } } return min; } . Let’s Practice! . Popcorn hack #1 . // What needs to be changed to find the index of the max value? (write correct code in cell below) private int findMax(double [] values) { double max = values[0]; for (int index = 1; index &lt; values.length; index++) { max = values[index]; } return max; } . How to calculate the average value from objects in an array . It is a common task to determine what is the average value returned from items stored inside an array. In order to do this, we need a method that can take a parameter of an array of Objects (DebugDuck) and calculate and return the average value that each instance of DebugDuck returns from the method. . Inside the method; a local double variable is needed to store the accumulated values. Then we use a for loop to traverse the array and add the current total to the variable. After accumulating all the values we need to divide the total by the number of items stored in the array. . Using a standard for loop . private double calculateAverage(DebugDuck [] ducks) { double average = 0.0; for (int index = 0; index &lt; ducks.length; index++) { average += ducks[index].getQuestionCount(); } average = average / ducks.length; return average; } . Using a standard enhanced loop . private double calculateAverage(DebugDuck [] ducks) { double average = 0.0; for (DebugDuck currentDuck: ducks) { average += currentDuck.getQuestionCount(); } average = average / ducks.length; return average; } . Does the order of accumulation matter? . Can you declare the variable inside the loop? . Shfiting Array contents to the right . The contents of an array often need to be shifted as part of a solution to using the data inside. . We need to know how much to shift the array by. This will need to be an int obviously. . In order to move the contents we next need to make an empty array of the same size and then iterate over the original array and properly copy the values to the adjusted index in the new array. . We then need to assign the new array back into the original variable. . What kind of for loop should we use? Why? . int [] numbers = {1,2,3,4,5}; int [] shifted = new int [numbers.length]; int shift = 8; for (int index = 0; index &lt; numbers.length; index++) { shifted [Math.abs((index + shift) % numbers.length)] = numbers[index]; } numbers = shifted; for (int num : numbers) { System.out.println(num + &quot; &quot;); } . 3 4 5 1 2 . Why are we using the % operator? . Popcorn hack #2 . How would we code a left shift? Write a left shift using the variables below . String [] words = {&quot;alpha&quot;, &quot;beta&quot;, &quot;gamma&quot;, &quot;delta&quot;}; int shiftWord = 2; . Why should the array index be wrapped in a call to Math.abs? . Hacks . Scoring Guidelines: . 0.2 for completeing each of the sub-unit hacks mentioned below. FRQ/PopCorn hacks will be graded AP Style | . | 0.1 for having organized notebook with note taking when appropriate. | Extra 0.1 for going above expectations for the hacks (being creative!) | . 6.1 HACK 1 FRQ (&lt;5 min) . Follow the steps in the lesson to just make an array that has some relation to your project. Feel free to use the code examples we provided in your hack if you would like. . 6.2 HACK 1 FRQ (&lt;10 min) . Prime Numbers in an Array (5-10 min) . Create a loop to identify and print the prime numbers from an array of integers. Your loop MUST traverse through the given list. Some things to consider: . BONUS: Do this with a for loop AND a while loop . Understand prime numbers and how to check for primality. | Implement a loop and conditional statements to iterate through the array. | Consider data storage (either displaying prime numbers immediately or storing them for later display) | . 6.2 HACK 2 MCQ (&lt;5 min) . Multiple Choice Questions . Do NOT Run the code cells. Try to do this on your own. . What will be displayed as the output? | String [] list = {&quot;red&quot;, &quot;yellow&quot;, &quot;blue&quot;}; for (int i = 0; i &lt; list.length; i++) { System.out.print(list[i].length()+ &quot;-&quot; ) } . A. red-yellow-blue | B. 3-3-3- | C. 3-6-4- | D. 3-6- | E. 3-6-4 | . Write why you chose that answer! ________ . The code below is meant to display every other number in the list numbers. Which of the following should replace the missing code in order to do this? | int [] numbers = {3, -4, 6, -7, 2}; for(/*missing code*/) { System.out.println(numbers[i]); } . A. int i = 0; i &lt; numbers.length/2; i++ | B. int i = 1; i &lt; numbers.length; i++ | C. int i = 1; i &lt; numbers.length; i+=2 | D. int i = 0; i &lt; numbers.length; i++ | E. int i = 0; i &lt; numbers.length; i+=2 | . Write why you chose that answer! ________ . (This one is a little hard) Which of the following would fix the code so that the elements in arr are reversed. Hint: try creating a list in your head and trace the code to see if the code accomplishes its goal. | public static void reverseArray(double [] arr) { for(int = 0; i&lt; arr.length; i++) { double temp = arr[i]; arr[i] = arr[arr.length-1-i]; arr[arr.length-1-i] = temp; } } . A. Change loop condition to: i &lt; arr.length - 1 | B. Change loop condition to: i &lt; arr.length/2 | C. Change loop condition to: i &lt; arr.length/2 - 1 | . In case you are having trouble with question 3 the answer is B. Write about why! . . 6.3 HACK . Just finish the popcorn hacks throughout the lesson! | . 6.4 HACK . Just finish the 2 popcorn hacks in the lesson! | .",
            "url": "http://localhost:4100/teacher_portfolio/2023/10/19/java-array-P3_IPYNB_2_.html",
            "relUrl": "/2023/10/19/java-array-P3_IPYNB_2_.html",
            "date": " • Oct 19, 2023"
        }
        
    
  
    
        ,"post94": {
            "title": "U6 | Array | Student P1",
            "content": "Intro into Arrays . An array is a data structure used to implement a collection (list) of primitive or object reference data. . | An element is a single value in the array . | The **index** of an element is the position of the element in the array . In java, the first element of an array is at index 0. | . | The length of an array is the number of elements in the array. . length is a public final data member of an array . Since length is public, we can access it in any class! . | Since length is final we cannot change an array’s length after it has been created . | . | In Java, the last element of an array named list is at index list.length -1 . | . | . A look into list Memory . int [] listOne = new int[5]; . This will allocate a space in memory for 5 integers. . ARRAY: [0, 0, 0, 0, 0] INDEX: 0 1 2 3 4 . Using the keyword new uses the default values for the data type. The default values are as follows: . Data Type Default Value . byte | (byte) 0 | . short | (short) 0 | . int | 0 | . double | 0.0 | . boolean | false | . char | ‘ u0000’ | . What do we do if we want to insert a value into the array? . listOne[0] = 5; . Gives us the following array: . ARRAY: [0, 0, 0, 0, 0] INDEX: 0 1 2 3 4 . What if we want to initialize our own values? We can use an initializer list! . int [] listTwo = {1, 2, 3, 4, 5}; . Gives us the following array: . ARRAY: [1, 2, 3, 4, 5] INDEX: 0 1 2 3 4 . If we try to access an index outside of the range of existing indexes, we will get an error. But why? Remember the basis of all programming languages is memory. Because we are trying to access a location in memory that does not exist, java will throw an error (ArrayIndexOutOfBoundsException). . How do we print the array? Directly printing the array will not work, it just prints the value of the array in memory. We need to iterate through the array and print each value individually! . /* lets take a look at the above */ int [] listOne = new int[5]; // Our list looks like [0, 0, 0, 0, 0] listOne[2] = 33; // Our list looks like [0, 0, 33, 0, 0] listOne[3] = listOne[2] * 3; // Our list looks like [0, 0, 33, 99, 0] try { listOne[5] = 13; // This will return an error } catch (Exception e) { System.out.println(&quot;Error at listOne[5] = 13&quot;); System.out.println(&quot;ArrayIndexOutOfBoundsException: We can&#39;t access a memory index that doesn&#39;t exist!&quot;); } System.out.println(listOne); // THIS DOES NOT PRINT THE LIST!! It prints the value in memory System.out.println(listOne[4]); // This will actually print the vaules in the array . Error at listOne[5] = 13 ArrayIndexOutOfBoundsException: We can&#39;t access a memory index that doesn&#39;t exist! [I@620c6ceb 0 . Popcorn Hacks! . Write code to print out every element of listOne the following . /* popcorn hacks go here */ . Reference elements . Lists can be made up of elements other than the default data types! We can make lists of objects, or even lists of lists! Lets say I have a class Student and I want to make a list of all students in the class. I can do this by creating a list of Student objects. . Student [] classList; classList new Student [3]; . Keep in mind, however, that the list won’t be generated with any students in it. They are initialized to null by default, and We need to create the students and then add them to the list ourselves. . classList[0] = new Student(&quot;Bob&quot;, 12, 3.5); classList[1] = new Student(&quot;John&quot;, 11, 4.0); classList[2] = new Student(&quot;Steve&quot;, 10, 3.75); . Popcorn hacks! . Use a class that you have already created and create a list of objects of that class. Then, iterate through the list and print out each object using: 1) a for loop 2) a while loop . /* Popcorn hacks go here */ . Enhanced for loops . The enhanced for loop is also called a for-each loop. Unlike a “traditional” indexed for loop with three parts separated by semicolons, there are only two parts to the enhanced for loop header and they are separated by a colon. . The first half of an enhanced for loop signature is the type of name for the variable that is a copy of the value stored in the structure. Next a colon separates the variable section from the data structure being traversed with the loop. . Inside the body of the loop you are able to access the value stored in the variable. A key point to remember is that you are unable to assign into the variable defined in the header (the signature) . You also do not have access to the indices of the array or subscript notation when using the enhanced for loop. . These loops have a structure similar to the one shown below: . for (type declaration : structure ) { // statement one; // statement two; // ... } . Popcorn Hacks! . Create an array, then use a enhanced for loop to print out each element of the array. . /* Popcorn hacks go here */ . Min maxing . It is a common task to determine what the largest or smallest value stored is inside an array. in order to do this, we need a method that can ake a parameter of an array of primitive values (int or double) and return the item that is at the appropriate extreme. . Inside the method of a local variable is needed to store the current max of min value that will be compared against all the values in the array. you can assign the current value to be either the opposite extreme or the first item you would be looking at. . You can use either a standard for loop or an enhanced for loop to determine the max or min. Assign the temporary variable a starting value based on what extreme you are searching for. . Inside the for loop, compare the current value against the local variable, if the current value is better, assign it to the temporary variable. When the loop is over, the local variable will contain the approximate value and is still available and within scope and can be returned from the method. . Popcorn Hacks! . Create two lists: one of ints and one of doubles. Use both a standard for loop and an enhanced for loop to find the max and min of each list. . /* Popcorn hacks go here! */ .",
            "url": "http://localhost:4100/teacher_portfolio/2023/10/19/java-array-P1_IPYNB_2_.html",
            "relUrl": "/2023/10/19/java-array-P1_IPYNB_2_.html",
            "date": " • Oct 19, 2023"
        }
        
    
  
    
        ,"post95": {
            "title": "P5 Lists and search",
            "content": "LISTS: . A Python list is an ordered and changeable collection of data objects. Unlike an array, which can contain objects of a single type, a list can contain a mixture of objects. They start from 0. (The 1st element would actually be the 0th element) . List Functions . Creating a list: . In order to create a list named “aList”, type aList = []. This creates an empty list. A list with elements would look like this aList = [element1,element2,element3] . Append: . In Python, the append() method is used to add an element to the end of a list. The element in the parenthesis is what is added to the list. . # College Board Pseudo Code aList ← [] USER_INPUT ← (&quot;Enter an item you want (or &#39;q&#39; to quit): &quot;) REPEAT UNTIL USER_INPUT ← q{ APPEND (aList, USER_INPUT) } DISPLAY(aList) . aList = [] while True: user_input = input(&quot;Enter an item you want (or &#39;q&#39; to quit): &quot;) if user_input.lower() == &#39;q&#39;: break aList.append(user_input) print(&quot;Things You Want:&quot;, aList) . Things You Want: [&#39;1&#39;, &#39;item&#39;, &#39;2&#39;] . Accessing an element: . In order to access a specific element from a list, you would put the element in []. For example, If I had to access the third element in the list aList, I would say “aList[2]”. . # College Board Pseudo Code aList ← [] USER_INPUT ← (&quot;Enter an item you want (or &#39;q&#39; to quit): &quot;) REPEAT UNTIL USER_INPUT ← q{ APPEND (aList, USER_INPUT) } DISPLAY(aList[2]) . aList = [] while True: user_input = input(&quot;Enter an item you want (or &#39;q&#39; to quit): &quot;) if user_input.lower() == &#39;q&#39;: break aList.append(user_input) print(&quot;The Second thing on your list is&quot;, aList[1]) print(aList) . The Second thing on your list is 3 [&#39;2&#39;, &#39;3&#39;, &#39;6&#39;, &#39;hunt&#39;] . Deleting an element: . In order to delete an element, choose the element the same way you would access it but put “del” before it. For example, If I had to delete the third element in a list called aList, I would say “del aList[2]”. . # College Board Pseudo Code aList ← [] USER_INPUT ← (&quot;Enter an item you want (or &#39;q&#39; to quit): &quot;) REPEAT UNTIL USER_INPUT ← q{ APPEND (aList, USER_INPUT) } REMOVE (aList, 2) DISPLAY(aList) . aList = [] while True: user_input = input(&quot;Enter an item you want (or &#39;q&#39; to quit): &quot;) if user_input.lower() == &#39;q&#39;: break aList.append(user_input) print(&quot;This is your list: &quot;, aList) del aList[1] print(&quot;This is your new list: &quot;, aList) . This is your list: [&#39;5&#39;, &#39;4&#39;, &#39;4&#39;] This is your new list: [&#39;5&#39;, &#39;4&#39;] . Popcorn Hack #1 . Create a list (with user input) using objects with different types. Remove the first element from the list and print the list. . # Code goes here: . Assigning a value: . To assign the values a list named bList to aList of one list to another you simply have to do aList = bList. . Length of a list: . To get the length of a list named aList, you just need to do len(aList). This gives you the number of elements in a list. . aList = [&quot;Yeezys&quot;,&quot;Yeezys&quot;] bList = [&quot;No Yeezys&quot;] bList = aList list_length = len(bList) print(&quot;Things I want:&quot;, bList) print(&quot;How many yeezys:&quot;,list_length) . Things I want: [&#39;Yeezys&#39;, &#39;Yeezys&#39;] How many yeezys: 2 . For each item in a list: . If you want to do something to each item in a list, you will need to use this. an example of it is shown below. . my_list = [1, 2, 3, 4, 5] print(&quot;Original List:&quot;, my_list) for i in range(len(my_list)): my_list[i] += 1 print(&quot;Modified List:&quot;, my_list) print(&quot;Length of the list:&quot;, len(my_list)) . Original List: [1, 2, 3, 4, 5] Modified List: [2, 3, 4, 5, 6] Length of the list: 5 . Popcorn Hack #2 . Create a new list that modifies the original list by multiplying each element by 2 and prints the length of the list. . my_list = [1, 2, 3, 4, 5] print(&quot;Original List:&quot;, my_list) # Code goes here: . Original List: [1, 2, 3, 4, 5] . Search: . A search algorithm is an algorithm that retrieves information stored in a data structure or calculated in the search space of a problem domain, with either discrete or continuous values. . Linear Search . The most basic way of searching in which each element is searched in the order it appears in the list. The list doesn’t need to be organized. . For the code given below, the algorithm compares each value to the previous value, and if the value is smaller than the previous value, that value becomes the new min. The algorithm continues until it reaches the end of the list. . nums[] ← [86, 75, 98, 100, 71, 65, 84] min ← nums[0] FOR EACH score IN nums[] DO IF score &lt; min THEN min ← score END IF END FOR OUTPUT &quot;The minimum value in the list is:&quot;, min . nums = [86, 75, 98, 100, 71, 65, 84] print(nums) min = nums[0] for score in nums: if (score &lt; min): min = score print(&quot;The minimum value in the list is:&quot;, min) . [86, 75, 98, 100, 71, 65, 84] The minimum value in the list is: 65 . Popcorn Hack #3 . Create a linear search algorithm that determines the maximum value in a list. . nums = [86, 75, 98, 100, 71, 65, 84] print(nums) # Code goes here: . Binary Search . A binary search, also known as half-interval search, logarithmic search, or binary chop is a search algorithm that finds the position of a target value within a sorted array. . How does Binary Search work: . - Binary search works on sorted arrays. - Binary search begins by comparing an element in the middle of the array with the target value. - If the target value matches the element: - Its position in the array is returned and exit the program. - If the target value is less than the element: - The search continues in the lower half of the array. Go to Step-2 - If the target value is greater than the element, the search continues in the upper half of the array. Go to Step-2 - Go back to Step-2 . # Returns index of x in arr if present, else -1 def binary_search(arr, low, high, x): # Check base case if high &gt;= low: mid = (high + low) // 2 # If element is present at the middle itself if arr[mid] == x: return mid # If element is smaller than mid, then it can only # be present in left subarray elif arr[mid] &gt; x: return binary_search(arr, low, mid - 1, x) # Else the element can only be present in right subarray else: return binary_search(arr, mid + 1, high, x) else: # Element is not present in the array return -1 # Test array arr = [ 2, 3, 4, 10, 40 ] x = 10 # Function call result = binary_search(arr, 0, len(arr)-1, x) if result != -1: print(&quot;The Element is in index&quot;, str(result)) else: print(&quot;Element is not present in array&quot;) . The Element is in index 3 . # . Big O Notation . Usually used to denote how much run time an algorithm takes or how much memory is used by an algorithm. . In our case we are using it to show how many tries it will take for a search algorithm to find something. . Linear Search vs Binary Search big O notation: . - Linear search complexity is denoted by O(n) as every element in the array is compared only once. - In linear search, best-case complexity is O(1) where the element is found at the first index. - Worst-case complexity is O(n) where the element is found at the last index or the element is not present in the array. - Binary search, best-case complexity is O(1) where the element is found at the middle index. The worst-case complexity is O(log base 2 n). . Homework Hack . Create a binary search algorithm that sorts for the value 25. . nums = [12, 23, 25, 45, 47, 89, 91] # Code goes here: .",
            "url": "http://localhost:4100/teacher_portfolio/2023/10/19/P5_List_and_Search_IPYNB_2_.html",
            "relUrl": "/2023/10/19/P5_List_and_Search_IPYNB_2_.html",
            "date": " • Oct 19, 2023"
        }
        
    
  
    
        ,"post96": {
            "title": "P2 List and Operations",
            "content": "Made by: Ryan, Daniel, Saaras, Will, and Andrew . Python lists Operations . Append function . From the Data Abstractions Unit we Learned about lists and how they can store multiple variables . Today we’re going to show you how to add items to lists utilizing the append option . lst = [&quot;hi&quot;] lst.append(&quot;no&quot;) print(lst) . [&#39;hi&#39;, &#39;no&#39;] . Insert function . The insert function allows you to append items to different lists at a specific location. | Let’s first understand how it may work through pseudocode | . Exmaple 1 . INSERT alist, pos, value INSERT alist, 1, “hi” . Here the alist represents your list you want to append an item to | The position is where on the list the item will be generated in respect to the current list | Finally, the value is the item you’re adding to your list. | So in the code provided below, in position 1 you insert the item “hi” into alist | . Your turn!!!! . Turn this pseudocode into python | How may we want to implement this on python? Think back to the data abstraction unit. | ( Hint: Think about the differences between psueodcode and python ) | . # ANSWER: # Inserting items to a specific list, remember python is 0 based on the items!! lst.insert(5, &quot; maybe&quot;) print(lst) . [&#39; yes&#39;, &#39; yes&#39;, &#39; yes&#39;, &#39;hi&#39;, &#39;no&#39;, &#39; maybe&#39;, &#39; yes&#39;] . Remove function . The remove functions allows you to remove specific items at a specific position on the list | . Pseudocode example . REMOVE aList, pos | . lst.remove(lst[0]) print(lst) ## You can also access the list by the position, this is called list indexing print(lst[0]) . [&#39;hi&#39;, &#39;no&#39;, &#39; maybe&#39;, &#39; yes&#39;] hi . Let’s do some Collegeboard exercises . In the following list: nums = [65, 89, 92, 35, 84, 78, 28, 75] | . | Figure out what the minimum number in the list, WITHOUT using the other methods and premade functions. | . Second question: . Let’s say we have a list called “animals” from a survey that stores whether or not they prefer “cats” or “dogs” as strings in this list. | Transverse this list and tell me the total amount cats and dogs in the list | . nums = [65, 89, 92, 35, 84, 78, 28, 75] print(nums[3]) print(&quot;this number is the lowest number in the nums list&quot;) ## Your code here . 35 this number is the lowest number in the nums list . animals = [&quot;cats&quot;, &quot;dogs&quot;] animals.remove(&quot;dogs&quot;) print(animals) print(&quot;only one person works at this petshop and she likes cats.&quot;) . [&#39;cats&#39;] only one person works at this petshop and she likes cats. . ITS BINARY SEARCH TIME . By the end of this you should be able to know what binary search is | What the time complexity of binary search is | How to derive the time complexity for binary search | . HOW DOES BINARY SEARCH WORK . pay attention to the demonstration in the front | volunteers will be called up | candy if you participate | . Binary search is like a guessing game where you halve your options at each step. Imagine you’re finding a name in a phone book: . First Step: You open the book in the middle. | Second Step: Is the name before or after the middle? You eliminate half of the remaining names. | Repeat: Keep dividing until you find the name or run out of names to check. | MAKE SURE YOUR LIST IS SORTED Binary search will not work if the list isn’t sorted | Because you’re halving the options each time, it’s super quick. If you have (n) names, it takes at most ( log_2(n) ) steps to find a name. This efficiency, where the time it takes doesn’t increase much as the number of names in the phone book grows, is what makes binary search awesome! Binary search is also more optimal for searcihng compared to a linear search for anything that doesnt include small lists.. . Demo Being shown above . The sorted list we have currently, has integers [1, 3, 4, 5, 13, 20], we are currently trying to find the index of the the integer 1 within the list . How it works is we start at element 0 for our left position and element 5 for our rightwards position . Our middle position becaomes 5 because ((5+0)//2)=3 so element 3 . Our element 3 within the list gives us the integer 5 . We then realize that oh 5 is greater then 3 so we have to move leftwards . Then to make the algorithm more efficient we move the r backwards 1 beacuse we have already checked at this point . So now we can reduce the list to [1, 3, 4] . Now we can repeat the same steps as before and find the middle of this list which is 3 . We realize thats not equivalent to the integer 1, and our value is still too great . So we move the middle leftwards 1 positioon . AND BAM THATS HOW YOU CAN DO BINARY SEARCH . #example of binary search in python has a time complexity of O(n) def binarySearch(arr, x): l= 0 #our minimum element r=len(arr) - 1 # our maximum element while l &lt;= r: mid = l + (r - l) // 2 if arr[mid] == x: return mid elif arr[mid] &lt; x: l = mid + 1 else: r = mid - 1 return -1 sorted_list = [2, 5, 8, 12, 16] target = 3 result = binarySearch(sorted_list, 5) print(result) . 1 . #Linear Search Approach in O(n) def linear_search(target, sorted_list): for o in range(len(sorted_list)): if sorted_list[o]==target: return(o) #Does not have to be a sorted list for the sake of comparison I just made it sorted sorted_list = [1, 3, 5, 7, 9, 11, 13, 15] target = 3 result = linear_search(target, sorted_list) print(result) . 1 . Using linear search make a list with elements [“eggs”, “milk”, “butter”, “cake”] Then randomize an element 1-4 within that list and find the index of it via linear search . #code here . How big O Notation works in the context works in the case of search methods. . Lets first explain for linear search, because linear search only requires a iterative approach all we use is O(n), this is due to the loop infinitely going until it finds the element and then after that it doesnt do anything. . However binary search is special in this sense because you don’t actually have to go through an entire loop how you can picture this is by imagining a list with 1000000 integer values in it and my target value is 59223, binary search makes it so that you just divide the list by 2 until you find the element. It’s a lot faster then the iterative approach, where I keep going until I get to 59223 what this does is it allows me to speed up the time and memory usage I take. because I keep dividing the list by 2 allowing for me to form a logarithm because its just repetitive multiplication of 1/2 and then that makes it so that O(log(n)) becomes the time complexity for the Binary search algorithm. . HW TIME!!!!!!!!!!!!!!!!!! We want you guys to make a guessing game below, where utilizing binary search you can within a list of 100 sorted elemments find, a value that your code will randomize using random.randint(). We want you to also make it so every iteration output the number is higher up or lower until you actually get to the answer. We also want number of tries it took to guess the number. Points will be awarded for customizations and potential changes. . Extra credit (for above 95%): Send a screenshot on me to slack showing you can do this: https://codeforces.com/contest/1201/problem/C . #Code in here . HW Part 2: This time instead of utilizing binary search to do it I want you to use linear search to get to the same value and I want you to output the number of iterations it took to get there. Aswell as a congrats message upon getting there points will be awarded upon creativity and completion. . #Code in here .",
            "url": "http://localhost:4100/teacher_portfolio/5.a/c4.1/2023/10/19/P2-Lists-and-Search_IPYNB_2_.html",
            "relUrl": "/5.a/c4.1/2023/10/19/P2-Lists-and-Search_IPYNB_2_.html",
            "date": " • Oct 19, 2023"
        }
        
    
  
    
        ,"post97": {
            "title": "P4 Lists and search",
            "content": "3.10-3.11 Lists and Searches . Basic Operations . #Defining the List aList= [1,4,2,6,7,3,] # Accessing Elements in a list print(aList[1]) #Storing Element at an Index to a variable Element = aList[3] print(Element) #Setting an Element at an Index to a variable element = 4 aList[5]= element print(aList[5]) #Insert a value at a certain index aList.insert(3, 10) print(aList[3]) #Adding another value to the list (append) aList.append(5) print(aList) #Removing a value from the List at a specific Index aList.remove(2) print(aList) #Accessing the Length of a list print(len(aList)) . 4 6 4 10 [1, 4, 2, 10, 6, 7, 4, 5] [1, 4, 10, 6, 7, 4, 5] 7 . PopCorn hack #1 . Create and define your own list and insert a value at a certain index | . #Enter code here . Finding the Minimum Value in a List . nums = [30, 45, 95, 56, 73, 98, 25] min_value = nums[4] # Start with the first element as the minimum for score in nums: if score &lt; min_value: min_value = score print(min_value) # Display the minimum value . 25 . PopCorn hack #2 . Using the code above try to find the maximum value in the list | . #Enter Code here . Sum of Even Numbers in a list solution . #Defining numbers in list nums = [7, 5, 10, 6, 9, 4, 3, 12] sum_even = sum([score for score in nums if score % 2 == 0]) #Using for loop to work through each number in the list and using mod to interpret if any numbers have a remainder of 0 print(sum_even) . 32 . Determining Outputs for code Segments with Length function . #Defining the list words = [&#39;old&#39;, &#39;computer&#39;, &#39;science&#39;, &#39;far&#39;, &#39;potato&#39;] new_words = [] for word in words: if len(word) != 3: #if the length of the word is not equal to three new_words.append(word) #adds it to a new list if the length is not equal to three print(new_words) . [&#39;computer&#39;, &#39;science&#39;, &#39;potato&#39;] . If Else Statements with Lists . Performing a Binary Search . index: organizing the data by assigning a reference value to each element | Put the number is order either ascending or descending | Search starts with middle number first which is found by adding the highest and lowest index number and dividing it by 2 | This divides the range by 2 | Repeat this process by shrinking the range each time till the desired target is found | Every time the process is repeated and leads to a target it is considered a comparison | . Performing a Sequential Search . Each element in a list is examined in the order of the first element till the desired target | Order doesn’t matter | . Homework Hack 1 . What will be the middle index number in a Binary Search given the set of number: 3, 6, 12, 14, 50, 53 | Which of the following lists can a Binary Search be used to find the desired target | This is a multiple choice question | . fruits= [&#39;Apple&#39;, &#39;Carrot&#39;, &#39;Mango&#39;, &#39;Peach&#39;] A= [1, 3, 5, 8, 9, ] B= [6, -1, 5, 12, 8] #Type your choices below . Homework Hack 2 . Given a provided list perform two of the basic operations | . yourlist = [8,10,35,39,49,52] #type out your answers below and run the code and include output in screenshot .",
            "url": "http://localhost:4100/teacher_portfolio/2023/10/18/P4_Lists_and_Search_IPYNB_2_.html",
            "relUrl": "/2023/10/18/P4_Lists_and_Search_IPYNB_2_.html",
            "date": " • Oct 18, 2023"
        }
        
    
  
    
        ,"post98": {
            "title": "API, Data Strategies",
            "content": "API, Data Resources . Applications, Web Applications are nothing without data. API’s are the most common source on the internet for obtaining data. . Variation off of Jokes . Student teams have opportunity for 90% if they do a variation of Jokes. However, this is considered about 10 hours of work for both frontend and backend development. So, there would need to be a couple of variation to meet team goals for 4 people. . Frontend Fetch of Jokes. In this code example you will learn many of the key Frontend requirements in displaying the Jokes API. This meets 1/2 the requirements for an API. JavaScript Fetch and Display Use JavaScript “fetch” get, put, update operation with Python APIs | Use JavaScript to trap errors through invalid response | Use JavaScript to displays data by updating DOM | . | . | Javascript Web API for Jokes. Review this code that describes how to make Model and Interface endpoints. Java Endpoints and CRUD Each public API endpoint requires definition on backend | Build Spring CRUD operations to support endpoints | . | . | . package com.nighthawk.spring_portfolio.mvc.jokes; import org.springframework.beans.factory.annotation.Autowired; import org.springframework.http.HttpStatus; import org.springframework.http.ResponseEntity; import org.springframework.web.bind.annotation.*; import java.util.List; import java.util.Optional; @RestController // annotation to simplify the creation of RESTful web services @RequestMapping(&quot;/api/jokes&quot;) // all requests in file begin with this URI public class JokesApiController { // Autowired enables Control to connect URI request and POJO Object to easily for Database CRUD operations @Autowired private JokesJpaRepository repository; /* GET List of Jokes * @GetMapping annotation is used for mapping HTTP GET requests onto specific handler methods. */ @GetMapping(&quot;/&quot;) public ResponseEntity&lt;List&lt;Jokes&gt;&gt; getJokes() { // ResponseEntity returns List of Jokes provide by JPA findAll() return new ResponseEntity&lt;&gt;( repository.findAll(), HttpStatus.OK); } /* Update Like * @PutMapping annotation is used for mapping HTTP PUT requests onto specific handler methods. * @PathVariable annotation extracts the templated part {id}, from the URI */ @PostMapping(&quot;/like/{id}&quot;) public ResponseEntity&lt;Jokes&gt; setLike(@PathVariable long id) { /* * Optional (below) is a container object which helps determine if a result is present. * If a value is present, isPresent() will return true * get() will return the value. */ Optional&lt;Jokes&gt; optional = repository.findById(id); if (optional.isPresent()) { // Good ID Jokes joke = optional.get(); // value from findByID joke.setHaha(joke.getHaha()+1); // increment value repository.save(joke); // save entity return new ResponseEntity&lt;&gt;(joke, HttpStatus.OK); // OK HTTP response: status code, headers, and body } // Bad ID return new ResponseEntity&lt;&gt;(HttpStatus.BAD_REQUEST); // Failed HTTP response: status code, headers, and body } /* Update Jeer */ @PostMapping(&quot;/jeer/{id}&quot;) public ResponseEntity&lt;Jokes&gt; setJeer(@PathVariable long id) { Optional&lt;Jokes&gt; optional = repository.findById(id); if (optional.isPresent()) { // Good ID Jokes joke = optional.get(); joke.setBoohoo(joke.getBoohoo()+1); repository.save(joke); return new ResponseEntity&lt;&gt;(joke, HttpStatus.OK); } // Bad ID return new ResponseEntity&lt;&gt;(HttpStatus.BAD_REQUEST); } } . Alternative to Jokes . Python 3rd Party API. It can be beneficial to access APIs in the backend versus the frontend. Plus, this multi step process will meet Frontend to Backend API requirements. ChatGPT APIs keys are required to be hidden on server. | Rate limits can be controlled on backend. Always ensuring result. | Python Endpoints and CRUD | JavaScript Fetch and Display | . | . Backend API Debugging and Postman . Pictures need to be rewworked for Java . Run Web Application Locally . . Run Observations and actions . This start the application use Python with Debugging on. The objective is to load Web Server. Look at Terminal for outputs. . Review api/joke.py . Now is a good time to look at code around this code. . Definition of joke_api with browser prefix /api/jokes. | . joke_api = Blueprint(&#39;joke_api&#39;, __name__, url_prefix=&#39;/api/jokes&#39;) # API generator https://flask-restful.readthedocs.io/en/latest/api.html#id1 api = Api(joke_api) . _Read resource is defined using “get” method | . class _Read(Resource): def get(self): return jsonify(getJokes()) . api /api/jokes/ | . api.add_resource(_Read, &#39;/&#39;) . Debug api/joke.py with Browswer . Learn to setup break point and usage of play controls(continue, step over, step into, step out) . . Setup breakpoint in Code | Call endpoint from Browser | Observe code stopping and play controls | . Debug Observations and actions . Open Locals self observe endpoint and method | Step into code observe that step takes you to jokes.py | Open Globals jokes_data | Hover over jokes_data in code | Press continue play control and observe data in browser | . Debug api/joke.py with Postman . Similar debugging goals as previous, but now we can perform put method as well as get methond. . Postman Observation and actions . Download Postman for free | Build Collections Get APIs | Put APIs | . | Test Collections | Set Breakpoints in Code and Observe | . . Hacks . Build Collection of API tests in Postman on localhost. | Try APIs off of a deployed server: https://flask.nighthawkcodingsociety.com/api/jokes | Extra. Write code for _Create method for Jokes, hint use Body to pass data versus command line | Extra. Write your own frontend code to read your own Jokes API. Here is example. Sample github.io Frontend Runtime - Sample github.io Raw Code. | . | .",
            "url": "http://localhost:4100/teacher_portfolio/2023/10/18/CSA-API-strategy.html",
            "relUrl": "/2023/10/18/CSA-API-strategy.html",
            "date": " • Oct 18, 2023"
        }
        
    
  
    
        ,"post99": {
            "title": "U5 | Classes | Student P3",
            "content": "Hacks . 5.1-5.3 Hacks . POPCORN HACKS: 0.2 . Create a simple To-Do List that utilizes the following (0.8): . Private and Public Declaration . | Constructor . | Mutable Array containing To-Do List Items . | Make sure to add descriptive comments that are describing your code! . 5.9-5.10 Hacks . POPCORN HACKS: 0.2 . Write a two sentence reflection on the social and ethical implications of programming. (0.8) .",
            "url": "http://localhost:4100/teacher_portfolio/2023/10/17/java-writing-class_P3_IPYNB_2_.html",
            "relUrl": "/2023/10/17/java-writing-class_P3_IPYNB_2_.html",
            "date": " • Oct 17, 2023"
        }
        
    
  
    
        ,"post100": {
            "title": "U5 | Classes | Student P1",
            "content": "U5 | Classes . . 5.1 Anatomy of a Class &amp; 5.2 Constructors . . Methods vs Constructors . Methods: functions defined within a class that preforms specific actions for objects of that class . | Constructors: special methods in a class that are responsible for initializing the object’s state when an instance of the class is created . | . // EXAMPLE CLASS public class Snack { // Instance Variables private String name; private int calories; // Default Constructor public Snack() { name = &quot;&quot;; calories = 0; } // Overloaded Constructor public Snack (string n, int c) { name = n; calories = c; } // Accessor method 1 public String getName() { return name; } // Access method 2 public int getCalories() { return calories; } // Mutator method 1 public void setName(String n) { name = n; } // Mutator method 2 public void setCalories(int c) { calories = c; } private boolean canEat() { return (calories &lt; 150); } } . private vs public . public: allows access from classes outside the declaring class (classes, constructors) . | private: restricts access to the declaring class (instance variables) . | . methods can be either public or private . Popcorn Hack: Which of the following lines will cause an error? . public class SnackDriver { public static void main(String[] args) { Snack choiceOne = new Snack(&quot;cookies&quot;, 100); Snack choiceTwo = new Snack(); System.out.println(choiceOne.getName()); System.out.println(choiceOne.getCalories()); choiceTwo.setName(&quot;chips&quot;); choiceTwo.calories = 150; } } . Key term: Encapsulation . A fundmanetal concept of OOP | Wraps the data (variable) and code that acts on the data (methods) in one unit (class) | In AP CSA we do this by: Writing a class | Declaring the instance variables as private –&gt; enforce constraints and ensure integrity of data | Providing accessor (get) methods and modifier (set) methods to view and modify variables outside of the class | . | . public class Sport { private String name; private int numAthletes; public Sport () { name = &quot;&quot;; numAthletes = 0; } // Parameters in contructors are local variables public Sport (String n, int numAth) { name = n; numAthletes = numAth; } // What if not all instance variables are set through parameters? public Sport (String n) { name = n; numAthletes = 0; } } Sport tbd = new Sport(); Sport wp = new Sport(&quot;Water Polo&quot;, 14); Sport wp = new Sport(&quot;Volleyball&quot;); . if no constructor provided, Java provides default constructor: int (0), double (0.0), strings and other objects (null) | . Hacks . Create a Book class where each book has a title, genre, author, and number of pages. Include a default and overloaded constructor. . public class Book { // Code here } . 5.3 Documentation with Comments . REMEMBER: comments are ignored by the compiler and anything written in them won’t execute . they’re used for people to make code more readable.. allows them to understand what’s happening without having to go further into the code | improves communication between TEAMS | allows code to be maintained over years | prevents execution when testing alternative code | . You are NOT required to write comments of AP Exam FRQs, but it is always a good habit . The types of comments: . 1) Single line: // 2) Multiline: /* */ 3) Java Doc: /** * * */ . /* Programmer: Date: Purpose */ public class Main { public static void main(String[] args) { // variables double length = 2.5; double width = 4; //.. and so on } } /** * javadoc comments: * jkafhjdajhf * * @author * @version */ . Javadoc is a tool that pulls any comments written in this format to make a documentation of the class in the form of a webpage . Javadoc also has tags (as shown above) . Preconditions: conditions that must be met before the execution of a code in order for it to run correctly . Will be written in comments for a method for most APCSA questions | it is assumed that these preconditions are true, we do not need to check! | . Postconditions: conditions that must be met after the conditions has been executed (outcome, state of variables, ect) . Will be written in comments for a method for most APCSA questions | we do have to check to make sure these have been met | good way to get a summary of what you need to be doing | . // EXAMPLE FROM AP CLASSROOM: public class SecretWord { private String word; public SecretWord(String w) { word = w; } /** * Precondition: parameter num is less than the length of word * Postcondition: Returns the string of the characters of word from the index hum to the end of the word followed by the characters of word from index 0 to num, not including index num. The state of word has not changed */ public String newWord(int num) { //implementation not shown } } . 5.4 Accessor Method . OUR GOAL: to define behaviors of an object through non-void methods NOT using parameters written in a class . REMEMBER: an accessor method allows other objects to access static variables . What is the purpose of an accessor method? . It allows us to safely access variables without other people being able to. Also called get methods or getters. . They’re necessary whenever another class needs to access a variable outside of that class. . // Example class public class Movie { // private instance variables private String name; private int runtime; // default constructor public Movie() { name = &quot;&quot;; runtime = 0; } // overloaded constructor: public Movie(String n, int c) { name = n; runtime = c; } // added ACCESSOR METHOD for each variable public String getName() { // header return name; // returning a COPY of the private instance variables } public int getRuntime() { return runtime } } . An accessor method must be: . public in order to be accessible | the return type must match the instance variable type | usually name of method is getNameOfVariable | should be NO PARAMETERS | . POPCORN HACKS: write an accessor method for each of the instance variables: . public class Course { private String name; private String gradeLevel; private int period; } . Let’s look at another example: . public class Sport { private String name; private int numAthletes; public Sport(String n, int num) { name = n; numAthletes = sum; } public String getName() { return name; } public int getNumAthletes () { return numAthletes; } } . Can we print out information about an instance of this object? . public class Sport { private String name; private int numAthletes; public Sport(String n, int num) { name = n; numAthletes = num; } public String getName() { return name; } public int getNumAthletes() { return numAthletes; } public static void main(String[] args) { Sport volleyball = new Sport(&quot;volleyball&quot;, 12); System.out.println(volleyball); } } Sport.main(null); . What output did we get? . The code outputs the Object class in the form of classname@HashCode in hexadecimal Let’s try using the toString method: . returns a string when System.out.println(object) is called | no parameters | . public class Sport { private String name; private int numAthletes; public Sport(String n, int num) { name = n; numAthletes = num; } public String getName() { return name; } public int getNumAthletes() { return numAthletes; } public String toString() { // toString method.. HEADER MUST BE WRITTEN IN THIS WAY return &quot;Sport: &quot; + name +&quot; nNumber of Athletes: &quot; + numAthletes; } public static void main(String[] args) { Sport volleyball = new Sport(&quot;volleyball&quot;, 12); System.out.println(volleyball); } } Sport.main(null); . 5.5. Mutators / Setters . Purpose: Mutators are used to change the values of the fields (attributes) of an object. . Access Control: Mutators are typically defined as public methods to allow external code to modify the object’s state. . Naming Convention: The method names for mutators usually start with “set” followed by the name of the field they modify. . Parameterized: Mutators take one or more parameters that represent the new values for the fields. . Return Type: Mutators are usually of type void, as they don’t return a value, but they modify the object’s state. . Encapsulation: Mutators are an essential part of encapsulation, which helps to protect the object’s state by controlling access through methods. . Validation: Mutators often include validation logic to ensure that the new values being set are within acceptable bounds or meet specific criteria. . Example Usage: Mutator for setting the age of a Person object might look like: public void setAge(int newAge) {…}. . Chaining: Mutators can be chained together in a single line for more fluent and concise code, e.g., person.setName(“John”).setAge(30);. . Immutable Objects: In some cases, mutators are not used, and instead, a new object with modified values is created. This approach is common in creating immutable objects in Java. . Example . public class UserAccount { private String username; private String password; private boolean isLoggedIn; public UserAccount(String username, String password) { this.username = username; this.password = password; this.isLoggedIn = false; } // Mutator for setting the username public void setUsername(String newUsername) { this.username = newUsername; } // Mutator for setting the password public void setPassword(String newPassword) { this.password = newPassword; } // Mutator for logging in public void login(String enteredUsername, String enteredPassword) { if (enteredUsername.equals(username) &amp;&amp; enteredPassword.equals(password)) { isLoggedIn = true; System.out.println(&quot;Login successful. Welcome, &quot; + username + &quot;!&quot;); } else { System.out.println(&quot;Login failed. Please check your username and password.&quot;); } } // Mutator for logging out public void logout() { isLoggedIn = false; System.out.println(&quot;Logged out successfully.&quot;); } // Accessor for checking if the user is logged in public boolean isLoggedIn() { return isLoggedIn; } public static void main(String[] args) { // Create a UserAccount UserAccount userAccount = new UserAccount(&quot;alice&quot;, &quot;password123&quot;); // Attempt to log in userAccount.login(&quot;alice&quot;, &quot;password123&quot;); // Check if the user is logged in if (userAccount.isLoggedIn()) { // Access the Scrum board or other features here System.out.println(&quot;Accessing Scrum boards...&quot;); } else { System.out.println(&quot;Access denied. Please log in.&quot;); } // Log out userAccount.logout(); } } . Hacks . Create a Java class BankAccount to represent a simple bank account. This class should have the following attributes: . accountHolder (String): The name of the account holder. balance (double): The current balance in the account. Implement the following mutator (setter) methods for the BankAccount class: . | setAccountHolder(String name): Sets the name of the account holder. | deposit(double amount): Deposits a given amount into the account. | withdraw(double amount): Withdraws a given amount from the account, but only if the withdrawal amount is less than or equal to the current balance. | . Ensure that the balance is never negative. . public class BankAccount { private String accountHolder; private double balance; // Constructor public BankAccount(String accountHolder, double balance) { // Initialize the account holder and balance attributes this.accountHolder = accountHolder; this.balance = balance; } // Implement the setAccountHolder method public void setAccountHolder(String name) { // Add code to set the account holder&#39;s name } // Implement the deposit method public void deposit(double amount) { // Add code to deposit the specified amount into the account } // Implement the withdraw method public void withdraw(double amount) { // Add code to withdraw the specified amount from the account // Ensure that the balance is never negative } public static void main(String[] args) { // Test the BankAccount class with sample operations // Create an instance of BankAccount BankAccount account = new BankAccount(&quot;John Doe&quot;, 1000.0); // Test the mutator methods account.setAccountHolder(&quot;Jane Doe&quot;); account.deposit(500.0); account.withdraw(200.0); // Print the updated account details System.out.println(&quot;Account holder: &quot; + account.accountHolder); System.out.println(&quot;Current balance: &quot; + account.balance); } } . 5.6 Writing Methods . Method Declaration: Define methods using the method keyword, specifying return type, method name, and parameters. | Method Parameters: Methods can take input parameters. | Return Statement: Use the return statement to return a value from a method. | Method Overloading: You can have multiple methods with the same name but different parameter lists. | Static Methods: Static methods are associated with the class rather than instances. | Instance Methods: Instance methods are associated with an object of the class. | Access Modifiers: Use access modifiers like public, private, or protected to control visibility. | Method Invocation: Call methods using the dot notation on objects or classes (for static methods). | Recursive Methods: Methods can call themselves, creating recursive functions. | Varargs (Variable-Length Argument Lists): Use varargs to pass a variable number of arguments to a method. | . Example . public class Calculator { public int add(int operand1, int operand2) { return operand1 + operand2; } public int subtract(int operand1, int operand2) { return operand1 - operand2; } public int multiply(int operand1, int operand2) { return operand1 * operand2; } public int divide(int dividend, int divisor) { if (divisor != 0) { return dividend / divisor; } else { throw new ArithmeticException(&quot;Division by zero is not allowed.&quot;); } } public static void main(String[] args) { Calculator calculator = new Calculator(); int resultAdd = calculator.add(5, 3); int resultSubtract = calculator.subtract(10, 7); int resultMultiply = calculator.multiply(4, 6); int resultDivide = calculator.divide(8, 2); System.out.println(&quot;Addition: &quot; + resultAdd); System.out.println(&quot;Subtraction: &quot; + resultSubtract); System.out.println(&quot;Multiplication: &quot; + resultMultiply); System.out.println(&quot;Division: &quot; + resultDivide); } } . Hacks . Create a Java class MathUtility with a set of utility methods for mathematical operations. Implement the following methods: . calculateAverage(double[] numbers): Calculate the average of an array of numbers. | isPrime(int number): Check if a given integer is prime. | findFactors(int number): Find and return an array of factors for a given integer. Include proper error handling for edge cases and invalid input. | . public class MathUtility { // Implement the calculateAverage method public double calculateAverage(double[] numbers) { // Add code to calculate and return the average of the numbers } // Implement the isPrime method public boolean isPrime(int number) { // Add code to check if the given number is prime } // Implement the findFactors method public int[] findFactors(int number) { // Add code to find and return the factors of the given number } public static void main(String[] args) { // Test the MathUtility class with sample mathematical operations MathUtility mathUtility = new MathUtility(); // Test the utility methods double[] numbers = {1, 2, 3, 4, 5, 6}; double average = mathUtility.calculateAverage(numbers); System.out.println(&quot;Average of the numbers: &quot; + average); int numberToCheck = 17; boolean isPrime = mathUtility.isPrime(numberToCheck); System.out.println(numberToCheck + &quot; is prime: &quot; + isPrime); int numberToFactor = 12; int[] factors = mathUtility.findFactors(numberToFactor); System.out.print(&quot;Factors of &quot; + numberToFactor + &quot;: &quot;); for (int factor : factors) { System.out.print(factor + &quot; &quot;); } } } . 5.7 Static Variables and Methods . Static Methods . Define behaviors of a class (belong to class, NOT object) | Keyword static in header before method name | Can only: access/change static variables | Can’t: access/change instance variables or the class’ instance variables, no this reference | . Practice . Should we use a static or non-static method? . public class Assignment{ // next classwork/homework ID is NEXT number of classwork/homework that will be created private static int nextClassworkID = 1; private static int nextHomeworkID = 1; private String name; private int pointValue; // constructors and methods not shown } . Question: What is the static data and what is the instance data? . Answer: . Question: A method getGrade is given an int score earned on the assignment and returns the percentage (as a decimal) earned by that score. Would this be implemented as a static or non-static method? . Think: What data does it need access to? If needs access to instance data, needs to be non-static. If only need access to static data, it can be static. | . Answer: non-static, since the method would need to access pointValue which is an instance variable. . Popcorn Hacks: write getGrade method . public class Assignment{ // next classwork/homework ID is NEXT number of classwork/homework that will be created private static int nextClassworkID = 1; private static int nextHomeworkID = 1; private String name; private int pointValue; // method here } . Question: Would a method that reports the total number of assignments be static or non-static? . Answer: static, since the method would only need to access static data . Popcorn Hacks: write this method totalAssign . public class Assignment{ // next classwork/homework ID is NEXT number of classwork/homework that will be created private static int nextClassworkID = 1; private static int nextHomeworkID = 1; private String name; private int pointValue; // method here } . Multiple Choice Question . public class Example{ private static int goal = 125; private int current; public Example (int c) { // code segment 1 } public static void resetGoal (int g) { // code segment 2 } // other methods not shown } . Which of the following statements is true? . Code segment 1 can use the variable goal but cannot use the variable current. | Code segment 1 cannot use the variable goal but can use the variable current. | Code segment 2 can use the variable goal but cannot use the variable current. | Code segment 2 cannot use the variable goal but can use the variable current. | Both code segments have access to both variables | Question: Which ones can code segment 1 (constructor) use? . Static Variables . Define static variables that belong to the class, all object of the class sharing that single static variable (associated with class, NOT objects of class) | Either public or private | static keyword before variable type | used with class name and dot operator | . Multiple Choice Question . public class Example{ private static int goal = 125; private int current; public Example (int c) { // code segment 1 } public static void resetGoal (int g) { // code segment 2 } // other methods not shown } . Which of the following statements is true? . Objects e1 and e2 each have a variable goal and variable current. | Objects e1 and e2 share the variable goal and share the variable current. | Objects e1 and e2 share the variable goal and each have a variable current. | Objects e1 and e2 each have a variable goal and share the variable goal and share the variable current. | The code does not complie because static variables must be public. | 5.8 Scope and Access . Local variables: variables declared in body of constructors and methods, only use within constructor or method, can’t be declaed public or private | If local variable named same as instance variable, within that method the local variable will be referred to | . public class Bowler{ private int totalPins; private int games; public Bowler(int pins){ totalPins = pins; games = 3; } public void update (int game1, int game2, int game3) { // local variable here is newPins int newPins = game1 + game2 + game3; totalPins += newPins; games += 3; } } . Multiple Choice Question . public class Example{ private int current; public Example(int c){ double factor = Math.random(); current = (int)(c * factor); } public void rest (int num) { private double factor = Math.random(); current += (int)(num * factor) } // other methods not shown } . Which of the following is the reason this code does not compile? . The reset method cannot declare a variable named factor since a vriable named factor is declared in the constructor. | The reset method cannot declare factor as private since factor is a local variable not an instance variable. | The constructor cannot declare a variable named factor since a variable named factor is declared in the reset method. | The constructor cannot access the isntance variable current since current is private. | There is no syntax error in this code and it would compile. | 5.9 this Keyword . this keyword . a keyword that essentially refers to the object that is calling the method or the object that the constructor is trying to make&lt;/detail&gt; ### Can be used 3 Ways: 1. **refer to instance variable** &gt; This will solve the problem of having duplicate variable names. To distinguish the instance and local variables, we use this.variableName for the instance variable and simply variableName for the local variable. 2. **parameter** &gt; Sometimes, we can also use the object as a parameter in its own method call to use itself in the method by using objectName.methodName(this). 3. **constructor or method call** &gt; Sometimes, we can also use the object as a parameter in its own method call to use itself in the method by using objectName.methodName(this). Using **this()** in a constructor &gt;&gt; Calls the no-arg constructor or the constructor without any parameters of the current class, can also call other constructor that hav parameters by passing correct numb and type of args between parenthesis ^^ using **this()** can help you reuse code from one constructor in another **this** in Java &gt;&gt; is limited to current object = only be used to access instance variables and invoke non-static methods python public class Dog { private String breed; public String getBreed(){ return breed; } public boolean isSameBreed(Dog otherDog){ return // breed.equals(otherDog.breed); // this.breed.equals(otherDog.breed); // **this** makes the code more readable/clear but is not required } } python public class DogCompetition { public boolean doBreedMatch (Dog dog1, Dog dog2){ return this.getBreed().equals(dog2.getBreed()); // **this** refers to object which was used to call doBreedsMatch and is a DogCompetition object, not dog object (CANNOT CALL getBreed()) // this.dog1 // dog1 is not data member (parameter) so incorrect // doBreedMatch doesn&#39;t use any data from DogCompetition class no way to use this } } ### Local vs Instance Make the code a little clearer by using the **this** keyword b,a,w,and s aren&#39;t meaningful parameters change them into breed, age, weight, and score distinguish the local and instance variables using the **this** keyword python public class Dog { private String breed; private int age; private double weight; private double score; public Dog(sting b, int a, double w, double s){ // 1. make this code a little clearer by using the **this** keyword // 2. change the parameters into something more meaningful // 3. distinguish local vs instance variables using **this** keyword breed = b; age = a; weight = w; score - s; } } ### HACKS 1. what does using **this()** in a constructor mean in your own words ## 5.10 Ethical and Social Implications of Computing Systems ### Impacts Programming affects the world in many ways, such as socially, economically, and culturally. For instance, not everyone has the same access to technology and computer programs, which creates social inequalities. Some people can use technology, while others can&#39;t. **Digital Divide** The global economy relies heavily on technology and computer programs, especially in areas like stock trading and economic predictions. Programming and technology have also made the world more connected, allowing different cultures to mix and making it easier for people to communicate globally. However, this has also created a gap between generations, with younger people having more exposure to digital technology than older generations. **These impacts on society, the economy, and culture can be both good and bad.** ### System Reliability When programmers create software, they need to consider how reliable the system is. Different devices can perform the same task at varying speeds and in different ways. Each system may have security issues that hackers can exploit. To make systems more reliable, programmers need to fix any bugs as soon as they find them. These fixes are then released to users as updates or patches to ensure that computers can be used safely and correctly. ### Intellectual Property Usually, when people create programs on the internet, they own them. However, open source programs blur this line. In open source programs, anyone can make improvements to the code if the program owner allows it. Licensing and access also play a role in letting others adapt and build on existing code to create their own programs. There are different types of licenses, like Creative Commons and MIT License, each serving different purposes. Here is an [article](https://docs.github.com/en/communities/setting-up-your-project-for-healthy-contributions/adding-a-license-to-a-repository) on how to add a license on your Repository ### HACKS As a team decide what license you want and add it to your repository (add a screenshot of it in your team ticket)",
            "url": "http://localhost:4100/teacher_portfolio/2023/10/17/java-writing-class_P1_IPYNB_2_.html",
            "relUrl": "/2023/10/17/java-writing-class_P1_IPYNB_2_.html",
            "date": " • Oct 17, 2023"
        }
        
    
  
    
        ,"post101": {
            "title": "U10 Recursion",
            "content": "Provide an overview of a Binary Search algorithm using recursion. .",
            "url": "http://localhost:4100/teacher_portfolio/2023/10/17/java-u10-student_IPYNB_2_.html",
            "relUrl": "/2023/10/17/java-u10-student_IPYNB_2_.html",
            "date": " • Oct 17, 2023"
        }
        
    
  
    
        ,"post102": {
            "title": "P2 Developing Algorithms",
            "content": "What are Algorithims? . Whats the difference between these two math problems: . (3+1)3 + 89 + 4(2+8) . 3(1+3) + 8(1+4) + 89 . Nothing! They are just two different ways of doing them! . Whats the difference between these two math problems: . 3((9-6)+7) + 7 - (9+8) . 3(9-(6+7)) + 7 - 9 + 8 . A lot! This changes the output by quite a bit! . Here are examples of this basic concept in terms of programming: . print(&quot;What is the temperature outside °F?&quot;) temp = int(input()) if temp &gt; 85: print(&quot;It is too hot outside!&quot;) elif temp &gt;= 65: print(&quot;Sure, I will play outside!&quot;) else: print(&quot;It is too cold outside!&quot;) . print(&quot;What is the temperature outside °F?&quot;) temp = int(input()) if temp == 85: print(&quot;It is too hot outside!&quot;) if temp == 65: print(&quot;Sure, I will play outside!&quot;) if temp &lt; 65: print(&quot;It is too cold outside!&quot;) . Didn’t get it? . Hint: . What if I input 60 degrees °F? | What if I input 90 degrees °F? | . Hack #1: What is the difference between these two pieces of code? (in terms of their output) . num = 1 while num &lt;= 100: if num % 4 != 0: print(num, end=&#39; &#39;) num += 1 . def print_numbers(): for i in range(1, 101): if i % 4 != 0: print(i) print_numbers() . So when developing algorithms, different pieces of code could do the same thing, and two similar pieces of code could do very different things. . Data Collections . Purpose of Data Collection . To gather accurate and relevant information for specific purposes, such as solving problems, making informed decisions, or predicting future trends. . Techniques . Surveys and Questionnaires: Structured methods for gathering data from a large number of respondents. They can be administered in-person, online, or through other mediums. . Observations: Watching and recording actions or behaviors in a systematic manner. . Experiments: Conducting controlled tests or trials to determine cause and effect relationships. . Simulations: Using models to imitate real-world situations. . Interviews: One-on-one or group discussions to gain in-depth insights. . Sensors and Automated Collection: Using electronic devices to automatically collect data, like temperature sensors or traffic cameras. . Sampling: Instead of studying an entire population, a subset (or sample) can be studied to make inferences about the entire group. . Techniques include random sampling, stratified sampling, and convenience sampling. . Bias and Error . Data collection methods can introduce bias or error. It’s crucial to be aware of potential sources of bias, like leading questions in surveys or non-random sampling methods. . Privacy and Ethics . Always consider the ethical implications of data collection. Obtain consent when necessary, anonymize data to protect individuals’ privacy, and be transparent about how data will be used. . Hack #2: . def find_max(numbers): max_value = numbers[0] for number in numbers: if number &gt; max_value: max_value = number return max_value #List of numbers numbers = [23, 45, 67, 89, 12, 34, 56, 78] max_value = find_max(numbers) print(max_value) . List of numbers numbers = [23, 45, 67, 89, 12, 34, 56, 78] . TODO: Modify the given algorithm to find the minimum value in the list of numbers. Hint: You only need to change two lines of code. . # Place your code here... . Solution: . Modified Algorithm to find the minimum value. . def find_min(numbers): min_value = numbers[0] for number in numbers: if number &lt; min_value: min_value = number return min_value #alling the function min_value = find_min(numbers) print(min_value) # Output: 12 . Creating/Modifying Algorithms . Important steps for creating an algorithm: . Define functions | Initialize ways to store data (array, lists, dictionaries, etc…) | Depending on the context, use iteration to specify conditions for variable | Output generated values from the algorithm | . Helpful tips for modifying algorithms: . Understand the algorithm so you’re able to easily apply changes to it. | Break the program down into chunks. | Focus on each small part of the algorithm to get it to work. | Make sure to test individual components, and then the whole code together (This makes identifying errors, and correcting mistakes easier). | . Example (The sum of all even numbers between 1 and a given positive integer): . def sum_of_evens(n): total = 0 for i in range(2, n + 1, 2): #Note the 2 and the very end initializes a step size of 2 for the function total += i return total n = int(input(&quot;Enter a positive integer: &quot;)) result = sum_of_evens(n) print(f&quot;The sum of even numbers from 1 to {n} is {result}&quot;) . Hack #3: . TODO: Adapt the above algorithm to output for the sum of odd numbers between 1 and a given integer. . Try to come up with a unique algorithm (way) to achieve the above task. . # Place your code here... . Solution: . Think about how you would define an odd number, and output the sum of each element. . def sum_of_odd_numbers(n): total = 0 for i in range(1, n + 1): if i % 2 != 0: # Check if the number is odd total += i return total n = int(input(&quot;Enter a value for n: &quot;)) result = sum_of_odd_numbers(n) print(f&quot;The sum of odd numbers from 1 to {n} is: {result}&quot;) . Random Number Generation . RANDOM (a, b) generates a number from a to b inclusive. Each result from the randomization is equally likely to occur. Using random number generation in a program means each execution may produce a different result. We can use the results from randomization to program simulations. . What are the possibities for Answ3? Answ1 (0,2) #This means Answ1 can be anywhere from 0 to 2 Answ2 (1,5) #This means Answ1 can be anywhere from 1 to 5 Answ3 = Answ1 + Answ2 . ﻿The lowest number answ1 will generate is 0 and the lowest number answ2 will generate is 1. Therefore, the lowest number answ3 could be is 1. The highest number answ1 will generate is 2 and the highest number answ2 will generate is 5. Therefore, the highest number answ3 could be is 7. . Generating Random Values: . In AP CSP, students learn to generate random values using certain code constructs, like the random module in Python which allows for random integer generation between specified values using random.randint(a, b)​1​. This random number generation introduces an element of unpredictability, vital for many programming applications. Application in Simulations: | Random values are crucial in simulations, mimicking real-world unpredictability. They help in creating diverse scenarios in simulations like weather patterns or game dynamics, thus providing a more realistic or varied simulation experience. Evaluating Code Segments: | Utilizing random values can aid in evaluating code segments by testing how code reacts to varied input, which is particularly useful in identifying potential bugs or inefficiencies. | . If you roll a die 3 times, and take the sum of all your rolls, what is the highest possible amount and the lowest possible amount you can get? . Roll 1 (1,6) Roll 2 (1,6) Roll 3 (1,6) . Lowest: 3 Most: 18 . import random def generate_random(): value = random.randint(1, 100) print(f&#39;Random value between 1 and 100: {value}&#39;) dice_roll = random.randint(1, 6) print(f&#39;Dice Roll: {dice_roll}&#39;) # Call the function generate_random() . Hack #4 . Lets continue the fun… Make an algorithm that assigns 5 days with a random temperatures between 60-90 degrees Fahrenheit! . # Place your code here... temp = [] days=[&quot;M&quot;,&quot;T&quot;,&quot;W&quot;,&quot;T&quot;,&quot;F&quot;] for i in range(0, 5): temp = random.randint(60, 90) print(days[i], temp) . Solution: . How can you iterate between a range of 5 days, along with generate a random temperature between 60-90? . import random def simulate_weather(): for day in range(1, 6): temperature = random.randint(60, 90) print(f&#39;Day {day}: Temperature: {temperature}°F&#39;) # Call the function simulate_weather() . Homework: . Create a program that follows the Collatz Conjecture. | If a number is even, divide by 2. . If a number is odd, multiply by 3 and add 1. . If implemented correctly this algorithm will eventually go to 1. Try defining the initial number with any number beside 1 to see an interesting ouput. Output the result as a list. You may set a starting value for the list, so that the program can generate the list of numbers created when following the process. . Ideas for above 90%: Try implementing user input into this program. Ask the user to enter a number they would like to start with. . # Place your code here... . Create an algorithm that generates terms to the Fibonacci Sequence which outputs a specific number of terms defined in your code. The sequence starts off like 1, 1, 2, 3, 5, … each following term being the sum of the previous two. | Ideas for above 90%: . Add user input | Display error message when an invalid input is specified | Find a way for the program to only specify a specific term in the sequence | . # Place your code here... . Make a statistics calculator that calculates the mean, median, and mode of a specific series. Do this using iteration and without the use of imported modules (like the statistics one) that allows you to call pre defined functions like mean, median, and mode. Each of these calculations follows an algorithm. | Ideas for above 90%: . Randomly generate a list of numbers (you can define it as a list of 5) to apply the calculator to. | If you can, generate a random number of elements in the data set as well (keep it between 5-10 elements). | . # Place your code here... .",
            "url": "http://localhost:4100/teacher_portfolio/2023/10/17/P2-Devoloping-Algortithims_IPYNB_2_.html",
            "relUrl": "/2023/10/17/P2-Devoloping-Algortithims_IPYNB_2_.html",
            "date": " • Oct 17, 2023"
        }
        
    
  
    
        ,"post103": {
            "title": "P1 Lists and search",
            "content": "Lists + Binary Search . List Operations . aList[i] - This access your list at index i. An index is a numeric value that represents the position of an element within that data structure. For example, the first element of aList is at index 1, represented by aList[1]. | x &lt;- aList[i] - Assigns value of aList[i] to variable x | aList[i] &lt;- x - Assigns value of x to aList[i] | aList[i] &lt;- aList[j] - Assigns value of aList[j] to aList[i] . | INSERT(aList, i , value) - aList is the list in which you want to insert the value. i is the index at which you want to insert the value. value is the value you want to insert at that index | APPEND(aList, value) - The value you put in is placed at the end of aList | REMOVE(aList, i) - aList is the list in which you want to delete the value. i is the index at which you want to delete the value. | LENGTH(aList) - Gives you the number of elements in aList . | FOR EACH item IN aList { blah blah blah } - Item is a var assigned each element of aList in order from first element to last. The code inside the for loop is run once for every assignment of item. | . 1. FOR EACH item IN aList { PRINT(item) } This code iterates through each element (item) in the list aList and for each item, it prints the value of that item. 2. FOR i FROM 0 TO LENGTH(aList) { IF aList[i] == 42 THEN PRINT(&quot;Found 42 at index &quot; + i) } This code iterates through each index from 0 to LENGTH(aList). For each index i, it checks if the value at that index in aList is equal to 42. If it finds 42 at any index, it prints a message indicating that it found 42 at that index. . What does this code output unusual, bold, away; index = 3 | Comparing Python and College Board Pseudo Code . Creating a List Python: my_list = [1, 2, 3] Pseudo Code: my_list ← [1, 2, 3] Accessing Elements Python: value = my_list[index] Pseudo Code: value &lt;- my_list[index] Appending Elements Python: my_list.append(new_value) Pseudo Code: Append new_value to my_list Inserting Elements Python: my_list.insert(index, new_value) Pseudo Code: Insert new_value at index in my_list Removing Elements Python: my_list.remove(value) Pseudo Code: Remove value from my_list Modifying Elements Python: my_list[index] = new_value Pseudo Code: my_list[index] &lt;- new_value Checking Length Python: length = len(my_list) Pseudo Code: length &lt;- Length of my_list Iterating through a List Python: for item in my_list: { &lt;block of statement&gt; } Pseudo Code: For each item in my_list: { &lt;block of statement&gt; } Checking for Existence Python: if value in my_list: { &lt;block of statement&gt; } Pseudo Code: If value is in my_list: { &lt;block of statement&gt; } List Slicing Python: sub_list = my_list[start:end] Pseudo Code: sub_list &lt;- my_list[start:end] . Popcorn Hack . Add 5 to the list in between 4 and 6 in both python and pseudo code list = [1, 2, 3, 4, 6, 7] . More Pseudo Code and Python . Psuedocode for Sum of Even Number List Set sum to 0 For each score in the list nums: If (score MOD 2 = 0): Add score to sum Display the value of sum as the sum of even numbers in the list In Python: nums = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10] even_sum = 0 for score in nums: if score % 2 == 0: # Check if the remainder when divided by 2 is 0 (even number) even_sum += score # If previous requirement is fulfilled, add to sum print(&quot;Sum of even numbers in the list:&quot;, even_sum) . Minimum Value List: def find_minimum_value(input_list): if len(input_list) == 0: return None min_value = input_list[0] for num in input_list[1:]: if num &lt; min_value: min_value = num return min_value my_list = [5, 2, 9, 1, 8, 3] min_value = find_minimum_value(my_list) print(&quot;Minimum value:&quot;, min_value) . Binary Search . Binary Search is a method of searching for an element in a list. | Binary Search is faster than Linear Search | How does Binary Search work? . | Worst Case Scenario: 4 Iterations | . arr = [2, 7, 12, 29, 33, 50, 59, 61, 68, 88, 91] iterations = 0 def binary_search(arr, target, iterations): left = 0 right = len(arr) - 1 while left &lt;= right: mid = (left + right) // 2 iterations += 1 if arr[mid] == target: return mid # Element found, return its index elif arr[mid] &lt; target: left = mid + 1 # Search the right half else: right = mid - 1 # Search the left half target = 7 position = binary_search(arr, target, iterations) print(f&quot;The element {target} is at index {position}.&quot;) print(f&quot;Iterations: {iterations}&quot;) . Big O Notation . Big O notation is a way to measure the upper limit of a function’s runtime. | Common Big O Notations: | O(1): Constant time (Ex. searching up an element by index) | O(log n): As input size increases, time grows slowly (Binary Search!) | O(n): Linear time: As input size increases, time grows proportionally. (Linear Search) | O(2^n): Exponential time: Highly inefficient, as input size increases, time grows exponentially. (Brute force) | O(n!): Factorial time: Extremely inefficient, often used to find all possible permutations of a problem. | . Homework . 1) Write an expression that uses list indexing and list procedures. Write comments on your code to show what each line is doing. 2) Write a python function that can determine the worst case number of iterations of a binary search for an array of length 20. . 3) You have a list `myList` containing the following elements: [10, 20, 30, 40, 50]. FOR i FROM 0 TO LENGTH(myList) { x &lt;- myList[i] myList[i] &lt;- x * 2 } What will be the final content of `myList` after executing this algorithm? A) [20, 40, 60, 80, 100] B) [10, 20, 30, 40, 50] C) [10, 40, 30, 20, 50] D) [50, 40, 30, 20, 10] .",
            "url": "http://localhost:4100/teacher_portfolio/2023/10/17/P1_Lists_and_Search_IPYNB_2_.html",
            "relUrl": "/2023/10/17/P1_Lists_and_Search_IPYNB_2_.html",
            "date": " • Oct 17, 2023"
        }
        
    
  
    
        ,"post104": {
            "title": "Javascript Object Oriented Programming",
            "content": "Javascript class . A class can be thought of as anything that you would consider an object in real life Computer | Cat | Person | . | Just like any of those objects a class will have attributes and actions that it can perform | This can be thought of as a “Has-a” relationship Cat Has a Tail | Has fur | Has the ability to make a sound | . | . | . Purpose of object oriented programming . Classes are the building blocks of object oriented programming | Classes can be used to help organize your code Instead of looking through a 1000 line file of code to figure out what needs to be changed to make your dog walk to the left rather than to the right, you can just look in your 50 line class for dog and know exactly what needs to be changed | . | Having organization in your code will make it so anyone can easily start working on your project with you | Classes make it so you can reuse your code Instead of coding 20 cats from scracth to add to your cat daycare app you can define a cat class and make 20 cat instances quickly | . | . Making a class . A class in javascript is composed of three parts A Constructor (constructor) Defines what will be passed to this class and what this class will contain when it has been created | . | Attributes (this.*) Variables associated with the class that may be used inside or outside of the class | . | Functions (see makeSound() below) Functions that can be called from inside or outside the class to make the object do something | . | . | Below is an example of the cat class from earlier | . %%js class Cat{ constructor(furColor, weight, breed, sound){ // &#39;this&#39; here is used to say that this attribute belongs to this class this.furColor = furColor; this.weight = weight; this.breed = breed; this.sound = sound; } makeSound() { console.log(this.sound); // Additional code to make sound goes here } } // define the variables we will pass into our cat class var furColor = &quot;Black&quot;; var weight = 9; var breed = &quot;Bombay&quot; var sound = &quot;meow&quot; // to make a new cat you need to call new and pass // all of the variables that the cat constructor is expecting var cat = new Cat(furColor, weight, breed, sound); // call a class function cat.makeSound(); . &lt;IPython.core.display.Javascript object&gt; . %%js // Make a small class that could relate to your passion project here . Extending a class . Classes can extend other classes to generalize a group of similar classes A laptop class and desktop class might extend a computer class | . | These type of classes are known as parent and child classes or can be thought of as having an “is-a” relationship A laptop is a computer | The computer is the parent class and the laptop is the child class | . | Variables and functions defined in the parent class can be called with the child class | . %%js class Pet{ constructor(name, weight, breed){ this.name = name; this.weight = weight; this.breed = breed; } print() { console.log(this.name, this.weight, this.breed, this.getSound()); } getSound() { return &quot;none&quot;; // Additional code to make sound goes here } } // use the extends keyword to say what the parent class of this class is class Cat extends Pet{ constructor(name, weight, breed, sound){ // use super to call the parent constructor here super(name, weight, breed); this.sound = sound; } getSound() { return this.sound; // Additional code to make sound goes here } } class Dog extends Pet{ constructor(name, weight, breed, sound){ super(name, weight, breed); this.sound = sound; } getSound() { return this.sound; // Additional code to make sound goes here } } // define the variables we will pass into our pet class var fishName = &quot;Goldy&quot;; var fishWeight = 0.1; var fishBreed = &quot;Gold Fish&quot;; // construct fish var fish = new Pet(fishName, fishWeight, fishBreed); // define the variables we will pass into our cat class var catName = &quot;Ziggy&quot;; var catWeight = 9; var catBreed = &quot;Bombay&quot;; var catSound = &quot;Meow&quot;; // construct cat var cat = new Cat(catName, catWeight, catBreed, catSound); // define the variables we will pass into our dog class var dogName = &quot;Fido&quot;; var dogWeight = 50; var dogBreed = &quot;Mutt&quot;; var dogSound = &quot;Bark&quot;; // construct dog var dog = new Dog(dogName, dogWeight, dogBreed, dogSound); var animals = [fish, cat, dog]; // Use an array to store the animals for (var animal of animals) { animal.print(); } . &lt;IPython.core.display.Javascript object&gt; . %%js // Make a parent class and a child class related to your passion project . Draw.io . Draw.io is a tool that you can use right in vscode as an extension | This tool can help you visualize the classes you have in your program and how they relate to eachother | . . . In this project we added multiple classes | This draw io board shows that a parent class can also extend a class Game object is the parent of Character which is the parent of Dog and Monkey | You can go as many levels as you need to with this | . | You can add all of the attributes and functions associated with each class as well making it much easier to see the structure of the program at a glance | . Hacks . Take some of the separated features of your passion project that you have and make classes out of them | See if any of the features have a structure that would benifit from making a parent class and child classes | Make a Draw.io diagram of the program | .",
            "url": "http://localhost:4100/teacher_portfolio/2023/10/16/js_object_oriented_programming_IPYNB_2_.html",
            "relUrl": "/2023/10/16/js_object_oriented_programming_IPYNB_2_.html",
            "date": " • Oct 16, 2023"
        }
        
    
  
    
        ,"post105": {
            "title": "JPA",
            "content": "What is JPA? . JPA, which stands for Java Persistence API, is a specification for persisting data with Java objects. (Persistence means that the object is stored in a database). JPA has multiple implementations, the most popular being Hibernate. Hibernate is an ORM tool. ORM, or Object Relational Mapping, maps a Java object to a database. This allows us to do CRUD operations (create, read, update, and delete data) on the object. . Note that Spring Data JPA and JPA are two different things. Spring Data JPA abstracts JPA. It reduces the amount of boilerplate code that programmers have to write by providing repositories for CRUD operations. This means that SQL knowledge isn’t required to work with Spring Boot. However, knowing SQL can help you perform more powerful queries. . Below is a helpful visualization of the relationship between JPA, Spring Data JPA, Hibernate, and ORM (credit to Amigoscode): . . . Setup . Within the mvc folder in spring_portfolio, create a new folder and give it a name. The new folder will hold the POJO (entity class), API controller, and JPA repository. You can name the files anything, but the convention for JPA repository is to include JpaRepository or Repository within the name. In this example, the JPA repository file is named UserJpaRepository.java. . . This blog will use a user database as an example. For reference, this is what the User POJO (User.java) looks like. Attributes of the user include the user’s email, password, and name. Note that there are lots of annotations (the lines that start with a @) that can add more features to the attributes. . @Data @AllArgsConstructor @NoArgsConstructor @Entity public class User { @Id @GeneratedValue(strategy = GenerationType.AUTO) private Long id; private String email; private String password; private String firstName; private String lastName; } . This is what the user table looks like: . . . There are many ways to perform CRUD operations in Spring. This blog will cover derived queries, JPQL, and native queries. . Derived Queries . Derived queries are simple methods such as findBy, readBy, getBy, etc. Spring Data translates the derived queries into the JPQL (Java Persistence Query Language) query (which is then translated into SQL), making things easier for you. . To create derived queries, open the JPA repository file. The file looks similar to this: . public interface UserJpaRepository extends JpaRepository&lt;User, Long&gt; { } . One thing to note is that the generic (ex: &lt;User, Long&gt;) takes in two type parameters. The first is the entity type (the name of the POJO class), in this case, User. The second is the type of the ID found in the POJO (since ID was declared as private Long id; in User.java, the second type parameter is Long). . You can create derived queries within the interface. Let’s say we want to obtain a list of users based on their last name. The findBy method can be used to achieve this: . public interface UserJpaRepository extends JpaRepository&lt;User, Long&gt; { List&lt;User&gt; findByLastName(String lastName); } . findBy&lt;Attribute&gt; finds the column in the table that is associated with the attribute. For example, when Spring sees findByLastName, it will look at the column that is associated with LastName. Note that SQL tables and Java have different naming conventions. When declaring a variable in Java, an uppercase letter is used to symbolize a space (ex: lastName for last name). In an SQL table’s column names, spaces are separated by a “_”. . For example, the user table’s column has first_name and last_name, not firstName and lastName. This difference is important to note, an example of this will be covered later. . . . Additionally, the return type of the method is List&lt;User&gt;. This is because there can be multiple User objects that have the last name we are looking for, so a list of users needs to be returned. . findByLastName tells Spring to look at the last_name column in the user database. Spring will then return the users that have the requested last name in a list. Something to note here is that the first letter of the attribute in the findBy method is capitalized. In this case, the “l” in findByLastName is capitalized. This tells Spring to look for the column name associated with the attribute lastName. The Spring Data JPA documentation provides an interesting read on how Spring determines the attribute from the query method. . Lastly, (String lastName) takes in a last name as an input. . findByLastName(String lastName) can be tested with an API Controller. . The API Controller class (UserApiController.java) looks like this: . @RestController @RequestMapping(&quot;/api/users&quot;) public class UserApiController { @Autowired private UserJpaRepository userRepo; @GetMapping(&quot;/search&quot;) public ResponseEntity&lt;List&lt;User&gt;&gt; search() { return new ResponseEntity&lt;&gt;(userRepo.findByLastName(&quot;Van Pelt&quot;), HttpStatus.OK); } } . The first thing we want to do in the API Controller class is to autowire the JPA repository: . @Autowired private UserJpaRepository userRepo; . Autowire does dependency injection, which means it injects beans into the class it’s in. This is a long and interesting topic that I may write another blog post about when I have time. In simplified terms, Autowire has Spring instantiate objects so that programmers don’t need to do it themselves. . Afterwards, create an endpoint that returns the User objects with a last name of “Van Pelt” in JSON. Here, the findByLastName method (which was defined in the JPA repository) is called, with an input of “Van Pelt” as the last name. When a GET request is sent to the endpoint, Spring will search the user table for users that have a last name of “Van Pelt”. . return new ResponseEntity&lt;&gt;(userRepo.findByLastName(&quot;Van Pelt&quot;), HttpStatus.OK); . Accessing the endpoint on Postman returns the two users who have a last name of “Van Pelt”: . . . Other query methods . List&lt;entity class&gt; findByAttributeContaining(String a);: Returns a list of objects whose attribute has a substring that matches the input’s string . | List&lt;entity class&gt; findByAttributeNotNull();: Returns a list of objects whose attribute is not null . | . . Example . JPA repository . public interface UserJpaRepository extends JpaRepository&lt;User, Long&gt; { List&lt;User&gt; findByLastName(String lastName); List&lt;User&gt; findByFirstNameContaining(String letters); List&lt;User&gt; findByLastNameNotNull(); } . API Controller . @RestController @RequestMapping(&quot;/api/users&quot;) public class UserApiController { @Autowired private UserJpaRepository userRepo; @GetMapping(&quot;/search&quot;) public ResponseEntity&lt;List&lt;User&gt;&gt; search() { return new ResponseEntity&lt;&gt;(userRepo.findByLastName(&quot;Van Pelt&quot;), HttpStatus.OK); } @GetMapping(&quot;/partial&quot;) public ResponseEntity&lt;List&lt;User&gt;&gt; partial() { return new ResponseEntity&lt;&gt;(userRepo.findByFirstNameContaining(&quot;oo&quot;), HttpStatus.OK); } @GetMapping(&quot;/haslastname&quot;) public ResponseEntity&lt;List&lt;User&gt;&gt; hasLastName() { return new ResponseEntity&lt;&gt;(userRepo.findByLastNameNotNull(), HttpStatus.OK); } } . In this example, findByFirstNameContaining outputs users whose first name contains the substring “oo”: . . In this example, findByLastNameNotNull outputs users who have a last name: . . . JPQL Query . Sometimes simply creating methods using derived queries is not enough. JPQL is more flexible in that it provides a query language that looks similar to SQL. One important thing to note is that JPQL is based on entities, so JPQL queries are based on classes and attributes. JPQL queries are not based on the database tables, which makes it different from SQL. The database, however, still uses SQL. JPA implementations like Hibernate translate the JPQL query into SQL to work with the database. . Here’s an example of a JPQL query that does the same thing as findByLastName(). . @Query(&quot;SELECT u FROM User u where u.lastName = ?1&quot;) List&lt;User&gt; findByLastNameQuery(String lastName); . First, use the @Query annotation, and then define the query in JPQL. In this example, the query selects the User entity and finds the user objects where the user’s last name matches the input. Additionally, the u in the query is an alias for the User class. You can think of it as a variable that refers to the User class. This alias makes it quicker when referring to User in the query. The alias can be anything. For instance, “SELECT a FROM User a where a.lastName = ?1” would also work. . Next, add the method declaration after the annotation. You can name the method name (ex: findByLastNameQuery) anything. . Positional parameters and named parameters . In the query SELECT u FROM User u where u.lastName = ?1&quot;, ?1 is a positional parameter. This means that ?1 will correspond to the 1st parameter in the method (ex: lastName). So when findByLastNameQuery(&quot;Van Pelt&quot;) is called, the query becomes SELECT u FROM User u where u.lastName = &#39;Van Pelt&#39;. . You can have multiple positional parameters in the query. Here is an example of searching for a user based on both first and last name: . JPA repository: . @Query(&quot;SELECT u FROM User u where u.lastName = ?1 and u.firstName = ?2&quot;) List&lt;User&gt; findByName(String lastName, String firstName); . API Controller: . @GetMapping(&quot;/search&quot;) public ResponseEntity&lt;List&lt;User&gt;&gt; search() { return new ResponseEntity&lt;&gt;(userRepo.findByName(&quot;Brown&quot;, &quot;Charlie&quot;), HttpStatus.OK); } . Endpoint: . . . You could also assign names instead of numbers to the parameters. Below is an example of using named parameters: . @Query(&quot;SELECT u FROM User u where u.lastName = :last and u.firstName = :first&quot;) List&lt;User&gt; findByName(@Param(&quot;last&quot;) String lastName, @Param(&quot;first&quot;) String firstName); . Replace ?1 and ?2 with :&lt;parameter name&gt;, and refer to them in the method with @Param(&quot;&lt;parameter name&gt;&quot;). . . Native Queries . While JPQL provides more flexibility than derived queries, it doesn’t have all of the features of SQL. Native queries allows the programmer to execute SQL queries. The syntax of a native query is similar to a JPQL query: . @Query( value = &quot;SELECT email FROM user&quot;, nativeQuery = true ) List&lt;String&gt; findEmail(); . In this example, the SQL query is &quot;SELECT email FROM user&quot;, which returns all of the emails from the email column in the database. One thing to note is that unlike JPQL, which is based on the entity class, native queries are based on the database. Therefore, native queries should use names from the database and table columns. . Accessing the endpoint returns a list of email strings: . . . Troubleshooting . While coding in Spring Boot, it is very likely that at some point you’ll encounter errors that’ll prevent you from being able to run your backend framework. While coding in Spring for this blog, I encountered many error messages. This is what I do to resolve these errors: . Make sure the terminal window is long enough to view the entire error message. Usually, the most important error message is at the beginning, so you’ll want to be able to scroll to the beginning of the message. One of the error messages I encountered while coding looked like this: . . The error message was so long that it couldn’t fit in my terminal, so I couldn’t see the top part of the error message. I pasted the error message that occurred towards the middle of the output (similar to the the message next to the blue text in the picture) and spent a lot of time trying to figure out what was going on. I couldn’t find anything to help me fix the problem, and that was because I was searching for the wrong error. . In order to see the beginning of the output, it helps to expand your terminal. The “Spring” banner is very helpful in marking where the error message starts. . . | Copy the error and paste it into Google. ChatGPT is also a helpful tool, but it’s best to verify it by Googling. I’ve asked ChatGPT to explain some Spring Boot concepts, but found that ChatGPT provided some wrong information after double checking with Google. . | Research. Look at StackOverflow posts where people have had similar errors. Usually, you’ll learn something new after discovering how to fix the bug. For instance, while researching the error I had, I learned that derived queries were an abstraction for JPQL queries, and I learned about Hibernate and ORM. Researching about JPQL also helped me understand more about SQL. Troubleshooting can be time consuming and requires patience, but the deeper understanding gained after figuring out the solution makes the amount of time spent into it worth it. . |",
            "url": "http://localhost:4100/teacher_portfolio/2023/10/16/java_jpa_IPYNB_2_.html",
            "relUrl": "/2023/10/16/java_jpa_IPYNB_2_.html",
            "date": " • Oct 16, 2023"
        }
        
    
  
    
        ,"post106": {
            "title": "U9 Fibonacci (Teacher)",
            "content": "/* * Creator: Nighthawk Coding Society * Mini Lab Name: Fibonacci sequence * */ import java.util.ArrayList; import java.util.HashMap; import java.util.stream.Stream; /* Objective will require changing to abstract class with one or more abstract methods below */ abstract class Fibo { String name; // name or title of method int size; // nth sequence int hashID; // counter for hashIDs in hash map ArrayList&lt;Long&gt; list; // captures current Fibonacci sequence HashMap&lt;Integer, Object&gt; hash; // captures each sequence leading to final result /* Zero parameter constructor uses Telescoping technique to allow setting of the required value nth @param: none */ public Fibo() { this(8); // telescope to this(n) to avoid code duplication, using a default value } /* Construct the nth fibonacci number @param: nth number, the value is constrained to 92 because of overflow in a long */ public Fibo(int nth) { this.size = nth; this.list = new ArrayList&lt;&gt;(); this.hashID = 0; this.hash = new HashMap&lt;&gt;(); this.init(); //call abstract method } /* This Method should be &quot;abstract&quot; Leave method as protected, as it is only authorized to extender of the class Make new class that extends and defines init() Inside references within this class would change from this to super Repeat process using for, while, recursion */ protected abstract void init(); /* Number is added to fibonacci sequence, current state of &quot;list&quot; is added to hash for hashID &quot;num&quot; */ public void setData(long num) { list.add(num); hash.put(this.hashID++, list.clone()); } /* Custom Getter to return last element in fibonacci sequence */ public long getNth() { return list.get(this.size - 1); } /* Custom Getter to return last fibonacci sequence in HashMap */ public Object getNthSeq(int i) { return hash.get(i); } /* Console/Terminal supported print method */ public void print() { System.out.println(&quot;Init method = &quot; + this.name); System.out.println(&quot;fibonacci Number &quot; + this.size + &quot; = &quot; + this.getNth()); System.out.println(&quot;fibonacci List = &quot; + this.list); System.out.println(&quot;fibonacci Hashmap = &quot; + this.hash); for (int i=0 ; i&lt;this.size; i++ ) { System.out.println(&quot;fibonacci Sequence &quot; + (i+1) + &quot; = &quot; + this.getNthSeq(i)); } } } . public class FiboFor extends Fibo { public FiboFor() { super(); } public FiboFor(int nth) { super(nth); } @Override protected void init() { super.name = &quot;For Extends&quot;; long limit = this.size; // for loops are likely the most common iteration structure, all the looping facts are in one line for (long[] f = new long[]{0, 1}; limit-- &gt; 0; f = new long[]{f[1], f[0] + f[1]}) this.setData(f[0]); } /* Tester class method. If this becomes abstract you will not be able to test it directly ... Change this method to call &quot;main&quot; class of each of the extended classes */ static public void main(String[] args) { FiboFor fib = new FiboFor(); fib.print(); } } FiboFor.main(null); . Init method = For Extends fibonacci Number 8 = 13 fibonacci List = [0, 1, 1, 2, 3, 5, 8, 13] fibonacci Hashmap = {0=[0], 1=[0, 1], 2=[0, 1, 1], 3=[0, 1, 1, 2], 4=[0, 1, 1, 2, 3], 5=[0, 1, 1, 2, 3, 5], 6=[0, 1, 1, 2, 3, 5, 8], 7=[0, 1, 1, 2, 3, 5, 8, 13]} fibonacci Sequence 1 = [0] fibonacci Sequence 2 = [0, 1] fibonacci Sequence 3 = [0, 1, 1] fibonacci Sequence 4 = [0, 1, 1, 2] fibonacci Sequence 5 = [0, 1, 1, 2, 3] fibonacci Sequence 6 = [0, 1, 1, 2, 3, 5] fibonacci Sequence 7 = [0, 1, 1, 2, 3, 5, 8] fibonacci Sequence 8 = [0, 1, 1, 2, 3, 5, 8, 13] . public class FiboStream extends Fibo { public FiboStream() { super(); } public FiboStream(int nth) { super(nth); } @Override protected void init() { super.name = &quot;Stream Extends&quot;; Stream.iterate(new long[]{0, 1}, f -&gt; new long[]{f[1], f[0] + f[1]}) .limit(super.size) .forEach(f -&gt; super.setData(f[0]) ); } /* Tester class method. If this becomes abstract you will not be able to test it directly ... Change this method to call &quot;main&quot; class of each of the extended classes */ static public void main(String[] args) { FiboStream fib = new FiboStream(); fib.print(); } } FiboStream.main(null); . Init method = Stream Extends fibonacci Number 5 = 3 fibonacci List = [0, 1, 1, 2, 3] fibonacci Hashmap = {0=[0], 1=[0, 1], 2=[0, 1, 1], 3=[0, 1, 1, 2], 4=[0, 1, 1, 2, 3]} fibonacci Sequence 1 = [0] fibonacci Sequence 2 = [0, 1] fibonacci Sequence 3 = [0, 1, 1] fibonacci Sequence 4 = [0, 1, 1, 2] fibonacci Sequence 5 = [0, 1, 1, 2, 3] . Hacks . Working with common algorithms lets developer explore the language in a functional way. Two additional ways to solve fibonacci are using a while loop and recursion. This will require definition of two new child classes with a static tester method “static public void main(String[] args)” to create objects and print results. . Create while or do-while class extending parent fibonacci | Create recursive class and methods extending parent fibonacci | Create definitions and comments within code, be sure that you can discuss work. | Extra for guaranteed “A” and get you on the path to 5 on exam. Try to create a different algorithm with extend. See if you can make a parent class for Fibo and new Class extend from shared parent. Finding nth term of linear sequence | Sum the nth value of a series of numbers | Calculate the Factorial a number | Create a palindrome checker | . | Design Idea . Alternate Algorithm, Palindrome .",
            "url": "http://localhost:4100/teacher_portfolio/c4.8/c.49/2023/10/16/java-u9-fibonaccii-class_IPYNB_2_.html",
            "relUrl": "/c4.8/c.49/2023/10/16/java-u9-fibonaccii-class_IPYNB_2_.html",
            "date": " • Oct 16, 2023"
        }
        
    
  
    
        ,"post107": {
            "title": "U8 Images (Teacher)",
            "content": "Saving PNG to GIF . Image IO read and Image IO write are focus of this code. A key portion of working with Images, or any file, is to know location of the input and output directories. . import javax.imageio.ImageIO; import java.io.File; import java.io.IOException; import java.awt.image.BufferedImage; public class ImageIOTest { public static void main( String[] args ){ BufferedImage img = null; // buffer type try { // Name of file and directories String name = &quot;MonaLisa&quot;; String in = &quot;images/&quot;; String out = &quot;images/tmp/&quot;; // Either use URL or File for reading image using ImageIO File imageFile = new File(in + name + &quot;.png&quot;); img = ImageIO.read(imageFile); // set buffer of image data // ImageIO Image write to gif in Java // Documentation https://docs.oracle.com/javase/tutorial/2d/images/index.html ImageIO.write(img, &quot;gif&quot;, new File(out + name + &quot;.gif&quot;) ); // write buffer to gif } catch (IOException e) { e.printStackTrace(); } System.out.println(&quot;Success&quot;); } } ImageIOTest.main(null); . Image Scaling and ASCII Conversion . In this example we print out a row of text for each row in the image. However, it seems as if the image is too tall. To address this problem, try to output a single character per block of pixels. In particular, average the grayscale values in a rectangular block that’s twice as tall as it is wide, and print out a single character for this block. . import java.awt.Color; import java.awt.image.BufferedImage; import java.awt.Image; import java.awt.Graphics2D; import java.io.File; import java.io.FileWriter; import java.io.IOException; import java.io.PrintWriter; import java.nio.file.Files; import java.nio.file.Path; import java.nio.file.Paths; import javax.imageio.stream.ImageOutputStream; import javax.imageio.stream.ImageInputStream; import javax.imageio.metadata.IIOMetadata; import javax.imageio.IIOImage; import javax.imageio.ImageIO; import javax.imageio.ImageWriteParam; import javax.imageio.ImageWriter; import javax.imageio.ImageReader; import javax.imageio.ImageTypeSpecifier; public class Pics { private final String inDir = &quot;images/&quot;; // location of images private final String outDir = &quot;images/tmp/&quot;; // location of created files private String inFile; private String resizedFile; private String asciiFile; private String ext; // extension of file private long bytes; private int width; private int height; // Constructor obtains attributes of picture public Pics(String name, String ext) { this.ext = ext; this.inFile = this.inDir + name + &quot;.&quot; + ext; this.resizedFile = this.outDir + name + &quot;.&quot; + ext; this.asciiFile = this.outDir + name + &quot;.txt&quot;; this.setStats(); } // An image contains metadata, namely size, width, and height public void setStats() { BufferedImage img; try { Path path = Paths.get(this.inFile); this.bytes = Files.size(path); img = ImageIO.read(new File(this.inFile)); this.width = img.getWidth(); this.height = img.getHeight(); } catch (IOException e) { } } // Console print of data public void printStats(String msg) { System.out.println(msg + &quot;: &quot; + this.bytes + &quot; &quot; + this.width + &quot;x&quot; + this.height + &quot; &quot; + this.inFile); } // Convert scaled image into buffered image public static BufferedImage convertToBufferedImage(Image img) { // Create a buffered image with transparency BufferedImage bi = new BufferedImage( img.getWidth(null), img.getHeight(null), BufferedImage.TYPE_INT_ARGB); // magic? Graphics2D graphics2D = bi.createGraphics(); graphics2D.drawImage(img, 0, 0, null); graphics2D.dispose(); return bi; } // Scale or reduce to &quot;scale&quot; percentage provided public void resize(int scale) { BufferedImage img = null; Image resizedImg = null; int width = (int) (this.width * (scale/100.0) + 0.5); int height = (int) (this.height * (scale/100.0) + 0.5); try { // read an image to BufferedImage for processing img = ImageIO.read(new File(this.inFile)); // set buffer of image data // create a new BufferedImage for drawing resizedImg = img.getScaledInstance(width, height, Image.SCALE_SMOOTH); } catch (IOException e) { return; } try { ImageIO.write(convertToBufferedImage(resizedImg), this.ext, new File(resizedFile)); } catch (IOException e) { return; } this.inFile = this.resizedFile; // use scaled file vs original file in Class this.setStats(); } // convert every pixel to an ascii character (ratio does not seem correct) public void convertToAscii() { BufferedImage img = null; PrintWriter asciiPrt = null; FileWriter asciiWrt = null; try { File file = new File(this.asciiFile); Files.deleteIfExists(file.toPath()); } catch (IOException e) { System.out.println(&quot;Delete File error: &quot; + e); } try { asciiPrt = new PrintWriter(asciiWrt = new FileWriter(this.asciiFile, true)); } catch (IOException e) { System.out.println(&quot;ASCII out file create error: &quot; + e); } try { img = ImageIO.read(new File(this.inFile)); } catch (IOException e) { } for (int i = 0; i &lt; img.getHeight(); i++) { for (int j = 0; j &lt; img.getWidth(); j++) { Color col = new Color(img.getRGB(j, i)); double pixVal = (((col.getRed() * 0.30) + (col.getBlue() * 0.59) + (col .getGreen() * 0.11))); try { asciiPrt.print(asciiChar(pixVal)); asciiPrt.flush(); asciiWrt.flush(); } catch (Exception ex) { } } try { asciiPrt.println(&quot;&quot;); asciiPrt.flush(); asciiWrt.flush(); } catch (Exception ex) { } } } // conversion table, there may be better out there ie https://www.billmongan.com/Ursinus-CS173-Fall2020/Labs/ASCIIArt public String asciiChar(double g) { String str = &quot; &quot;; if (g &gt;= 240) { str = &quot; &quot;; } else if (g &gt;= 210) { str = &quot;.&quot;; } else if (g &gt;= 190) { str = &quot;*&quot;; } else if (g &gt;= 170) { str = &quot;+&quot;; } else if (g &gt;= 120) { str = &quot;^&quot;; } else if (g &gt;= 110) { str = &quot;&amp;&quot;; } else if (g &gt;= 80) { str = &quot;8&quot;; } else if (g &gt;= 60) { str = &quot;#&quot;; } else { str = &quot;@&quot;; } return str; } // tester/driver public static void main(String[] args) throws IOException { Pics monaLisa = new Pics(&quot;MonaLisa&quot;, &quot;png&quot;); monaLisa.printStats(&quot;Original&quot;); monaLisa.resize(33); monaLisa.printStats(&quot;Scaled&quot;); monaLisa.convertToAscii(); Pics pumpkin = new Pics(&quot;pumpkin&quot;, &quot;png&quot;); pumpkin.printStats(&quot;Original&quot;); pumpkin.resize(33); pumpkin.printStats(&quot;Scaled&quot;); pumpkin.convertToAscii(); } } Pics.main(null); . Hacks . Continue to work with Classes, Arrays, and 2D arrays. FYI, you may need to make a directory /tmp under notebook images. . Look at comments above and see if there is better conversions for ASCII to reduce elongation and distortion. | Try to convert images into Grey Scale, Red Scale, Blue Scale, and Green Scale. | Previous Code - Image Code . Design Idea - Runtime .",
            "url": "http://localhost:4100/teacher_portfolio/c6.2/2023/10/16/java-u8-image-2D_IPYNB_2_.html",
            "relUrl": "/c6.2/2023/10/16/java-u8-image-2D_IPYNB_2_.html",
            "date": " • Oct 16, 2023"
        }
        
    
  
    
        ,"post108": {
            "title": "U5 Menu Class (Teacher)",
            "content": "Console Based Menu . Java imports allow user input and console output to be displayed in Terminal . Objects Used . Makes Object from Scanner Class to obtain inputs / menu selection from User | Use System Class, to call static methods System.out.print and System.out.println to output to console | User Math Class, to call static method Math.random() to generate random number | . Other College Board Topics . A 2D array is used to store COLORS | A Control Structure, Switch, is used to process Menu select to code that performs related action | . Key PBL Topic . Menu class when instantiated with new Menu() takes over Frontend experience with user. This is relevant to Draw Lab in this article and how Spring Boot works in Web programming. Objects are intended to encapsulate Frontend, Backend or experience … Web Site control flow, Database CRUD operations, or a Menu in terminal (this example) | . // imports allow you to use code already written by others. It is good to explore and learn libraries. The names around the dots often give you a hint to the originator of the code. import java.util.Scanner; //library for user input import java.lang.Math; //library for random numbers public class Menu { // Instance Variables public final String DEFAULT = &quot; u001B[0m&quot;; // Default Terminal Color public final String[][] COLORS = { // 2D Array of ANSI Terminal Colors {&quot;Default&quot;,DEFAULT}, {&quot;Red&quot;, &quot; u001B[31m&quot;}, {&quot;Green&quot;, &quot; u001B[32m&quot;}, {&quot;Yellow&quot;, &quot; u001B[33m&quot;}, {&quot;Blue&quot;, &quot; u001B[34m&quot;}, {&quot;Purple&quot;, &quot; u001B[35m&quot;}, {&quot;Cyan&quot;, &quot; u001B[36m&quot;}, {&quot;White&quot;, &quot; u001B[37m&quot;}, }; // 2D column location for data public final int NAME = 0; public final int ANSI = 1; // ANSI is the &quot;standard&quot; for terminal codes // Constructor on this Object takes control of menu events and actions public Menu() { Scanner sc = new Scanner(System.in); // using Java Scanner Object this.print(); // print Menu boolean quit = false; while (!quit) { try { // scan for Input int choice = sc.nextInt(); // using method from Java Scanner Object System.out.print(&quot;&quot; + choice + &quot;: &quot;); quit = this.action(choice); // take action } catch (Exception e) { sc.nextLine(); // error: clear buffer System.out.println(e + &quot;: Not a number, try again.&quot;); } } sc.close(); } // Print the menu options to Terminal private void print() { //System.out.println commands below is used to present a Menu to the user. System.out.println(&quot;- n&quot;); System.out.println(&quot;Choose from these choices&quot;); System.out.println(&quot;- n&quot;); System.out.println(&quot;1 - Say Hello&quot;); System.out.println(&quot;2 - Output colors&quot;); System.out.println(&quot;3 - Loading in color&quot;); System.out.println(&quot;0 - Quit&quot;); System.out.println(&quot;- n&quot;); } // Private method to perform action and return true if action is to quit/exit private boolean action(int selection) { boolean quit = false; switch (selection) { // Switch or Switch/Case is Control Flow statement and is used to evaluate the user selection case 0: System.out.print(&quot;Goodbye, World!&quot;); quit = true; break; case 1: System.out.print(&quot;Hello, World!&quot;); break; case 2: for(int i = 0; i &lt; COLORS.length; i++) // loop through COLORS array System.out.print(COLORS[i][ANSI] + COLORS[i][NAME]); break; case 3: System.out.print(&quot;Loading...&quot;); for (int i = 0; i &lt; 20; i++) { // fixed length loading bar int random = (int) (Math.random() * COLORS.length); // random logic try { Thread.sleep(100); // delay for loading } catch (Exception e) { System.out.println(e); } System.out.print(COLORS[random][ANSI] + &quot;#&quot;); } break; default: //Prints error message from console System.out.print(&quot;Unexpected choice, try again.&quot;); } System.out.println(DEFAULT); // make sure to reset color and provide new line return quit; } // Static driver/tester method static public void main(String[] args) { new Menu(); // starting Menu object } } Menu.main(null); . Desktop GUI Menu . Swing and AWT imports allow Java to provide a Graphical User Interface on the desktop. . Other College Board Topics . A 1D array is used to store MENUS | A Control Structure, if-else if-else, is used to process Menu selection to code that performs related action | . Using Objects . Javax Swing UI (JFrame) | Timer with a TimerTask to allow action to repeatedly occur without halting thread. | . import java.awt.*; import java.awt.event.*; import javax.swing.*; import java.util.Timer; import java.util.TimerTask; // Graphical-User-Interface for Desktop in Java using Java Swing. public class MenuJFrame extends JFrame implements ActionListener { private JFrame frame; private JMenuBar menubar; private JMenu menu; private JLabel message = new JLabel(&quot;Click on Menu to select an action.&quot;); public final String[] MENUS = { // 1D Array of Menu Choices &quot;Hello&quot;, &quot;Colors&quot;, &quot;Loading bar&quot;, }; // Statics to assist with timer and messaging, single copy (no instance) private static int delay = 20; private static int step = 1; private static String hashes = &quot;&quot;; // Constructor enables the Frame instance, the object &quot;this.frame&quot; public MenuJFrame(String title) { // Initializing Key Objects frame = new JFrame(title); menubar = new JMenuBar(); menu = new JMenu(&quot;Menu&quot;); // Initializing Menu objects and adding actions for (String mx : MENUS) { JMenuItem m = new JMenuItem(mx); m.addActionListener(this); menu.add(m); } // Adding / Connecting Objects menubar.add(menu); frame.setJMenuBar(menubar); frame.add(message); // Sets JFrame close operation to Class variable JFrame.EXIT_ON_CLOSE frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE); // set the size of window based on objects frame.setSize(300,200); // makes the frame object visible according to properties previously set frame.setVisible(true); // flow of control shifts to frame object } // event from user selecting a menu option public void actionPerformed(ActionEvent e) { // local variable to ActinEvent String selection = e.getActionCommand(); // menu selection String msg; // local variable to create response from action final String[] COLORS = {&quot;Red&quot;, &quot;Green&quot;, &quot;Blue&quot;}; // add more colors here final String start_msg = &quot;&lt;html&gt;&quot;; // html building final String end_msg = &quot;&lt;/html&gt;&quot;; final String hash = &quot;#&quot;; // run code based on the menuItem that was selected if ( selection.equals(MENUS[0]) ) { // Hello Action msg = &quot;Hello, World&quot;; message.setText(msg); } else if ( selection.equals(MENUS[1]) ) { // Color Action msg = start_msg + &quot;&lt;p&gt;&quot; + selection + &quot;&lt;/p&gt;&quot;; for (String color : COLORS) { msg += &quot;&lt;font color=&quot; + color + &quot;&gt;&quot; + color + &quot; &lt;/font&gt;&quot;; } msg += end_msg; message.setText(msg); } else { // Loading Bar Action String loading = &quot;&lt;p&gt;Loading&lt;/p&gt;&quot;; // Code to run on a Timer Timer timer = new Timer(); TimerTask task = new TimerTask() { public void run() { // Method for TimerTask // Static and Local variables used to manage message building int random = (int) (Math.random() * COLORS.length); // random logic MenuJFrame.hashes += &quot;&lt;font color=&quot; + COLORS[random] + &quot;&gt;&quot; + hash + &quot;&lt;/font&gt;&quot;; String msg = start_msg + loading + hashes + end_msg; message.setText(msg); // Shutdown timer and reset data if(MenuJFrame.step++ &gt; MenuJFrame.delay) { MenuJFrame.step = 1; MenuJFrame.hashes=&quot;&quot;; timer.cancel(); } }; }; // Schedule task and interval timer.schedule(task, 200, 200); message.setText(start_msg + loading + hash + end_msg); // prime/initial display } } // Driver turn over control the GUI public static void main(String[] args) { // Activates an instance of MenuJFrame class, which makes a JFrame object new MenuJFrame(&quot;Menu&quot;); } } MenuJFrame.main(null); . Hacks . College Board and CTE competences. . Documentation / Analysis. Describe with Markdown Cell(s) and triple backtick code fragments that answers to the following from your work… Explain where a Class is defined | Explain where an instances of a Class is defined | Explain where an object is Calling a Method | Explain where an object is Mutating data | Describe Console and GUI differences differences. | . | Build a new Console or GUI menu for your FRQs. This allows sharing a single project with each person working on a different FRQ, The menu visualization and organization can make it easier for team to present in a unified manner. Use constructors and instance data. The two menus are activated by a new, understand what that means. | Use static methods and data. The Math Class typically performs calculations using static methods. | . | .",
            "url": "http://localhost:4100/teacher_portfolio/c3.0/c3.1/c4.5/2023/10/16/java-u5-menu-class_IPYNB_2_.html",
            "relUrl": "/c3.0/c3.1/c4.5/2023/10/16/java-u5-menu-class_IPYNB_2_.html",
            "date": " • Oct 16, 2023"
        }
        
    
  
    
        ,"post109": {
            "title": "U1 Grade Calculator (Teacher)",
            "content": "Overview . College Board Unit 1 has a focus on primitive types of int, double, and boolean. In Unit 1, String is mentioned, but it is NOT a primitive type. A String is essentially a sequence of characters and is called a reference data type, where each character is represented by the primitive char data type. . This mini-lab covers a comprehensive overview of Java primitive types, input/output, and the use of wrapper classes and reference data types. The examples and explanations provided will greatly assist students in understanding these concepts and applying them in their own code. . The mini-lab “Hacks” covers the essential aspects of primitive types in a concise manner. It provides students with opportunities for hands-on practice and encourages them to think creatively with the suggested activities. . Data Types . Unit 1 focuses on primitive data types. Now is a good time to compare primitives with other Java data types. Review and compare data types with a focus on those prefixed with an asterisk, as they are required knowledge by College Board and will be on the AP Exam. . Primitive Data Types: These are the basic data types in Java, representing fundamental values. . *boolean: Represents true or false values. | byte: Represents a signed 8-bit integer value. | short: Represents a signed 16-bit integer value. | *int: Represents a signed 32-bit integer value. | long: Represents a signed 64-bit integer value. | float: Represents a single-precision 32-bit floating-point value. | *double: Represents a double-precision 64-bit floating-point value. | char: Represents a single Unicode character. | . Reference Data Types: These are more complex data types that can hold a collection of values or represent custom-defined entities. . *String: Represents a sequence of characters. | *Arrays: Represents a collection of elements of the same data type. | *Classes: In Java, classes can be used to define custom data structures and entities that may contain primitives, strings, enums, wrapper classes, or arrays. Programmers define their own reference data types to create abstract data types or data structures. A Users class or a Graph class for Graph Theory are custome data types. | *Collection Framework: Java provides built-in classes like ArrayList, Queue, Stack, and HashMap as part of the Collections framework. A collection is an object that can hold references to other objects. The Generic type declaration (ie &lt;Integer&gt;) allows the prorgrammer to provide the type of Object that a collection will contain, | . Hybrid Data Types . *Wrapper Classes: Represents primitive data types as oan bjects (e.g., Boolean, Integer, Double). They are classes but still behave like behavior of primitive types with regards to pass-by-value . Therefore, they are not considered true reference data types. | Enums: Enums: Represents a fixed set of constants that are immutable. Enums are useful for representing a predefined set of values (ie public enum Suit {SPADES, CLUBS, HEARTS, DIAMONDS};). | . public class DefinePrimitives { public static void main(String[] args) { int anInt = 100; double aDouble = 89.9; boolean aBoolean = true; // not primitives but essential String aString = &quot;Hello, World!&quot;; // wrapper class shortcut assignment String aStringFormal = new String(&quot;Greetings, World!&quot;); System.out.println(&quot;anInt: &quot; + anInt); System.out.println(&quot;aDouble: &quot; + aDouble); System.out.println(&quot;aBoolean: &quot; + aBoolean); System.out.println(&quot;aString: &quot; + aString); System.out.println(&quot;aStringFormal: &quot; + aStringFormal); } } DefinePrimitives.main(null) . Input Primitive data . Input is a key concept to all programming. The assignments in previous example are “static” or “hard coded”. The examples when you use input are supplied by the user. . Scanner is the java utility class for console input. . // import the Scanner class from the java.util package. import java.util.Scanner; // class must alway have 1st letter as uppercase, CamelCase is Java Class convention public class ScanPrimitives { public static void main(String[] args) { Scanner input; // primitive int input = new Scanner(System.in); System.out.print(&quot;Enter an integer: &quot;); try { int sampleInputInt = input.nextInt(); System.out.println(sampleInputInt); } catch (Exception e) { // if not an integer System.out.println(&quot;Not an integer (form like 159), &quot; + e); } finally { input.close(); } // primitive double input = new Scanner(System.in); System.out.print(&quot;Enter a double: &quot;); try { double sampleInputDouble = input.nextDouble(); System.out.println(sampleInputDouble); } catch (Exception e) { // if not a number System.out.println(&quot;Not an double (form like 9.99), &quot; + e); } finally { input.close(); } // primitive boolean input = new Scanner(System.in); System.out.print(&quot;Enter a boolean: &quot;); try { boolean sampleInputBoolean = input.nextBoolean(); System.out.println(sampleInputBoolean); } catch (Exception e) { // if not true or false System.out.println(&quot;Not an boolean (true or false), &quot; + e); } finally { input.close(); } // wrapper class String input = new Scanner(System.in); System.out.print(&quot;Enter a String: &quot;); try { String sampleInputString = input.nextLine(); System.out.println(sampleInputString); } catch (Exception e) { // this may never happen System.out.println(&quot;Not an String, &quot; + e); } finally { input.close(); } } } ScanPrimitives.main(null); . Output Primitive Data . The second key to to all programming is Output. All programming has means to format and combine data. In these examples you see descriptions of the mathematical operation combine with the result of the operation. . public class PrimitiveDivision { public static void main(String[] args) { int i1 = 7, i2 = 2; System.out.println(&quot;Integer Division&quot;); System.out.println(&quot; tint output with concatenation: &quot; + i1 + &quot;/&quot; + i2 + &quot; = &quot; + i1/i2); System.out.println(String.format(&quot; tint output with format: %d/%d = %d&quot;,i1, i2, i1/i2)); System.out.printf(&quot; tint output with printf: %d/%d = %d n&quot;,i1, i2, i1/i2); double d1 = 7, d2 = 2; System.out.println(&quot;Double Division&quot;); System.out.println(&quot; tdouble output with concatenation: &quot; + d1 + &quot;/&quot; + d2 + &quot; = &quot; + d1/d2); System.out.println(String.format(&quot; tdouble output with format: %.2f/%.2f = %.2f&quot;,d1, d2, d1/d2)); System.out.printf(&quot; tdouble output with printf: %.2f/%.2f = %.2f n&quot;,d1, d2, d1/d2); System.out.println(&quot;Casting and Remainders&quot;); System.out.printf(&quot; tint cast to double on division: %d/%d = %.2f n&quot;,i1, i2, i1/(double)i2); System.out.println(&quot; tint using modulo for remainder: &quot; + i1 + &quot;/&quot; + i2 + &quot; = &quot; + i1/i2 + &quot; remainder &quot; + i1%i2); } } PrimitiveDivision.main(null); . Grade Calculator, putting Input and Output together . Primitive types rarely stand alone. This lab uses the primitive type double, but it also introduces the wrapper class Double. Also included is one of the most common Data Structures in Java, the ArrayList. These items are put together to create a grade calculator. . public class GradeCalculator { // introduction to Double wrapper class (object) ArrayList&lt;Double&gt; grades; // similar to Python list // constructor, initializes ArrayList and call enterGrades method public GradeCalculator() { this.grades = new ArrayList&lt;&gt;(); this.enterGrades(); } // double requires test for zero versus threshold, DO NOT compare to Zero private boolean isZero(double value){ double threshold = 0.001; return value &gt;= -threshold &amp;&amp; value &lt;= threshold; } // enterGrades input method using scanner private void enterGrades() { Scanner input; while (true) { input = new Scanner(System.in); System.out.print(&quot;Enter a double, 0 to exit: &quot;); try { double sampleInputDouble = input.nextDouble(); System.out.println(sampleInputDouble); if (isZero(sampleInputDouble)) break; // exit loop on isZero else this.grades.add(sampleInputDouble); // adding to object, ArrayList grades } catch (Exception e) { // if not a number System.out.println(&quot;Not an double (form like 9.99), &quot; + e); } input.close(); } } // average calculation public double average() { double total = 0; // running total for (double num : this.grades) { // enhanced for loop total += num; // shortcut add and assign operator } return (total / this.grades.size()); // double math, ArrayList grades object maintains its size } // static main method, used as driver and tester public static void main(String[] args) { GradeCalculator grades = new GradeCalculator(); // calls constructor, creates object, which calls enterGrades System.out.println(&quot;Average: &quot; + String.format(&quot;%.2f&quot;, grades.average())); // format used to standardize to two decimal points } } // IJava activation GradeCalculator.main(null); . Hacks . Build your own Jupyter Notebook meeting these College Board and CTE competencies . Use Scanner example above to give a warning message and continue with input until correct data type is provided. Kind of like a test with hints. | Define in a Class the following data types Demonstrate use of Primitives: int, double, boolean | Demonstrate use of Reference data type: String | . | Describe in comments how each data type choice is appropriate to the application | Use Jupyter cell to perform an arithmetic expressions that uses casting, add comments that show how it produces desired result (ie double convertedValue = (double) intValue;). Learn more by watching this College Board video | Perform compound assignment operator (ie intValue += 5;), add comments to describe the result of operation. | . Expectations . Multiple inputs and outputs are required. | Jupyter NoteBook when committed to GitHub Pages must display Outputs | Building something that helps you study for another class or solve a problem of intest. Here are some ideas: MPG, GPA, Celsius to Fahrenheit, Primes in range of numbers, Points per Game |",
            "url": "http://localhost:4100/teacher_portfolio/2023/10/16/java-u1-primitives_IPYNB_2_.html",
            "relUrl": "/2023/10/16/java-u1-primitives_IPYNB_2_.html",
            "date": " • Oct 16, 2023"
        }
        
    
  
    
        ,"post110": {
            "title": "API, POJO, JPA",
            "content": "Introduction . APIs build programmatic interactions between applications, people, and businesses. They are designed around sharing data and executing pre-defined processes. Spring Boot and Spring Data JPA reduce time for development; developers implement POJOs and JPA access layers; Spring hanldes the rest. . An API allows you to request and receive data from the system. A POJO is the foundation for making an Entity that is turned into a Database. The Java Persistent API (JPA) allows the database to be queried and updated. . The subject of this article is Jokes, likes (haha) and dislike (boohoo). User clicks haha or boohoo and updates counters. . Runtime . Back-end Java Spring Files . Jokes.java - contains POJO which defines Model | JokesApiControler.java - contains APIs and Control, which respond to View actions | JokesJpaRepository.java - contains CRUD and data acess queries | . Visual Overview . Spring API and ORM +-+ | API Controller |-- Developer defines Request Mappings | Request |-- @PathVariable are received | JPA call |-- @Autowired method is called | Respone |-- ResponseEntity&lt;&gt; wraps data from JPA (ie JSON) +-+ | | JPA Methods v +--+ | JPA |-- Developer defines Database Queries | Java | -- a.) JPA built in (long names) | Persistent | -- b.) SQL native queries | API | +--+ | | Database Access Methods v +--+ | ORM | -- Spring layers supporting Database Framework | Object | -- Behind the scene managing tables | Relational | -- Behind the scene database construction | Model | +--+ | | Entities Definition v +--+ | Database/POJOs | -- Developer defines each Class | Plain | -- Define attributes in Table | Old Java | -- Define relationships in Database | Objects | +--+ . . POJO Review . This code fragment shows power of Spring and Annotations to define a Model. Using Spring, a little bit of POJO code, the Developer is enabling persistent data storage of a table in a database. It is left to student to search up each annotation for personal clarification beyond the comments below. . import lombok.AllArgsConstructor; import lombok.Data; import lombok.NoArgsConstructor; import javax.persistence.*; @Data // Annotations to simplify writing code (ie constructors, setters) @NoArgsConstructor // Builds zero argument constructor @AllArgsConstructor // Builds constructor for all agurments @Entity // Annotation to simplify creating an entity, which is a lightweight persistence domain object. Typically, an entity represents a table in a relational database, and each entity instance corresponds to a row in that table. public class Jokes { @Id @GeneratedValue(strategy = GenerationType.AUTO) private Long id; // Unique identifier @Column(unique=true) private String joke; // The Joke private int haha; // Store joke likes private int boohoo; // Store joke jeers } . Java Persistence API (JPA) . The JPA code is defined to access the database. The JokesJpaRepository interface extends JpaRepository. This allows the developer access JPA predefined and developer custom interfaces to perform CRUD operations on persistent storage. It is left to student to define “Delete” operation in CRUD. . import java.util.List; import org.springframework.data.jpa.repository.JpaRepository; // JPA is an object-relational mapping (ORM) to persistent data, originally relational databases (SQL). Today JPA implementations has been extended for NoSQL. public interface JokesJpaRepository extends JpaRepository&lt;Jokes, Long&gt; { // JPA has many built in methods, these few have been prototyped for this application void save(String Joke); // used for Create, Update operations in CRUD // Accessors, Read operations in CRUD List&lt;Jokes&gt; findAllByOrderByJokeAsc(); // returns a List of Jokes in Ascending order List&lt;Jokes&gt; findByJokeIgnoreCase(String joke); // look to see if Joke(s) exist } . JPA returns List . List is a super class to ArrayList. In the JPA code you can see that List of Jokes is common result from JPA accessor method. It is left to the student to review List and ArrayList from GeeksForGeeks and understand research difference between interface and implementation. . API Controller . This backend piece of the Spring process is building out the RESTful API services to access the data. Below is the JokesApiController, this is commented extensively. It is left for the student to review and update the “Spring API and ORM” illustration and add it to their personal blogging notes from the notes and code below. . @Autowired annotation provides full access to JokesJpaRepository, what we made with the code above. Review repository., there are actions for set, get, save and more. | @GetMapping and @PutMapping which establishes endpoints for RESTful web services to access the data. | API @PathVariable for obtaining information from the request URL. | The respones “return new ResponseEntity” returning JSON and Statis/ | . import org.springframework.beans.factory.annotation.Autowired; import org.springframework.http.HttpStatus; import org.springframework.http.ResponseEntity; import org.springframework.web.bind.annotation.*; import java.util.List; import java.util.Optional; @RestController // annotation to simplify the creation of RESTful web services @RequestMapping(&quot;/api/jokes&quot;) // all requests in file begin with this URI public class JokesApiController { // Autowired enables Control to connect URI request and POJO Object to easily for Database CRUD operations @Autowired private JokesJpaRepository repository; /* GET List of Jokes * @GetMapping annotation is used for mapping HTTP GET requests onto specific handler methods. */ @GetMapping(&quot;/&quot;) public ResponseEntity&lt;List&lt;Jokes&gt;&gt; getJokes() { // ResponseEntity returns List of Jokes provide by JPA findAll() return new ResponseEntity&lt;&gt;( repository.findAll(), HttpStatus.OK); } /* Update Like * @PutMapping annotation is used for mapping HTTP PUT requests onto specific handler methods. * @PathVariable annotation extracts the templated part {id}, from the URI */ @PutMapping(&quot;/like/{id}&quot;) public ResponseEntity&lt;Jokes&gt; setLike(@PathVariable long id) { /* * Optional (below) is a container object which helps determine if a result is present. * If a value is present, isPresent() will return true * get() will return the value. */ Optional&lt;Jokes&gt; optional = repository.findById(id); if (optional.isPresent()) { // Good ID Jokes joke = optional.get(); // value from findByID joke.setHaha(joke.getHaha()+1); // increment value repository.save(joke); // save entity return new ResponseEntity&lt;&gt;(joke, HttpStatus.OK); // OK HTTP response: status code, headers, and body } // Bad ID return new ResponseEntity&lt;&gt;(HttpStatus.BAD_REQUEST); // Failed HTTP response: status code, headers, and body } /* Update Jeer */ @PutMapping(&quot;/jeer/{id}&quot;) public ResponseEntity&lt;Jokes&gt; setJeer(@PathVariable long id) { Optional&lt;Jokes&gt; optional = repository.findById(id); if (optional.isPresent()) { // Good ID Jokes joke = optional.get(); joke.setBoohoo(joke.getBoohoo()+1); repository.save(joke); return new ResponseEntity&lt;&gt;(joke, HttpStatus.OK); } // Bad ID return new ResponseEntity&lt;&gt;(HttpStatus.BAD_REQUEST); } } . Front End . This database was setup to allow people to HaHa or Boohoo a collection of Computer Jokes. The entirety has lot of limitation. . People can vote more than once and in both categories. | There is no auto refresh if several are voting and updating as you are looking at your static page. | Perhaps Q and A style could hide punch line. | Perhaps we could accept new jokes, or have interface for adding them. | . Amazingly, though … the front-end code is in a completely different project. The front end project GETs and PUTs using the back end APIs. The key element that makes this different than other public APIs, like RapidAPI, is the “reaction” function. This function updates the elementID of the like or jeer as soon as you impact the button. . Frontend JavaScript Code . // Reaction function to likes or jeers user actions function reaction(type, put_url, elemID) { // fetch the API fetch(put_url, put_options) // response is a RESTful &quot;promise&quot; on any successful fetch .then(response =&gt; { // check for response errors if (response.status !== 200) { error(&quot;PUT API response failure: &quot; + response.status) return; // api failure } // valid response will have JSON data response.json().then(data =&gt; { console.log(data); // Likes or Jeers updated/incremented if (type === HAHA) // like data element document.getElementById(elemID).innerHTML = data.haha; // fetched haha data assigned to haha Document Object Model (DOM) else if (type === BOOHOO) // jeer data element document.getElementById(elemID).innerHTML = data.boohoo; // fetched boohoo data assigned to boohoo Document Object Model (DOM) else error(&quot;unknown type: &quot; + type); // should never occur }) }) // catch fetch errors (ie Nginx ACCESS to server blocked) .catch(err =&gt; { error(err + &quot; &quot; + put_url); }); } . Hacks . AP required. Review the lambok annotations (https://projectlombok.org/features/). . Write the POJO and show code generated by lambok. Comment this code in context of requirements for the AP exam. | . PBL foundational. Establish a POJO, JPA and APIs in your own project. You can begin with Jokes. . Make new POJO attribute. Alert, I suggest deleting /volumes/sqlite.db each time you change schema. Schema changes are not ugraded automatically. | Make a new API endpoint. | Test your API using Postman. You should be able to test with localhost:port. | . Resources, recommended by ChatGPT . Spring Framework Documentation The official Spring Framework documentation is entirely free to access. It provides comprehensive information on various Spring modules, including Spring Boot and Spring Data JPA. . | Baeldung Spring Boot Tutorials Baeldung: Baeldung offers a mix of free and paid content. While some articles may require a subscription, many tutorials and guides on Spring Boot and Spring Data JPA are available for free. . | Baeldung Spring Boot Tutorials Spring Guides: The Spring Guides are completely free and provide step-by-step tutorials on various aspects of Spring development, including Spring Boot and Spring Data JPA. . | Spring Guides Java Brains YouTube Channel: The Java Brains YouTube channel offers free video tutorials on Java and Spring frameworks, including dedicated playlists for Spring Boot and Spring Data JPA. . | 5 Java Brains YouTube Channe Spring Data JPA Reference Documentation: The Spring Data JPA reference documentation is freely available online and provides in-depth insights into Spring Data JPA features. . Java Brains Spring Boot Playlist | Java Brains Spring Data JPA Playlist | . Spring Data JPA Reference Documentation The Spring Data JPA reference documentation is freely available online and provides in-depth insights into Spring Data JPA features. .",
            "url": "http://localhost:4100/teacher_portfolio/1.a/3.a/3.b/c4.5/c4.7/2023/10/16/java-api-pojo-jpa.html",
            "relUrl": "/1.a/3.a/3.b/c4.5/c4.7/2023/10/16/java-api-pojo-jpa.html",
            "date": " • Oct 16, 2023"
        }
        
    
  
    
        ,"post111": {
            "title": "CB 3.16-3.17 Simulations",
            "content": "Simulations and Algorithms . Introduce concepts of Simulations. Try to tie Algoritms to Simulations to make the two sections more interesting. . Describe a game or animation, how they simulates movement and actions. | Describe a game like flight simulator, how it simulates a real life activity. | Provide an example of a simulation algorithm. | Talk about key college board topcis. | .",
            "url": "http://localhost:4100/teacher_portfolio/2023/10/15/python-3x16-3x17-simulations_IPYNB_2_.html",
            "relUrl": "/2023/10/15/python-3x16-3x17-simulations_IPYNB_2_.html",
            "date": " • Oct 15, 2023"
        }
        
    
  
    
        ,"post112": {
            "title": "CB 3.14 Libraries",
            "content": "Using Libraries . Introduce popular libraries: Requests, Pillow, Pandas, Numpy, Scikit-Learn, TensorFlow, matplotlib . Describe what these libraries simplify. | Describe in Python how to include and use these libraries | Provide a basic example for each. Teacher has code for most of them or we can refer to other lessons. | .",
            "url": "http://localhost:4100/teacher_portfolio/2023/10/15/python-3x14-libraries_IPYNB_2_.html",
            "relUrl": "/2023/10/15/python-3x14-libraries_IPYNB_2_.html",
            "date": " • Oct 15, 2023"
        }
        
    
  
    
        ,"post113": {
            "title": "CB 3.12,3.13 Developing Procedures",
            "content": "Developing Procedures . Create an anatomomy of Python Procedures and Python Classes. . Review key college board materials | Procedure Name - (ie Calculate Pay Check) | Procedure Parameters | Procedure Algorithm | Procedure Return Values | Write statements to call procedure | Compare Python Procedure anatomy with College Board Pseudo Code | Class Name - (ie Car Class) | Class Data | Class Constructor | Class Methods (Setters and Getters) | Wrtie statements to create Object from Class Constructor | Write satements to call methods of an Object | Compare Python Procedure and Python Class | Provide Popcorn Hacks and Homework Hacks | .",
            "url": "http://localhost:4100/teacher_portfolio/2023/10/15/python-3x12-3x13-dev-of-proc_IPYNB_2_.html",
            "relUrl": "/2023/10/15/python-3x12-3x13-dev-of-proc_IPYNB_2_.html",
            "date": " • Oct 15, 2023"
        }
        
    
  
    
        ,"post114": {
            "title": "CB 3.10.3.11 Lists and Search",
            "content": "Lists and Search . Binary search algorithm can be used on Lists to find elements in faster time. . Review key college board materials | Provide algoritms binary search algorithm. | Talk about Linear and Binary in regards to Big O notation. | Compare List operations in Python with List operations in College Board Pseudo code. | Provide Popcorn Hacks and Homework Hacks | .",
            "url": "http://localhost:4100/teacher_portfolio/2023/10/15/python-3x10-3x11.-search_IPYNB_2_.html",
            "relUrl": "/2023/10/15/python-3x10-3x11.-search_IPYNB_2_.html",
            "date": " • Oct 15, 2023"
        }
        
    
  
    
        ,"post115": {
            "title": "CB 3.9. 3.15 Developing Algoritms",
            "content": "Developing Algorithms . Algorithms can be written in many different ways. Use some of ideas below or come up with creative and insteresting ideas. . Review key college board materials | Provide algoritms to solve basic stats problems of mean, median, and mode. | Write the algoritms so code is different, but provides the same answer. Use sorting a list using Bubble Sort as an example. | Write algorithm or game using Random Numbers. | Provide Hack or Challenge to write Selection Sort and Insertion Sort. | Provide Popcorn Hacks and Homework Hacks | .",
            "url": "http://localhost:4100/teacher_portfolio/2023/10/15/python-3_9-3x15-dev-of-algos_IPYNB_2_.html",
            "relUrl": "/2023/10/15/python-3_9-3x15-dev-of-algos_IPYNB_2_.html",
            "date": " • Oct 15, 2023"
        }
        
    
  
    
        ,"post116": {
            "title": "CB 3.7,3.8 Iteration",
            "content": "Iteration . Build a lesson in Python to shows various way you can create a loop in Python. Try to be creative, Reference [Geeks](https://www.geeksforgeeks.org/loops-in-python/. Try to be creative and make this interesting. . Review key college board materials | Provide and overview of a Python Loop and expression versus College Board Pseudo Code | Cover loops with List and with Dictionary | Cover loops using an index variable, versus “the usual way” | Create a for loop with nested ifs inside of a loop | Create a for loop with Try / Except | Create a for loop using Continue and Break | Create iteration using recursion | Provide Popcorn Hacks and Homework Hacks | .",
            "url": "http://localhost:4100/teacher_portfolio/2023/10/15/python-3_7-3_8-iteration_IPYNB_2_.html",
            "relUrl": "/2023/10/15/python-3_7-3_8-iteration_IPYNB_2_.html",
            "date": " • Oct 15, 2023"
        }
        
    
  
    
        ,"post117": {
            "title": "CB 3.3,3.4 Boolean If",
            "content": "If statements and logical operations branch code . Build a lesson in Python to shows logic gates. Try to be creative, Teacher has some code that supports logic gates in archives or reference Geeks. Try to be creative and make this interesting. . Review key college board materials | Provide and overview of a Python If statement with expression versus College Board Pseudo Code | Cover all Python Logical Operations (AND, OR, NOT, NAND, NOR, XOR) | Introduce De Morgan’s Law which should be great for Hacks | Provide Popcorn Hacks and Homework Hacks | .",
            "url": "http://localhost:4100/teacher_portfolio/2023/10/15/python-3_5-3_6-boolean_if_IPYNB_2_.html",
            "relUrl": "/2023/10/15/python-3_5-3_6-boolean_if_IPYNB_2_.html",
            "date": " • Oct 15, 2023"
        }
        
    
  
    
        ,"post118": {
            "title": "CB 3.3,3.4 Algorithms",
            "content": "An algorithm is a finite set of instructions to solve a problem . Build a lesson in Python to show how an algoritm is made in code. Be sure to break down algorithm into code parts that include sequencing, selection, and iteration. We are looking for something fun and creative. . Review key college board materials | Provide and overview of a Python Algoritm versus College Board Pseudo Code | Discuss College Board Robot MCQ problems, left-right-up-down problems | Cover Math Operations and provide some Math Algoritms (ie Fibonacci, Factorial, …) | Cover String Operations and Concatenation with Alogorithms (ie Palindrome) | Provide Popcorn Hacks and Homework Hacks | .",
            "url": "http://localhost:4100/teacher_portfolio/2023/10/15/python-3_3-3_4-algoritms_IPYNB_2_.html",
            "relUrl": "/2023/10/15/python-3_3-3_4-algoritms_IPYNB_2_.html",
            "date": " • Oct 15, 2023"
        }
        
    
  
    
        ,"post119": {
            "title": "CB 3.1,3.2 Data Abstraction",
            "content": "Variables names are abstractions in Code to hold values of data . Build a lesson in Python to show the usage of variables and common data types. We are looking for something fun and creative. . Review key college board materials | Discuss naming conventions for variables | Discuss the difference of a primitive data types versus collection type | Use examples with Lists and Dictionaries as collections of all data types | Show output concatenation and formatting | Show conversions of data types, specifically from and to JSON | Provide and overview of Python Data Types with College Board Pseudo Code | Provide Popcorn Hacks and Homework Hacks | .",
            "url": "http://localhost:4100/teacher_portfolio/2023/10/15/python-3_1-3_2-data_types_IPYNB_2_.html",
            "relUrl": "/2023/10/15/python-3_1-3_2-data_types_IPYNB_2_.html",
            "date": " • Oct 15, 2023"
        }
        
    
  
    
        ,"post120": {
            "title": "PP Integration Checkpoint",
            "content": "Passion Project Integration Check . Show Big ideas and integration progress … . Show Collaboration including Issues/Scrum Board that capture progress. | Frontend to Backend. Show frontend feature pages that receive and display data from backend. | Demonstrate AWS update. Demonstrate an update of backend data. Show how you will migrate data between updates, so that no data is lost. | .",
            "url": "http://localhost:4100/teacher_portfolio/2023/10/15/java-spring-passion-integration.html",
            "relUrl": "/2023/10/15/java-spring-passion-integration.html",
            "date": " • Oct 15, 2023"
        }
        
    
  
    
        ,"post121": {
            "title": "GitHub Statistics",
            "content": "CSA CSP CSSE Click Me Change User . . . . .",
            "url": "http://localhost:4100/teacher_portfolio/user/stats",
            "relUrl": "/user/stats",
            "date": " • Oct 14, 2023"
        }
        
    
  
    
        ,"post122": {
            "title": "U4|Iteration|Student-P3",
            "content": "Iteration . According to CollegeBoard, Iteration is a way to simplify code that would otherwise be repeated many times in succession. Using loops, we can finally implement complex algorithms and solutions to common problems that we weren’t able to before. . Iteration is repeating sequences to simplify code of advanced algorithms . Iteration accounts for 17.5%-22.5% of the APCSA AP Exam . 4.1: WHILE LOOPS . Learning Objective: Represent Iterative Processes using a while loop . Question: What is a loop and what are some real life examples of this (Setting a Song to repeat on your music player) . You know the i variable that you use for while/for loops? It actually has a name, loop control variable . int i = 0; // initialize loop control variable while (i &lt; 10) // checks the loop control variable { System.out.println(&quot;Doing some code&quot;); i++; // update the loop control variable } . // Popcorn Hack: Simplify the code segment below int i = 0; System.out.println(i); i++; System.out.println(i); i++; System.out.println(i); i++; System.out.println(i); i++; System.out.println(i); i++; /* Hint: // while (condition) { } for (condition) { } */ . int i = 0; while (i &lt; 5) { System.out.println(i); i++; } . Infinite loop . An infinite loop is when a while loop always evaluates to true. avoid this when you can because it’s probably not good for your computer. if this happens by accident, I recommend copying all code in the block and deleting the block. After you delete the code block, close and reopen the tab that the code block was in. . What’s wrong with this code block? . while (true) { System.out.print(&quot;CONTROL &quot;); } // DO NOT RUN THE CODE . Do While loop . What will this code block output? . // Quite shrimple int i = 0; do { System.out.print(&quot;Quite shrimple. &quot;); i++; } while (i &lt; -5); . In a do while loop, it will run the “do” once before it reaches the “while”, and at that point it will start to act like a while loop. . For loop . this is the standard structure of a for loop . for (initialization; Boolean expression; update) { System.out.println(&quot;Doing some code&quot;); } . Initialization will run at the start of the loop, boolean expression will get checked with every loop, and update runs after every loop. . How many times will this code print “Doing some code?” . for (int num = 1; num &lt;= 5; num++) { System.out.println(&quot;Doing some code&quot;); } . Doing some code Doing some code Doing some code Doing some code Doing some code . In this code, it creates the variable num at the start of the loop, it checks if num is less than or equal to 5 after each loop, and it adds 1 to num after each loop. . Enhanced for loop . this is essentially a javascript for loop, as it will iterate through a list and run code in the loop to each variable inside the list . int[] list = {1, 4, 6, 2}; for (int j : list) { System.out.print(j); System.out.print(&quot; &quot;); } . 1 4 6 2 . Break and Continue . In java there are breaks, but there are also continues. . Break . Breaks, as you likely already know, end a loop. They tend to be used with an if statement . How many times will this code print “Big guy?” . int i = 0; while (i &lt; 10) { System.out.println(&quot;Big guy&quot;); i++; if (i == 5) { break; } } . Continue . Continue will skip code for an iteration, but will still keep the loop running . int i = 0; while (i &lt; 10) { if (i == 5) { i++; // don&#39;t forget this, it creates an error similar to an infinite loop System.out.println(&quot;&quot;); continue; } System.out.println(i); i++; } . 4.3: Developing Algorithms Using Strings . Learning Objective: For algorithms in the context of a particular specification that involves String objects: . Methods in Java that help to MANIPULATE STRINGS . String.substring - Retrieves a particular portion of a String | String.equals - Comparees the content of two strings | String.length - Returns the length of a String | . public class Compare { public static void main(String[] args) { String string1 = &quot;Coding is cool!&quot;; String string2 = &quot;Coding is coding!&quot;; int minLength = Math.min(string1.length(), string2.length()); for (int i = 0; i &lt; minLength; i++) { String subString1 = string1.substring(0, i + 1); String subString2 = string2.substring(0, i + 1); if (subString1.equals(subString2)) { System.out.println(&quot;Common Prefix: &quot; + subString2); } } } } Compare.main(null) . Common Prefix: C Common Prefix: Co Common Prefix: Cod Common Prefix: Codi Common Prefix: Codin Common Prefix: Coding Common Prefix: Coding Common Prefix: Coding i Common Prefix: Coding is Common Prefix: Coding is Common Prefix: Coding is c Common Prefix: Coding is co . Where are the 3 methods in the above Java Cell and how do they contribute to the program’s functionality? . String word = &quot;supercalifragilisticexpialidocious&quot;; int count = 0; for (int i = 0; i &lt; word.length(); i++) { char letter = word.charAt(i); if (letter == &#39;a&#39; || letter == &#39;e&#39; || letter == &#39;i&#39; || letter == &#39;o&#39; || letter == &#39;u&#39;) { count++; } } System.out.println(&quot;The Number of vowels in &quot;&quot; + word + &quot; &quot; is &quot; + count); . What does word.length() do and how do we use it above? . What Boolean Operator is used? . public class Main { public static void main(String[] args) { String word = &quot;Scooby Doo&quot;; String sub = &quot;Doo&quot;; boolean found = false; for (int i = 0; i &lt;= word.length() - sub.length(); i++) { String portion = word.substring(i, i + sub.length()); if (portion.equals(sub)) { found = true; } } if (found) { System.out.println(&quot;We found the Smaller String!&quot;); } else { System.out.println(&quot;We did not find the Smaller String! t Ruh Roh!&quot;); } } } Main.main(null) . We found the Smaller String! . String concatenation . String concatenation is when you want to add to strings together . String original = &quot;String&quot;; String reversed = &quot;&quot;; for (int i = 0; i &lt; original.length(); i++) { String single = original.substring(i,i+1); reversed = single + reversed; } System.out.println(&quot;Original String: &quot; + original); System.out.println(&quot;Reversed String: &quot; + reversed); . 4.4: Nested Iteration . Learning Objective: Represent nested iteration processes . Essential Knowledge: . Nested iteration is when an iteration statement appears inside the body of another iteration statement | The inner loop must complete all of its iterations before the outer loop can continue. | . Before uncommenting the code, guess what the output will look like: . (write your guess here) . public class NestedLoops{ public static void main(String[] args){ // for (int outer = 1; outer &lt; 5; outer++){ // for (int inner = 1; inner &lt; 3; inner++){ // System.out.print(inner + &quot; &quot;); // } // System.out.println(); // } } } NestedLoops.main(null) . What will the output of the code above be if we switch the loop headers (the stuff inside of the for loop)? . (Write your guess here) . After making a prediction actually switch the loop headers for yourself. What do you notice about the output compared to the output before the change? . 4.5: Informal Code Analysis . Essential Knowledge: . A statement exectution count indicates the number of times a statement is executed by the program | . for (int outer = 0; outer &lt; 3; outer++){ for (int inner = 0; inner &lt; 4; inner++){ // statement #1 } } . In the code above, how many times will the inner loop execute when outer = 0? __ . In the code above, how many times will the inner loop execute when outer = 1? __ . In the code above, how many times will the inner loop execute when outer = 2? __ . In the code above, how many times will the inner loop execute in total? __ . for (int outer = 5; outer &gt; 0; outer--){ for (int inner = 0; inner &lt; outer; inner++){ // statement #1 } } . In the code above, how many times will the inner loop execute when outer = 5? __ . In the code above, how many times will the inner loop execute when outer = 4? __ . In the code above, how many times will the inner loop execute when outer = 3? __ . In the code above, how many times will the inner loop execute in total? __ . int k = 0; while (k &lt; 5){ int x = (int)(Math.random()*6) + 1; while (x != 6){ //statement #1 x = (int)(Math.random()*6) + 1; } k++; } . In the code above, how many times will the statement #1 execute? __ . for (int k = 0; k &lt; 135; k++){ if (k % 5 == 0){ // Statement #1 System.out.print(k); // Statement #2 } } . In the code above, how many times will the statement #1 execute? __ . In the code above, how many times will the statement #2 execute? __ . Rewrite the code above to be more effecient based on execution count. . HACKS . These hacks will be due on Monday (October 16th) before class . Hacks . Finish the popcorn hacks (0.2) | Rewrite the for loop (0.25) | Complete the Ceaser Cipher Code (0.45) | . for (int k = 0; k &lt; 40; k++){ if (k % 4 == 0){ System.out.println(k); } } . Rewrite the code above 3 different times . Your code should be more efficient based execution count | Your code should use 3 different types of loops that you learned above (Hint: You may need to use a list) | . Ceaser Cipher Hacks . Try to write a cipher program that shifts each letter in a message 3 letters forward. Use any of the methods you learned today. Use it to decode the 3 messages we’ve given you! . public class CaesarCipher { public static void main(String[] args) { String[] letters = {&quot;a&quot;, &quot;b&quot;, &quot;c&quot;, &quot;d&quot;, &quot;e&quot;, &quot;f&quot;, &quot;g&quot;, &quot;h&quot;, &quot;i&quot;, &quot;j&quot;, &quot;k&quot;, &quot;l&quot;, &quot;m&quot;, &quot;n&quot;, &quot;o&quot;, &quot;p&quot;, &quot;q&quot;, &quot;r&quot;, &quot;s&quot;, &quot;t&quot;, &quot;u&quot;, &quot;v&quot;, &quot;w&quot;, &quot;x&quot;, &quot;y&quot;, &quot;z&quot;}; String message1 = &quot;Kfzb gly!&quot;; String message2 = &quot;zlab zlab zlab&quot;; String message3 = &quot;prmbozxifcoxdfifpqfzbumfxifalzflrp&quot;; } } .",
            "url": "http://localhost:4100/teacher_portfolio/2023/10/12/java-iteration-student-P3_IPYNB_2_.html",
            "relUrl": "/2023/10/12/java-iteration-student-P3_IPYNB_2_.html",
            "date": " • Oct 12, 2023"
        }
        
    
  
    
        ,"post123": {
            "title": "U4|Iteration|Student-P1",
            "content": "U4 | Iteration . . 4.1 while Loops . . A while loop is a fundamental control structure in programming used for repeated execution of a block of code as long as a condition is true. | The loop starts by evaluating the condition. If the condition is true, the code inside the loop is executed. | After each iteration, the condition is re-evaluated, and if it’s still true, the loop continues. If the condition is false initially, the loop code is never executed. | While loops are used when you don’t know in advance how many times the loop needs to execute. | There’s a risk of infinite loops if the condition never becomes false, so be cautious. You can use variables and complex expressions as loop conditions. | It’s essential to update the loop control variable within the loop to prevent infinite loops. | While loops are typically used for tasks such as iterating over collections or waiting for a specific condition to be met. | You can always break out of a while loop prematurely using the break statement. | . Example of While Loops . public class PyramidPattern { public static void main(String[] args) { int height = 5; int row = 1; while (row &lt;= height) { int spaces = height - row; int stars = 2 * row - 1; // Print spaces int spaceCount = spaces; while (spaceCount &gt; 0) { System.out.print(&quot; &quot;); spaceCount--; } // Print stars int starCount = stars; while (starCount &gt; 0) { System.out.print(&quot;*&quot;); starCount--; } System.out.println(); // Move to the next line for the next row row++; } } } PyramidPattern.main(null); . 4.2 for Loops . . Iterative statement that checks for condition | Repeatedly execute a a block of code as long as the condition is met | Condition specifies amount of times | . for Loops vs. while Loops . while Loops: use when number of iterations is unknown | for Loops: use when number of iterations is known | . int i = 0; while (i &lt; 5) { System.out.println(i); i++; } . for (int i = 0; i &lt; 5; i++) { System.out.println(i); } . Three parts in for loop header: variable initialization, Boolean (conditional) expression, and increment/decrement statement | . Question: Which part is which? . variable initialization (int i=0): sets variable before loop starts | Boolean (conditional) expression (i &lt; 5): defines condition for loop to run, in this case, the loop continues as long as i is less than 5, so loops 5 times i 05 | increment/decrement statement (i++): increases variable each time code block in the loop is executed, in this case it increases by 1 | variable can be used in the code block for other various reasons besides specifying how many times the loop will repeat | Boolean (conditional) expression and increment/decrement statement together determine how many times the loop will repeat | . int sum = 0; int sum_all = 0; for (int i = 0; i &lt; 10; i++) { if (i % 2 == 0) sum += i; sum_all += i; } System.out.println(sum); System.out.println(sum_all); . 4.3 Developing Algorithms Using Strings . . LEARNING OBJECTIVES: For algorithms in the context of a particular specification that involves String objects: . identify standard algorithms | modify standard algorithms | develop an algorithm | . Java has many methods that are helpful when working with strings: . String .substring –&gt; retrieves portion of a string | String .equals –&gt; compares two strings | String .length –&gt; returns length of a string | for Loop –&gt; iterating through characters of a string | . . Finding a substring within a string . We can use the “window” method: . A “window” is created the same length as the substring. We then iterate through the main string in sections and compare to the substring . For example: . I T E R A T E . with substring “ERA” . . public class StringFinder { public static void main(String[] args) { String word = &quot;iterate&quot;; String sub = &quot;xxx&quot;; boolean found = false; // will be set to true once substring is found for (int i = 0; i &lt; word.length(); i++) { //iterating forwards: starting at first index (0) and going to the length of the word.. let&#39;s try word.length String portion = word.substring(i, i + sub.length()); if (sub.length() &gt; portion.length()) break; if (portion.equals(sub)) { // make sure you use .equals!! found = true; break; } } if (found) System.out.println(&quot;substring is found within string!&quot;); else System.out.println(&quot;substring is NOT within string&quot;); } } StringFinder.main(null); . POPCORN HACK: Run the code.. what happened? How can we fix it? . Tell us below! . . Another issue: . I T E R A T E . What if our substring was the word “RATE”? Note that RATE is at the end of the whole string . . HACKS . Create a algorithm similar to the one above. Except this time, use iteration to count the number of vowels within the main string. . HINT: Use the boolean expressions we have learned in previous lessons. Which would you use when comparing your “window” with multiple options of substrings? . 4.4 Nested Iteration . nested iteration . occurs when we have a loop inside of another loop, similar to nested conditional statements in unit 3 When you have one loop inside another, the inner loop has to finish all its rounds before the outer loop moves to the next round. If the inner loop has a &quot;stop&quot; command, it only stops for that round of the outer loop. The next time the outer loop starts a new round, the inner loop starts over. If you have two nested loops without stops, and the outer one runs n times while the inner one runs m times each time the outer one goes around, the inner loop will run m times n times, which is m * n times in total. This rule also applies if you have more than two nested loops. To find the total number of times the innermost loop runs, just multiply how many times each loop runs per round. java public class NestedLoopsDemo { public static void main(String[] args) { int n = 3; //numb of times the outside loop runs int m = 2; //numb of times the inside loop runs //the nested loops for (int i = 1; i &lt;= n; i++) { System.out.println(&quot;Outer loop iteration: &quot; + i); for (int j = 1; j &lt;= m; j++) { System.out.println(&quot;Inner loop iteration: &quot; + j); } } } } NestedLoopsDemo.main(null) ### Break Statement **break statement** is used to exit a loop prematurely, typically when a certain condition is met. In the case of nested loops, it can be used to break out of the innermost loop. java public class BreakExample { public static void main(String[] args) { for (int i = 1; i &lt;= 3; i++) { System.out.println(&quot;Outer loop iteration &quot; + i); for (int j = 1; j &lt;= 3; j++) { System.out.println(&quot;Inner loop iteration &quot; + j); if (i == 2 &amp;&amp; j == 2) { System.out.println(&quot;Breaking inner loop&quot;); break; //break out of the inside loop when i is 2 and j is 2. } } } } } BreakExample.main(null) ### Popcorn HACK When the targetNumber is found, you can print a message and use the break statement to exit the loop. When it&#39;s not found, you can print a message indicating that the number was not found. java public class BreakHack { public static void main(String[] args) { int targetNumber = 42; //numb we want int[] numbers = {10, 20, 30, 40, 50, 60, 70}; //numb array for (int number : numbers) { if (number == targetNumber) { //if numb is found //print message to break out loop } } //if numb isnt found //print message showing numb wasnt found if you want } } BreakHack.main ### Continue Statement **continue statement** is used to skip the current iteration of a loop and move to the next iteration. In the case of nested loops, it applies to the innermost loop. java public class ContinueExample { public static void main(String[] args) { for (int i = 1; i &lt;= 3; i++) { System.out.println(&quot;Outer loop iteration &quot; + i); for (int j = 1; j &lt;= 3; j++) { if (i == 2 &amp;&amp; j == 2) { System.out.println(&quot;Skipping inner loop iteration &quot; + j); continue; //skip the iteration when i is 2 and j is 2. } System.out.println(&quot;Inner loop iteration &quot; + j); } } } } ContinueExample.main(null) ### Patterns and Shapes java import java.util.Scanner; public class InteractivePyramid { public static void main(String[] args) { Scanner scanner = new Scanner(System.in); System.out.print(&quot;Enter the symbol you want to use: &quot;); char symbol = scanner.next().charAt(0); System.out.print(&quot;Enter the number of rows for the pyramid: &quot;); int numRows = scanner.nextInt(); for (int i = 1; i &lt;= numRows; i++) { //print space before the symbol for (int j = 1; j &lt;= numRows - i; j++) { System.out.print(&quot; &quot;); } //print for (int k = 1; k &lt;= 2 * i - 1; k++) { System.out.print(symbol); } System.out.println(); //next line } scanner.close(); } } InteractivePyramid.main(null) ## Hacks 1. **Modify pyramid code:** - Create different patterns (other then pyramid) by modifying nested loop structure 2. **Questions** - What is a nested iteration, continue statement, and break statement (in your own words)? - Create a simple example of a continue statement **or** break statement # 4.5 Informal Code Analysis Learning objective: Compute statement execution counts &amp; informal run-time comparison of iterative statements Essential Knowledge: A statement execution count indicates the number of times a statement is executed by the program What IS informal code analysis? . Answer: java // CODE EXAMPLE #1 (for loop) public class InformalCodeAnalysis { public static void main(String[] args) { int count = 0; for (int k = 0; k &lt; 30; k++) { if (k % 3 == 0) // statement 1 { count++; // statement 2 } } } } How many times will statement 1 execute? Answer: How many times will statement 2 execute? Answer: java // CODE EXAMPLE #2 (for loop) public class InformalCodeAnalysis { public static void main(String[] args) { int count = 0; for (int k = 4; k &lt; 30; k+=3) { count++; // statement 3 } } } How many times will statement 3 execute? Answer: java // Rewrite the code segment below to have a faster run-time based on statement execution counts for (int k = 0; k &lt; 135; k++) { if (k % 5 == 0) { System.out.println(k); } } java // CODE EXAMPLE #3 (while loop) int num = (int)(Math.random() * 10); while (num % 2 != 0) { num = (int)(Math.random() * 10) // statement 4 } What is the min/max number of times statement 4 will execute? Answer: java // CODE EXAMPLE #4 (nested loop) for (int outer = 0; outer &lt; 3; outer++) { for (int inner = 0; inner &lt; 4; inner++) { // statement #5 } } How many times will statement #5 execute? Answer: java // CODE EXAMPLE #5 (nested loop) int k = 0; while (k &lt; 5) { int x = (int)(Math.random() * 6) + 1; while (x != 6) { // statement #6 x = (int)(Math.random() * 6) + 1; } k++; } How many times will statement #6 execute? Answer: # 4.5 Hacks #1 How many times will statement #1 and statement #2 execute in the code segments below? java for (int k = 0; k &lt; 1000; k++) { // statement #1 } java for (int k = 6; k &lt; 50; k++) { // statement #2 } #2 How many times will statement #3 execute for the code segment below? java int k = 1; while (k &lt;=7) { for (int z = 0; z &lt; 4; z++) { // statement #3 } k++; } #3 Create 3 seperate code segments that execute a statement 10 times using: (a) a for loop (b) a while loop (c) a nested loop java // 3a code java // 3b code java // 3c code",
            "url": "http://localhost:4100/teacher_portfolio/2023/10/12/java-iteration-student-P1_IPYNB_2_.html",
            "relUrl": "/2023/10/12/java-iteration-student-P1_IPYNB_2_.html",
            "date": " • Oct 12, 2023"
        }
        
    
  
    
        ,"post124": {
            "title": "Animations & GameObjects",
            "content": "A (Very) Brief Intro to Gravity . . Stuff naturally tends to fall. Why? . Gravity pulls everything down (to the center of our Earth) . We all know what speed is (think of mph). Notice that when you drop an object, it speeds up (from 0 to some higher number). This is caused by the force of gravity! . The rate at which the object speeds up is known as Acceleration due to Gravity . g = 9.8 m/s^2 basically means: . Every 1 second, | the object’s speed increases by 9.8 m/s (~22 mph) | downwards, towards the center of the Earth | . Why does this matter? . Objects in our game need to fall down because that’s how it works in real life! | We need to implement gravity to emulate this behavior | . Example Platformer . Canvas Grid . . Gravity Activity . Currently when the character jumps, it goes straight up into the air and doesn’t come back down. Can you make it so it acts accurate to the real world (hint: implement gravity, see the comment for an idea of where to place your code) . BONUS: Prevent the player from double jumping . %%html &lt;style&gt; canvas { margin: 0; border: 1px solid white; } &lt;/style&gt; &lt;canvas id=&#39;canvas1&#39;&gt;&lt;/canvas&gt; &lt;script src=&quot;/teacher_portfolio/assets/js/player.js&quot;&gt;&lt;/script&gt; &lt;script&gt; // Create empty canvas let canvas = document.getElementById(&#39;canvas1&#39;); let c = canvas.getContext(&#39;2d&#39;); // Set the canvas dimensions canvas.width = 650; canvas.height = 400; // Create a player object player = new Player(c); // Define keyboard keys and their states let keys = { right: { pressed: false }, left: { pressed: false } }; // Animation function to continuously update and render the canvas function animate() { requestAnimationFrame(animate); c.clearRect(0, 0, canvas.width, canvas.height); player.update(); if (keys.right.pressed &amp;&amp; player.position.x + player.width &lt;= canvas.width - 50) { player.velocity.x = 15; } else if (keys.left.pressed &amp;&amp; player.position.x &gt;= 50) { player.velocity.x = -15; } else { player.velocity.x = 0; } } animate(); // Event listener for keydown events addEventListener(&#39;keydown&#39;, ({ keyCode }) =&gt; { switch (keyCode) { case 65: console.log(&#39;left&#39;); keys.left.pressed = true; break; case 83: console.log(&#39;down&#39;); break; case 68: console.log(&#39;right&#39;); keys.right.pressed = true; break; case 87: console.log(&#39;up&#39;); player.velocity.y -= 20; break; } }); // Event listener for keyup events addEventListener(&#39;keyup&#39;, ({ keyCode }) =&gt; { switch (keyCode) { case 65: console.log(&#39;left&#39;); keys.left.pressed = false; break; case 83: console.log(&#39;down&#39;); break; case 68: console.log(&#39;right&#39;); keys.right.pressed = false; break; case 87: console.log(&#39;up&#39;); /* FILL IN HERE think about adding a conditional here (bonus) */ player.velocity.y = -20; break; } }); &lt;/script&gt; . GameObject Activity (Part 1) . We want a platform on the ground. You can use whatever image you want or just a rectangle on the canvas. The platform should be represented by the GameObject class. . %%html &lt;style&gt; canvas { margin: 0; border: 1px solid white; } &lt;/style&gt; &lt;!-- PART 2: Change this to &quot;canvas3&quot; for the Collision activity! --&gt; &lt;canvas id=&#39;canvas2&#39;&gt;&lt;/canvas&gt; &lt;script src=&quot;/teacher_portfolio/assets/js/player.js&quot;&gt;&lt;/script&gt; &lt;script src=&quot;/teacher_portfolio/assets/js/game_object.js&quot;&gt;&lt;/script&gt; &lt;script&gt; // Create empty canvas // PART 2: Change this to &quot;canvas3&quot; for the Collision activity! let canvas = document.getElementById(&#39;canvas2&#39;); let c = canvas.getContext(&#39;2d&#39;); // Set the canvas dimensions canvas.width = 650; canvas.height = 400; // Create a player object player = new Player(c); /* initialize your GameObject (first parameter should be c) */ // Define keyboard keys and their states let keys = { right: { pressed: false }, left: { pressed: false } }; // Animation function to continuously update and render the canvas function animate() { requestAnimationFrame(animate); c.clearRect(0, 0, canvas.width, canvas.height); player.update(); /* ADD STUFF HERE make sure to draw your game object here */ /* ADD STUFF HERE (PART 2) (part 2) - add some handling to ensure the player doesn&#39;t go through the game object (use your collision method, bonus for restitution could be done here */ if (keys.right.pressed &amp;&amp; player.position.x + player.width &lt;= canvas.width - 50) { player.velocity.x = 15; } else if (keys.left.pressed &amp;&amp; player.position.x &gt;= 50) { player.velocity.x = -15; } else { player.velocity.x = 0; } } animate(); // Event listener for keydown events addEventListener(&#39;keydown&#39;, ({ keyCode }) =&gt; { switch (keyCode) { case 65: console.log(&#39;left&#39;); keys.left.pressed = true; break; case 83: console.log(&#39;down&#39;); break; case 68: console.log(&#39;right&#39;); keys.right.pressed = true; break; case 87: console.log(&#39;up&#39;); player.velocity.y -= 20; break; } }); // Event listener for keyup events addEventListener(&#39;keyup&#39;, ({ keyCode }) =&gt; { switch (keyCode) { case 65: console.log(&#39;left&#39;); keys.left.pressed = false; break; case 83: console.log(&#39;down&#39;); break; case 68: console.log(&#39;right&#39;); keys.right.pressed = false; break; case 87: console.log(&#39;up&#39;); player.velocity.y = -20; break; } }); &lt;/script&gt; . Collision Activity (Part 2) . The player should not be able to go through the platform. The GameObject class should have a method which can tell if a player is colliding with it. . . BONUS: if the player hits the ground at a high velocity, it should bounce up a little bit (restitution) . %%html &lt;!-- copy paste your code from part 1 and continue here! --&gt; &lt;!-- ensure that you change the canvas ID for this part; there are instructions in the above comments --&gt; .",
            "url": "http://localhost:4100/teacher_portfolio/2023/10/12/animations-and-gameobjects_IPYNB_2_.html",
            "relUrl": "/2023/10/12/animations-and-gameobjects_IPYNB_2_.html",
            "date": " • Oct 12, 2023"
        }
        
    
  
    
        ,"post125": {
            "title": "P4 Developing Algorithms",
            "content": "Developing Algorithms . What is an Algorithm . An algorithm is a set of instructions for solving a specific problem or performing a particular task. . Purpose of developing Algorithms . Automate and simplify repetitive code | More efficient functions | . ## Example of algorithm import random # Define min and max values min_num = 1 max_num = 10 # Generate Random Number random_number = random.randint(min_num, max_num) # Output print(f&quot;Random number: {random_number}&quot;) . Random number: 9 . . Same goal, different Process . The examples show different processes to see if you got an A, passed, or failed on a test. However, these two algorithms yield different results. The first algorithm uses three different “if” statements which will check each condition independently so two messages can be displayed. The second algorithm uses an elif statement to ensure that only one of the three conditions will be displayed. . display(&quot;What did you get on your test?&quot;) testScore = int(input()) if testScore &gt; 90: display(&quot;You got an A!&quot;) if testScore &gt; 70: display(&quot;Congragulations. You didn&#39;t fail.&quot;) if testScore &lt; 70: display(&quot;You failed.&quot;) . &#39;What did you get on your test?&#39; &#39;You failed.&#39; . display(&quot;What did you get on your test?&quot;) testScore = int(input()) if testScore &gt; 90: display(&quot;You got an A!&quot;) elif testScore &gt; 70: display(&quot;Congratulations. You didn&#39;t fail.&quot;) else: display(&quot;You failed.&quot;) . &#39;What did you get on your test?&#39; &#39;You failed.&#39; . Algorithms in statistic/mathematical calculation . Algorithms in statistical and mathematical calculations refer to systematic step-by-step procedures or methods for solving specific problems, performing computations, or making decisions. These algorithms are designed to ensure in various mathematical and statistical tasks. . # Mean numberlist = [3, 6, 9, 12, 15] mean = sum(numberlist) / len(numberlist) print(&quot;Mean:&quot;, mean) . Mean: 9.0 . # Median numberlist = [3, 6, 9, 12, 15] n = len(numberlist) if n % 2 == 0: median = (numberlist[n // 2 - 1] + numberlist[n // 2]) / 2 else: median = numberlist[n // 2] print(&quot;Median:&quot;, median) . Median: 9 . # Mode from collections import Counter def find_mode(numbers): count = Counter(numbers) max_count = max(count.values()) modes = [num for num, freq in count.items() if freq == max_count] return modes numbers = [3, 9, 9, 12, 15] modes = find_mode(numbers) if len(modes) == 1: print(f&quot;The mode is {modes[0]}&quot;) else: print(&quot;There are multiple modes:&quot;, modes) . The mode is 9 . Popcorn Hack #1 . Create your own algorithm using numbers to calculate a value. . ## Insert your popcorn hack here: . Using algorithms to organize lists . There are two different ways in which data can be sorted. . SELECTION SORT: Splits list into sorted &amp; unsorted, takes the greatest or smallest value and puts it into sorted section, repeat | INSERTION SORT: Splits list into sorted &amp; unsorted, takes any value from list, inserts into correct position on sorted section, repeat | . ### Selection sort example list = [5, 2, 9, 3, 6] for i in range(len(list)): min_index = i for j in range(i + 1, len(list)): if list[j] &lt; list[min_index]: min_index = j list[i], list[min_index] = list[min_index], list[i] print(&quot;Smallest to Biggest: &quot;, list) . Smallest to Biggest: [2, 3, 5, 6, 9] . i represents the position of the value in the list that is being evaluated and is the starting value that it chosen as the smallest | j represents the position of a value outside the sorted position of the list | If j is smaller than the original minimum index, the new minimum index will be the value of j | Process of sortining most minimum number into index is continued until all numbers are in order from least to greatest | . ### Insertion sort example def insertion_sort(list): for i in range(1, len(list)): key = list[i] j = i - 1 while j &gt;= 0 and key &lt; list[j]: list[j + 1] = list[j] j -= 1 list[j + 1] = key list = [64, 25, 12, 22, 11] insertion_sort(list) print(&quot;Smallest to Biggest:&quot;, list) . Smallest to Biggest: [11, 12, 22, 25, 64] . i is starting point of unsorted section | key=list[i] is the current variable that is inserted into the sorted section, list[i] is the element at i index position | j+1 portion places the key in the proper location of the sorted section | . Popcorn Hack #2 . Use one of the two sorting methods to organize the following list from BIGGEST to SMALLEST: . [1,5,34,2,6,7,65,90,42] . ### Insert your popcorn hack here: . Homework Hacks . Homework Hack 1 . Create your own algorithm using a loop until you reach a desired value. Be creative! . # Example algorithm of loop # Initialize a counter to keep track of the count of odd numbers count = 0 # Loop through numbers from 1 to 10 for number in range(1, 11): # Check if the number is odd if number % 2 != 0: # Increment the count if the number is odd count += 1 print(&quot;Count of odd numbers from 1 to 10:&quot;, count) . Count of odd numbers from 1 to 10: 5 . ## Insert your code here: . Homework Hack 2 . Write two different algorithms of your own choosing that reach the same end output. Refer to the examples in the lesson above for support. . ## Insert your code here: .",
            "url": "http://localhost:4100/teacher_portfolio/2023/10/12/P4_DevelopingAlgorithms_IPYNB_2_.html",
            "relUrl": "/2023/10/12/P4_DevelopingAlgorithms_IPYNB_2_.html",
            "date": " • Oct 12, 2023"
        }
        
    
  
    
        ,"post126": {
            "title": "P5 Iteration",
            "content": "Introduction . In this lesson, we will explore the various ways to create loops in Python. Loops are essential for repetitive tasks and are a fundamental concept in programming. We will cover different types of loops, advanced loop techniques, and how to work with lists and dictionaries using loops. . For Loops . Used to iterate over a sequence (such as a list, tuple, string, or range) | Executes a block of code for each item in the sequence | . # APCSP Pseudo-Code: Iterating Over a List of Fruits fruits ← [&quot;apple&quot;, &quot;banana&quot;, &quot;cherry&quot;] FOR EACH fruit IN fruits: DISPLAY fruit END FOR . # Example 1: Simple for loop fruits = [&quot;apple&quot;, &quot;banana&quot;, &quot;cherry&quot;] for fruit in fruits: print(fruit) . apple banana cherry . While Loops . Used to execute a block of code as long as a condition is true | . # APCSP Pseudo-Code: Using a While Loop to Count and Display Numbers i ← 1 WHILE i ≤ 5: DISPLAY i i ← i + 1 END WHILE . # Example 2: Simple while loop i = 1 while i &lt;= 5: print(i) i += 1 . 1 2 3 4 5 . Looping with Lists and Dictionaries . Used to iterate through the elements of lists and dictionaries | . # APCSP Pseudo-Code: Loop Through a List numbers ← [1, 2, 3, 4] FOR EACH num IN numbers: DISPLAY num END FOR # APCSP Pseudo-Code: Loop Through a Dictionary person ← {&quot;name&quot;: &quot;aashray&quot;, &quot;age&quot;: 15, &quot;city&quot;: &quot;San Diego&quot;} FOR EACH key, value IN person: DISPLAY key, &quot;:&quot;, value END FOR . # Example 3: Loop through a list numbers = [1, 2, 3, 4] for num in numbers: print(num) # Example 4: Loop through a dictionary person = {&quot;name&quot;: &quot;aashray&quot;, &quot;age&quot;: 15, &quot;city&quot;: &quot;San Diego&quot;} for key, value in person.items(): print(key, &quot;:&quot;, value) . 1 2 3 4 name : aashray age : 15 city : San Diego . Popcorn Hack 1 . Use a loop to get X amount of inputs. Then use a loop to find the type of each value. . | Extra Challenge: If an input is a number, make the corresponding value in the dictionary a number. . | . sample_dict = {} # Code goes here . Looping with Index Variable . You can use the range function to create a loop with an index variable. . # APCSP Pseudo-Code: Loop Through a List Using Index lst ← [4, 6, 7, 2] FOR i IN RANGE(LENGTH(lst)): DISPLAY &quot;Index: &quot; + STRING(i) DISPLAY &quot;Element: &quot; + STRING(GET_ELEMENT(lst, i)) END FOR . # Example 5: Loop with an index variable lst = [4, 6, 7, 2] for i in range(len(lst)): # Loop for the number of elements in the list print(&#39;Index: &#39; + str(i)) # Print the index print(&#39;Element: &#39; + str(lst[i])) # Print the element . Index: 0 Element: 4 Index: 1 Element: 6 Index: 2 Element: 7 Index: 3 Element: 2 . Nested If Statements . You can nest conditional statements inside a for loop to execute different code based on conditions. . # APCSP Pseudo-Code: For Loop with Nested If Statements numbers ← [1, 2, 3, 4, 5] FOR EACH num IN numbers: IF num MOD 2 EQUALS 0: DISPLAY num, &quot;is even&quot; ELSE: DISPLAY num, &quot;is odd&quot; END IF END FOR . # Example 6: For loop with nested if statements numbers = [1, 2, 3, 4, 5] for num in numbers: if num % 2 == 0: print(num, &quot;is even&quot;) else: print(num, &quot;is odd&quot;) . 1 is odd 2 is even 3 is odd 4 is even 5 is odd . Popcorn Hack 2 . Use the input() function to append a range of integers from a list . | Use a nested if statement to only print numbers in the list that are evenly divisble by 3 . | . nums = [] #Code goes here . Try/Except . Using a try and except block inside a loop can handle errors gracefully. . | Very useful for production code, even in frontend webapps . Ex: Giving an error page instead of dumping critical information on the webpage | . | . # APCSP Pseudo-Code: Handling Errors in a For Loop numbers ← [1, 2, &quot;three&quot;, 4, 0, &quot;five&quot;] FOR EACH item IN numbers: TRY: DISPLAY 10 / item CATCH ZeroDivisionError: DISPLAY &quot;Division by zero&quot; CATCH TypeError: DISPLAY &quot;Type error&quot; END TRY END FOR . numbers = [1, 2, &quot;three&quot;, 4, 0, &quot;five&quot;] for item in numbers: try: print(10 / item) except ZeroDivisionError: #Type of error: Dividing by Zero print(&quot;Division by zero&quot;) except TypeError: #Type of error: Dividing by something that isn&#39;t a number print(&quot;Type error&quot;) . 10.0 5.0 Type error 2.5 Division by zero Type error . Popcorn Hack 3 . Create a for loop that uses a try and except statement for an AttributeError | Use integers and a list to create scenarios where the loop will either print something expected or print an error message | CHALLENGE: Try using the math module for this error | . numbers = [] # Code goes here . Continue and Break . Continue statement skips the current iteration | Break statement exits the loop prematurely | . # APCSP Pseudo-Code: For Loop with Continue and Break numbers ← [1, 2, 3, 4, 5] FOR EACH num IN numbers: IF num EQUALS 3: CONTINUE IF num EQUALS 5: BREAK DISPLAY num END FOR . # Example 8: For loop with continue and break numbers = [1, 2, 3, 4, 5] for num in numbers: if num == 3: continue # Skip the number 3 if num == 5: break # Exit the loop when 5 is encountered print(num) . 1 2 4 . Nested For Loops . You can also put for loops within for loops | Allows for looping an exponential amount of times | . # APCSP Pseudo-Code: Nested Loops for Group Names groups ← [[&quot;advik&quot;, &quot;aashray&quot;], [&quot;akhil&quot;, &quot;srijan&quot;]] FOR EACH pair IN groups: FOR EACH person IN pair: DISPLAY person + &quot; is cool&quot; END FOR DISPLAY pair[0] + &quot; and &quot; + pair[1] + &quot; love to code code code&quot; END FOR . groups = [[&#39;advik&#39;, &#39;aashray&#39;], [&#39;akhil&#39;, &#39;srijan&#39;]] for pair in groups: for person in pair: print(person + &#39; is cool&#39;) print(pair[0] + &#39; and &#39; + pair[1] + &#39; love to code code code&#39;) . advik is cool aashray is cool advik and aashray love to code code code akhil is cool srijan is cool akhil and srijan love to code code code . (OPTIONAL) Popcorn Hack 4 . Create a nested for loop that iterates over a dictionary that has: A name for each key | A list for each value containing stuff like age, grade, etc. | . | Break/continue if certain conditions are met | Have fun! If you want to, relate it to a theme! | . people = {} # Code here . Iteration via Recursion . A technique where a function calls itself | Can be used to recreate loops until a certain condition is met | . # APCSP Pseudo-Code: Recursion for Factorial Calculation FUNCTION factorial(n): IF n EQUALS 0: RETURN 1 ELSE IF n LESS THAN 0: RETURN &quot;undefined&quot; ELSE IF TYPEOF(n) EQUALS &quot;float&quot;: RETURN &quot;not solvable without gamma function&quot; ELSE: RETURN n TIMES factorial(n - 1) END IF END FUNCTION result ← CALL factorial(5) DISPLAY &quot;Factorial of 5 is&quot;, result . # Example 9: Recursion for factorial calculation def factorial(n): if n == 0: #Conditions to stop the recursion return 1 # 0! is 1 elif n &lt; 0: return &quot;undefined&quot; # Undefined for negative numbers elif isinstance(n, float): return &quot;not solvable without gamma function&quot; # Only accept integers else: return n * factorial(n - 1) #Function calling itself result = factorial(5) print(&quot;Factorial of 5 is&quot;, result) . Factorial of 5 is 120 . Homework . Add student names w/ grades to a dictionary until the user doesn’t want more students Prompt for user input for all of these | . | Use a nested if/else statement in a for loop Get the highest score in the dictionary | Add all students who passed into a new list (add student names, not their scores) | . | Bonus: Use a try/except for any scores that aren’t integers | . students = {} #Code goes here .",
            "url": "http://localhost:4100/teacher_portfolio/2023/10/12/P2-Iteration-In-Python_IPYNB_2_.html",
            "relUrl": "/2023/10/12/P2-Iteration-In-Python_IPYNB_2_.html",
            "date": " • Oct 12, 2023"
        }
        
    
  
    
        ,"post127": {
            "title": "P1 Iteration",
            "content": "P1 iterations lesson .",
            "url": "http://localhost:4100/teacher_portfolio/2023/10/12/P1_Iteration.html",
            "relUrl": "/2023/10/12/P1_Iteration.html",
            "date": " • Oct 12, 2023"
        }
        
    
  
    
        ,"post128": {
            "title": "P2 Iteration",
            "content": "Flow of Information . The information in a code flows in a direction based on the loops and conditional statements written. . Control Statements . These statements determine the order in which the code is executed. Two major ways of writing control statements are using iteration and transfer statements. . Iteration . By: (Sumedha, Aditya, Ishraq, Grayson, Anthony) . What is iteration? . We use iteration when we need to repeat the same code for a multiple number of times. Iteration is the looping of data in a code sequence. In Python, iteration is done using While loops and For loops. . While loops . While loops are used when the looping depends on a condition. As long as the condition is true, the code will be executed. When the condition becomes false, the loop stops. . In a while loop, we need to specify the index value (where the loop starts) and the increment value (what the loop increases by). . i = 0 while i &lt; 5: print(i) i += 1 . Hack 1: . Write a code for printing even numbers from 1 to 10 using a while loop. . i=0 # your code here print (i) . Transfer Functions . Statements which transfer control from one part of a program to another. Examples are: break, continue, and pass statements. . Break Funtion . To stop a code from printing after a certain value, use the break function. We use an if statement to decide where the output will stop. The break function is placed before the increment and after the if statement. . i = 1 while i &lt; 5: print(i) if i == 2: break i += 1 . Continue Function . To skip an output value and continue on to the end value, use the continue function. We use an if statement to decide which value should be skipped. The continue function is placed after both the increment and the if statement. . i = 0 while i &lt; 5: i += 1 if i == 2: continue print(i) . Hack 2: . Write a code to list the numbers from 1 to 20 while skipping the multiples of 2 using a while loop. . i = 0 # your code here print(i) . Pass Function . The pass function is like a placeholder after empty code has been written. When a pass statement is added, there will be no effect, but there will be no error message. If there is no pass statement, then an error message will appear. . for x in []: pass . Else Statements . If a condition isn’t true anymore, then we can write a code using an else statement which stops the iteration from continuing. . i = 1 while i &lt; 5: print(i) i += 1 else: print(&quot;i is no longer less than 5&quot;) . For Loops . For Loops are used to iterate over a group of values such as lists, strings, dictionaries, tuples, etc. . gemstones = [&quot;aquamarine&quot;, &quot;beryl&quot;, &quot;citrine&quot;] for x in gemstones: print(x) . Looping through Strings . We can iterate through strings by using a for loop that shows each character in the string. Example below: . for x in &quot;beryl&quot;: print(x) . Break Function . Using a break function, we can stop the loop from iterating when the output is a certain value. This is the same as in while loops. . gemstones = [&quot;aquamarine&quot;, &quot;beryl&quot;, &quot;citrine&quot;] for x in gemstones: print(x) if x == &quot;beryl&quot;: break . Continue Function . Using a continue function, we can skip an output value and continue the iteration till the end of the sequence. This is similar to while loops. . gemstones = [&quot;aquamarine&quot;, &quot;beryl&quot;, &quot;citrine&quot;] for x in gemstones: if x == &quot;beryl&quot;: continue print(x) . Range Function . Using a range function, we can iterate through a specific range of values. This function starts with zero and increments by 1, which it does automatically, and we specify exactly which values to iterate through. . for x in range(8): print(x) . We can define the starting value if it is other than zero by adding a second parameter. . for x in range(2,8): print(x) . We can also define the increment value by adding a third parameter. . for x in range(1,8,2): print(x) . Else Statements . We use else statements to signal when a code is done iterating through a set of values. It is used to code for a message which is printed to show when the iteration is complete. . for x in range(8): print(x) else: print(&quot;The code is finished!&quot;) . Nested Loops . Nested Loops are loops within loops. This is used to return an output which is a combination of the outer and inner loops. . for x in [1, 2]: print(x) for y in [2, 3, 4, 5]: print(y) . for i in range(4,6): print (i) for x in range(1,11): print (i, &quot;X&quot;, x, &quot;=&quot;, i * x) . Hack 3 . Write a code using a for loop that outputs numbers from 1 to 100 and skips multiples of 4. . Upper 90%: Add multiple parameters to specify your values. Use continue to skip the proper values. Double check outputs. . # Your code here . Homework . Create a function that takes a list of numbers and arranges the in descending order . For example this function should be able to take the list [35,4,6,90,2,55,13,8] and arrange it into [2,4,6,8,13.35,55,90] . Extra Credit . Make it so this function can also sort strings by their length For example [Car,4,11,twenty,27,trees] should sort into [Car,4,trees,twenty,11,27] . #start here def shortestToLongestSorter(nums): pass .",
            "url": "http://localhost:4100/teacher_portfolio/2023/10/12/CSP-Iteration-P2_IPYNB_2_.html",
            "relUrl": "/2023/10/12/CSP-Iteration-P2_IPYNB_2_.html",
            "date": " • Oct 12, 2023"
        }
        
    
  
    
        ,"post129": {
            "title": "API, Data Strategies",
            "content": "API, Data Resources . Applications, Web Applications are nothing without data. After many reviews, Teachers are concerned that many groups are not making the effort to understand and look at Data requirements for end of Trimester. . API Terms and Postman . Knowing Terms and Postman needs to be a part of your vocabular and demonstrations as you move into Feature, Integration, and Final reviews. . API Control, Model, Postman Make your live review more interesting by completing and showing hacks discussed in this guide for your solution. | . Variation off of Jokes . Student teams have opportunity for 90% if they do a variation of Jokes. However, this is considered about 10 hours of work for both frontend and backend development. So, there would need to be a couple of variation to meet team goals for 4 people. . Frontend Fetch of Jokes. In this code example you will learn many of the key Frontend requirements in displaying the Jokes API. This meets 1/2 the requirements for this project. JavaScript Fetch and Display Use JavaScript “fetch” get, put, update operation with Python APIs | Use JavaScript to trap errors through invalid response | Use JavaScript to displays data by updating DOM | . | . | Python Web API for Jokes. Review this document that describes how to make Model and Interface endpoints. Python Endpoints and CRUD Python public API endpoints is require definition on backend | Build Python CRUD operations to support endpoints | . | . | . Alternative to Jokes . Student teams need could look into Python “requests” and learning dotenv on AWS server to hide access keys. This is fundamental for using ChatGPT. Additionally, you will add your own API to be accessed by JavaScript “fetch”, this is a two step process. This should be considered a requirement for anyone doing Food, Cars, Fitness or other common API categories. Doing a JavaScript “fetch” is not enough. . Python 3rd Party API. It can be beneficial to access APIs in the backend versus the frontend. Plus, this multi step process will meet Frontend to Backend API requirements. ChatGPT APIs keys are required to be hidden on server. | Rate limits can be controlled on backend. Always ensuring result. | Python Endpoints and CRUD | JavaScript Fetch and Display | . | . 100% and CPT project . Starting to learn about persistent data and databases with APIs is something that will put you ahead of the game. Above expectations would require some original work or thinking. . User Database API. This is a more advanced approach to APIs, but learning this will prepare you for requirements and language of Create Performance Task, the CSP project. Developer learns CRUD operations and Database access | Python Endpoints and CRUD | JavaScript Fetch and Display | . | . Backend Session on Jokes . Setup VSCode as Follows . Load three files that are pertinant to this excercise. . main.py, run the application with Debugging | api/joke.py, endpoint for each joke interface | model/jokes.py, model means data or data for jokes | . Run Web Application Locally . . Run Observations and actions . This start the application use Python with Debugging on. The objective is to load Web Server. Look at Terminal for outputs. . Review api/joke.py . Now is a good time to look at code around this code. . Definition of joke_api with browser prefix /api/jokes. | . joke_api = Blueprint(&#39;joke_api&#39;, __name__, url_prefix=&#39;/api/jokes&#39;) # API generator https://flask-restful.readthedocs.io/en/latest/api.html#id1 api = Api(joke_api) . _Read resource is defined using “get” method | . class _Read(Resource): def get(self): return jsonify(getJokes()) . api /api/jokes/ | . api.add_resource(_Read, &#39;/&#39;) . Debug api/joke.py with Browswer . Learn to setup break point and usage of play controls(continue, step over, step into, step out) . . Setup breakpoint in Code | Call endpoint from Browser | Observe code stopping and play controls | . Debug Observations and actions . Open Locals self observe endpoint and method | Step into code observe that step takes you to jokes.py | Open Globals jokes_data | Hover over jokes_data in code | Press continue play control and observe data in browser | . Debug api/joke.py with Postman . Similar debugging goals as previous, but now we can perform put method as well as get methond. . Postman Observation and actions . Download Postman for free | Build Collections Get APIs | Put APIs | . | Test Collections | Set Breakpoints in Code and Observe | . . Hacks . Build Collection of API tests in Postman on localhost. | Try APIs off of a deployed server: https://flask.nighthawkcodingsociety.com/api/jokes | Extra. Write code for _Create method for Jokes, hint use Body to pass data versus command line | Extra. Write your own frontend code to read your own Jokes API. Here is example. Sample github.io Frontend Runtime - Sample github.io Raw Code. | . | .",
            "url": "http://localhost:4100/teacher_portfolio/2023/10/11/CSP-API-strategy.html",
            "relUrl": "/2023/10/11/CSP-API-strategy.html",
            "date": " • Oct 11, 2023"
        }
        
    
  
    
        ,"post130": {
            "title": "Daily Meeting Log",
            "content": "PBL Ideation Weeks . Learning outcome for week. Start shared GitHub, learn how to plan. . Weekend - Do some exploration Mr Lopez found and animated a Monkey Sprite (Gorilla) | Mr M got background to be continuous | Mr M put dog on background and added some effects | . | Monday - Get together with Mr Lopez, Safin, and Rohan. Mr M wants to work on Code Quality as there are too many globals and it caused a lot of problems. Expectations are there will many elements to add to game and correction should be done now. | . | . class Layer { constructor(image, speedRatio, canvasWidth, canvasHeight) { //... } } class BackgroundLayer extends Layer { } class CharacterLayer extends Layer { } function initializeBackgroundLayer(imageUrl, canvasId, canvasWidth, canvasHeight) { // Create and return an instance of BackgroundLayer } function initializeCharacterLayer(imageUrl, canvasId, canvasWidth, canvasHeight, characterType) { // Create and return an instance of CharacterLayer } function gameLoop() { // Update and draw all layers (background, characters, etc.) backgroundLayer.update(); characterLayer.update(); backgroundLayer.draw(); characterLayer.draw(); // Handle user input, collision detection, etc. // ... // Request the next frame requestAnimationFrame(gameLoop); } . To go with rework start restructuring files for easier maintenance | . project-root/ index.html assets/ js/ layers/ Layer.js BackgroundLayer.js CharacterLayer.js images/ alien_planet.jpg dogSprite.png . Tu Restructure Files, Experiment with Monkey added to Game, experiment with Shadow Dog | W Tech Talk | Th Study and implement a Platform, Create Monkey as Main Character | Friday. Review initial features with Teacher | .",
            "url": "http://localhost:4100/teacher_portfolio/c1.4/2023/10/11/Alien_World-Daily-Meetings-Features.html",
            "relUrl": "/c1.4/2023/10/11/Alien_World-Daily-Meetings-Features.html",
            "date": " • Oct 11, 2023"
        }
        
    
  
    
        ,"post131": {
            "title": "U3|Booleans-If|Student-P3",
            "content": "Lessons . 3.1 . Learning Objective . Evaluate Boolean expressions that use relational operators in program code | . Types of Rational Operators . Operators Primitives | Equal to: == | Not Equal to: != | . | Arithmetic Greater than: &gt; | Less than: &gt; | Greater than or equal to: &gt;= | Less than or equal to: &lt;= | . | . All operators give a true or False value . Operators SHOULD NOT be used on String . String comparisons should be done using .equal or .compareTo . This is because In Java, strings should not be compared using the == operator because it checks for reference equality, not content equality. | When you use == with objects (including strings), it checks if the references to the objects are the same. In other words, it checks if they point to the same location in the memory. | String literals in Java are stored in a special memory area called the “String Pool”. When you create a string literal, Java checks if a string with the same content already exists in the pool. If it does, it returns a reference to that existing string; if not, it creates a new string. | . | . Comparing Numbers . . Select two numbers and check their relation: . First Number: 0 1 2 Relation: = &gt;= &lt;= &gt; &lt; Second Number: 0 1 2 Check . . public class Test { public static void main(){ String a = &quot;Hello&quot;; String b = new String(&quot;Hello&quot;); System.out.println( a == b); } } Test.main() . false . 3.2 3.3 and 3.4 . Learning Objective . Represent branching logical processes by using conditional statements | . We all know how if and else statements work . Syntax . Interactive Flip Cards . if-else Syntax . if (condition) { // Code to execute if the condition is true } else { // Code to execute if the condition is false } . else-if Syntax . if (condition1) { // Code to be executed if condition1 is true } else if (condition2) { // Code to be executed if condition2 is true } else if (condition3) { // Code to be executed if condition3 is true } else { // Code to be executed if none of the conditions are true } . &lt;/html&gt; . 3.5 . Learning Objectives: . Understand nested if-else statements and their role in representing branching logical processes. | Evaluate compound boolean expressions using logical operators like &amp;&amp; and ||. | Introduce short-circuited evaluation in compound boolean expressions. | . Nested if-else statements . Nested if-else statements allow for multiple levels of decision-making within a program. . public class Nested { public static void main() { int x = 5; int y = -10; if (x &gt; 0) { if (y &gt; 0) { System.out.println(&quot;Both x and y are positive.&quot;); } else { System.out.println(&quot;x is positive, but y is not.&quot;); } } else { System.out.println(&quot;x is not positive.&quot;); } } } Nested.main() . x is positive, but y is not. . Compound Boolean Expressions: . Compound boolean expressions involve using logical operators like &amp;&amp; (and) and || (or) to combine multiple conditions. . public class Compound { public static void main(){ int age = 25; boolean isStudent = true; if (age &gt;= 18 &amp;&amp; isStudent) { System.out.println(&quot;You are an adult student.&quot;); } else if (age &gt;= 18 || isStudent) { System.out.println(&quot;You are either an adult or a student.&quot;); } else { System.out.println(&quot;You are neither an adult nor a student.&quot;); } } } Compound.main() . You are an adult student. . Short-Circuited Evaluation: . Short-circuited evaluation is an optimization technique where the second condition in a compound expression is only evaluated if the first condition is true (for &amp;&amp;) or false (for ||). . public class Short { public static void main() { boolean condition1 = true; boolean condition2 = false; if (condition1 || condition2) { System.out.println(&quot;This will be printed.&quot;); } } } Short.main() . This will be printed. . Coding Practice . Calculate the final grade based on the following criteria: . If the student didn’t complete homework, the grade is automatically “F.” | If the student completed homework and the average of midterm and final exam scores is &gt;= 70, the grade is “Pass.” | Otherwise, the grade is “Fail.” | . import java.util.Scanner; public class GradeCalculator { public static void main(String[] args) { Scanner scanner = new Scanner(System.in); System.out.print(&quot; Enter your midterm score (0-100): n&quot;); int midtermScore = scanner.nextInt(); System.out.print(midtermScore); System.out.print(&quot; n Enter your final exam score (0-100): n&quot;); int finalExamScore = scanner.nextInt(); System.out.print(finalExamScore); System.out.print(&quot; n Did you complete the homework (yes/no): n&quot;); String homeworkComplete = scanner.next().toLowerCase(); System.out.print(homeworkComplete); // write code here if () { } else { } System.out.println(&quot; n Your final grade is: &quot; + grade); scanner.close(); } } GradeCalculator.main(null) . 3.6 . Learning Objective . Compare and contrast equivalent Boolean expressions | . De Morgan’s Law . Augustus De Morgan was a 19th century mathematician whose laws or rules about boolean logic allow us to simplify expressions when they are negated Given two Boolean variables a and b: | . De Morgan&#39;s Law provides a set of rules for negating complex boolean expressions. . Example: . Using &amp;&amp; operators: . . Using || operator: . . More: . !(x &gt; 0) → (x &lt;= 0) | Distributing a “not” with a boolean expression “flips” the relational operator to the opposite relational operator !(x &lt; 0) → (x &gt;= 0) | !(x &gt;= 0) → (x &lt; 0) | !(x == 0) → (x != 0) | ! (x != 0) → ( x == 0) | . | . A bit more complex: . . Proving the law using tables . . public class Example { public static void main(){ boolean x = true; boolean y = false; // Original expression boolean originalExp = !(x &amp;&amp; y); // Applying De Morgan&#39;s Law boolean equivalentExp = !x || !y; // Checking if the results are equivalent System.out.println(&quot;Are the expressions equivalent? &quot; + (originalExp == equivalentExp)); } } Example.main() . Are the expressions equivalent? true . public class Example2 { public static void main(){ boolean p = true; boolean q = true; // Original expression boolean originalExp2 = !(p || q); // Applying De Morgan&#39;s Law boolean equivalentExp2 = !p &amp;&amp; !q; // Checking if the results are equivalent System.out.println(&quot;Are the expressions equivalent? &quot; + (originalExp2 == equivalentExp2)); } } Example2.main() . Are the expressions equivalent? true . public class Example3 { public static void main(){ boolean a = true; boolean b = false; boolean c = true; // Original expression boolean originalExp3 = !(a &amp;&amp; b) || (c || !b); // Applying De Morgan&#39;s Law boolean equivalentExp3 = (!a || !b) || (c || b); // Checking if the results are equivalent System.out.println(&quot;Are the expressions equivalent? &quot; + (originalExp3 == equivalentExp3)); } } Example3.main() . Are the expressions equivalent? true . De Morgan’s Law Practice . Negate the following expressions: . 1. !(A || B) . 2. !(A || B &amp;&amp; C) . 3. !(A &amp;&amp; (B || C)) . 3.7 . Learning Objective . Compare object reference using boolean expressions in program code | . . An if statement using == to compare myHouse and momsHouse will be true but false for myHouse and annasHouse because the objects are not the same even though they have same parameters. This means that == will only return true if it is the same object, not a reference or copy of that object. . String a = &quot;Hello&quot;; String b = &quot;Hello&quot;; String c = a; String d = new String(&quot;Hello&quot;); System.out.println(a == c); System.out.println(d == b); System.out.println(a == b); System.out.println(a == d); . true false true false . . When you want to compare objects you can use the .equal() method, it will return true if the objects have the same attributes even if they aren’t identical. . String a = &quot;Hello&quot;; String b = &quot;Hello&quot;; String c = a; String d = new String(&quot;Hello&quot;); System.out.println(a.equals(c)); System.out.println(d.equals(b)); System.out.println(a.equals(b)); System.out.println(a.equals(d)); . true true true true . Hacks . Complete popcorn hacks - 0.1 points | Coding hacks - 0.8 points Complexity: 0.4 points | Functionality: 0.4 points | . | . Coding Practice . Create a program that validates a user’s password based on the following criteria: . The password must be at least 8 characters long. | The password must contain at least one uppercase letter. | The password must contain at least one lowercase letter. | The password must contain at least one digit (0-9). | The password must contain at least one special character (!, @, #, $, %, ^, &amp;, *). | Write a Java program that prompts the user to enter a password and then checks if it meets the above criteria. If the password meets all the criteria, print “Password is valid.” If not, print a message indicating which criteria the password fails to meet. .",
            "url": "http://localhost:4100/teacher_portfolio/2023/10/10/java-booleans-P3_IPYNB_2_.html",
            "relUrl": "/2023/10/10/java-booleans-P3_IPYNB_2_.html",
            "date": " • Oct 10, 2023"
        }
        
    
  
    
        ,"post132": {
            "title": "P5 Boolean If",
            "content": "Review . Quick review on if statements, boolean expressions, and college-board pseudo code . Boolean . Data-type that can either be true or false . boolean = True print(boolean) boolean = False print(boolean) boolean = 1 ## boolean is not longer a boolean, now an integer print(type(boolean)) . True False &lt;class &#39;int&#39;&gt; . If-Statements/Conditionals . Self, explanatory, runs a portion of code if expression/condition is satisfied. . if (EXPRESSION): print(&#39;code to run here&#39;) . number = int(input(&#39;Enter a number: &#39;)) # Collegeboard talks about the modulo operation even in this section so here it is # % is the modulo operation # Easier way to think about it is the remainder when two numbers are divided # Ex. 14 % 6 = remainder of 14/6 = 2 if (number % 2 == 0): print(&#39;Number is even&#39;) else: print(&#39;Number is odd&#39;) . Number is even . Relational Operators . Used to compare two variables, returns a boolean . == Checks if two variables are equal | . | != Checks if two variables are not equal | . | a &gt; b Checks if variable a is greater than b | . | a &lt; b Checks if variable a is less than b | . | a &gt;= b and a &lt;= b Same as above, but greater than or equal to and less than or equal to | . | . a = 7 b = 5 if a == b: print(&#39;a equals b&#39;) else: print(&#39;a does not equal b&#39;) if a &gt; b: print(&#39;a is greater than b&#39;) elif a &lt; b: print(&#39;a is less than b&#39;) . a does not equal b a is greater than b . Hack #1: Relational Operators . Create a program that takes two numbers from the user (use input()) and displays the larger one. If the numbers are equal, state that they are equal. Challenge: Use relational operators to compare two words and display whichever one comes first alphabetically (Can you apply it to a list?) . ## Program Here . Logic Gates . Logic gates combine different boolean (true/false or 1/0) values into a single boolean value. As computers are composed of a bunch of binary/boolean values, logic gates are the “logic” of the computer (the ability to code). . Boolean Operators + Algebra . The basic operators in Boolean algebra are AND, OR, and NOT. The secondary operators are eXclusive OR (often called XOR) and eXclusive NOR (XNOR, sometimes called equivalence). They are secondary in the sense that they can be composed from the basic operators. . AND . The AND of two values is true only whenever both values are true. It is written as AB or A⋅B. . A B A AND B . 0 | 0 | 0 | . 0 | 1 | 0 | . 1 | 0 | 0 | . 1 | 1 | 1 | . . Real-life example of AND: If it’s sunny (A) AND it’s a weekend (B), then I will go to the beach :) . Hack #2: AND in Python . Add an “else” statement to the current if-statement, and display an appropriate response for each block | Rename the two variables to a realistic scenario (i.e. sunny and weekend example above) | Change the two variables between True and False to see what output you’ll get! | (CHALLENGE): Make the code more user-friendly with “input()” | # CB Pseudo Code A ← true B ← true IF (A AND B) { DISPLAY(&quot;It&#39;s true!&quot;) } . # Python A = True B = True if A and B: # Bitwise syntax: A &amp; B print(&quot;It&#39;s true!&quot;) . It&#39;s true! . OR . The OR of two values is true whenever either or both values are true. It is written as A+B. The values of or for all possible inputs is shown in the following truth table . A B A OR B . 0 | 0 | 0 | . 0 | 1 | 1 | . 1 | 0 | 1 | . 1 | 1 | 1 | . . Real-life example of OR: If it’s my birthday (A) OR it’s Christmas (B), then I will get a present :D . Optional Hack: OR in Python . Add an else statement to create output appropriately | Try different combinations of A and B | # CB Pseudo Code A ← true B ← false IF (A OR B) { DISPLAY(&quot;It&#39;s true!&quot;) } . # Python A = True B = False if A or B: # Bit-mask syntax: A | B print(&quot;It&#39;s true!&quot;) . It&#39;s true! True . NOT . The NOT of a value is its opposite; that is, the not of a true value is false whereas the not of a false value is true. It is written as [x with a dash above] or ¬x. . A NOT A . 0 | 1 | . 1 | 0 | . . Real-life example of NOT: If I do NOT eat dessert (A), then I will be sad ;-; . Hack #3: NOT in Python . Follow the “AND in Python” hack to add an else statement to output when gate returns false, and change the program to apply in real life | Try different combinations of A | (CHALLENGE): Combine the NOT logic gate with the AND logic gate and the OR logic gate from above | # CB Pseudo Code A ← false IF (NOT A) { DISPLAY(&quot;It&#39;s true!&quot;) } . # Python A = False if not A: # No equivalent bitwise syntax in python print(&quot;It&#39;s true!&quot;) . It&#39;s true! . XOR . The XOR of two values is true whenever the values are different. It uses the ⊕ operator, and can be built from the basic operators: x⊕y = x(not y) + (not x)y . A B A XOR B . 0 | 0 | 0 | . 0 | 1 | 1 | . 1 | 0 | 1 | . 1 | 1 | 0 | . . Real-life example of XOR: If I play video games (A) XOR I watch a movie (B), I will be entertained :O . Another example: There is a light connected to two switches. If the first switch is on (A) XOR the second switch is on (B), then the light will turn on. Note here that flipping either switch (changing either input) changes the output. . The XOR gate is often use in binary calculators as well, because if two ones results in a zero, and an AND gate can be used to calculate the next bit. . Hack #4: XOR in Python . Follow the “AND in Python” hack to add else output | Try different combinations of A and B | (CHALLENGE): Assuming True is 1 and False is 0, write an expression that takes two inputs and outputs the result of a XOR gate | # CB Pseudo Code A ← false B ← true IF (A XOR B) { DISPLAY(&quot;It&#39;s true!&quot;) } . # Python A = False B = True if A ^ B: # Only bitwise syntax, no &quot;xor&quot; keyword print(&quot;It&#39;s true!&quot;) . It&#39;s true! . NAND . NAND is the NOT of the result of AND. In other words, the result of NAND is true if at least one value is false. . A B A NAND B . 0 | 0 | 1 | . 0 | 1 | 1 | . 1 | 0 | 1 | . 1 | 1 | 0 | . . Real-life example of NAND: If I forget my computer (A) NAND I forget my phone (B), I can access the internet :P . Optional Hack: NAND in Python . Follow the “AND in Python” hack to make the code applicable to a real-life example (e.g. forgetting your phone NAND forgetting your computer). | Try different combinations of A and B | Follow the “AND in Python” hack to add else output | # CB Pseudo Code A ← false B ← true IF (NOT (A AND B)) { DISPLAY(&quot;It&#39;s true!&quot;) } . # Python A = False B = True if not (A and B): print(&quot;It&#39;s true!&quot;) . It&#39;s true! . NOR . NOR is the NOT of the result of OR. In other words, the result of NOR is true if and only if both values are false. . A B A NOR B . 0 | 0 | 1 | . 0 | 1 | 0 | . 1 | 0 | 0 | . 1 | 1 | 0 | . . Real-life example of NOR: If there’s a fire (A) NOR there’s an earthquake (B) then I’ll be ok :S . Optional Hack: NOR in python . Follow the “AND in Python” hack to make the code applicable to a real-life example (e.g. there’s a fire NOR there’s an earthquake). | Try different combinations of A and B | Follow the “AND in Python” hack to add else output | # CB Pseudo Code A ← false B ← true IF (NOT (A OR B)) { DISPLAY(&quot;It&#39;s true!&quot;) } . # Python A = False B = True if not (A or B): print(&quot;It&#39;s true!&quot;) . It&#39;s true! . De-Morgan’s Law . An OR (AND) expression that is negated is equal to the AND (OR) of the negation of each term. . NOT (A AND B) = (NOT A) OR (NOT B) . Using same beach example as above: If it is sunny OR it is a weekend, I will go the beach (A AND B). If I go to the beach, I will NOT stay home. | The above can be simplified to if it is NOT sunny (A), OR NOT a weekend (B), I will stay home. | . | . NOT (A OR B) = (NOT A) AND (NOT B) . If it is NOT (my birthday (A) OR Christmas (B)), then I don’t get a present | The above is the same as if it is NOT my birthday (A) AND NOT Christmas (B), then I don’t get a present | . Homework Hacks . There is one more logic gate, known as an XNOR, or exclusive-NOR gate. It is a combination of an XOR and a NOT gate. Create a table like the ones above to demonstrate input and output values of this gate. . | Create python functions for three of the above logic gates. Implement two of them in an interactive program (with input) with a purpose. . | Bob is grading homework from a peer teaching project. He needs to mark a student’s homework as incomplete if they did NOT complete all the problems, OR did NOT submit it on time. Unfortunately, his teammate Cob did not give him any other information, and is now on vacation. Bob needs to do this using only TWO logic gates (don’t ask why). Help Bob write a program to grade his class’s homework! . | isComplete = {&#39;Student 1&#39;: 1, &#39;Student 2&#39;: 1, &#39;Student 3&#39;: 0, &#39;Student 4&#39;: 1, &#39;Student 5&#39;: 0, &#39;Student 6&#39;: 1} isOnTime = {&#39;Student 1&#39;: 1, &#39;Student 2&#39;: 0, &#39;Student 3&#39;: 0, &#39;Student 4&#39;: 1, &#39;Student 5&#39;: 1, &#39;Student 6&#39;: 1} ## Program Here ## Example output: {&#39;Student 1&#39;: &#39;Incomplete&#39;, &#39;Student 2&#39;: &#39;Incomplete&#39;, &#39;Student 3&#39;: &#39;Incomplete&#39;, &#39;Student 4&#39;: &#39;Incomplete&#39;, &#39;Student 5&#39;: &#39;Incomplete&#39;, &#39;Student 6&#39;, &#39;Complete&#39;} ## Extra: Format the output nicely . BONUS: Construct a XOR gate from a NAND gate, an OR gate, and an AND gate. | def nandgate(a, b): if not (a and b): return True elif not (a and b): return False def andgate(a, b): if a and b: return True elif not (a and b): return False def orgate(a, b): if a or b: return True else: return False def xorgate(a, b): return &#39;add your function here&#39; print(xorgate(True, True)) print(xorgate(True, False)) print(xorgate(False, True)) print(xorgate(False, False)) . add your function here add your function here add your function here add your function here .",
            "url": "http://localhost:4100/teacher_portfolio/2023/10/10/P5-Boolean-If_IPYNB_2_.html",
            "relUrl": "/2023/10/10/P5-Boolean-If_IPYNB_2_.html",
            "date": " • Oct 10, 2023"
        }
        
    
  
    
        ,"post133": {
            "title": "P2 Boolean, If Lesson",
            "content": "Boolean . A Boolean value is either true or false. | A Boolean expression produces a Boolean value (true or false) when evaluated. | . Conditional (&quot;if&quot;) statements . Affect the sequential flow of control by executing different statements based on the value of a Boolean expression. | . IF (condition) { &lt;block of statements&gt; } The code in &lt;block of statements&gt; is executed if the Boolean expression condition evaluates to true; no action is taken if condition evaluates to false. IF (condition) { &lt;block of statements&gt; } ELSE { &lt;second block of statements&gt; } The code in the first &lt;block of statements&gt; is executed if the Boolean expression condition evaluates to true; otherwise, the code in &lt;second block of statements&gt; is executed. . Example: Calculate the sum of 2 numbers. If the sum is greater than 10, display 10; otherwise, display the sum. . num1 = INPUT num2 = INPUT sum = num1 + num2 IF (sum &gt; 10) { DISPLAY (10) } ELSE { DISPLAY (sum) } . Hack 1 . Add a variable that represents an age. . | Add an ‘if’ and ‘print’ function that says “You are an adult” if your age is greater than or equal to 18. . | Make a function that prints “You are a minor” with the else function. . | . ## YOUR CODE HERE age = input(&quot;age: &quot;) if int(age) &gt;= 18: print(&quot;Adult&quot;) else: print(&quot;Minor&quot;) . Adult . Relational operators: . Used to test the relationship between 2 variables, expressions, or values. These relational operators are used for comparisons and they evaluate to a Boolean value (true or false). | . Ex. a == b evaluates to true if a and b are equal, otherwise evaluates to false . a == b (equals) | a != b (not equal to) | a &gt; b (greater than) | a &lt; b (less than) | a &gt;= b (greater than or equal to) | a &lt;= b (less than or equal to) | . Example: The legal age to work in California is 14 years old. How would we write a Boolean expression to check if someone is at least 14 years old? . age &gt;= 14 . Example: Write a Boolean expression to check if the average of height1, height2, and height3 is at least 65 inches. . (height1 + height2 + height3) / 3 &gt;= 65 . Hack 2 . Make a variable called ‘is_raining’ and set it to ‘True”. . | Make an if statement that prints “Bring an umbrella!” if it is true . | Make an else statement that says “The weather is clear”. . | . ## YOUR CODE HERE is_raining = False if is_raining: print(&quot;Bring a ubrella&quot;) else: print(&quot;The weather is clear&quot;) . The weather is clear . Logical operators: . Used to evaluate multiple conditions to produce a single Boolean value. . NOT evaluates to true if condition is false, otherwise evaluates to false | AND evaluates to true if both conditions are true, otherwise evaluates to false | OR evaluates to true if either condition is true or if both conditions are true, otherwise evaluates to false | . Example: You win the game if you score at least 10 points and have 5 lives left or if you score at least 50 points and have more than 0 lives left. Write the Boolean expression for this scenario. . (score &gt;= 10 AND lives == 5) OR (score == 50 AND lives &gt; 0) . Relational and logical operators: . Example: These expressions are all different but will produce the same result. . age &gt;= 16 | age &gt; 16 OR age == 16 | NOT age &lt; 16 | . Hack 3 . Make a function to randomize numbers between 0 and 100 to be assigned to variables a and b using random.randint . | Print the values of the variables . | Print the relationship of the variables; a is more than, same as, or less than b . | . ## YOUR CODE HERE import random a = random.randint(0,100) b = random.randint(0,100) print(a, b) if a &gt; b: print( str(a) + &quot; &gt; &quot; + str(b) ) elif a &lt; b: print( str(a) + &quot; &lt; &quot; + str(b) ) else: print( str(a) + &quot; = &quot; + str(b) ) . 59 36 59 &gt; 36 . Homework . Criteria for above 90%: . Add more questions relating to Boolean rather than only one per topic (ideas: expand on conditional statements, relational/logical operators) | Add a way to organize the user scores (possibly some kind of leaderboard, keep track of high score vs. current score, etc. Get creative!) | Remember to test your code to make sure it functions correctly. | . #HOMEWORK # The quiz contains questions related to Boolean values, Boolean expressions, # conditional statements, relational operators, and logical operators. # Import necessary modules import getpass # Module to get the user&#39;s name import sys # Module to access system-related information # Function to ask a question and get a response def question_with_response(prompt): # Print the question print(&quot;Question: &quot; + prompt) # Get user input as the response msg = input() return msg # Define the number of questions and initialize the correct answers counter questions = 5 correct = 0 # Personalized greeting message # Collect the student&#39;s name user_name = input(&quot;Enter your name: &quot;) print(&#39;Hello, &#39; + user_name + &quot; running &quot; + sys.executable) print(&quot;You will be asked &quot; + str(questions) + &quot; questions.&quot;) answer = input(&quot;Are you ready to take a test?&quot;) # Question 1: Boolean Basics # Ask a question about Boolean values and check the response # Provide feedback based on the correctness of the response # Question 2: Boolean Expressions # Ask a question about Boolean expressions and their importance in programming # Provide feedback based on the correctness of the response # Question 3: Conditional Statements # Ask a question about the purpose of conditional (if-else) statements in programming # Provide feedback based on the correctness of the response # Question 4: Relational Operators # Ask a question about common relational operators in programming and provide examples # Provide feedback based on the correctness of the response # Question 5: Logical Operators # Ask a question about the use of logical operators in programming and provide examples # Provide feedback based on the correctness of the response # Display the final score # Calculate the percentage of correct answers and provide feedback print(user_name + &quot;, you scored &quot; + str(correct) + &quot;/&quot; + str(questions)) .",
            "url": "http://localhost:4100/teacher_portfolio/2023/10/10/CSP-Boolean-If-P3_IPYNB_2_.html",
            "relUrl": "/2023/10/10/CSP-Boolean-If-P3_IPYNB_2_.html",
            "date": " • Oct 10, 2023"
        }
        
    
  
    
        ,"post134": {
            "title": "JS API Deprecated",
            "content": "The code below holds the info that is being generated into an HTML table. . Key things to know: . &lt; table &gt; creates a TABLE | &lt; tr &gt; creates a ROW | &lt; th &gt; makes the text a column HEADER | &lt; tbody id = “results” &gt; defines an element id, to be used within JavaScript | . %%html &lt;!-- HTML table fragment for page --&gt; &lt;table&gt; &lt;thead&gt; &lt;tr&gt; &lt;th&gt;Joke&lt;/th&gt; &lt;th&gt;HaHa&lt;/th&gt; &lt;th&gt;Boohoo&lt;/th&gt; &lt;/tr&gt; &lt;/thead&gt; &lt;tbody id=&quot;result&quot;&gt; &lt;!-- javascript generated data --&gt; &lt;/tbody&gt; &lt;/table&gt; . Constant variables are declared here with keyword const . Key things to know: . The document object “result” represents table body in the HTML above. | If you want to access any element in an HTML page in JavaScript, you always start by accessing the document object. In this case, we are accessing “result” and defining a “resultContainer” | In the code, in following cells, document elements are created and organized for each Joke, each is added to the “resultContainer” as a row in the table body. | Accessing the api is done using the variables url and options, this is setup to fetch the Jokes from the backend | . %%js // prepare HTML defined &quot;result&quot; container for new output const resultContainer = document.getElementById(&quot;result&quot;); // keys for joke reactions const HAHA = &quot;haha&quot;; const BOOHOO = &quot;boohoo&quot;; // prepare fetch urls const url = &quot;https://flask.nighthawkcodingsociety.com/api/jokes&quot;; const like_url = url + &quot;/like/&quot;; // haha reaction const jeer_url = url + &quot;/jeer/&quot;; // boohoo reaction // prepare fetch GET options const options = { method: &#39;GET&#39;, // *GET, POST, PUT, DELETE, etc. mode: &#39;cors&#39;, // no-cors, *cors, same-origin cache: &#39;default&#39;, // *default, no-cache, reload, force-cache, only-if-cached credentials: &#39;omit&#39;, // include, *same-origin, omit headers: { &#39;Content-Type&#39;: &#39;application/json&#39; // &#39;Content-Type&#39;: &#39;application/x-www-form-urlencoded&#39;, }, }; // prepare fetch PUT options, clones with JS Spread Operator (...) const put_options = {...options, method: &#39;PUT&#39;}; // clones and replaces method . The below code uses a function called fetch to gather the data from the backend. . Key things to understand: . The “url” “response” is checked in case the site is down and returns an error | On successful fetch, the code places each Joke in the HTML table body using a “for” loop and creating document elements from each “row” of the fetched “data”. | The creation of each Haha and Boohoo “onclick” “button” is also done in the same loop. | Updates to backend are setup to occur with each onclick, each click calls the “reaction” function | . // fetch the API fetch(url, options) // response is a RESTful &quot;promise&quot; on any successful fetch .then(response =&gt; { // check for response errors if (response.status !== 200) { error(&#39;GET API response failure: &#39; + response.status); return; } // valid response will have JSON data response.json().then(data =&gt; { console.log(data); for (const row of data) { // make &quot;tr element&quot; for each &quot;row of data&quot; const tr = document.createElement(&quot;tr&quot;); // td for joke cell const joke = document.createElement(&quot;td&quot;); joke.innerHTML = row.id + &quot;. &quot; + row.joke; // add fetched data to innerHTML // td for haha cell with onclick actions const haha = document.createElement(&quot;td&quot;); const haha_but = document.createElement(&#39;button&#39;); haha_but.id = HAHA+row.id // establishes a HAHA JS id for cell haha_but.innerHTML = row.haha; // add fetched &quot;haha count&quot; to innerHTML haha_but.onclick = function () { // onclick function call with &quot;like parameters&quot; reaction(HAHA, like_url+row.id, haha_but.id); }; haha.appendChild(haha_but); // add &quot;haha button&quot; to haha cell // td for boohoo cell with onclick actions const boohoo = document.createElement(&quot;td&quot;); const boohoo_but = document.createElement(&#39;button&#39;); boohoo_but.id = BOOHOO+row.id // establishes a BOOHOO JS id for cell boohoo_but.innerHTML = row.boohoo; // add fetched &quot;boohoo count&quot; to innerHTML boohoo_but.onclick = function () { // onclick function call with &quot;jeer parameters&quot; reaction(BOOHOO, jeer_url+row.id, boohoo_but.id); }; boohoo.appendChild(boohoo_but); // add &quot;boohoo button&quot; to boohoo cell // this builds ALL td&#39;s (cells) into tr (row) element tr.appendChild(joke); tr.appendChild(haha); tr.appendChild(boohoo); // this adds all the tr (row) work above to the HTML &quot;result&quot; container resultContainer.appendChild(tr); } }) }) // catch fetch errors (ie Nginx ACCESS to server blocked) .catch(err =&gt; { error(err + &quot; &quot; + url); }); . The below code uses fetch to update backend data using “put_options”. The purpose is to update Hahaa and Bohoo counters in backend. . Key things to understand: . The “url” “response” is checked to verify update occurred | The element id of button clicked is updated with the data returned from the API. | Note, the elemID is received as parameter. This data was setup when the button was created in former cell. | . // Reaction function to likes or jeers user actions function reaction(type, put_url, elemID) { // fetch the API fetch(put_url, put_options) // response is a RESTful &quot;promise&quot; on any successful fetch .then(response =&gt; { // check for response errors if (response.status !== 200) { error(&quot;PUT API response failure: &quot; + response.status) return; // api failure } // valid response will have JSON data response.json().then(data =&gt; { console.log(data); // Likes or Jeers updated/incremented if (type === HAHA) // like data element document.getElementById(elemID).innerHTML = data.haha; // fetched haha data assigned to haha Document Object Model (DOM) else if (type === BOOHOO) // jeer data element document.getElementById(elemID).innerHTML = data.boohoo; // fetched boohoo data assigned to boohoo Document Object Model (DOM) else error(&quot;unknown type: &quot; + type); // should never occur }) }) // catch fetch errors (ie Nginx ACCESS to server blocked) .catch(err =&gt; { error(err + &quot; &quot; + put_url); }); } // Something went wrong with actions or responses function error(err) { // log as Error in console console.error(err); // append error to resultContainer const tr = document.createElement(&quot;tr&quot;); const td = document.createElement(&quot;td&quot;); td.innerHTML = err; tr.appendChild(td); resultContainer.appendChild(tr); } . Hacks . The code below relates to the rapidapi you worked with last week. . What are some similarities you see with the javascript for the jokes api? | In a blogpost, break up the code in cells like done above and try to describe what this code is doing. | . &lt;!-- HTML table fragment for page --&gt; &lt;table&gt; &lt;thead&gt; &lt;tr&gt; &lt;th&gt;Time&lt;/th&gt; &lt;th&gt;All-time Cases&lt;/th&gt; &lt;th&gt;Recorded Deaths&lt;/th&gt; &lt;th&gt;Active Cases&lt;/th&gt; &lt;/tr&gt; &lt;/thead&gt; &lt;tbody&gt; &lt;td id=&quot;time&quot;&gt;&lt;/td&gt; &lt;td id=&quot;total_cases&quot;&gt;&lt;/td&gt; &lt;td id=&quot;total_deaths&quot;&gt;&lt;/td&gt; &lt;td id=&quot;active_cases&quot;&gt;&lt;/td&gt; &lt;/tbody&gt; &lt;/table&gt; &lt;table&gt; &lt;thead&gt; &lt;tr&gt; &lt;th&gt;Country&lt;/th&gt; &lt;th&gt;All-time Cases&lt;/th&gt; &lt;th&gt;Recorded Deaths&lt;/th&gt; &lt;th&gt;Active Cases&lt;/th&gt; &lt;/tr&gt; &lt;/thead&gt; &lt;tbody id=&quot;result&quot;&gt; &lt;!-- generated rows --&gt; &lt;/tbody&gt; &lt;/table&gt; &lt;!-- Script is layed out in a sequence (no function) and will execute when page is loaded --&gt; &lt;script&gt; // prepare HTML result container for new output const resultContainer = document.getElementById(&quot;result&quot;); // prepare fetch options const url = &quot;https://flask.nighthawkcodingsociety.com/api/covid/&quot;; const headers = { method: &#39;GET&#39;, // *GET, POST, PUT, DELETE, etc. mode: &#39;cors&#39;, // no-cors, *cors, same-origin cache: &#39;default&#39;, // *default, no-cache, reload, force-cache, only-if-cached credentials: &#39;omit&#39;, // include, *same-origin, omit headers: { &#39;Content-Type&#39;: &#39;application/json&#39; // &#39;Content-Type&#39;: &#39;application/x-www-form-urlencoded&#39;, }, }; // fetch the API fetch(url, headers) // response is a RESTful &quot;promise&quot; on any successful fetch .then(response =&gt; { // check for response errors if (response.status !== 200) { const errorMsg = &#39;Database response error: &#39; + response.status; console.log(errorMsg); const tr = document.createElement(&quot;tr&quot;); const td = document.createElement(&quot;td&quot;); td.innerHTML = errorMsg; tr.appendChild(td); resultContainer.appendChild(tr); return; } // valid response will have json data response.json().then(data =&gt; { console.log(data); console.log(data.world_total) // World Data document.getElementById(&quot;time&quot;).innerHTML = data.world_total.statistic_taken_at; document.getElementById(&quot;total_cases&quot;).innerHTML = data.world_total.total_cases; document.getElementById(&quot;total_deaths&quot;).innerHTML = data.world_total.total_deaths; document.getElementById(&quot;active_cases&quot;).innerHTML = data.world_total.active_cases; // Country data for (const row of data.countries_stat) { console.log(row); // tr for each row const tr = document.createElement(&quot;tr&quot;); // td for each column const name = document.createElement(&quot;td&quot;); const cases = document.createElement(&quot;td&quot;); const deaths = document.createElement(&quot;td&quot;); const active = document.createElement(&quot;td&quot;); // data is specific to the API name.innerHTML = row.country_name; cases.innerHTML = row.cases; deaths.innerHTML = row.deaths; active.innerHTML = row.active_cases; // this builds td&#39;s into tr tr.appendChild(name); tr.appendChild(cases); tr.appendChild(deaths); tr.appendChild(active); // add HTML to container resultContainer.appendChild(tr); } }) }) // catch fetch errors (ie ACCESS to server blocked) .catch(err =&gt; { console.error(err); const tr = document.createElement(&quot;tr&quot;); const td = document.createElement(&quot;td&quot;); td.innerHTML = err; tr.appendChild(td); resultContainer.appendChild(tr); }); &lt;/script&gt; .",
            "url": "http://localhost:4100/teacher_portfolio/c5.0/c7.0/c7.6/2023/10/09/javascript_api_IPYNB_2_.html",
            "relUrl": "/c5.0/c7.0/c7.6/2023/10/09/javascript_api_IPYNB_2_.html",
            "date": " • Oct 9, 2023"
        }
        
    
  
    
        ,"post135": {
            "title": "Spring Security using JWT",
            "content": "Spring Security using Java Web Tokens Competition . JWT Hello Articles | . JWT concepts via ChatGPT with added illustrations . JSON Web Token (JWT) is a popular way to authenticate users in a web application. It is a compact, URL-safe means of representing claims to be transferred between two parties. The claims in a JWT are encoded as a JSON object that is digitally signed using JSON Web Signature (JWS). Here is an example of how you might use JWT for authentication in a JavaScript application: . The client sends a login request to the server with the user’s credentials (e.g., username and password). Client/Origin: https://nighthawkcoders.github.io/APCSA/data/login | Server/Host: https://spring.nighthawkcodingsociety.com/ | . | If the credentials are valid, the server generates a JWT and sends it back to the client. Here ae some sample credentials. Sec-Fetch-Mode: cors | Sec-Fetch-Site: cross-site | . | The client stores the JWT in a cookie. Here is cookie in Chrome Inspect properties | . | For subsequent requests, the client sends the JWT in the Authorization header. Here is a sample JWT. jwt=eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJqbTEwMjFAZ21haWwuY29tIiwiZXhwIjoxNjc1ODA0MTg2LCJpYXQiOjE2NzU3ODYxODZ9.rHoLxTcBJOBv36gH5qNI1VhgGv2Jub1OPtpddf1-fHd84BcL5MeGxiBhi2M0MpEJcuhTjeC2TYWVaOjT7ek0tg; Path=/; Max-Age=3600; Expires=Tue, 07 Feb 2023 17:09:46 GMT; Secure; HttpOnly; SameSite=None; Secure | . | The server verifies the JWT and, if it is valid, allows the request to proceed. Here is successful response. | . | The JWT consists of three parts, separated by dots (.). The first part is the header, which specifies the algorithm used to sign the JWT (e.g., HS256). The second part is the payload, which contains the claims. The third part is the signature, which is used to verify that the sender of the JWT is who it claims to be and to ensure that the message wasn’t changed along the way. . It is important to use HTTPS when transmitting JWTs to ensure that the JWT is not intercepted by an attacker. It is also a good idea to use short-lived JWTs (e.g., with an expiration time of one hour) and to refresh them frequently to reduce the risk of unauthorized access. . Storing JWT . There are a few different options for storing a JWT in a JavaScript application: . Cookies: You can store the JWT in a cookie and send it back to the server with each request. This is a simple and widely-supported option, but it has some limitations. For example, you can’t access cookies from JavaScript on a different domain, and some users may have cookies disabled in their browser settings. | Local storage: You can store the JWT in the browser’s local storage (localStorage) or session storage (sessionStorage). This option allows you to access the JWT from JavaScript on the same domain, but it is vulnerable to cross-site scripting (XSS) attacks, where an attacker can inject malicious code into your application and steal the JWT from the storage. | HttpOnly cookie: You can store the JWT in an HttpOnly cookie, which is a cookie that can only be accessed by the server and not by client-side JavaScript. This option provides some protection against XSS attacks, but it is still vulnerable to other types of attacks, such as cross-site request forgery (CSRF). | ChatGPT says … It is generally recommended to use a combination of options to provide the best security for your application. For example, you could store the JWT in an HttpOnly cookie and also in local storage, and use JavaScript to send the JWT from local storage to the server with each request. This way, you can still access the JWT from JavaScript on the same domain, while also protecting against XSS attacks. . However, for this implementation we have used #3 HttpOnly Cookie. . Key Configuration Areas . Nginx configuration snippet (Client to this Server) . Nginx. Focus on add_header in preflight that allow cross domain (github.io) to access server. . location / { proxy_pass http://localhost:8085; # Preflighted requests if ($request_method = OPTIONS ) { add_header &quot;Access-Control-Allow-Credentials&quot; &quot;true&quot;; add_header &quot;Access-Control-Allow-Origin&quot; &quot;https://myserver.github.io&quot;; add_header &quot;Access-Control-Allow-Methods&quot; &quot;GET, POST, OPTIONS, HEAD&quot;; add_header &quot;Access-Control-Allow-MaxAge&quot; 600; add_header &quot;Access-Control-Allow-Headers&quot; &quot;Content-Type, Authorization, x-csrf-token&quot;; return 200; } } . Java JWT / Authenticate API . Java. Focus on the response ResponseCookie to see type, path, age, and allowing for cross-origin (sameSite). . @PostMapping(&quot;/authenticate&quot;) public ResponseEntity&lt;?&gt; createAuthenticationToken(@RequestBody Person authenticationRequest) throws Exception { authenticate(authenticationRequest.getEmail(), authenticationRequest.getPassword()); final UserDetails userDetails = personDetailsService .loadUserByUsername(authenticationRequest.getEmail()); final String token = jwtTokenUtil.generateToken(userDetails); final ResponseCookie tokenCookie = ResponseCookie.from(&quot;jwt&quot;, token) .httpOnly(true) .secure(true) .path(&quot;/&quot;) .maxAge(3600) .sameSite(&quot;None; Secure&quot;) // .domain(&quot;example.com&quot;) // Set to backend domain .build(); return ResponseEntity.ok().header(HttpHeaders.SET_COOKIE, tokenCookie.toString()).build(); } . Java WebMvcConfigurer addCorsMappings . Java. Focus on allowedOrigins, clients that can access this server server . @Override public void addCorsMappings(CorsRegistry registry) { registry.addMapping(&quot;/**&quot;).allowedOrigins(&quot;https://myserver.github.io&quot;, &quot;http://localhost:4000&quot;); } . Java Security Config . Java. CORS enablement and headers to allow access to API endpoints from cross origin. . .cors().and() .headers() .addHeaderWriter(new StaticHeadersWriter(&quot;Access-Control-Allow-Credentials&quot;, &quot;true&quot;)) .addHeaderWriter(new StaticHeadersWriter(&quot;Access-Control-Allow-ExposedHeaders&quot;, &quot;*&quot;, &quot;Authorization&quot;)) .addHeaderWriter(new StaticHeadersWriter(&quot;Access-Control-Allow-Headers&quot;, &quot;Content-Type&quot;, &quot;Authorization&quot;, &quot;x-csrf-token&quot;)) .addHeaderWriter(new StaticHeadersWriter(&quot;Access-Control-Allow-MaxAge&quot;, &quot;600&quot;)) .addHeaderWriter(new StaticHeadersWriter(&quot;Access-Control-Allow-Methods&quot;, &quot;POST&quot;, &quot;GET&quot;, &quot;OPTIONS&quot;, &quot;HEAD&quot;)) //.addHeaderWriter(new StaticHeadersWriter(&quot;Access-Control-Allow-Origin&quot;, &quot;https://nighthawkcoders.github.io&quot;, &quot;http://localhost:4000&quot;)) . Authenticate with JWT in a JavaScript application . This example sends a POST request to the /authorize endpoint with the user’s credentials in the request body. If the login was successful, the server will return a 200 OK response with the JWT set to Application properties. . /// URL for deployment var url = &quot;https://spring.nighthawkcodingsociety.com&quot; // Comment out next line for local testing // url = &quot;http://localhost:8085&quot; // Authenticate endpoint const login_url = url + &#39;/authenticate&#39;; function login_user(){ // Set body to include login data const body = { email: document.getElementById(&quot;uid&quot;).value, password: document.getElementById(&quot;password&quot;).value, }; // Set Headers to support cross origin const requestOptions = { method: &#39;POST&#39;, mode: &#39;cors&#39;, // no-cors, *cors, same-origin cache: &#39;no-cache&#39;, // *default, no-cache, reload, force-cache, only-if-cached credentials: &#39;include&#39;, // include, *same-origin, omit body: JSON.stringify(body), headers: { &quot;content-type&quot;: &quot;application/json&quot;, }, }; // Fetch JWT fetch(login_url, requestOptions) .then(response =&gt; { // trap error response from Web API if (!response.ok) { const errorMsg = &#39;Login error: &#39; + response.status; console.log(errorMsg); return; } // Success!!! // Redirect to Database location window.location.href = &quot;/APCSA/data/database&quot;; }) } . You can then use the JWT for authentication in subsequent fetch requests as the browser sends JWT in the Authorization header. Here is an example, but there is Nothing Unique in this example. . // prepare HTML result container for new output const resultContainer = document.getElementById(&quot;result&quot;); // prepare URL var url = &quot;https://spring.nighthawkcodingsociety.com/api/person/&quot;; // Uncomment next line for localhost testing // url = &quot;http://localhost:8085/api/person/&quot;; // set options for cross origin header request const options = { method: &#39;GET&#39;, // *GET, POST, PUT, DELETE, etc. mode: &#39;cors&#39;, // no-cors, *cors, same-origin cache: &#39;default&#39;, // *default, no-cache, reload, force-cache, only-if-cached credentials: &#39;include&#39;, // include, *same-origin, omit headers: { &#39;Content-Type&#39;: &#39;application/json&#39;, }, }; // fetch the API fetch(url, options) // response is a RESTful &quot;promise&quot; on any successful fetch .then(response =&gt; { // check for response errors and display if (response.status !== 200) { const errorMsg = &#39;Database response error: &#39; + response.status; console.log(errorMsg); const tr = document.createElement(&quot;tr&quot;); const td = document.createElement(&quot;td&quot;); td.innerHTML = errorMsg; tr.appendChild(td); resultContainer.appendChild(tr); return; } // valid response will contain json data response.json().then(data =&gt; { console.log(data); for (const row of data) { // tr and td build out for each row const tr = document.createElement(&quot;tr&quot;); const name = document.createElement(&quot;td&quot;); const id = document.createElement(&quot;td&quot;); const age = document.createElement(&quot;td&quot;); // data is specific to the API name.innerHTML = row.name; id.innerHTML = row.email; age.innerHTML = row.age; // this build td&#39;s into tr tr.appendChild(name); tr.appendChild(id); tr.appendChild(age); // add HTML to container resultContainer.appendChild(tr); } }) }) // catch fetch errors (ie ACCESS to server blocked) .catch(err =&gt; { console.error(err); const tr = document.createElement(&quot;tr&quot;); const td = document.createElement(&quot;td&quot;); td.innerHTML = err + &quot;: &quot; + url; tr.appendChild(td); resultContainer.appendChild(tr); }); . Hacks . This is first time that a nighthawkcoding society apps are under JWT. There are some best practices, but these are simply preliminary thoughts. These can be done in your project or on mine. . GitHub Pages Application Make a Login and SignUp option in upper left corner of page. To handle this well it may require some them adjustment. Login or Name should alway be displayed in upper right corner, review csa.nighthawkcodingsociety.com for example. | Only block or present login/signup page when someone fails on a fetch of something that is unauthorized. | Spring Application | Add Roles to authentication | Bring JavaScript or Spring/Thymeleaf Admin operations into this page. Some Thymeleaf exists in the project, | . | Blog or Video on your successes and how you got there. | . Hack Helpers . Additional user and security elements. . security/SecurityConfig.java. This code sets up BCrypt as password encoder, this is wired into Spring Security | HTTP security is changed so that you white list things that you want secure. It is possible to do this either way, white list authenticated .antMatchers(&quot;/api/person/**&quot;).authenticated() or white list permitted .antMatchers(&quot;/&quot;, &quot;/frontend/**&quot;).permitAll(). In either case, it is valuable to have a convention on naming endpoints to simplify rules. | . | . /* * To enable HTTP Security in Spring, extend the WebSecurityConfigurerAdapter. */ @Configuration @EnableWebSecurity // Beans to enable basic Web security @EnableGlobalMethodSecurity(prePostEnabled = true) public class SecurityConfig extends WebSecurityConfigurerAdapter { @Autowired private JwtAuthenticationEntryPoint jwtAuthenticationEntryPoint; @Autowired private JwtRequestFilter jwtRequestFilter; @Autowired private PersonDetailsService personDetailsService; @Bean // Sets up password encoding style PasswordEncoder passwordEncoder(){ return new BCryptPasswordEncoder(); } @Autowired public void configureGlobal(AuthenticationManagerBuilder auth) throws Exception { // configure AuthenticationManager so that it knows from where to load // user for matching credentials // Use BCryptPasswordEncoder auth.userDetailsService(personDetailsService).passwordEncoder(passwordEncoder()); } @Override @Bean public AuthenticationManager authenticationManagerBean() throws Exception { return super.authenticationManagerBean(); } ... } . mvc person PersonDetailsService.java, implements UserDetailsService from JWT. UserDetailsService is how we train Spring Security to use Person and PersonRoles POJOs for security. | PersonDetails makes sure each save use password encoding | PersonDetails in my implementation is to build abstraction of all the Jpa complexities, allowing API and MVC classes and methods to be simpler and reusable. | . | . @Service @Transactional public class PersonDetailsService implements UserDetailsService { // &quot;implements&quot; ties ModelRepo to Spring Security // Encapsulate many object into a single Bean (Person, Roles, and Scrum) @Autowired // Inject PersonJpaRepository private PersonJpaRepository personJpaRepository; @Autowired // Inject RoleJpaRepository private PersonRoleJpaRepository personRoleJpaRepository; @Autowired // Inject PasswordEncoder private PasswordEncoder passwordEncoder; /* UserDetailsService Overrides and maps Person &amp; Roles POJO into Spring Security */ @Override public org.springframework.security.core.userdetails.UserDetails loadUserByUsername(String email) throws UsernameNotFoundException { Person person = personJpaRepository.findByEmail(email); // setting variable user equal to the method finding the username in the database if(person==null) { throw new UsernameNotFoundException(&quot;User not found with username: &quot; + email); } Collection&lt;SimpleGrantedAuthority&gt; authorities = new ArrayList&lt;&gt;(); person.getRoles().forEach(role -&gt; { //loop through roles authorities.add(new SimpleGrantedAuthority(role.getName())); //create a SimpleGrantedAuthority by passed in role, adding it all to the authorities list, list of roles gets past in for spring security }); // train spring security to User and Authorities return new org.springframework.security.core.userdetails.User(person.getEmail(), person.getPassword(), authorities); } // .... // encode password prior to sava public void save(Person person) { person.setPassword(passwordEncoder.encode(person.getPassword())); personJpaRepository.save(person); } // .... // custom JPA query to find anything containing term in name or email ignoring case public List&lt;Person&gt;listLike(String term) { return personJpaRepository.findByNameContainingIgnoreCaseOrEmailContainingIgnoreCase(term, term); } // .... } . mvc ModelInit.java, used to initialize database for testing The CommandLineRunner run() occurs prior to web site port being available. Typically, there is only one Bean of type without application.properties override. Thus, you see jokes and person in same runner. Splitting this and having Person initialization in person package is desireable. | Class methods for Person (Person.init) is used to initialize object. | Each object is checked and saved using personService methods. | Test Notes are added to ensure functionality. Intention is to add notes into person package. | . | . @Component // Scans Application for ModelInit Bean, this detects CommandLineRunner public class ModelInit { @Autowired JokesJpaRepository jokesRepo; @Autowired NoteJpaRepository noteRepo; @Autowired PersonDetailsService personService; @Bean CommandLineRunner run() { // The run() method will be executed after the application starts return args -&gt; { // Joke database is populated with starting jokes String[] jokesArray = Jokes.init(); for (String joke : jokesArray) { List&lt;Jokes&gt; jokeFound = jokesRepo.findByJokeIgnoreCase(joke); // JPA lookup if (jokeFound.size() == 0) jokesRepo.save(new Jokes(null, joke, 0, 0)); //JPA save } // Person database is populated with test data Person[] personArray = Person.init(); for (Person person : personArray) { //findByNameContainingIgnoreCaseOrEmailContainingIgnoreCase List&lt;Person&gt; personFound = personService.list(person.getName(), person.getEmail()); // lookup if (personFound.size() == 0) { personService.save(person); // save // Each &quot;test person&quot; starts with a &quot;test note&quot; String text = &quot;Test &quot; + person.getEmail(); Note n = new Note(text, person); // constructor uses new person as Many-to-One association noteRepo.save(n); // JPA Save } } }; } } .",
            "url": "http://localhost:4100/teacher_portfolio/2023/10/09/java-spring_jwt.html",
            "relUrl": "/2023/10/09/java-spring_jwt.html",
            "date": " • Oct 9, 2023"
        }
        
    
  
    
        ,"post136": {
            "title": "ChatGPT in Java",
            "content": "Overview . ChatGPT is a pretty useful AI model to access in your code without having to create your own model. Essentially, this tutorial will give you a pretty good idea of how to directly access the API in Java. Also, all this was written by me, Bailey, but Don also did a lot with getting this implementation to work. . Steps: . Get access to an API Key | Store the API Key securely in the code | Create a fetch request to the API in Java | And that’s really it. . Step 1: Get access to an API Key . Basically, not just anybody can access the ChatGPT API; you need a secret key to be allowed access to the API. Luckily, it’s pretty easy to get one. . Create an Open AI account (link here). | Go to your personal list of API keys (link here). | Select “create new secret key” | Copy the given API key and store it somewhere | Note: Make sure to store the API key in somewhere safe, but you CANNOT leave this key in plaintext in a file and push it to the Github repository. Open AI will automatically detect the presence of this key and disable it for security reasons. If this ever happens, just create a new secret key. There are no penalties for this. . Go to “Billing” and set up a paid account | Yes, you will have to pay money to use the API. It turns out that Open AI doesn’t want you to use their all-powerful AI willy-nilly without a price, but luckily it doesn’t cost that much. This billing relies on a token system, which is a bit confusing, but the gist of it is that you spend a certain amount of tokens everytime you make a request to ChatGPT (I believe the token cost is based on the number of words in the prompt, but I’m not too sure to be honest; this article explains it well). As long as you don’t completely abuse the API, you’ll be paying less than $0.50 per month. Plus, I think they also give you $5 for the first 3 months, which is nice. In any case, don’t worry about running out of money. . Step 2: Store the API Key securely in the code . If you want to just have fun accessing ChatGPT from Java without using it in a final deployed project, you can just skip this step. You can just probably put the key in plaintext and it won’t complain as long as it isn’t pushed to the repostiory. This step is only necessary if you want to access ChatGPT safely and securely for a deployed project. . Unfortunately, this was the most painful part of getting everything to work. There are really two ways of doing this that we know of. The first involves storing the API key inside the Github repository and directly accessing it inside the code. The second involves adding a plaintext file with the API key onto the repo but then adding it into .gitignore and using a file reader to access the key. . In theory, the first method should be the correct way to do things, but we couldn’t get it to work for whatever reason. The steps will be listed below, but if you want a method that’s guaranteed to work (though may be slightly scuffed) you can just skip these. . Go to the backend Github repository. | Access settings (note that only contributers with admin permissions are allowed to access settings). | Access secrets, then access environmental variables | Copy and paste your API key into a newly created environmental variable | Access the variable through a .yml file | Step 5 is what we were struggling on. Whether it be some issue with the environmental variable itself or the way we accessed it in the .yml file, we couldn’t get it to work. . Instead, as an alternative, we (more like Don) utilized .gitignore to store the file without it being pushed to the main repo and a file reader to read that file with these steps below: . Create a .txt file on the AWS local server with just the key inside of it | (I’m going to be honest, this part was a bit confusing for me, because I didn’t actually do it, Don did. But essentially it works because the deployed website will read from the .txt file on the AWS server and not from the pushed version on the repo) . Add the .txt file to .gitignore | This part may seem a bit complicated, but it really isn’t that bad. You can just add the below to the bottom of your .gitignore and everything should be fine. . ### VSCODE ### .vscode/ key.txt . Obviously, key.txt should be the name of your file. . And this should prevent key.txt from being pushed into the repository, so everything’s good. . Create a file reader to read the file (written by Don) | Create a class file and name it something related to reading the file. In this case we named it KeyFileReader. You could reasonably put your key reader as a function inside the class calling the ChatGPT API. First you create a string with the file path to your key.txt file (NOTE: the file path should be based on the root being your repo; for instance, the path for the following code is “src/main/java/com/nighthawk/spring_portfolio/database/chat/key.txt”). Then we create a try except case using a BufferedReader object that passes in a FileReader objectto read a file. Then we use a while loop to wait for the file to be read before returning the key which is the first line in key.txt. We return the error in case anything goes wrong. . public class KeyFileReader { public static String getKey() { String filePath = &quot;src/main/java/com/nighthawk/spring_portfolio/database/chat/key.txt&quot;; try (BufferedReader br = new BufferedReader(new FileReader(filePath))) { String line; while ((line = br.readLine()) != null) { // Process first line in the file (key) return line; } } catch (IOException e) { e.printStackTrace(); } return &quot;error&quot;; } } . We can simply call the class in our ChatGPT file to then access the key. . String API_KEY = KeyFileReader.getKey(); . Step 3: Create a fetch request to the API in Java . This step is pretty easy, all you have to do is set up an HttpURLConnection object with the right properties and make the request. The HttpURLConnection class can basically be thought of as an equivalent to the fetch() function in Javascript, only now you have to set all the parameters of the fetch call using methods instead of parameters. . Next you set up a JSONObject object with the right properties to specify the model, prompt, maximum tokens (limit), and temperature (variability), just like the HttpURLConnection object. . Finally, you have to actually call the API with the HttpURLConnection methods .setDoOutput() and .getOutputStream() while writing the JSON data to it, then you can use some strange navigating through the output of the call to actually get the text you want. I wouldn’t worry too much about this last part, it’s easier just to copy than try to decipher exactly what it’s doing. Just know that it’s just accessing the text you want from the mess of data. . public class Chat { public static String daVinciTest(String text) throws MalformedURLException, IOException { String url = &quot;https://api.openai.com/v1/completions&quot;; HttpURLConnection con = (HttpURLConnection) new URL(url).openConnection(); con.setRequestMethod(&quot;POST&quot;); con.setRequestProperty(&quot;Content-Type&quot;, &quot;application/json&quot;); con.setRequestProperty(&quot;Authorization&quot;, &quot;Bearer &quot; + KeyFileReader.getKey()); JSONObject data = new JSONObject(); data.put(&quot;model&quot;, &quot;text-davinci-003&quot;); data.put(&quot;prompt&quot;, text); data.put(&quot;max_tokens&quot;, 4000); data.put(&quot;temperature&quot;, 1.0); con.setDoOutput(true); con.getOutputStream().write(data.toString().getBytes()); String output = new BufferedReader(new InputStreamReader(con.getInputStream())).lines() .reduce((a, b) -&gt; a + b).get(); return (new JSONObject(output).getJSONArray(&quot;choices&quot;).getJSONObject(0).getString(&quot;text&quot;)); } } . And that’s it . That’s really the basic steps to use the ChatGPT API in Java. Obviously, there’s a lot more configuring that can be done though. You can mess with the prompts, the models, the number of times used, and basically whatever you can imagine. . For our own website, we heavily took advantage of the ChatGPT API for half of our features and customized the calls in many ways to make it fun, which you can find at Rizz AI (I’m not sure if the website will still be up for long though). . One thing that you may have noticed is that the model used in this tutorial is actually davinci-003, and not gpt-3.5-turbo (which is closer to the actual model used in ChatGPT). There are only subtle differences between the two, so if you don’t care that much then davinci-003 will serve you well, but for those of you seeking gpt-3.5-turbo, unfortunately we could not get it to work with this Java implementation. Instead, we decided to use a Python implementation of the API call and then use a Python reader in Java to actually access its output. Unfortunately though, I (Bailey) have no idea how Don did it, and I don’t really feel like explaining all too much, since there are much better tutorials out there for ChatGPT API calls in Python (but maybe Don will write that part later). . But, if everything went well, you should be able to access ChatGPT in your own deployed website and abuse it for whatever nefarious purposes you have. Congratulations! .",
            "url": "http://localhost:4100/teacher_portfolio/2023/10/09/java-chatgpt_IPYNB_2_.html",
            "relUrl": "/2023/10/09/java-chatgpt_IPYNB_2_.html",
            "date": " • Oct 9, 2023"
        }
        
    
  
    
        ,"post137": {
            "title": "P1 Developing Algorithms",
            "content": "Developing Algorithms . How to do simple operators in JS . Use the “+” operator to add two numbers in JavaScript . Use the “-“ operator to subtract two numbers in JavaScript . Use the “*” operator to multiply two numbers in JavaScript . Use the “/” operator to divide two numbers in JavaScript . Use the “%” operator to get the remainder of a division operation in JavaScript . Iterating . Iteration is going through a set of laws or objectives for the loops to complete. This allows for the desired objective to be completed. . Randomization . Raandomization is used to generate a random number. For example, RANDOM(a,b) would generate any number from a to b. Each result from randomization is equally likely to occur. Each execution might produce a different result. . Popcorn hack #1: How to find the mean in JS . %%js // define an array var arry = [4,62,3,38]; // define a function to calculate the mean using an inputted array function calculateAverageOfArray(array) { var total = 0; var count = 0; // add all the values of the array jQuery.each(arry, function(index, value) { total += value; count++; }); // take the sum of the array and divide it by the length of the array return total / count; } console.log(&quot;The average of your list is &quot; + calculateAverageOfArray(arry)); . &lt;IPython.core.display.Javascript object&gt; . How to calculate the median . %%js // define the function median that finds the median of an array numbers function median(numbers) { // sort the list numbers const sorted = Array.from(numbers).sort((a, b) =&gt; a - b); // find the index of the middle element in the array const middle = Math.floor(sorted.length / 2); // see if the array has an even length if (sorted.length % 2 === 0) { // if it&#39;s even then calculate the average of the middle two values return (sorted[middle - 1] + sorted[middle]) / 2; } // if odd return the middle value return sorted[middle]; } // run median with the inputted array console.log(median([1, 3, 8, 2, 6])); . &lt;IPython.core.display.Javascript object&gt; . How to calculate the mode in JS . %%js // Create a function that finds the mode of an array var mode = function mode(arr) { // use the function &quot;reduce&quot; to go through every item in the list while collecting the data return arr.reduce(function(current, item) { // update the variable &quot;val&quot; with the frequency of &quot;item&quot; and increase it by 1. var val = current.numMapping[item] = (current.numMapping[item] || 0) + 1; // check if the mode of &quot;item&quot; is greater than the greatest mode so far if (val &gt; current.greatestFreq) { // if it is then update the mode current.mode = item; current.greatestFreq = val; } // return the updated value of &quot;current&quot; then repeat the process return current; }, {mode: null, greatestFreq: -Infinity, numMapping: {}}).mode; }; // run the mode function with an inputted array and print it to the console console.log(mode([6, 6, 7, 7, 7, 8, 8, 8, 8, 8, 9, 10,7,7,7,7,7,7,7,7])); . &lt;IPython.core.display.Javascript object&gt; . One way to sort a list . numList = [43, 2, 6, 2, 96, 32] numList.sort() print(numList) . [2, 2, 6, 32, 43, 96] . Another way to sort a list . def bubbleSort(arr): n = len(arr) swapped = False # a boolean to keep track of whether a swap has occurred. for i in range(n-1): # a loop to go iterate through the entire array for j in range(0, n-i-1): # loop to compare adjacent elements if arr[j] &gt; arr[j + 1]: # if current element is greater than the next element then swap them swapped = True arr[j], arr[j + 1] = arr[j + 1], arr[j] if not swapped: # if no swaps happen then the array is sorted return arr = [64, 34, 25, 12, 22, 11, 90] bubbleSort(arr) # call the function to sort the array print(&quot;Sorted array is:&quot;) for i in range(len(arr)): print(&quot;%d&quot; % arr[i], end=&quot; &quot;) . Sorted array is: 11 12 22 25 34 64 90 . What does this code do? . import random randomNumber = random.randint(1, 100) attempts = 0 def startGame(): print(&quot;Welcome to the Number Guessing Game!&quot;) print(&quot;I&#39;m thinking of a number between 1 and 100.&quot;) print(&quot;Try to guess the number.&quot;) askForGuess() def askForGuess(): input_str = input(&quot;Enter your guess (between 1 and 100): &quot;) try: guessedNumber = int(input_str) checkGuess(guessedNumber) except ValueError: print(&quot;Please enter a valid number.&quot;) askForGuess() def checkGuess(guess): global attempts if guess &lt; randomNumber: print(&quot;Try a higher number.&quot;) attempts += 1 askForGuess() elif guess &gt; randomNumber: print(&quot;Try a lower number.&quot;) attempts += 1 askForGuess() else: attempts += 1 print(f&quot;Congratulations! You guessed the number {randomNumber} in {attempts} attempts.&quot;) startGame() . Homework Hacks: . Find the median test grade of a class | Create a simple game using random numbers | .",
            "url": "http://localhost:4100/teacher_portfolio/2023/10/09/P1_developingalgorithms_IPYNB_2_.html",
            "relUrl": "/2023/10/09/P1_developingalgorithms_IPYNB_2_.html",
            "date": " • Oct 9, 2023"
        }
        
    
  
    
        ,"post138": {
            "title": "P1 booleans and conditions",
            "content": "Booleans . 2 Values True | False | . | Example: my hair color is black: True | . Relational Operators . Equal to: a = b | Not equal to: a != b | Greater than: a &gt; b | Less than: a &lt; b | Greater than or equal to: a &gt;= b | Less than or equal to: a &lt;= b | . Popcorn Hack 1 . In most states, the minimum age to drive is 16. How would we write a boolean expression to check if someone is at least 16 years old? age &gt;= 16 . | Write a boolean expression to check if the average of grade1, grade2, and grade3 is at least 70. (grade1 + grade2 + grade3)/3 &gt;= 70 . | Write a code to check if the temperature is less than 90 degrees temp &lt; 90 . | . Not operator . Not flips the condition | . . And operator . And combines two conditions together | . Or operator . Or returns True if only one conditon is true | . Popcorn Hack 2 . You can go out if you did your homework and you scored at least an 80 on your exam. Write boolean expression for this | . Example AP Question . A. II only B. I and II only C. I and III only D. II and III only . Correct Answer: D . Question 1: What will be the value of z? x = True y = False z = x and y . A. True B. False C. None D. Syntax Error Question 2: Which is the correct way to compare if two boolean variables a and b are equal in Python? . A. a = b B. a == b C. a and b D. a equals b . Conditionals . Algorithm: a finite set of instructions that accomplish a specific task . | Condition statements: fundamental concept in programming and logic used to control the flow of a program by allowing it to make decisions based on certain conditions or criteria. | . | A condition statement typically consists of three main parts: Condition: This is a Boolean expression or a logical test that evaluates to either true or false. It’s the criteria that the program checks. | True Block: This is the set of instructions or code that gets executed if the condition is true. If the condition evaluates to true, the true block is executed. | False Block (optional): This is the set of instructions or code that gets executed if the condition is false. In some cases, there might be an alternative set of instructions to execute when the condition is false. | . | Example: If a student’s average grade on exams is at least 75, they are eligible to receive extra credit. Otherwise, they must attend tutorial. | . Example . In this example, the condition statement checks whether the value of x is greater than 5. If it’s true, it executes the true block (printing “x is greater than 5”). Otherwise, it executes the false block (printing “x is not greater than 5”). . x = 10 if x &gt; 5: print(&quot;x is greater than 5&quot;) # This is the true block else: print(&quot;x is not greater than 5&quot;) # This is the false block . Examples 2 . Is another example of conditional statements using Elif. elif is a statement that is run right after the first if statement is run to be false. It is simply the condition after the If statement in the code if you want to implement more criteria to your code. . score = 90 attendance = 90 if score &gt;= 90 and attendance &gt;= 90: result = &quot;Student receives an &#39;A+&#39;.&quot; elif score &gt;= 80 and attendance &gt;= 80: result = &quot;Student receives a &#39;B&#39; .&quot; else: result = &quot;Student needs improvement in both score and attendance.&quot; . Popcorn Hack 2 . Highest_score=None scores = [10, 15, 38, 2 , 74, 94, 43, 19] for score in scores: if Highest_score == None: Highest_score = score elif score &gt; Highest_score: Highest_score = score Highest_score = Highest_score - 1 print(Highest_score) # What will be the final output of the program? . Popcorn Hack 3 . age = int(input(&quot;Enter your age: &quot;)) if age &gt;= 18: print(&quot;You are an adult.&quot;) driving_license = input(&quot;Do you have a driving license? (yes/no): &quot;) if driving_license.lower() == &quot;yes&quot;: print(&quot;You can legally drive.&quot;) else: print(&quot;You need to obtain a driving license to drive legally.&quot;) else: print(&quot;You are a minor.&quot;) parental_consent = input(&quot;Are you a teenager (yes/no): &quot;) if parental_consent.lower() == &quot;yes&quot;: print(&quot;You can continue&quot;) else: print(&quot;You need to be at least a teenager to continue with the activity&quot;) # If the age entered was 12, what would be all of the statements printed. . Homework . Problem 1: Write a Python program that uses boolean logic to determine if a user is eligible to vote. The criteria for eligibility is that the user must be a citizen and must be 18 or older. Include comments in your code to explain each part of the program. . Problem 2: A company decided to give bonus of 5% to employee if his/her year of service is more than 5 years. Ask user for their salary and year of service and print the net bonus amount. . Problem 3: A school has following rules for grading system: a. Below 25 - F b. 25 to 45 - E c. 45 to 50 - D d. 50 to 60 - C e. 60 to 80 - B f. Above 80 - A Ask user to enter marks and print the corresponding grade. .",
            "url": "http://localhost:4100/teacher_portfolio/2023/10/09/P1_Booleans_IPYNB_2_.html",
            "relUrl": "/2023/10/09/P1_Booleans_IPYNB_2_.html",
            "date": " • Oct 9, 2023"
        }
        
    
  
    
        ,"post139": {
            "title": "Alien World - Dog and Background",
            "content": "Invert Idle Barking Walking",
            "url": "http://localhost:4100/teacher_portfolio/2023/10/08/js-dog-plus-background.html",
            "relUrl": "/2023/10/08/js-dog-plus-background.html",
            "date": " • Oct 8, 2023"
        }
        
    
  
    
        ,"post140": {
            "title": "Monkey Animation",
            "content": "Invert Walk Right Walk Left Jump Right Jump Left // change sprite here",
            "url": "http://localhost:4100/teacher_portfolio/2023/10/08/javascript-character-monkey.html",
            "relUrl": "/2023/10/08/javascript-character-monkey.html",
            "date": " • Oct 8, 2023"
        }
        
    
  
    
        ,"post141": {
            "title": "PP Feature Checkpoint",
            "content": "Passion Project Feature Check . Show Big ideas and feature progress … . Show Collaboration including Issues/Scrum Board that capture progress. | Frontend/JavaScript. Initial feature pages that show ideas running screens and user interactions. | Backend Data/Java. APIs, Data that work with Postman. | .",
            "url": "http://localhost:4100/teacher_portfolio/2023/10/08/java-spring-passion-feature.html",
            "relUrl": "/2023/10/08/java-spring-passion-feature.html",
            "date": " • Oct 8, 2023"
        }
        
    
  
    
        ,"post142": {
            "title": "Dog Animation",
            "content": "Invert Idle Barking Walking // change sprite here",
            "url": "http://localhost:4100/teacher_portfolio/2023/10/07/javascript-character-dog.html",
            "relUrl": "/2023/10/07/javascript-character-dog.html",
            "date": " • Oct 7, 2023"
        }
        
    
  
    
        ,"post143": {
            "title": "Live Review Planning",
            "content": "Summary of Accomplishments . The remainder of the Trimester we will build a game for N@tM on Nov 2nd. Teachers and Teacher Aids will follow along with assignments. . Outline comes from Canvas Assignment . Pick your team John (Mr M) | Shane (Mr L) | Rohan J | Safin | . | Create GitHub repository: https://github.com/jm1021/alienWorld.git . | Create a 2D game to mimic Mario example . Obtain assets Alien World | Shadow Dog and Video Series | . | . | Outline Scenes. See plan, but this is determined to be ongoing plan Scene work from Brain Write has begun | Pick a tool (ie Figma, Canva), have assigned coder develop scenes | . | . Other elements not in Canvas . Document problems in getting setup | Show any personal blogs or progrss | .",
            "url": "http://localhost:4100/teacher_portfolio/2023/10/06/Alien_World-Live-Review.html",
            "relUrl": "/2023/10/06/Alien_World-Live-Review.html",
            "date": " • Oct 6, 2023"
        }
        
    
  
    
        ,"post144": {
            "title": "U2 Using Objects - Student P3",
            "content": "Unit 2.1- Objects: Instances of Classes . What are objects? . An Object is created from a class by calling the class constructor. . What are classes? . A Class is a template that defines an object is like and what it can do. . Objects are Instances of Classes . For example, if the class is a blueprint for a house, the object is a particular house. . Example . Here is an example of creating a Student class in Java. It contains instance variables that define the characteristics of a student. . public class Student { // instance variables String name; String teacher; int period; // constructor public Student(String name, String teacher, int period) { this.name = name; this.teacher = teacher; this.period = period; } } . Now, using our class, we can create student objects by initializing two students . Student grace = new Student(&quot;Grace&quot;, &quot;Mr. Mort&quot;, 3); Student alice = new Student(&quot;Alice&quot;, &quot;Mr. Mort&quot;, 1); . We can printout information about each student . System.out.println(grace.name); . Grace . System.out.println(alice.period); . 1 . Learning Objectives . Explain the relationship between a class and an object. | . Answer A class in object-oriented programming serves as a blueprint or template, defining the structure and behavior of objects. Objects, on the other hand, are instances of a class, representing real-world entities or concepts in code. Each object created from a class inherits its attributes and methods, allowing multiple objects to share a common structure while having their own unique data and behaviors. Essential Knowledge . An object is a specific instance of a class with defined attributes. | A class is the formal implementation, or blueprint, of the attributes and behaviors of an object. | . Unit 2.2- Creating and Storing Objects (Instantiation) . So, after we learned about classes, how are objects actually made? . Using our previous code, we can see created our constructor using . public Student(String name, String teacher, int period) { this.name = name; this.teacher = teacher; this.period = period; } . public class Student { // instance variables String name; String teacher; int period; // constructor public Student(String name, String teacher, int period) { this.name = name; this.teacher = teacher; this.period = period; } } . The Student is the name of the class. The first letter is capitalized according to Java naming conventions (camel-case naming conventions). Then, using the new keyword, we call the constructor to make a new Student. Inside the parentheses, we have the parameter list, where the values and characteristics of the object are entered. . Student grace = new Student(&quot;Grace&quot;, &quot;Mr. Mort&quot;, 3); . The parameters in this case are “Grace”, “Mr. Mort”, and 3. . Constructor Overloads . A class can have multiple constructors, however, the number of parameters must be different or the order must be different. This is an example of overloading the constructor. . // Constructor 1 Student(String name, String teacher, int period) // Constructor 2 Student(String teacher, String name, int period) . This two constructors are not allowed. For example, if we call . Student(&quot;Grace&quot;, &quot;Mr. Mort&quot;, 3); . we would not know whether Grace or Mr. Mort is the student. . However, constructors with different data types or different number of parameters are allowed when overloading. Here are some examples… . Student(String name, String teacher, int period) Student(String name, String teacher) Student() . Null Objects . Student rachit = null; . Null basically states that no object exists, and it is not stored in memory. You cannot call methods on an object that is declared as null since null objects do not have any information or characteristics set to that object. This will create a NullPointerException . Learning Objectives . Identify, using its signature, the correct constructor being called. | Note: Method Signature in java is defined as the structure of a method that is designed by the programmer | . public class Student { // instance variables String name; String teacher; int period; // constructor public Student(String name, String teacher, int period) { this.name = name; this.teacher = teacher; this.period = period; } } . Answer Student(&quot;Grace&quot;, &quot;Mr. Mort&quot;, 3); - For creating objects: (a) Create objects by calling constructors without parameters. (b) Create objects by calling constructors with parameters. - Define variables of the correct types to represent reference data. Unit 2.3- Calling a Void Method . method: code that is called in order to achieve a task . can be void or non-void, static or non-static | . void method: do not return a value but instead change other things. These include changing characteristics of an object or printing text to the console. Here is an example… . public void methodName(parameterList) . static method: general to the class and not tied to any particular object. The method is denoted by the Here is an example … . public static void add() { count++; } . To call a static method, we use dot notation, with the class name coming before the method separated by a dot as follows . ClassName.add(); . non-static method: acts on a particular object. For example, printing a person’s name is a non-static method, since each person has a different name. For example… . public void printName() { System.out.println(name); } . When calling a non-static method, we also use dot notation. But, instead of using the class name, we use the object name so we know what object the method acts on. Also, we don’t need to do dot notation of ClassName.objectName.methodName() because an object already acts on a certain class, so using the class name is just redundant. We would use printName() as follows… . objectName.printName(); . Run the main method and see what the each of the methods prints out . public class MyClass { // Static method public static void staticMethod() { System.out.println(&quot;This is a static method.&quot;); } // Non-static (instance) method public void nonStaticMethod() { System.out.println(&quot;This is a non-static method.&quot;); } // Method with void return type public void methodWithVoidReturnType() { System.out.println(&quot;This method has a void return type.&quot;); } public static void main(String[] args) { // Calling the static method staticMethod(); // Creating an object of MyClass MyClass myObject = new MyClass(); // Calling the non-static method on the object myObject.nonStaticMethod(); // Calling the method with void return type myObject.methodWithVoidReturnType(); } } . Learning Objective . Call non-static void methods without parameters. | . Unit 2.4- Calling a Void Method With Parameters . The method signature for writing void method with parameters is the same as a constructor, with the name of the method followed by the parameters and their types in parentheses. For example, here is a method that prints the perimeter of a rectangle… . public static void printRectanglePerimeter(double length, double width) { System.out.println(2 * (length + width)); } . printRectanglePerimeter(1.5, 2.5); . 8.0 . We can also overload methods as well. This overloading of the method is acceptable because there are different numbers of parameters. . // If 2 parameters are given, we will calculate the perimeter by adding the length and width and doubling it public static void printRectanglePerimeter(double length, double width) { System.out.println(2 * (length + width)); } // If 1 parameter is given, we assume the shape is a square public static void printRectanglePerimeter(double side) { System.out.println(4 * side); } // No shape exists, no perimeter is calculated public static void printRectanglePerimeter() { System.out.println(0); } . Unit 2.5- Calling a Non-Void Method . Void methods: complete actions and represent tasks. They are used when you want a method to perform a task or operation without producing a result that needs to be used elsewhere in your program. Void methods are typically used for actions like printing a message, updating a data structure, or modifying the state of an object. . Format for a non-void method: . public (static) dataType methodName(parameterListOptional) . Which method in this class is a non-void method? Edit the cell below to call the Calculator method. . public class Calculator { // A non-void method that adds two numbers and returns the result public int add(int a, int b) { return a + b; } public static void main(String[] args) { Calculator calculator = new Calculator(); // Calling the non-void method and capturing the result int sum = calculator.add(5, 3); // Printing the result System.out.println(&quot;Sum: &quot; + sum); // Output: Sum: 8 } } Calculator.main(null) . Sum: 8 . 2.6 String Objects: Concatenation, Literals, and More . Guess what’s crazy? String literals are not actually primitives, they are considered objects! String literals are part of the aptly named String class included in Java and have a set of methods that come along with it. We’ll see what we can do with the String class in the next topic! . There are two ways to make strings: using a preinitialized string or by using a constructor. . String preInt = &quot;Hello World!&quot;; // How we usually initialize strings System.out.println(preInt); // Using a constructor: String newString = new String(&quot;Hello World!&quot;); System.out.println(newString); . Hello World! Hello World! . Escape Characters . Sometimes, you want to put a quote in a string. However, you quickly find out that the opening quotation in the quote marks the “end” of the string and you can’t type out your quote unless you want the program to crash. What can you do? . . Challenge: Display the background of the quote while displaying the quote in one line: “Give me liberty or give me death!” - Patrick Henry. . System.out.println(&quot;This is a famous quote written by Patrick Henry in the Virginia Convention: n &quot;Give me liberty or give me death! &quot;&quot;) . This is a famous quote written by Patrick Henry in the Virginia Convention: &quot;Give me liberty or give me death!&quot; . String Concatenation . When we combine two strings together, we call that string concatenation. We use the ‘+’ operator to concatenate two strings. . System.out.println(&quot;I am&quot; + &quot;hungry&quot;); . I amhungry . Notice how there is no space between am and hungry. This is because the java ‘+’ operator does not add a space, but instead, joins the strings together without adding anything in between. To fix this, we add a space in between. . System.out.println(&quot;I am&quot; + &quot; &quot; + &quot;hungry&quot;); . I am hungry . However, when we want to use variables with our strings, we can also use the ‘+=’ operator to concatenate our strings. The ‘+’ operator still works, however. . String a1 = &quot;Hello &quot;; String a2 = &quot;World&quot;; System.out.println(a1 + a2); System.out.println(a1 += a2); . Hello World Hello World . Can you guess what happens when we try to change a string object? . String s1 = &quot;Hello&quot;; // String literal String s2 = &quot;Hello&quot;; // String literal String s3 = s1; // same reference //Changing the value of s1 s1 = &quot;Java&quot;; //Updating with concat() operation s2.concat(&quot; World&quot;); //The concatenated String will be created as a new instance and an object should refer to that instance to get the concatenated value. String newS3 = s3.concat(&quot; Scaler&quot;); System.out.println(&quot;s1 refers to &quot; + s1); System.out.println(&quot;s2 refers to &quot; + s2); System.out.println(&quot;s3 refers to &quot; + s3); System.out.println(&quot;newS3 refers to &quot; + newS3); . s1 refers to Java s2 refers to Hello s3 refers to Hello newS3 refers to Hello Scaler . The strings are immutable! This is because immutable strings allows Java to be safe in multithread applications (no changes that were not supposed to happen at that time in the program), and it makes the string object very efficient, as the strings are stored in a “string pool” that Java uses, which allows strings to only be created once but used over and over again if the same string object is created multiple times. . One last cool thing about strings is that primitive types change to string objects when concatenated. You have been doing this all the time, but here is the proof! . String message = &quot;Here is the key: &quot;; double key = 0.5; System.out.println(message + key) . Here is the key: 0.5 . 2.7 String Methods . Intro to External Libraries and APIs . There is a lot you can do with the factory version of Java, however, just like Python and many other languages, there are many new things you can do with the Java external libraries and APIs (application program interfaces). All Java classes, libraries, and APIs come with documentation, which lists the methods of the class and also how to use the class and its methods. Here is the official Java documentation for the String class: . Java Docs . Courtesy of Java. . About the String Class . The String class is a class in the java.lang package that comes when you install Java on your computer. . Accessing Substrings . With strings, we can access substrings and characters in the string. A substring is a string that is included within a larger string, and a character is a substring with a length of 1. First, we need to figure out the length of a string, which is the number of characters in the string. To do this, we use the following method: . String str = &quot;Kaiden Do&quot;; System.out.println(str.length()) . 9 . We can also get a index for the strings. For example, if we take “Kaiden Do”… . Index Character . 0 | K | . 1 | a | . 2 | i | . 3 | d | . 4 | e | . 5 | n | . 6 |   | . 7 | D | . 8 | o | . String str = &quot;Kaiden Do&quot;; System.out.println(str.substring(0, 6)); // Range is [_,_) System.out.println(str.substring(7, 9)); // Range is [_,_) . Kaiden Do . How would we get the nth character of a string? Write a program to find it with an integer n that you can change to get the nth character in the cell below. . String str = &quot;Pizza is yummy&quot;; int n = 1; System.out.println(str.substring(n - 1, n)); . P . Question: If we have a string, what is its lower bound index and what is its upper bound index, if the string length is equal to the variable ‘str’? . Answer: . Lower Bound Index: 0 . Upper Bound Index: str - 1 . Question: What is the error for an out of bound string? Display it in the cell below. . String str = &quot;Hello&quot;; System.out.println(str.substring(0, 1000)) . java.lang.StringIndexOutOfBoundsException: Range [0, 1000) out of bounds for length 5 at java.base/jdk.internal.util.Preconditions$1.apply(Preconditions.java:55) at java.base/jdk.internal.util.Preconditions$1.apply(Preconditions.java:52) at java.base/jdk.internal.util.Preconditions$4.apply(Preconditions.java:213) at java.base/jdk.internal.util.Preconditions$4.apply(Preconditions.java:210) at java.base/jdk.internal.util.Preconditions.outOfBounds(Preconditions.java:98) at java.base/jdk.internal.util.Preconditions.outOfBoundsCheckFromToIndex(Preconditions.java:112) at java.base/jdk.internal.util.Preconditions.checkFromToIndex(Preconditions.java:349) at java.base/java.lang.String.checkBoundsBeginEnd(String.java:4608) at java.base/java.lang.String.substring(String.java:2720) at .(#21:1) . To do a ctrl-F search through a string, we can use the following process: . String str = &quot;He stared out the window at the snowy field. He&#39;d been stuck in the house for close to a month and his only view of the outside world was through the window. There wasn&#39;t much to see. It was mostly just the field with an occasional bird or small animal who ventured into the field. As he continued to stare out the window, he wondered how much longer he&#39;d be shackled to the steel bar inside the house.&quot;; System.out.println(str.indexOf(&quot;animal&quot;)) . 246 . As you can see, the first instance of animal starts at the index of 246. . To compare two strings to each other, we use two functions: . // To check if a string is equal to another string: String str1 = &quot;I am hungry&quot;; String str2 = &quot;I am hungry&quot;; System.out.println(&quot;Does string 1 equal string 2? True or false: &quot; + str1.equals(str2)); String str2 = &quot;I am not hungry&quot;; System.out.println(&quot;Does string 1 equal string 2? True or false: &quot; + str1.equals(str2)); . Does string 1 equal string 2? True or false: true Does string 1 equal string 2? True or false: false . // To compare the lengths of the strings // Case 1: String 1 is shorter than string 2 String str1 = &quot;I am hungry&quot;; String str2 = &quot;I am not hungry&quot;; System.out.println(str1.compareTo(str2)); // Returns less than 0 // Case 2: String 1 is equal string 2 String str1 = &quot;I am hungry&quot;; String str2 = &quot;I am hungry&quot;; System.out.println(str1.compareTo(str2)); // Returns 0 // Case 3: String 1 is longer than string 2 String str1 = &quot;I am hungry&quot;; String str2 = &quot;Hello!&quot;; System.out.println(str1.compareTo(str2)); // Returns greater than 0 . -6 0 1 . compareTo() returns the difference of first unmatched character in the two compared strings. If no unmatch is found, and one string comes out as shorter than other one, then the length difference is returned. It also checks to see if a string comes before or after another string alphabetically. . 2.8 Wrapper Classes: Integer and Double . You probably know what an integer is (if you don’t see me after class immediatley!), and you probably know what a double is (again, if you don’t see me after class immediatley!). . But did you know... Integers and Doubles are classes called wrapper classes! Why would we want to do this? Answer the question in this cell. . Maybe we want to pass a variable as an integer but the program only accepts objects. . Answer These classes convert primitive data types (int/double) to a reference data type (object). We convert these because different data structures in java require different types of variables, some of which are only objects. By parsing the values of the primitive data to an object, we can send values to methods and structures that only take object values, like ArrayList, for example. The integer Wrapper Class . The Integer class in Java is a wrapper class for the primitive data type int. It provides several methods that can be used to perform operations on int values. The constructor looks like this: . Integer(int value) . An example of this running is: . Integer hungerRating = new Integer(5); // Send to an Object int hungerRatingNum = hungerRating.intValue(); // Turn back into a primitive . An example of it being utilized is: . ArrayList&lt;int&gt; list = new ArrayList&lt;int&gt;(); // This will cause a compile-time error . | ArrayList&lt;int&gt; list = new ArrayList&lt;int&gt;(); // This will cause a compile-time error unexpected type required: reference found: int | ArrayList&lt;int&gt; list = new ArrayList&lt;int&gt;(); // This will cause a compile-time error unexpected type required: reference found: int . The above code will not work because ArrayList requires on object type, while we are passing a primitive type. . ArrayList&lt;Integer&gt; list = new ArrayList&lt;Integer&gt;(); list.add(5); // Autoboxing will automatically convert the int 5 to an Integer object System.out.println(list) . [5] . This code works because the 5 is being converted by the list.add, since the list uses integer objects. . Moreover, we can also get other data from the integer class, which is related to how Java functions. . System.out.println(&quot;Integer Min Value: &quot; + Integer.MIN_VALUE); System.out.println(&quot;Integer Max Value: &quot; + Integer.MAX_VALUE); . Integer Min Value: -2147483648 Integer Max Value: 2147483647 . These numbers are the bounds of integers in java. For example, we can try going outside the range to see what happens. . Integer pleaseBreak = new Integer(2147483648) . | Integer pleaseBreak = new Integer(2147483648); integer number too large . Double Wrapper Classes . Double wrapper classes are basically the same thing as integer classes, however, they deal with double varaiables instead of integer variables. You write it like this: . Double(Double Value) . Here is an example of using Double object: . // My actual height in real life (in feet) Double height = new Double(6.6); // Send to an Object double primitiveHeight = height.doubleValue(); // Turn back into a primitive . And here is an example of when it works and when it does not. . ArrayList&lt;double&gt; list = new ArrayList&lt;double&gt;(); // This will cause a compile-time error . | ArrayList&lt;double&gt; list = new ArrayList&lt;double&gt;(); // This will cause a compile-time error unexpected type required: reference found: double | ArrayList&lt;double&gt; list = new ArrayList&lt;double&gt;(); // This will cause a compile-time error unexpected type required: reference found: double . Again, the ArrayList needs an object type, but we are passing a primitive type. . ArrayList&lt;Double&gt; list = new ArrayList&lt;Double&gt;(); list.add(3.14); // Autoboxing will automatically convert the double 3.14 to a Double object . true . This code works because the 3.14 is being converted by the list.add, since the list uses double objects. . Autoboxing . Autoboxing is when Java automatically changes a basic data type into its object form. The Java compiler does this for us. Think of it as putting the data into a box. Java can also unbox an object, which is the exact opposite of autoboxing. When an Integer object is assigned to a primitive int type, Java will automatically use the primitive int version of the number and assign it to the int variable. . // Boxing int a = 5; Integer b = a; . // Unboxing Integer x = new Integer(10); int y = x; . 2.9 Using the Math Class . Java has a built in math class called Math? It is a part of the java.lang class. . System.out.println(Math.abs(-5)) // Absolute Value . 5 . System.out.println(Math.pow(5, 2)) // Power: base, exponent . 25.0 . // Two ways to calculate square roots System.out.println(Math.pow(25, 0.5)); // Allows for different roots System.out.println(Math.sqrt(25)) // Square Root . 5.0 5.0 . Finally, arguably the most important class in math: The random class! Many purposes, especially in game development. What is one purpose? . System.out.println((int)Math.random()) // Always returns zero because the range of math.random is [0, 1) . 0 . In the cell below, experiment and try to figure out a way to call Math.random and impliment bounds, with your bounds being integer bounds of a and b. . // Intended Solution int a = 0; int b = 60; System.out.println((int)((double)Math.random() * (b-a) + a)) . 26 . Hacks! . Note: This is due Monday! Write your hacks in a Jupyter Notebook and then DM them to us over slack by Monday Morning at 8:00 AM. For full credit, all criteria in the hacks must be completed and show some originality. . Hack 1: (0.25) . Create a void method that takes an integer input and adds it to an ArrayList. Then, add a non-void method that is able to call a certain index from the ArrayList. . Hack 2: (0.25) . Create a simple guessing game with random numbers in math, except the random number is taken to a random exponent (also includes roots), and the person has to find out what the root and exponent is (with hints!). Use at least one static and one non-static method in your class. . Hack 3: (0.25) . Create a class of your choosing that has multiple parameters of different types (int, boolean, String, double) and put 5 data values in that list. Show that you can access the information by givng some samples. . Hack 4: (0.25) . Using your preliminary knowlege of loops, use a for loop to iterate through a person’s first and last name, seperated by a space, and create methods to call a person’s first name and a person’s last name by iterating through the string. . Total: 1/1 .",
            "url": "http://localhost:4100/teacher_portfolio/2023/10/05/java-objects-P3_IPYNB_2_.html",
            "relUrl": "/2023/10/05/java-objects-P3_IPYNB_2_.html",
            "date": " • Oct 5, 2023"
        }
        
    
  
    
        ,"post145": {
            "title": "U2 Using Objects - Student P1",
            "content": "Java objects . In Java, objects are essentially instances of classes. They represent real-world entities or concepts and contain both data and behaviors, facilitating organized and modular software design. | . Common Types of Java Classes . In Java, classes are the fundamental building blocks of Object-Oriented Programming (OOP). They define the structure and behavior of objects, serving as templates or blueprints from which objects are created. Java programs typically consist of multiple classes, each designed to fulfill a specific role. One Java class that you should be familliar with is: . Utility Classes: Utility classes contain static methods that provide common utility functions. These classes are not meant to be instantiated, and they often involve operations such as mathematical calculations, string manipulation, or date formatting. The Math class is an example of a utility class. Java Arrays Class | Java HashMap Class | Java LinkedList Class | . | import java.util.Arrays; public class ArraySortExample { public static void main(String[] args) { int[] numbers = {5, 2, 9, 1, 5, 6}; Arrays.sort(numbers); System.out.println(Arrays.toString(numbers)); } } String[] words = {&quot;main&quot;}; ArraySortExample.main(words); . . Java Objects . An object in Java is a basic unit of Object-Oriented Programming and represents real-life entities. Objects are the instances of a class that are created to use the attributes and methods of a class. A typical Java program creates many objects, which as you know, interact by invoking methods. An object consists of : . State: It is represented by attributes of an object. It also reflects the properties of an object. | Behavior: It is represented by the methods of an object. It also reflects the response of an object with other objects. | Declaring Objects . When an object of a class is created, the class is said to be instantiated. All the instances share the attributes and the behavior of the class. But the values of those attributes, i.e. the state are unique for each object. A single class may have any number of instances. . As we declare variables like (type name;). This notifies the compiler that we will use the name to refer to data whose type is type. With a primitive variable, this declaration also reserves the proper amount of memory for the variable. So for reference variables , the type must be strictly a concrete class name. In general, we can’t create objects of an abstract class or an interface. . Initializing a Java Object . The new operator instantiates a class by allocating memory for a new object and returning a reference to that memory. The new operator also invokes the class constructor. . public class Dog { public String Name; public int Age; public void Bark(int times) { for (int i = 0; i &lt; times; i++) { System.out.println(&quot;Bark&quot;); } } public static void main(String[] args) { Dog dog = new Dog(); dog.Bark(5); } } Dog.main(words); . Calling a non-void method . It’s possible to call a non-void method on an object so that it returns a value, the type of which is specified with the method. . public class Dog { public String Name; //instance variables public int Age; public Dog(String name, int age) { //construction method Name = name; Age = age; } public String getName() { //non-void method that returns a String return Name; } public static void main(String[] args) { //main code Dog d = new Dog(&quot;Larry&quot;, 4); System.out.println(d.getName()); } } Dog.main(null); . Popcorn Hacks . Modify the code below (the same code as above) to demonstrate one of the following: . An additional Non-void method | Multiple uses of the same Non-void method on different objects | . public class Dog { public String Name; //instance variables public int Age; public Dog(String name, int age) { //construction method Name = name; Age = age; } public String getName() { //non-void method that returns a String return Name; } public static void main(String[] args) { //main code Dog d = new Dog(&quot;Larry&quot;, 4); System.out.println(d.getName()); } } Dog.main(null); . String Objects . String objects are built-in objects in Java that you’re probably pretty familiar with, but it also functions like a class, with the following properties: . String objects can be initialized with the new keyword | Method that acts upon String objects can’t change the String itself, it is inmmutable. | String objects can be concatenated using the + operator, creating a new string that is the combination of the other two strings | Escape sequences can be used to print characters that are otherwise unavailable, using the “&quot; (backslash) symbol &quot; creates a double quote | creates a regular backslash (I actually had to use 4 backslashes for this since markdown also recognizes this combination) | n creates a newline | . | . public class Strings_demo { public static void main(String[] args) { //main code String s1 = &quot;hello&quot;; // The way you are probably used to for string objects String s2 = new String(&quot;hello&quot;); // an alternate method to create the same string variable System.out.println(s1);// these two println statements should print the same thing System.out.println(s2); String s3 = s1+s2; // s3 is a concatenation of s1 and s2 System.out.println(s3); System.out.println(s1); // the method doesn&#39;t actually change the String itself String s4 = new String(&quot;In order to type out a string in Java String, you need 4 &#39;s n You need 3 &#39;s and 1 &quot; to type out a &quot;&quot;); // a demonstration of the escape sequences System.out.println(s4); } } Strings_demo.main(null); . Here are some of the String methods we use: . Syntax Definition . String(String str) | Constructs a new String object with the same sequence of characters as str | . int length() | Returns the number of characters in the String | . String substring(int from, in to) | Returns the substring beginning at from to one before to | . String substring(int from) | Returns the substring beginning at from to the end | . int indexOf(String str) | Returns the first occurence of str, returns -1 if not found | . boolean equals(String other) | Returns true if this is equal to other and vice versa | . int compareTo(String other) | Returns a value &lt;0 if this is less than other, 0 if they are equal and a value &gt;- if this is greater than other | . public class Strings_demo_2 { public static void main(String[] args) { //main code String s1 = &quot;hello&quot;; // Strings for demonstration String s2 = new String(&quot;hihihellothere&quot;); // Construction using the method System.out.println(s2.length()); String s3 = s2.substring(4,9); // creating a substring of s1 from index 4 to 9-1 System.out.println(s3); System.out.println(s1); // these should be the same System.out.println(s2.indexOf(s1)); //returns the first occurence of hello in hihihellothere (4) System.out.println(s2.equals(s1)); // returns if hello is the same as hihihellothere (it&#39;s not) System.out.println(s2.compareTo(s1)); // compares hihihellothere to hello, since it greater since h=h and i&gt;e, this returns a positive number System.out.println(s1.compareTo(s2)); // the reversal of the above, returns a negative number System.out.println(s3.equals(s1)); // returns if hello is the same as hello (it&#39;s) System.out.println(s3.compareTo(s1)); // compares hello to hello, since they are the same, this returns a 0 System.out.println(s1);// none of these methods affect the original strings, since Strings are immutatble System.out.println(s2); System.out.println(s3); } } Strings_demo_2.main(null); . Popcorn Hacks . Using the methods above, create a method that is able to return the position of a substring in a string and use s.o.pl to prove it. . . Wrapper Classes . You may remember the Wrapper classes from before, this will present two additional wrapper classes - Integer and Double . Integer (not int - notice the non-shortend word and capitalization) int is a primitive data type, and Integer is a wrapper class | . | . Syntax Definition . Integer(int value) | Constructs a new Integer object representing the value | . Integer.MIN_VALUE | the minimum value represented by a int or Integer | . Integer.MAX_VALUE | the maximum value represented by a int or Integer | . int intValue() | Returns the value of Integer as int | . Double (not double) double is a primitive data type, Double is a wrapper class | . | . Syntax Definition . Double(double value) | Constructs a new Double object representing the value | . double doubleValue() | Returns the value of the Double as a double | . (not the most exciting thing I know) . ok but why . In Java, Wrapper classes are used to convert between primitive data types (int, boolean) and only store a single value and Reference types (String, ArrayList). It provides a way for us to use primitive datas as objects . Autoboxing and Unboxing . As of Java 5.0, autoboxing and unboxing are added . Autoboxing is the automatic process that Java compiler uses to convert primitive types and their respective Wrapper classes . Unboxing is the opposite, comverting Wrapper classes to primitive types . public class Unboxing_stream { public static void main(String[] args) { //main code int i1 = 10; // primitive data types double d1 = 25.5; Integer I1 = new Integer(i1); // Construction of the Wrapper classes version (superior) Double D1 = new Double(d1); System.out.println(i1); // The values correspond to their original values System.out.println(I1); System.out.println(d1); System.out.println(D1); int i2 = I1.intValue()+5; //usage of the intValue function System.out.println(i2); double d2 = D1.intValue()-1.3; //usage of the doubleValue function System.out.println(d2); System.out.println(Integer.MIN_VALUE); // the actual values of the MIN_VALUE and MAX_VALUE System.out.println(Integer.MAX_VALUE); Integer I2 = i1; // autoboxing bypasses the need for contructor methods Double D2 = d1; System.out.println(I2); System.out.println(D2); int i3 = I2+10; // unboxing without using any methods double d3 = D2-1.3; System.out.println(i3); System.out.println(d3); } } Unboxing_stream.main(null); . the Math class . Talking about the java object here, math offers several useful method for mathmatical usages. . Math methods are static, they belong to the class instead of an object and can be used without creating an object | the Math class is already imported as part of java.lane.Math However, you can use the methods without using the Math prefix with the import command import static java.lang.Math.* | . | . Syntax Definition . static int abs(int x) | Returns the absolute value of a int | . static double abs(double x) | Returns the absolute value of a double | . static double pow(double base, double exponent) | Returns the value of base to the exponent power | . static double random() | Returns a random double between 0.0 and 1.0 | . import static java.lang.Math.*; // implicit importation public class maths_demo { public static void main(String[] args) { //main code double a=12.5; // ints we will use int b=-5; int c=4; System.out.println(abs(a)); // prints the absolute values of a and b System.out.println(abs(b)); // should have no effect on a but b should be turned to its opposite (the positive number) System.out.println(pow(b,c)); // prints the result of b to c System.out.println(random()*10&gt;4); // returns true if a random number from 0 to 10 is greater than 4, this should return different values with different runs. } } maths_demo.main(null); . Popcorn hacks . Create a variation of the number guessing game and try to use these methods in. Bonus points for creativity. . . Hacks . Complete all popcorn hacks . Quiz .",
            "url": "http://localhost:4100/teacher_portfolio/2023/10/05/java-objects-P1_IPYNB_2_.html",
            "relUrl": "/2023/10/05/java-objects-P1_IPYNB_2_.html",
            "date": " • Oct 5, 2023"
        }
        
    
  
    
        ,"post146": {
            "title": "P4 Algorithms",
            "content": "Algorithms - 3.3 &amp; 3.4 . Overview: what is an ALGORITHM? . Sequencing - Selection - Iteration . | Algorithms are step-by-step procedures or sets of rules used to solve problems or perform tasks Also known as sequencing Step 1, Step 2, Step 3…(in order) | Ex: putting on clothes one at a time in the morning, washing dishes, etc. | . | . | Selection Decision to make based on a given circumstance Ex: is it raining? If so, bring an umbrella outside | . | . | Iteration Also referred to as repetition | After performing steps of a procedure/problem, iteration means checking to see if a task is completed Refers back accordingly | . | . | Algorithms can be represented using flowcharts, Pseudo Code, or programming languages | Conditional statements Conditional statements (if-else statements) allow a program to make decisions based on certain conditions | Enable different code branches to be executed depending on whether a condition is true or false | . | Loops Loops (for loops, while loops) enable repetitive execution of code | They are used when a set of instructions needs to be repeated multiple times. | . | Strings A string is a data type used to represent text or sequences of characters | Strings are commonly used in programming for tasks like input/output and text processing | . | . Pseudo Code vs. a Python Algorithm . Pseudo Code is essentially describing/writing code in a more “human-written” format rather than formally/actually “coded” format. . Below, see examples highlighting the key difference(s) between a coded (Python) algorithm against a College Board Pseudo Code example. . . College Board Pseudo Code example . Below is an algorithm to find the largest number in a list of positive numbers. . Set largest number to 0 | Get next number in the list | If number is larger than largestNumber then set largestNumber to number | If there are more numbers in list, go back to step 2 | Display largest number | largestNumber = 0 numberList = [5, 8, 3, 12, 7, 10] for number in numberList: if number &gt; largestNumber: largestNumber = number print(&quot;Largest number:&quot;, largestNumber) . Largest number: 12 . 3.3 - Mathematical Expressions/Operations in Algorithms . Mathematics in algorithms may involve many of the basic actions we all know to be part of the Order of Operations. This includes basic addition (a + b), subtraction (a - b), multiplication (a * b), and division (a / b). . However, there is also a likely unfamiliar action named Modulus (in Python: a % b). . MOD: (a / b -&gt; whatever remains). . NOTE: in PEMDAS, MOD is held at the same level as multiplication and divison. . # arithmetic operations # (a + b) num1 = 4 num2 = 7 print(num2 + num1) # (a - b) num1 = 3 num2 = 9 print(num2 - num1) . 11 6 . # order of operations example below with grades # remember PEMDAS num1 = 12 num2 = 25 num3 = 14 answer = num1 / 4 * num3 + 9 print(answer) . 51.0 . Popcorn Hack #1 . Create YOUR OWN order of operations problem like the one above using any values and operations in any order (ex: addition, multiplication, MOD). . Hint: remember to define your values, as seen above. . # use this code cell to make your own calculation! . Fibonacci and Factorial . What is a sequence of FIBONACCI? . A Fibonacci sequence is a series of numbers in which each number is the sum of the two preceding ones. It commonly starts with 0 and 1, and the sequence continues infinitely. The first few numbers in the Fibonacci sequence can be seen below. . 0, 1, 1, 2, 3, 5, 8, 13, 21, 34,… . Fibonacci function example: . def fibonacci(n): if n &lt;= 0: return [] elif n == 1: return [0] elif n == 2: return [0, 1] else: fib_sequence = [0, 1] while len(fib_sequence) &lt; n: next_number = fib_sequence[-1] + fib_sequence[-2] fib_sequence.append(next_number) return fib_sequence n = 10 result = fibonacci(n) print(result) . [0, 1, 1, 2, 3, 5, 8, 13, 21, 34] . What is FACTORIAL? . In mathematics, the factorial of a non-negative integer, denoted by the symbol “!”, is the product of all positive integers from 1 to that integer. The notation is typically a number with “!” after (ex: n!) . Example of factorial: 5! = 5 x 4 x 3 x 2 x 1 = 120 . Factorial function example: . def factorial(n): if n == 0: return 1 else: return n * factorial(n - 1) n = 5 result = factorial(n) print(f&quot;{n}! = {result}&quot;) . 5! = 120 . Popcorn Hack #2 . Complete the following tasks. Fill in the blank numbers in the segment of a Fibonacci sequence below: . [3, 5, 8, 13, ?, 34, 55, 89, ?] . Write the answer to the following factorials: . 4! = | 6! = 3.4 - Strings . | . What is a string? . Strings are ordered sequences of characters Ex: characters can be numbers, letters, special characters like underscores, or even spaces | . | Substring: a substring can be described as part of an already existing string | String concatenation: joins two or more strings end-to-end to make a new string | Note that each programmming language has its own procedures, methods, or functions for strings We will be covering Python | . | . Let’s look at some of the string examples below. . Below is “len(str)”. This command counts the number of characters in a word (str) and returns that number. For example, for the word “happy” (“len(‘happy’)”), the value returned would be 5. . # len example: string = &quot;Hello, World!&quot; stringLength = len(string) print(f&quot;The string length is {stringLength} characters.&quot;) . The string length is {stringLength} characters. . Below is “concat(str1, str2)”. This returns a single string consisting of “str1” immediately followed by the characters of the second string (“str2”). For example, “concat(‘AP’, ‘class’)” would return “APclass”. . # concat example: string1 = &quot;Hel&quot; string2 = &quot;lo!&quot; # concatenation seen right below result = string1 + string2 print(result) . Hello! . Below is a substring “substring(str1, start, length)”. This returns a substring of consecutive characters from “str1”, starting with the character at position “start” and containing “length” characters. For example, “substring(‘APCSPrinciples’, 3, 6)” would return “CSPrin”. . # substring example: string = &quot;Hello, World!&quot; substring = string[2:10] print(substring) . llo, Wor . Palindromes . The most commonly known definition of a palindrome is represented as being a word or phrase that is spelt the same both forward and backward. . For example, the word “racecar” is a palindrome, because the word is the same whether you read it from left to right or vice versa. . # palindrome example def is_palindrome(s): s = s.lower().replace(&quot; &quot;, &quot;&quot;).replace(&quot;,&quot;, &quot;&quot;).replace(&quot;!&quot;, &quot;&quot;) return s == s[::-1] word = &quot;racecar&quot; print(f&quot;{word} {&#39;is&#39; if is_palindrome(word) else &#39;is not&#39;} a palindrome.&quot;) . racecar is a palindrome. . Popcorn Hack #3 . Decide if the following code cell is a “len(str)”, a concatenation, or a substring. . # len, concat, or substring? thing1 = &quot;Del &quot; thing2 = &quot;Norte&quot; result = thing1 + thing2 print(result) # type your answer HERE: -&gt; . Del Norte . Homework Hacks . Hack #1 . Concatenate your first and last name and print it (full name). . | Select/write a random sentence of your choice (be creative; it can be whatever you want it to be) and calculate the number of characters in it and display that as the result. . | # put your work for Hack #1 in here below: . Hack #2 . Similarly to the first Popcorn Hack, create your own order of operations problem (PEMDAS) in a code cell, but this time using modulus/MOD (a % b). . Try to make your answer not have a decimal in it. . # put your work for Hack #2 in here below: .",
            "url": "http://localhost:4100/teacher_portfolio/2023/10/05/P4_Algorithms_IPYNB_2_.html",
            "relUrl": "/2023/10/05/P4_Algorithms_IPYNB_2_.html",
            "date": " • Oct 5, 2023"
        }
        
    
  
    
        ,"post147": {
            "title": "P5 Algorithms",
            "content": "3.3 to 3.4: Algorithms . 3.3: Mathematical expressions: . . Algorithm: a finite set of instructions that accomplish a specific task. | Ex: when you go to bake cookies you use specific steps | Getting ready in the morning: shirt, pants, breakfast | Algorithm is like a list of steps that occur in a specific/particular order. | Sequencing: things are done in order | Selection | Iteration | Selection: do first step, make decision(yes or no), step true or false( if or else) | Iteration/repetition→ First step, second step, continue condition, Yes or no, step to do if true | Ways to write algorithm: flow chart(use arrows to tell decision) | Pseudo code→ fake code. writing . verbal instructions/comments on what each section is doing. &lt;/span&gt; | . . def factorial(n): # Selection if n &lt; 0: return &quot;Factorial is not defined for negative numbers&quot; # in case negative numbers are inputted... elif n == 0 or n == 1: # &quot;else if&quot; sets a condition to be met, and if it is met, the code should return 1 return 1 else: result = 1 for i in range(2, n + 1): #iterates through the list, from 2 to n inclusive - 1 is not counted, n*1 = n result *= i #multiplies the current value of result by i # i is sort of like the index, or the number assigned to each value in the list, starting from 0 return result def main(): try: # Get user input for the numbers as a comma-separated list user_input = input(&quot;Enter a list of non-negative integers (comma-separated): &quot;) numbers = [int(num.strip()) for num in user_input.split(&#39;,&#39;)] # Calculate and print factorial for each number for number in numbers: # Calculate factorial for each number, iterates through the list result = factorial(number) if isinstance(result, int): print(f&quot;The factorial of {number} is: {result}&quot;) # Selection, makes sure the result is actually an integer before printing else: print(f&quot;The factorial for {number} is not defined (negative input).&quot;) except ValueError: print(&quot;Invalid input. Please enter a valid list of non-negative integers.&quot;) if __name__ == &quot;__main__&quot;: main() . Popcorn Hack #1 . Scenario: You’re in your math test and you forgot how to graph the parent function of 3(x+2)-4. Input a list of x-values to figure out the y-values and print the results of what you get so you can graph the function and get an A on your math test! . nums = [2, 5, 7, 10] for num in nums: print((3 * ( num + 2)) - 4) . 3.3 Continued - Mathematical Operations . Addition: a + b | Subtraction: a - b | Multiplication: a * b | Division: a / b | Modulus (remainder of a/b): a MOD b | For python it is % | Math in order of operations | MOD is held to the value of multiplication + division in PEMDAS | . num1 = 40 num2 = num1 / 2 num3 = 5 * num2 + 3 result = num2 % 3 * num1 + 4 - num3 / 2 print (result) . Popcorn hack #2 . What will the code below print? . num1 = 20 num2 = num1 /2 num3 = num2 * 10 + 3 print(num3) . Popcorn hack #3: . Write a code that can add, subtract, multiply, divide, and MOD numbers. Try adding them in the same line and seeing what they do. Try adding variables to your hack #2. . 3.4: Strings . Strings are ordered sequence of characters (characters = numbers, letters, even space) | Substring is part of an existing string | Some procedures exist that can be used with strings, each language has its own functions | len (str) | Returns the number of characters in the string | . len (&quot;APCSP&quot;) . . Concat | Merges both strings together, returns it so that they are one word &lt;/span&gt; | . concat = &quot;AP&quot; + &quot;CSP&quot; # Concat is simply a variable print(concat) . Popcorn hack #4: . Find the number of characters in your last name using len. Use concat to merge your first and last name together. Use Substring to show only the 3rd to 6th characters. . #Find the number of characters in your last name using len. length = len(&quot;Bharadwaj&quot;) print(length) # Use concat to merge your first and last name together. concat = &quot;Aditi&quot; + &quot;Bharadwaj&quot; print (concat) # Use Substring to show only the 3rd to 6th characters. # be sure to start at 2 because it starts counting at 0 substring = concat[2:6] print (substring) . Palindromes . A palindrome is a string that reads the same from right to left as left to right. For example, 2112 and mom are palindromes . def palindrome(input_str): # Remove spaces and convert the string to lowercase clean_str = input_str.replace(&quot; &quot;, &quot;&quot;).lower() # Check if the cleaned string is equal to its reverse return clean_str == clean_str[::-1] print(palindrome(&quot;taco cat&quot;)) # True print(palindrome(&quot;hi&quot;)) # False . Pseudo Code vs Python . Python . Python is a high-level programming language. When you write an algorithm in Python, you are essentially creating a set of instructions that a computer can follow to solve a specific problem. . name = &quot;Eshika&quot; age = 15 print(&quot;Name:&quot;, name) print(&quot;Age:&quot;, age) . Pseudo Code . College Board Pseudo Code is a simplified, high-level representation of an algorithm that is designed to be easy to understand. Pseudo code uses a mixture of natural language and programming-like constructs to describe the algorithm’s logic without specifying a particular programming language. . OUTPUT “Name:”, name OUTPUT “Age:”, age &lt;/span&gt; . Robot MCQ Problems . If the robot leaves the grid, the program will end Command MOVE_FORWARD() moves the robot one block in the direction its facing Command ROTATE_LEFT() moves the robot left in place Command ROTATE_RIGHT() makes the robot do an in place right turn Command CAN_MOVE(direction) makes it so that if there is an open space in the relative direction the robot is facing, the robot goes there, can be any direction . Logic Gates in Python: . AND gate, OR gate, NOT gate, NAND gate, NOR gate, XOR gate, and XNOR gate. . What is a logic gate?: Logic gates are used in circuits to make decisions based on a combination of digital signals beign inputed. The concept of logic gates revolves around Boolean algebra as well as binary. It is basically how zero represents the false condition and 1 represents True. Think of it as a switch where if it is at 0, the switch is turned off while if it is 1, then the lightbulb will turn on. . The AND gate requires both inputs to be 1 or true so the end output is true. In other words, the output is 1 only when both inputs one AND two are 1. . . age= 15 if age&gt;2 and type(age)==int: print(age) age=13 if age&gt;2 and type(age)==str: print(age) . De Morgan’s Law . A way to turn statements from AND to OR by negating terms | not (A or B) = (not A) and (not B) | not (A and B) = (not A) or (not B) | . HW Hacks . Use an algorithm to find certain values of the Fibonacci sequence. For example, your code should output the nth index in the sequence. An example of how the sequence works is 0,1,1,2,3,5,8,13. The pattern is you add the previous 2 numbers together to get the new number. .",
            "url": "http://localhost:4100/teacher_portfolio/2023/10/05/CSP-Algorithms-P5_IPYNB_2_.html",
            "relUrl": "/2023/10/05/CSP-Algorithms-P5_IPYNB_2_.html",
            "date": " • Oct 5, 2023"
        }
        
    
  
    
        ,"post148": {
            "title": "P2 Algorithms",
            "content": "ALGORITHMS . SRSC . BIG IDEA: A FINITE SET OF INSTRUCTIONS THAT ACCOMPLISH A SPECIFIC TASK . SEQUENCING . DO STEPS OF CODE IN THE ORDER SPECIFIED . first step -&gt; second step -&gt; third step . number = int(input(&quot;Enter a number: &quot;)) result = number * 2 print(&quot;double of &quot; + str(number) + &quot; is &quot; + str(result)) . Create a variable based on user input | Multiply variable by two | Print out both variables at the end | SELECTION . Choose TWO OR MORE OUTCOMES based on a DECISION or CONDITION . number = 6 if number % 2 == 0: print(&quot;Even&quot;) else: print(&quot;Odd&quot;) . Set number to 5 | If number is divisible by 2 with no remainder, print “Even” | Otherwise, print “Odd” | ITERATION . REPEAT STEPS BASED ON A DECISION or STOP when a condition is met . first step -&gt; second step -&gt; if step 2: true -&gt; first step if step 2: false -&gt; third step -&gt; fourth step . fruits = [&quot;apple&quot;, &quot;banana&quot;, &quot;cherry&quot;] for fruit in fruits: print(fruit) . Create a list called fruits | For each fruit in the list, print the fruit | ACTIVITY 1: Robot Pseudocode . Link to Robot Question 2 . Write the pseudocode to move the robot onto the gray square. . Available Code: Move forward Turn Left Turn Right . PseudoCode here: . # Math Operations: print(&quot;Addition&quot;) #addition result = 5 + 3 print(result) # 8 print(&quot; nSubtraction&quot;) #subtraction result = 10 - 4 print(result) # 6 print(&quot; nMultiplication&quot;) #multiplication result = 6 * 7 print(result) # 42 print(&quot; nFloat Division&quot;) #float division (float = numbers with decimal values) result = 20 / 4 print(result) # 5.0 print(&quot; nInteger Division (floor division)&quot;) #floor division result = 20 // 3 print(result) # 5 print(&quot; nModulus (remainder)&quot;) #remainder result = 10 % 3 print(result) # 1 . Fibonacci . def fibonacci(n): #fibonacci sequence fib_series = [0, 1] while len(fib_series) &lt; n: next_number = fib_series[-1] + fib_series[-2] fib_series.append(next_number) return fib_series n = 10 result = fibonacci(n) print(result) # [0, 1, 1, 2, 3, 5, 8, 13, 21, 34] # initial length of list is 2 # while length of list is less than amount of numbers we want in our final sequence # add the last two numbers of the list # add this value to the end of the list # repeat until length of list reaches n . Mini Lesson: If, Else Statements . num =0 if num &gt; 0: print(str(num) + &quot; is positive.&quot;) elif num &lt; 0: print(str(num) + &quot; is negative.&quot;) else: print(str(num) + &quot; is zero.&quot;) . Mini Lesson 2: For, While Loops . names = [&quot;Alice&quot;, &quot;Bob&quot;, &quot;Charlie&quot;, &quot;David&quot;, &quot;Eve&quot;] for name in names: print(name) num = 1 while num &lt;= 5: print(num) num += 1 . Mini Lesson 3: Defining Function . def calculate_square(number): square = number * number return square #ends function result = calculate_square(5) print(f&quot;The square of 5 is {result}&quot;) . Mini Lesson 4: Input . variable1 = input(&quot;How old are you?&quot;) print(&quot;You are &quot; + variable1 + &quot; years old&quot;) . ACTIVITY 2: CALCULATOR . Create calculator function | Allow user to Choose 2 numbers and an operator | Perform specified operation based on input | Return result of calculation | ##YOUR WORK HERE ##Hint: Use if else statements, defining functions, input . # String Operations and Concatenation: print(&quot; nString Concatenation&quot;) #add together strings str1 = &quot;Hello&quot; str2 = &quot;World&quot; result = str1 + &quot; &quot; + str2 print(result) # &quot;Hello World&quot; print(&quot; nString Length&quot;) #length of string text = &quot;This is a sample text.&quot; length = len(text) print(length) # 22 print(&quot; nString Indexing and Slicing&quot;) #string slicing text = &quot;Python&quot; first_char = text[0] substring = text[2:5] print(first_char) # &#39;P&#39; print(substring) # &#39;tho&#39; print(&quot; nString Repetition (Repeating Strings)&quot;) text = &quot;Repeat &quot; result = text * 3 print(result) # &quot;Repeat Repeat Repeat &quot; # Palindrome Check Algorithm: print(&quot; nPalindrome Check Algorithm&quot;) def is_palindrome(text): text = text.replace(&quot; &quot;, &quot;&quot;).lower() return text == text[::-1] ## == will return boolean result1 = is_palindrome(&quot;racecar&quot;) result2 = is_palindrome(&quot;Hello, World!&quot;) print(result1) # True print(result2) # False . ACTIVITY 3: COUNTING VOWELS . Create a function that takes a word as an input | Use a for loop to iterate through each character of a word | Check how many characters in a word contain vowels | Return vowel number | ##YOUR WORK HERE . HOMEWORK . CREATE TEXT (string) ANALYZER: . criteria: . Accepts input from user | Counts total letters, numbers, spaces in a string | Counts number of vowels | Calculates average word length | Correctly displays: total # of characters (including spaces + numbers), total vowels, average word length other criteria: . | ensure that program handles upper and lowercase spelling | Test multiple inputs to ensure accuracy Criteria for above 90%: . | Add a unique program, function, or feature not specified by criterias |",
            "url": "http://localhost:4100/teacher_portfolio/2023/10/05/CSP-Algorithms-P2_IPYNB_2_.html",
            "relUrl": "/2023/10/05/CSP-Algorithms-P2_IPYNB_2_.html",
            "date": " • Oct 5, 2023"
        }
        
    
  
    
        ,"post149": {
            "title": "Alien World Project Plan",
            "content": "Backgound . Over my Computer Science years I have found that it is a lot more interesting to code if you start with something fun. Loops are kind of boring, but if you add animation, alien planet, and monkeys what is not to like. . Initial concepts: . Mr M (Product Owner, Scrum Master) Introduce basic concepts to non coder, even younger children | Make game easy, instead of start over continue but require more events for success | Use features like collision, role play, gravity, squish to help in countdown | Try to integrate coding concepts like Object Oriented Programming,into game | . | . Advanced Concepts . Quinn. Ideas from CSA friend Quinn In a distant galaxy, far, far away, there was a world known as “Codeonia.” In this realm, software engineers and programmers lived harmoniously, creating and coding various applications for the universe. Among the inhabitants of Codeonia was Java the Hut, a wise and experienced programmer known for his mastery of programming languages. One day, a group of mischievous bugs and glitches threatened to plunge Codeonia into chaos. These digital nuisances were led by Darth Compiler, a formidable dark coder who sought to corrupt the code of the entire galaxy. . Monkeys (Good and Bad) C++3PO | Darth Compiler | Ewak exception handle | R2-D-Arrays | Boba Fetch API | . | More worlds | Jetpack | New characters Space Jellyfish | Robots | Aliens | . | Enemies have different abilities | Go between planets for levels | Zero gravity level | Astroid level | Star power up | Black hole | . | Mr Lopez Surfaces with different properties Bouncy | Sticky | Damaging | . | Create obstacles or challenges that require players to use conditional statements (e.g., if-else) to make decisions, such as determining if a door is locked or open based on collected keys. | Use abilities by calling functions. | Different resources require different variables which we show the player. | Introduce the concept of objects and classes by having players interact with different spaceship types, each with its own properties and behaviors | . | Rohan Maybe add some competitive aspects to the game –&gt; who completed the course in fastest time | Could have Monkey vs Dog competition Each competitor chooses one and then they can race against each other | Could also emulate the “space race” that was present during cold war | . | Could use HTML canvas in order to store characters | Natural enemies such as winds, requisite power to reach space, etc. can be combined with physical enemies | Different power ups you could buy based on your completion of previous levels/things that have been collected Would need to store these per player across sessions / levels | . | Graphic for swithing between planets | End goal could be to “liberate” the universe from some big enemy | Local storage or cloud database can be used to store user data | Can have different questions you would have to answer while in a level | . | . Outline of Scenes . Scene Design will be an ongoing process, as we enhance game play it is expected to have new ideas. By splitting game up into parts it provides unique development opportunities to each individual. . Game Intro (Map design of Game) | Identity and Force/Power Design | Game Play, start with different options Dog Sprite, Monkey Sprite, Mario Sprite | Note, each level could start with Character or Background and build up as code progresses | Game Intro Identity Force/Power Journey |-| || || |-| | In a | | Setup 1 | | Setup 2 | | Game Play| | galaxy| -&gt; | Pick | -&gt; | Pick | -&gt; | Selection| -&gt; Game Entry | .... | |Character| | Power | | Portal | |-| || || |-| . Intro Screen . Option at Intro Screen to begin game, play codeOnia intro, go to Identity, Force/Power screens. . A codeOnia Intro, long version with character introductions Quick exit or short version | . | Repeating Gif of Game Play | . Identity . Option at Intro Screen to establish a character Dog, Monkey (aka Sprite) . C++3PO would be guide character in scene. | This step would introduce ‘Objects’ and ‘Variables’ | . Force/Power . Option at Intro Screen to add powers to character to help them win the game . R-2Darray-2 would be guide character in scene | Force/Power would introduce enhanced Data Structure to hold powers | methods in object associated with powers | . | . Game Entry . The entry to the game would introduce ‘Conditions` . Darth-If-Vader would be nemisis or character that inflicts obstacles in game | Based off of obstacles, character, and powers game play begins | . Game One Idea . Escape the loop. . Use non-animated character in this game, a space monkey. | Create a looping and consistent experience in game. Keep game timer and loop timer. | Objective of game is to reduce “code counter” or “loop” from 10 to zero Jump on top of NPC platform characters for point reduction, refactor Goomba code for more appropriate character | Add points to loop counter for collision with NPC character | Have sticky or water hazards that delay progress, have Power/Force to free from trap | Have a condition open up when counter gets to zero, use Power/Force to travel to and go through a portal to exit game level | . | Follow Mario code guildelines for … platform | rivers or sticky traps | replace gombas with more appropriate character | . | . Game Two Idea (Thoughts to be determined) . Escape the nested loops. . Use dog as character and animation. | Start force/power features turning Dog into ball to allow horizontal collision for reward | Start using jetpack experience to interact with objects above platform for super inner loop reduction. | . Game Three Idea (Thoughts to be determined) . Defeat code infections from Dart Compiler. Have ways to bypass level one and level two may inserting coding. . Use character from selections in Identity / Force Power obtained from local storage. | | . GitHub Pages Project . alienWorld repository . Make a GitHub Pages Repository . Goto GitHub alienWorld repository . Clone to your machine and get started with VSCode | . $ cd vscode # work in vscode directory for consistency $ git clone https://github.com/jm1021/alienWorld.git $ cd alienWorld $ code . # open VSCode in project directory . Anatomy of Alien World . The GitHub Pages repository is for Game and History of project. . index.html is the code to start the game | assets/js/*.js are Objects of the Game | _notebooks/Plan.ipynb contains this plan _ _posts/* contains daily meetings, hacks, and early code examples | . Game Code and OOP . Most game code you find on the internet is built in a single file. However, once you reach a certain amount of complexity this becomes difficult to manage. Thus, this project is broken into objects. . In the early days of this project, it was easy to see repetition in code (draw() and update()) as well as grouping of attributes and classes using “isa” and “hasa” relationships. This picture is a talking point. A more active verion of this picture is the “classDiagram.drawio” in this repository. . . Migrating to OOP - Background . To migrate to this project it can begin by changingthe background to your preference. This code starts in index.htmol and simply change the image in the frontmatter. . Swap beteen alien_planet.jpg and alien_plant2.jpg . index.html simply change yml to point to your preference | . image: /images/alien_planet.jpg . Rework ADJUST in Background.js to crop out imperfections in image . assets/js/alienWorld/Background.js change adjust if you want to reduce height of image | . size() { // Update canvas size const ADJUST = 1 // visual layer adjust; alien_planet.jpg: 1.42, try 1 for others // ... code not shown xxx } .",
            "url": "http://localhost:4100/teacher_portfolio/2023/10/05/Alien_World-Plan_IPYNB_2_.html",
            "relUrl": "/2023/10/05/Alien_World-Plan_IPYNB_2_.html",
            "date": " • Oct 5, 2023"
        }
        
    
  
    
        ,"post150": {
            "title": "JS Data Abstraction",
            "content": "Variables . A Variable is defined as an abstraction inside of a program that can hold a value. . Variables can be named from letters like X, Y, Z to phrases like APIKEY. The point of these names is to store some sort of Data to a resuable value. . var x = 10; var name = &quot;Gerald&quot;; var fav_food = &quot;Cookies&quot;; . . Variable Naming . This brings us to the topic of naming Variables. The names of variables are really important when working in groups. For example when one of your teammates review your code they use the names of your variables to quickly understand your code. In the code above you can understand that the variable fav_food represents a favorite food . There are 3 Important Coding Practices to follow when it comes to naming variables . SnakeCase . SnakeCase is where you replace spaces in variable names with a underscore . var variable_one = &quot;Aashray&quot;; . Here’s an example of a SnakeCase variable that uses a _ as a space. . Now try making your own SnakeCase variable and set the variable equal to a integer. . PascalCase . PascalCase is where you capitialize every word in your variable, but keep it all as one singluar phrase with no spaces . var VariableOne = &quot;Chrissie&quot;; . Here you can clearly see that the vairable has two diffrent words, and we didn’t need to use a space to seperate it. . Try making your own PascalCase variable . CamelCase . CamelCase is where you captalize the second word in the variable . var variableOne = &quot;Arushi&quot;; . Here the One is captalized to indicate a second word in the variable without using a space. . Try making your own CamelCase . # Attempt to add an integer and a string myInteger = 42 myString = &quot;Hello&quot; # Try to add them together result = myInteger + myString . TypeError Traceback (most recent call last) /Users/shubhay/vscode/student/_notebooks/2023-10-03-Data_AbstractionLEsson.ipynb Cell 8 line 6 &lt;a href=&#39;vscode-notebook-cell:/Users/shubhay/vscode/student/_notebooks/2023-10-03-Data_AbstractionLEsson.ipynb#X12sZmlsZQ%3D%3D?line=2&#39;&gt;3&lt;/a&gt; my_string = &quot;Hello&quot; &lt;a href=&#39;vscode-notebook-cell:/Users/shubhay/vscode/student/_notebooks/2023-10-03-Data_AbstractionLEsson.ipynb#X12sZmlsZQ%3D%3D?line=4&#39;&gt;5&lt;/a&gt; # Try to add them together -&gt; &lt;a href=&#39;vscode-notebook-cell:/Users/shubhay/vscode/student/_notebooks/2023-10-03-Data_AbstractionLEsson.ipynb#X12sZmlsZQ%3D%3D?line=5&#39;&gt;6&lt;/a&gt; result = my_integer + my_string TypeError: unsupported operand type(s) for +: &#39;int&#39; and &#39;str&#39; . . Variable Types . Earlier we explained how to assign variables and properly name them. However in the code above even though I followed all these steps and properly named them I ran into a error. This is because the types of data, string and int cannot be added. But what are integers and strings? . In python there are multiple types of data that a variable can be, for now lets look at the most commonly use ones. . Integers . Integers are a numerical value going from 1,2,3,4 or -1,2,-3 etc. These are numbers with no decimals and are ussualy called ints . var x = 3; console.log(x); . In this case we call int x to be 3. Normally you don’t need to say the data type before the variable in python, however in other languages like JS or C++ you would need to. . Strings . Strings are a chain of text, numbers or charcters that are all inside of “ “ . var Cookies = &quot; My Fav cookies are Choclate Chip &quot;; . Here we set a string cookie to be representing the statement that “ My Fav Cookies are Choclate Chip” The “ “ marks are what determine it is a string in most coding languages. . Boolean . Booleans are True or False, and they are used for condtional statements . var ChrissieGetsSleep = false; if (ChrissieGetsSleep === true){ continue; } else{ return 0; } . Here we have a if statement that checks if the boolean variable is currently true and if its true it won’t do anything, but if its false it will return 0. . Float . Floats are a integers that can have decimal values . var x = 3.1415; console.log(x); . In this case we call int x to be 3.1415, and this is a float because of its decimal points. . Arrays . Arrays are ordered collections of items in javascript. They can contain a mix of different data types, including integers, floats, strings, and more. . var my_array = [1, 2, 3, 4, 5]; console.log(my_array); . Objects in javascript . Objects are versatile data structures in javascript that store key-value pairs. Each value in an object is associated with a unique key, which allows for efficient lookups and retrieval of values. . var my_obj = { &quot;name&quot;: &quot;Alice&quot;, &quot;age&quot;: 30, &quot;city&quot;: &quot;Wonderland&quot; } console.log(my_obj); . # Concatation of variables int1 = 1 int2 = 2 print(&quot;Concatation between two non strings in a print statement will EVALUATE them.&quot;) print(&quot;Notice how they get ADDED together.&quot;) print(int1 + int2) print() print(&quot;Concatation between two strings in a print statement will CONNECT them.&quot;) print(&quot;Notice how they get CONNECTED together.&quot;) string1 = &quot;1&quot; string2 = &quot;2&quot; print(string1 + string2) # notice how this CONNECTS the variables # Print statements like these can be used to EVALUATE variables (here we add them) # To connect them together (&quot;1&quot; + &quot;2&quot; = &quot;12&quot;), use strings . Concatation between two non strings in a print statement will EVALUATE them. Notice how they get ADDED together. 3 Concatation between two strings in a print statement will CONNECT them. Notice how they get CONNECTED together. 12 . . Choosing the Right Data Type in Python . In Python, choosing the appropriate data type for your variables is essential to ensure efficient and correct program execution. Here’s when to use some common data types: . Integers (int) . Use Cases: Use integers when you need to represent whole numbers without fractional parts. Integers are suitable for counting, indexing, and performing integer arithmetic. | . Floating-Point Numbers (float) . Use Cases: Use floating-point numbers when you need to represent real numbers with decimal points. They are suitable for calculations that involve fractions or decimal values. | . Strings (str) . Use Cases: Use strings when you need to work with text data, such as names, sentences, or any sequence of characters. Strings are versatile and can store both plain text and formatted text. | . Lists (list) . Use Cases: Use lists when you need an ordered collection of items that can be modified. Lists are ideal for storing multiple values of the same or different data types. | . Tuples (tuple) . Use Cases: Use tuples when you need an ordered collection of items that should remain immutable (unchangeable). Tuples are useful for representing fixed sequences of data. | . Dictionaries (dict) . Use Cases: Use dictionaries when you need to store key-value pairs, where each key maps to a specific value. Dictionaries are efficient for looking up values based on keys. | . Sets (set) . Use Cases: Use sets when you need an unordered collection of unique elements. Sets are useful for tasks like removing duplicates from a list or performing set operations. | . Booleans (bool) . Use Cases: Use booleans to represent binary values, such as True or False. They are essential for making decisions and controlling the flow of your program using conditional statements. | . None (NoneType) . Use Cases: Use None when you want to represent the absence of a value or indicate that a variable has no assigned value. It’s often used as a placeholder or default initial value. | . Choosing the right data type helps make your code more readable, efficient, and easier to maintain. Understanding the characteristics and limitations of each data type is essential for effective Python programming. . . Represent a list or string using a variable. . # We are going to cover representing lists or strings with a variable. # A list is an ordered sequence of elements. An element is an individual value in a list that is assigned a unique index. # For example, if I have a grocery list with milk, eggs, and cookies, each item is an element. groceryList = [&quot;milk&quot;, &quot;eggs&quot;, &quot;cookies&quot;] # one ^ two ^ three ^ # The index is a method for referencing the elements in the list. For example, if I reference item 1, it will be milk. # IMPORTANT: most if not all programming languages index at 0. This means that the 0th element would be milk and the 1st element is eggs. # For the AP Exam, indexing will be at 1. # Next is a string which is an ordered sequence of characters. # This may contain letters, numbers, and special characters. Examples include: string = &quot;Perry&quot; string2 = &quot;12&quot; string3 = &quot;!@#&quot; stringn4 = &quot;Perry12!@#&quot; . Develop data abstraction using lists to store multiple elements. . # Data abstraction allows for the reduction of a particular body of data to a simplified representation of the whole. # For example, saying that I have a “grocery list” is a lot easier than saying “I have a list with milk, eggs, and cookies.” groceryList = [&quot;milk&quot;, &quot;eggs&quot;, &quot;cookies&quot;] # bundle ^ # In this example, we bundle this data into one term and simplify it. # In programming, you can bundle variables together by type and you can name your bundle (name your list). # With a list, you don’t need to know how many variables will be needed or how the elements will be stored together. # The exam reference sheet will provide notation for lists. . How does data abstraction manage complexity in program code? . # Data abstraction can manage complexity in programs by bundling data together. # This can result in a program that is easier to develop and maintain. # It also allows multiple related items to be treated as a single value. # You also need less variables since one variable holds all the other ones and it allows you to easily modify these variables. groceryList = [&quot;milk&quot;, &quot;eggs&quot;, &quot;cookies&quot;] # nice and short # long and bad item1 = &quot;milk&quot; item2 = &quot;eggs&quot; item3 = &quot;cookies&quot; # modify variables: groceryList = [&quot;milk&quot;, &quot;eggs&quot;, &quot;cookies&quot;] # nice and short print(&quot;Initial List&quot;) print(groceryList) # replace the index 1 with chocolate groceryList[1] = &quot;chocolate&quot; # notice how index 1 is the 2nd element (AP exam index at 1) # add a new element groceryList.append(&quot;flour&quot;) print(&quot;Print List with Flour addeded&quot;) print(groceryList) # remove element groceryList.remove(&quot;milk&quot;) print(&quot;Print List with Milk removed&quot;) print(groceryList) . Initial List [&#39;milk&#39;, &#39;eggs&#39;, &#39;cookies&#39;] Print List with Flour addeded [&#39;milk&#39;, &#39;chocolate&#39;, &#39;cookies&#39;, &#39;flour&#39;] Print List with Milk removed [&#39;chocolate&#39;, &#39;cookies&#39;, &#39;flour&#39;] . . JSON implementation . JSON stands for JavaScript Object Notation. It is a lightweight format for storing and transporting data. It has several uses. For example, if someone is managing an inventory of cars, they can use JSON to import data and export it. . JSON is used when data is sent from a web server to a webpage. . So the car person can use JSON to display their current inventory of cars to sell on their webpage. . Converting from PYTHON TO JSON . import json # you will need to import this library # python dictionary x = { &quot;name&quot;: &quot;John&quot;, &quot;age&quot;: 30, &quot;city&quot;: &quot;New York&quot; } # convert into JSON # we first CALL the library and use the dumps() function # to call the library and use dumps(), we do json.dumps() # note: do you know of function machines in math? where you put in the variable, it does some operations, and outputs it? # a code function is the same! it takes some data, does some code on it, and outputs it! # essentially, we say &quot;Hey! JSON library! I would like to use your dumps() function!&quot; # and then we give the function what we want to dump: &quot;Here is the thing I want to dump into JSON!&quot; # then the library says back &quot;Here you go! Here&#39;s your JSON! I stored it in the y variable!&quot; y = json.dumps(x) print(y) # the result is a JSON string . {&quot;name&quot;: &quot;John&quot;, &quot;age&quot;: 30, &quot;city&quot;: &quot;New York&quot;} . Formatting . # the result above isn&#39;t easy to read. let&#39;s fix that by formatting! import json x = { &quot;name&quot;: &quot;John&quot;, &quot;age&quot;: 30, &quot;city&quot;: &quot;New York&quot; } print(&quot;Indent&quot;) y = json.dumps(x, indent=4) # we call the function but say &quot;Please indent it for me!&quot; print(y + &quot; n&quot;) # the &quot; n&quot; is a newline seperator and adds a space between each print statement print(&quot;Indent + seperator&quot;) y = json.dumps(x, indent=4, separators=(&quot;.&quot;, &quot; = &quot;)) # we change the seperator print(y + &quot; n&quot;) print(&quot;Indent + seperator + sorted&quot;) y = json.dumps(x, indent=4, separators=(&quot;.&quot;, &quot; = &quot;), sort_keys=True) # now we are sorting them print(y) . Indent { &quot;name&quot;: &quot;John&quot;, &quot;age&quot;: 30, &quot;city&quot;: &quot;New York&quot; } Indent + seperator { &quot;name&quot; = &quot;John&quot;. &quot;age&quot; = 30. &quot;city&quot; = &quot;New York&quot; } Indent + seperator + sorted { &quot;age&quot; = 30. &quot;city&quot; = &quot;New York&quot;. &quot;name&quot; = &quot;John&quot; } . Converting from PYTHON TO JSON . import json x = &#39;{ &quot;name&quot;:&quot;John&quot;, &quot;age&quot;:30, &quot;city&quot;:&quot;New York&quot;}&#39; # some JSON y = json.loads(x) # parse with loads() function print(y[&quot;age&quot;]) # the result is a Python dictionary . 30 . Challenge Problem . ingredients = [&quot;butter&quot;, &quot;white sugar&quot;, &quot;light brown sugar&quot;, &quot;vanilla extract&quot;, &quot;eggs&quot;, &quot;flour&quot;, &quot;chocolate chips&quot;, &quot;baking soda&quot;, &quot;salt&quot;, &quot;baking powder&quot;] # Print this list # &lt;&lt; CODE &gt;&gt; print(&quot;Ingredients:&quot;, ingredients) # Create a list called bowl # Your list must include: # &quot;flour&quot; # &quot;baking soda&quot; # &quot;salt&quot; # &quot;baking powder&quot; # When creating this list, make sure to remove these items from the &quot;ingredients&quot; list! # Print your list # &lt;&lt; CODE &gt;&gt; bowl = [&quot;flour&quot;, &quot;baking soda&quot;, &quot;salt&quot;, &quot;baking powder&quot;] print(&quot;Bowl:&quot;, bowl) # list comprehension ingredients = [ingredient for ingredient in ingredients if ingredient not in bowl] print(&quot;Ingredients:&quot;, ingredients) # Create a list called cream # Include: # &quot;butter&quot; # &quot;white sugar&quot; # &quot;light brown sugar&quot; # &quot;vanilla extract&quot; # &quot;eggs&quot; # When creating this list, make sure to remove these items from the &quot;ingredients&quot; list! # Print your list # &lt;&lt; CODE &gt;&gt; cream = [&quot;butter&quot;, &quot;white sugar&quot;, &quot;light brown sugar&quot;, &quot;vanilla extract&quot;, &quot;eggs&quot;] print(&quot;Cream:&quot;, cream) # for loop for c in cream: ingredients.remove(c) print(&quot;Ingredients:&quot;, ingredients) # Create a list called &quot;dough&quot; # Combine the bowl list and cream list together # Print your list # &lt;&lt; CODE &gt;&gt; dough = [] for b in bowl: dough.append(b) for c in cream: dough.append(c) print(&quot;Dough:&quot;, dough) # short way dough2 = bowl + cream print(&quot;Dowgh2&quot;, dough2) # Append chocolate chips to the dough list and remove it from the ingredients list # Print the list # &lt;&lt; CODE &gt;&gt; dough += [ingredients.pop()] print(&quot;Complete Dough:&quot;, dough) print(&quot;Empty Ingredients:&quot;, ingredients) # Create a string that says &quot;Now roll the dough into balls and place them on cookie sheets!&quot; # Print it # &lt;&lt; CODE &gt;&gt; # Create an int called temperature and set it to 375 # Print &quot;Place in a &lt;&lt;your integer goes here&gt;&gt; F oven for 8-10 minutes and remove just before they start to turn brown.&quot; # &lt;&lt; CODE &gt;&gt; # Create an int called &quot;cool down&quot; using pascal case and set it to 2 # Print &quot;Let them sit on the baking pan for &lt;&lt;your integer goes here&gt;&gt; minutes before removing to cooling rack.&quot; # &lt;&lt; CODE &gt;&gt; # Create 5 string (use whatever casing you feel) # First string should be &quot;Enjoy&quot; # Second string should be &quot;your&quot; # Third string should be &quot;CHOCOLATE&quot; # Fourth string should be &quot;CHIP&quot; # Fifth string should be &quot;COOKIES!!!&quot; # Using ONE print statement, print ALL of these variables (with a space between each) # &lt;&lt; CODE &gt;&gt; # JSON CHALLENGE # can your do the whole project by using a JSON list? # can you convert it to a python dictionary and do all these steps? # Yes this is a real cookie recipe. You can find it below if you wanna make them! :) # https://joyfoodsunshine.com/the-most-amazing-chocolate-chip-cookies/ . Ingredients: [&#39;butter&#39;, &#39;white sugar&#39;, &#39;light brown sugar&#39;, &#39;vanilla extract&#39;, &#39;eggs&#39;, &#39;flour&#39;, &#39;chocolate chips&#39;, &#39;baking soda&#39;, &#39;salt&#39;, &#39;baking powder&#39;] Ingredients: [&#39;butter&#39;, &#39;white sugar&#39;, &#39;light brown sugar&#39;, &#39;vanilla extract&#39;, &#39;eggs&#39;, &#39;chocolate chips&#39;] Cream: [&#39;butter&#39;, &#39;white sugar&#39;, &#39;light brown sugar&#39;, &#39;vanilla extract&#39;, &#39;eggs&#39;] Ingredients: [&#39;chocolate chips&#39;] Dough: [&#39;flour&#39;, &#39;baking soda&#39;, &#39;salt&#39;, &#39;baking powder&#39;, &#39;butter&#39;, &#39;white sugar&#39;, &#39;light brown sugar&#39;, &#39;vanilla extract&#39;, &#39;eggs&#39;] Dowgh2 [&#39;flour&#39;, &#39;baking soda&#39;, &#39;salt&#39;, &#39;baking powder&#39;, &#39;butter&#39;, &#39;white sugar&#39;, &#39;light brown sugar&#39;, &#39;vanilla extract&#39;, &#39;eggs&#39;] Complete Dough: [&#39;flour&#39;, &#39;baking soda&#39;, &#39;salt&#39;, &#39;baking powder&#39;, &#39;butter&#39;, &#39;white sugar&#39;, &#39;light brown sugar&#39;, &#39;vanilla extract&#39;, &#39;eggs&#39;, &#39;chocolate chips&#39;] Empty Ingredients: [] . ingredients = [&quot;butter&quot;, &quot;white sugar&quot;, &quot;light brown sugar&quot;, &quot;vanilla extract&quot;, &quot;eggs&quot;, &quot;flour&quot;, &quot;chocolate chips&quot;, &quot;baking soda&quot;, &quot;salt&quot;, &quot;baking powder&quot;] bowl = [&quot;flour&quot;, &quot;baking soda&quot;, &quot;salt&quot;, &quot;baking powder&quot;] ingredients -= bowl print(ingredients) . TypeError Traceback (most recent call last) /Users/johnmortensen/vscode/teacher/_notebooks/2023-10-04-CSP-Data_Abstraction_P2.ipynb Cell 22 line 4 &lt;a href=&#39;vscode-notebook-cell:/Users/johnmortensen/vscode/teacher/_notebooks/2023-10-04-CSP-Data_Abstraction_P2.ipynb#X30sZmlsZQ%3D%3D?line=0&#39;&gt;1&lt;/a&gt; ingredients = [&quot;butter&quot;, &quot;white sugar&quot;, &quot;light brown sugar&quot;, &quot;vanilla extract&quot;, &quot;eggs&quot;, &quot;flour&quot;, &quot;chocolate chips&quot;, &quot;baking soda&quot;, &quot;salt&quot;, &quot;baking powder&quot;] &lt;a href=&#39;vscode-notebook-cell:/Users/johnmortensen/vscode/teacher/_notebooks/2023-10-04-CSP-Data_Abstraction_P2.ipynb#X30sZmlsZQ%3D%3D?line=1&#39;&gt;2&lt;/a&gt; bowl = [&quot;flour&quot;, &quot;baking soda&quot;, &quot;salt&quot;, &quot;baking powder&quot;] -&gt; &lt;a href=&#39;vscode-notebook-cell:/Users/johnmortensen/vscode/teacher/_notebooks/2023-10-04-CSP-Data_Abstraction_P2.ipynb#X30sZmlsZQ%3D%3D?line=3&#39;&gt;4&lt;/a&gt; ingredients -= bowl &lt;a href=&#39;vscode-notebook-cell:/Users/johnmortensen/vscode/teacher/_notebooks/2023-10-04-CSP-Data_Abstraction_P2.ipynb#X30sZmlsZQ%3D%3D?line=5&#39;&gt;6&lt;/a&gt; print(ingredients) TypeError: unsupported operand type(s) for -=: &#39;list&#39; and &#39;list&#39; . .",
            "url": "http://localhost:4100/teacher_portfolio/2023/10/04/JS_Data_Abstraction_IPYNB_2_.html",
            "relUrl": "/2023/10/04/JS_Data_Abstraction_IPYNB_2_.html",
            "date": " • Oct 4, 2023"
        }
        
    
  
    
        ,"post151": {
            "title": "P5 Data Abstraction",
            "content": "3.1 Variables And Assignments . Variables are considered abstraction as they assign a value to another value. In other words, they basically describe values to each other. Variables are important as it can be used in many different uses such as they can store useful information, especially if you have a long lines of code. Variables are mostly used to store data such as numbers (we are going to go over integers today), booleans, lists, strings and dictionaries. . Note: A variable needs to have a proper name, cannot have spaces inside of them and needs to be reasonable. . For example: . highScore is a better and shorter way of saying highestScoreInTheGame . | firstName is more specific than n . | instead of is raining (because it has spaced) israining or is_it_raining is a better way of looking at the variable . | phonenumber is better than saying 555-number (it just looks neater to look at) . | . firstName = &quot;Nandan&quot; # this is a string print(firstName) highScore = 33 # this is an integer print(highScore) . Nandan 33 . Popcorn Hack#1 - Make your own variable either with a number or a string and print it out . Data Types: . Integer: A whole number . Boolean: True or False based on operators . String: Anything that contains &quot;{text is stored in here}&quot; . ### BOOLEAN EXAMPLES age = 16 # Here is the number example print(bool(age)) print(age&lt;8) PASS_POINTS = 75 FAIL_POINTS = 50 if PASS_POINTS &lt; FAIL_POINTS: passed = True else: passed = False if passed: print(&quot;Student has passed&quot;) else: print(&quot;Student failed&quot;) ## STRING EXAMPLE age = &quot;16&quot; print(age) . True False Student failed 16 . Popcorn Hack #2 - Use the variable types and print all the different types of them, boolean, string, and integer. . 3.1 Variables And Assignments . Assignments and variables are fundamental ideas in computer programming. They give programmers the ability to manage, store, and alter data. In the realm of programming and computer science, knowing how to declare and assign values to variables is an essential ability. . currentName = &quot;Arnav&quot; print(currentName) currentName = &quot;Nandan&quot; # Because this variable is declared second, even though it was already declared, it will print the most recent declaration print(currentName) bigNumber = 10000 isWednesday = True firstName = &quot;Arnav Nadar&quot; print(str(bigNumber) + &quot; &quot; + str(isWednesday) + &quot; &quot; + str(firstName)) . Arnav Nandan . num1 = 25 num2 = 15 num3 = 30 num2 = num3 num3 = num1 num1 = num2 print(num1) print(num2) print(num3) . 30 30 25 . Popcorn Hack #3 - Use the variable types and the variable changing and create a small program that incorporates the changing of variables . 3.2 Data Abstraction - Lists &amp; Strings . Lists and strings are a simple method of data abstraction in which a number of values (list elements or characters) are stored in a single variable. Each value in a list or string can be referred to with its natural-number index. . A string is simply a sequence of characters; letters, numbers, special characters, etc. . A list is an ordered sequence of variables (elements), each of which contains some data value. The elements need not be all the same data type. . #Each element in a list/string is referred to with a natural-number index. #FOR THE PURPOSES OF THE AP EXAM ONLY, the indexes start at 1. #IN PYTHON (and most other languages), the indexes start at 0. #Example string name = &quot;llanfairpwllgwyngyllgogerychwyrndrobwllllantysiliogogogoch&quot; #Returning the 18th character in the string (&#39;y&#39;) - Remember that Python indices start at 0! print(name[17]) #Example list rn_list = [&quot;Ramskoeldia consimilis&quot;, 187.52, &quot;e&quot;, True, 0, None, &quot;987654&quot;, [1,5,8]] #Returning the 1st, 4th, and 7th elements in the list print(rn_list[0]) print(rn_list[3]) print(rn_list[6]) . y Ramskoeldia consimilis True 987654 . Popcorn Hack #4 - Make your own list based on your intersts and access the items in the list according to your interest . 3.2 Data Abstraction . Data abstraction is the process of hiding certain details and showing only essential information to the user. Abstraction can be achieved with either abstract classes or interfaces (which you will learn more about in the next chapter). You can also use the abstract keyword to create abstract methods that must be overridden in the subclass.You do this by putting information in lists, dictionaries, and objects. You can also create your own data types using classes. This is called data abstraction. Here is an example of data abstraction: . def __init__(self, name, age): self.name = name self.age = age def myfunc(self): print(&quot;Hello my name is &quot; + self.name) . This is a class called Person. It takes in two parameters, name and age. It also has a method called myfunc that prints out a message with the name of the person and their age. Lets see this as a list. Lets make a function that takes in a list of people and prints out their names and ages. . def print_people(people): for person in people: print(person.name + &quot; is &quot; + str(person.age) + &quot; years old&quot;) // this will print out the key and the value . This function takes in a list of people and prints out their names and ages. Lets see this as a dictionary. Lets make a function that takes in a dictionary of people and prints out their names and ages. First lets make the dictionary. . people = { &quot;John&quot;: 32, &quot;Rob&quot;: 23, &quot;Amanda&quot;: 19 } . Then we can make the function. . people = { &quot;John&quot;: 32, &quot;Rob&quot;: 23, &quot;Amanda&quot;: 19 } // this is the dictionary def print_people(people): // this is the function for person in people: // this is the for loop print(person + &quot; is &quot; + str(people[person]) + &quot; years old&quot;) // this will print out the key and the value . Converting string to and from JSON . First we need to import the json module. Then we can use the json.dumps() function to convert a string to JSON. We can also use the json.loads() function to convert JSON to a string. Here is an example of converting a string to JSON: . import json dict = &#39;{&quot;name&quot;: &quot;John&quot;, &quot;age&quot;: 30, &quot;city&quot;: &quot;New York&quot;}&#39; json_obj = json.dumps(dict) print(json_obj) . Hacks . You can use the type() function to find out what type of data type a variable is as shown below: x = 5 print(type(x)) . | You can use the isinstance() function to check if a variable is a certain data type as shown below: x = 5 print(isinstance(x, int)) . | You can use the dir() function to find out what methods an object has as shown below: x = 5 print(dir(x)) . | . Homework . Create a class called Person with the attributes name and age. Then create a function called print_people that takes in a list of people and prints out their names and ages. | Create a function that takes in a dictionary of people and their ages and prints out the name of the oldest person. | . JSON . JSON is used to represent structured data, especially lists in JavaScript. However you can also use this in python as well. . Converting string to and from JSON . First we need to import the json module. Then we can use the json.dumps() function to convert a string to JSON. We can also use the json.loads() function to convert JSON to a string. Here is an example of converting a string to JSON: . import json list = [&quot;Torin&quot;, &quot;Remy&quot;, &quot;Nandan&quot;, &quot;Arnav&quot;] json_obj = json.dumps(list) print(json_obj) . [&quot;Torin&quot;, &quot;Remy&quot;, &quot;Nandan&quot;, &quot;Arnav&quot;] . Popcorn Hack #5 - Try using some of the lists in order to assign it to variables many times. Do JSON with a different list as well. . Hack 1 . Identify the correct variable types for each of the practice problems . String | Boolean | Integer | List | . secretNumber = 15 print(secretNumber) food = &quot;Pizza&quot; print(food) names = [&quot;Nandan&quot;, &quot;Arnav&quot;, &quot;Torin&quot;, &quot;Remy&quot;] print(names) IamCool = True print(IamCool) ##Bonus Problem: names_2 = { &quot;Nandan&quot;: &quot;TeamMate1&quot;, &quot;Arnav&quot;: &quot;TeamMate2&quot;, &quot;Torin&quot;: &quot;TeamMate3&quot;, &quot;Remy&quot;: &quot;TeamMate4&quot;, } print(names_2) . 15 Pizza [&#39;Nandan&#39;, &#39;Arnav&#39;, &#39;Torin&#39;, &#39;Remy&#39;] True {&#39;Nandan&#39;: &#39;TeamMate1&#39;, &#39;Arnav&#39;: &#39;TeamMate2&#39;, &#39;Torin&#39;: &#39;TeamMate3&#39;, &#39;Remy&#39;: &#39;TeamMate4&#39;} . Hack 2 . Create a program of interest using the variable types, lists, and assignment operators that have been discussed in the lesson. This could be anything, use what you learned and are interested in to create a small program showcasing what you’ve learnt so far. .",
            "url": "http://localhost:4100/teacher_portfolio/2023/10/04/CSP-Data_Abstraction-P5_IPYNB_2_.html",
            "relUrl": "/2023/10/04/CSP-Data_Abstraction-P5_IPYNB_2_.html",
            "date": " • Oct 4, 2023"
        }
        
    
  
    
        ,"post152": {
            "title": "P2 Data Abstraction",
            "content": "Variables . A Variable is defined as an abstraction inside of a program that can hold a value. . Variables can be named from letters like X, Y, Z to phrases like APIKEY. The point of these names is to store some sort of Data to a resuable value. . x = 10 name = &quot;Gerald&quot; fav_food = &quot;Cookies&quot; . . Variable Naming . This brings us to the topic of naming Variables. The names of variables are really important when working in groups. For example when one of your teammates review your code they use the names of your variables to quickly understand your code. In the code above you can understand that the variable fav_food represents a favorite food . There are 3 Important Coding Practices to follow when it comes to naming variables . SnakeCase . SnakeCase is where you replace spaces in variable names with a underscore . variable_one = &quot;Aashray&quot; . Here’s an example of a SnakeCase variable that uses a _ as a space. . Now try making your own SnakeCase variable and set the variable equal to a integer. . PascalCase . PascalCase is where you capitialize every word in your variable, but keep it all as one singluar phrase with no spaces . VariableOne = &quot;Chrissie&quot; . Here you can clearly see that the vairable has two diffrent words, and we didn’t need to use a space to seperate it. . Try making your own PascalCase variable . CamelCase . CamelCase is where you captalize the second word in the variable . variableOne = &quot;Arushi&quot; . Here the One is captalized to indicate a second word in the variable without using a space. . Try making your own CamelCase . # Attempt to add an integer and a string myInteger = 42 myString = &quot;Hello&quot; # Try to add them together result = myInteger + myString . TypeError Traceback (most recent call last) /Users/shubhay/vscode/student/_notebooks/2023-10-03-Data_AbstractionLEsson.ipynb Cell 8 line 6 &lt;a href=&#39;vscode-notebook-cell:/Users/shubhay/vscode/student/_notebooks/2023-10-03-Data_AbstractionLEsson.ipynb#X12sZmlsZQ%3D%3D?line=2&#39;&gt;3&lt;/a&gt; my_string = &quot;Hello&quot; &lt;a href=&#39;vscode-notebook-cell:/Users/shubhay/vscode/student/_notebooks/2023-10-03-Data_AbstractionLEsson.ipynb#X12sZmlsZQ%3D%3D?line=4&#39;&gt;5&lt;/a&gt; # Try to add them together -&gt; &lt;a href=&#39;vscode-notebook-cell:/Users/shubhay/vscode/student/_notebooks/2023-10-03-Data_AbstractionLEsson.ipynb#X12sZmlsZQ%3D%3D?line=5&#39;&gt;6&lt;/a&gt; result = my_integer + my_string TypeError: unsupported operand type(s) for +: &#39;int&#39; and &#39;str&#39; . . Variable Types . Earlier we explained how to assign variables and properly name them. However in the code above even though I followed all these steps and properly named them I ran into a error. This is because the types of data, string and int cannot be added. But what are integers and strings? . In python there are multiple types of data that a variable can be, for now lets look at the most commonly use ones. . Integers . Integers are a numerical value going from 1,2,3,4 or -1,2,-3 etc. These are numbers with no decimals and are ussualy called ints . int x = 3 print(x) . In this case we call int x to be 3. Normally you don’t need to say the data type before the variable in python, however in other languages like JS or C++ you would need to. . Strings . Strings are a chain of text, numbers or charcters that are all inside of “ “ . str Cookies = &quot; My Fav cookies are Choclate Chip &quot; . Here we set a string cookie to be representing the statement that “ My Fav Cookies are Choclate Chip” The “ “ marks are what determine it is a string in most coding languages. . Boolean . Booleans are True or False, and they are used for condtional statements . ChrissieGetsSleep = False if ChrissieGetsSleep = True: pass else: return 0 . Here we have a if statement that checks if the boolean variable is currently true and if its true it won’t do anything, but if its false it will return 0. . Float . Floats are a integers that can have decimal values . x = 3.1415 print(x) . In this case we call int x to be 3.1415, and this is a float because of its decimal points. . Lists . Lists are ordered collections of items in Python. They can contain a mix of different data types, including integers, floats, strings, and more. . my_list = [1, 2, 3, 4, 5] print(my_list) . Dictionaries in Python . Dictionaries are versatile data structures in Python that store key-value pairs. Each value in a dictionary is associated with a unique key, which allows for efficient lookups and retrieval of values. . my_dict = { &quot;name&quot;: &quot;Alice&quot;, &quot;age&quot;: 30, &quot;city&quot;: &quot;Wonderland&quot; } print(my_dict) . # Concatation of variables int1 = 1 int2 = 2 print(&quot;Concatation between two non strings in a print statement will EVALUATE them.&quot;) print(&quot;Notice how they get ADDED together.&quot;) print(int1 + int2) print() print(&quot;Concatation between two strings in a print statement will CONNECT them.&quot;) print(&quot;Notice how they get CONNECTED together.&quot;) string1 = &quot;1&quot; string2 = &quot;2&quot; print(string1 + string2) # notice how this CONNECTS the variables # Print statements like these can be used to EVALUATE variables (here we add them) # To connect them together (&quot;1&quot; + &quot;2&quot; = &quot;12&quot;), use strings . Concatation between two non strings in a print statement will EVALUATE them. Notice how they get ADDED together. 3 Concatation between two strings in a print statement will CONNECT them. Notice how they get CONNECTED together. 12 . . Choosing the Right Data Type in Python . In Python, choosing the appropriate data type for your variables is essential to ensure efficient and correct program execution. Here’s when to use some common data types: . Integers (int) . Use Cases: Use integers when you need to represent whole numbers without fractional parts. Integers are suitable for counting, indexing, and performing integer arithmetic. | . Floating-Point Numbers (float) . Use Cases: Use floating-point numbers when you need to represent real numbers with decimal points. They are suitable for calculations that involve fractions or decimal values. | . Strings (str) . Use Cases: Use strings when you need to work with text data, such as names, sentences, or any sequence of characters. Strings are versatile and can store both plain text and formatted text. | . Lists (list) . Use Cases: Use lists when you need an ordered collection of items that can be modified. Lists are ideal for storing multiple values of the same or different data types. | . Tuples (tuple) . Use Cases: Use tuples when you need an ordered collection of items that should remain immutable (unchangeable). Tuples are useful for representing fixed sequences of data. | . Dictionaries (dict) . Use Cases: Use dictionaries when you need to store key-value pairs, where each key maps to a specific value. Dictionaries are efficient for looking up values based on keys. | . Sets (set) . Use Cases: Use sets when you need an unordered collection of unique elements. Sets are useful for tasks like removing duplicates from a list or performing set operations. | . Booleans (bool) . Use Cases: Use booleans to represent binary values, such as True or False. They are essential for making decisions and controlling the flow of your program using conditional statements. | . None (NoneType) . Use Cases: Use None when you want to represent the absence of a value or indicate that a variable has no assigned value. It’s often used as a placeholder or default initial value. | . Choosing the right data type helps make your code more readable, efficient, and easier to maintain. Understanding the characteristics and limitations of each data type is essential for effective Python programming. . . Represent a list or string using a variable. . # We are going to cover representing lists or strings with a variable. # A list is an ordered sequence of elements. An element is an individual value in a list that is assigned a unique index. # For example, if I have a grocery list with milk, eggs, and cookies, each item is an element. groceryList = [&quot;milk&quot;, &quot;eggs&quot;, &quot;cookies&quot;] # one ^ two ^ three ^ # The index is a method for referencing the elements in the list. For example, if I reference item 1, it will be milk. # IMPORTANT: most if not all programming languages index at 0. This means that the 0th element would be milk and the 1st element is eggs. # For the AP Exam, indexing will be at 1. # Next is a string which is an ordered sequence of characters. # This may contain letters, numbers, and special characters. Examples include: string = &quot;Perry&quot; string2 = &quot;12&quot; string3 = &quot;!@#&quot; stringn4 = &quot;Perry12!@#&quot; . Develop data abstraction using lists to store multiple elements. . # Data abstraction allows for the reduction of a particular body of data to a simplified representation of the whole. # For example, saying that I have a “grocery list” is a lot easier than saying “I have a list with milk, eggs, and cookies.” groceryList = [&quot;milk&quot;, &quot;eggs&quot;, &quot;cookies&quot;] # bundle ^ # In this example, we bundle this data into one term and simplify it. # In programming, you can bundle variables together by type and you can name your bundle (name your list). # With a list, you don’t need to know how many variables will be needed or how the elements will be stored together. # The exam reference sheet will provide notation for lists. . How does data abstraction manage complexity in program code? . # Data abstraction can manage complexity in programs by bundling data together. # This can result in a program that is easier to develop and maintain. # It also allows multiple related items to be treated as a single value. # You also need less variables since one variable holds all the other ones and it allows you to easily modify these variables. groceryList = [&quot;milk&quot;, &quot;eggs&quot;, &quot;cookies&quot;] # nice and short # long and bad item1 = &quot;milk&quot; item2 = &quot;eggs&quot; item3 = &quot;cookies&quot; # modify variables: groceryList = [&quot;milk&quot;, &quot;eggs&quot;, &quot;cookies&quot;] # nice and short print(&quot;Initial List&quot;) print(groceryList) # replace the index 1 with chocolate groceryList[1] = &quot;chocolate&quot; # notice how index 1 is the 2nd element (AP exam index at 1) # add a new element groceryList.append(&quot;flour&quot;) print(&quot;Print List with Flour addeded&quot;) print(groceryList) # remove element groceryList.remove(&quot;milk&quot;) print(&quot;Print List with Milk removed&quot;) print(groceryList) . Initial List [&#39;milk&#39;, &#39;eggs&#39;, &#39;cookies&#39;] Print List with Flour addeded [&#39;milk&#39;, &#39;chocolate&#39;, &#39;cookies&#39;, &#39;flour&#39;] Print List with Milk removed [&#39;chocolate&#39;, &#39;cookies&#39;, &#39;flour&#39;] . . JSON implementation . JSON stands for JavaScript Object Notation. It is a lightweight format for storing and transporting data. It has several uses. For example, if someone is managing an inventory of cars, they can use JSON to import data and export it. . JSON is used when data is sent from a web server to a webpage. . So the car person can use JSON to display their current inventory of cars to sell on their webpage. . Converting from PYTHON TO JSON . import json # you will need to import this library # python dictionary x = { &quot;name&quot;: &quot;John&quot;, &quot;age&quot;: 30, &quot;city&quot;: &quot;New York&quot; } # convert into JSON # we first CALL the library and use the dumps() function # to call the library and use dumps(), we do json.dumps() # note: do you know of function machines in math? where you put in the variable, it does some operations, and outputs it? # a code function is the same! it takes some data, does some code on it, and outputs it! # essentially, we say &quot;Hey! JSON library! I would like to use your dumps() function!&quot; # and then we give the function what we want to dump: &quot;Here is the thing I want to dump into JSON!&quot; # then the library says back &quot;Here you go! Here&#39;s your JSON! I stored it in the y variable!&quot; y = json.dumps(x) print(y) # the result is a JSON string . {&quot;name&quot;: &quot;John&quot;, &quot;age&quot;: 30, &quot;city&quot;: &quot;New York&quot;} . Formatting . # the result above isn&#39;t easy to read. let&#39;s fix that by formatting! import json x = { &quot;name&quot;: &quot;John&quot;, &quot;age&quot;: 30, &quot;city&quot;: &quot;New York&quot; } print(&quot;Indent&quot;) y = json.dumps(x, indent=4) # we call the function but say &quot;Please indent it for me!&quot; print(y + &quot; n&quot;) # the &quot; n&quot; is a newline seperator and adds a space between each print statement print(&quot;Indent + seperator&quot;) y = json.dumps(x, indent=4, separators=(&quot;.&quot;, &quot; = &quot;)) # we change the seperator print(y + &quot; n&quot;) print(&quot;Indent + seperator + sorted&quot;) y = json.dumps(x, indent=4, separators=(&quot;.&quot;, &quot; = &quot;), sort_keys=True) # now we are sorting them print(y) . Indent { &quot;name&quot;: &quot;John&quot;, &quot;age&quot;: 30, &quot;city&quot;: &quot;New York&quot; } Indent + seperator { &quot;name&quot; = &quot;John&quot;. &quot;age&quot; = 30. &quot;city&quot; = &quot;New York&quot; } Indent + seperator + sorted { &quot;age&quot; = 30. &quot;city&quot; = &quot;New York&quot;. &quot;name&quot; = &quot;John&quot; } . Converting from PYTHON TO JSON . import json x = &#39;{ &quot;name&quot;:&quot;John&quot;, &quot;age&quot;:30, &quot;city&quot;:&quot;New York&quot;}&#39; # some JSON y = json.loads(x) # parse with loads() function print(y[&quot;age&quot;]) # the result is a Python dictionary . 30 . Challenge Problem . ingredients = [&quot;butter&quot;, &quot;white sugar&quot;, &quot;light brown sugar&quot;, &quot;vanilla extract&quot;, &quot;eggs&quot;, &quot;flour&quot;, &quot;chocolate chips&quot;, &quot;baking soda&quot;, &quot;salt&quot;, &quot;baking powder&quot;] # Print this list # &lt;&lt; CODE &gt;&gt; print(&quot;Ingredients:&quot;, ingredients) # Create a list called bowl # Your list must include: # &quot;flour&quot; # &quot;baking soda&quot; # &quot;salt&quot; # &quot;baking powder&quot; # When creating this list, make sure to remove these items from the &quot;ingredients&quot; list! # Print your list # &lt;&lt; CODE &gt;&gt; bowl = [&quot;flour&quot;, &quot;baking soda&quot;, &quot;salt&quot;, &quot;baking powder&quot;] print(&quot;Bowl:&quot;, bowl) # list comprehension ingredients = [ingredient for ingredient in ingredients if ingredient not in bowl] print(&quot;Ingredients:&quot;, ingredients) # Create a list called cream # Include: # &quot;butter&quot; # &quot;white sugar&quot; # &quot;light brown sugar&quot; # &quot;vanilla extract&quot; # &quot;eggs&quot; # When creating this list, make sure to remove these items from the &quot;ingredients&quot; list! # Print your list # &lt;&lt; CODE &gt;&gt; cream = [&quot;butter&quot;, &quot;white sugar&quot;, &quot;light brown sugar&quot;, &quot;vanilla extract&quot;, &quot;eggs&quot;] print(&quot;Cream:&quot;, cream) # for loop for c in cream: ingredients.remove(c) print(&quot;Ingredients:&quot;, ingredients) # Create a list called &quot;dough&quot; # Combine the bowl list and cream list together # Print your list # &lt;&lt; CODE &gt;&gt; dough = [] for b in bowl: dough.append(b) for c in cream: dough.append(c) print(&quot;Dough:&quot;, dough) # short way dough2 = bowl + cream print(&quot;Dowgh2&quot;, dough2) # Append chocolate chips to the dough list and remove it from the ingredients list # Print the list # &lt;&lt; CODE &gt;&gt; dough += [ingredients.pop()] print(&quot;Complete Dough:&quot;, dough) print(&quot;Empty Ingredients:&quot;, ingredients) # Create a string that says &quot;Now roll the dough into balls and place them on cookie sheets!&quot; # Print it # &lt;&lt; CODE &gt;&gt; # Create an int called temperature and set it to 375 # Print &quot;Place in a &lt;&lt;your integer goes here&gt;&gt; F oven for 8-10 minutes and remove just before they start to turn brown.&quot; # &lt;&lt; CODE &gt;&gt; # Create an int called &quot;cool down&quot; using pascal case and set it to 2 # Print &quot;Let them sit on the baking pan for &lt;&lt;your integer goes here&gt;&gt; minutes before removing to cooling rack.&quot; # &lt;&lt; CODE &gt;&gt; # Create 5 string (use whatever casing you feel) # First string should be &quot;Enjoy&quot; # Second string should be &quot;your&quot; # Third string should be &quot;CHOCOLATE&quot; # Fourth string should be &quot;CHIP&quot; # Fifth string should be &quot;COOKIES!!!&quot; # Using ONE print statement, print ALL of these variables (with a space between each) # &lt;&lt; CODE &gt;&gt; # JSON CHALLENGE # can your do the whole project by using a JSON list? # can you convert it to a python dictionary and do all these steps? # Yes this is a real cookie recipe. You can find it below if you wanna make them! :) # https://joyfoodsunshine.com/the-most-amazing-chocolate-chip-cookies/ . Ingredients: [&#39;butter&#39;, &#39;white sugar&#39;, &#39;light brown sugar&#39;, &#39;vanilla extract&#39;, &#39;eggs&#39;, &#39;flour&#39;, &#39;chocolate chips&#39;, &#39;baking soda&#39;, &#39;salt&#39;, &#39;baking powder&#39;] Ingredients: [&#39;butter&#39;, &#39;white sugar&#39;, &#39;light brown sugar&#39;, &#39;vanilla extract&#39;, &#39;eggs&#39;, &#39;chocolate chips&#39;] Cream: [&#39;butter&#39;, &#39;white sugar&#39;, &#39;light brown sugar&#39;, &#39;vanilla extract&#39;, &#39;eggs&#39;] Ingredients: [&#39;chocolate chips&#39;] Dough: [&#39;flour&#39;, &#39;baking soda&#39;, &#39;salt&#39;, &#39;baking powder&#39;, &#39;butter&#39;, &#39;white sugar&#39;, &#39;light brown sugar&#39;, &#39;vanilla extract&#39;, &#39;eggs&#39;] Dowgh2 [&#39;flour&#39;, &#39;baking soda&#39;, &#39;salt&#39;, &#39;baking powder&#39;, &#39;butter&#39;, &#39;white sugar&#39;, &#39;light brown sugar&#39;, &#39;vanilla extract&#39;, &#39;eggs&#39;] Complete Dough: [&#39;flour&#39;, &#39;baking soda&#39;, &#39;salt&#39;, &#39;baking powder&#39;, &#39;butter&#39;, &#39;white sugar&#39;, &#39;light brown sugar&#39;, &#39;vanilla extract&#39;, &#39;eggs&#39;, &#39;chocolate chips&#39;] Empty Ingredients: [] . ingredients = [&quot;butter&quot;, &quot;white sugar&quot;, &quot;light brown sugar&quot;, &quot;vanilla extract&quot;, &quot;eggs&quot;, &quot;flour&quot;, &quot;chocolate chips&quot;, &quot;baking soda&quot;, &quot;salt&quot;, &quot;baking powder&quot;] bowl = [&quot;flour&quot;, &quot;baking soda&quot;, &quot;salt&quot;, &quot;baking powder&quot;] ingredients -= bowl print(ingredients) . TypeError Traceback (most recent call last) /Users/johnmortensen/vscode/teacher/_notebooks/2023-10-04-CSP-Data_Abstraction_P2.ipynb Cell 22 line 4 &lt;a href=&#39;vscode-notebook-cell:/Users/johnmortensen/vscode/teacher/_notebooks/2023-10-04-CSP-Data_Abstraction_P2.ipynb#X30sZmlsZQ%3D%3D?line=0&#39;&gt;1&lt;/a&gt; ingredients = [&quot;butter&quot;, &quot;white sugar&quot;, &quot;light brown sugar&quot;, &quot;vanilla extract&quot;, &quot;eggs&quot;, &quot;flour&quot;, &quot;chocolate chips&quot;, &quot;baking soda&quot;, &quot;salt&quot;, &quot;baking powder&quot;] &lt;a href=&#39;vscode-notebook-cell:/Users/johnmortensen/vscode/teacher/_notebooks/2023-10-04-CSP-Data_Abstraction_P2.ipynb#X30sZmlsZQ%3D%3D?line=1&#39;&gt;2&lt;/a&gt; bowl = [&quot;flour&quot;, &quot;baking soda&quot;, &quot;salt&quot;, &quot;baking powder&quot;] -&gt; &lt;a href=&#39;vscode-notebook-cell:/Users/johnmortensen/vscode/teacher/_notebooks/2023-10-04-CSP-Data_Abstraction_P2.ipynb#X30sZmlsZQ%3D%3D?line=3&#39;&gt;4&lt;/a&gt; ingredients -= bowl &lt;a href=&#39;vscode-notebook-cell:/Users/johnmortensen/vscode/teacher/_notebooks/2023-10-04-CSP-Data_Abstraction_P2.ipynb#X30sZmlsZQ%3D%3D?line=5&#39;&gt;6&lt;/a&gt; print(ingredients) TypeError: unsupported operand type(s) for -=: &#39;list&#39; and &#39;list&#39; . .",
            "url": "http://localhost:4100/teacher_portfolio/2023/10/04/CSP-Data_Abstraction-P2_IPYNB_2_.html",
            "relUrl": "/2023/10/04/CSP-Data_Abstraction-P2_IPYNB_2_.html",
            "date": " • Oct 4, 2023"
        }
        
    
  
    
        ,"post153": {
            "title": "Daily Meeting Log",
            "content": "PBL Ideation Weeks . Learning outcome for week. Start shared GitHub, learn how to plan. . Wednesday - Get together with Mr Lopez, Safin, and Rohan. Talk about initial ideas for game | Start a planning document: Plan.ipynb | Brain write | Explore assets for the game | . | Thursday. Bring together very initial ideation from team. Consolidate ideas from Brain write | Start Issue tracking | Pick a drawing tool (ie Figma or Canvas) | Assign initial Issues Plan, Description, Story Board | Background Coding experiments on Looping and Parallax. | Main Character. Coding experiments on Animation and Direction movements (wasd). Character needs to move left to right, jump and squish. | NPC character and obtacles. Character needs to move in small area and be squished. Like a Goomba. | . | . | Friday. Review initial planning ideas with Teacher Meeting should follow outline in Live-Review.md | . | .",
            "url": "http://localhost:4100/teacher_portfolio/c1.4/2023/10/04/Alien_World-Daily-Meetings.html",
            "relUrl": "/c1.4/2023/10/04/Alien_World-Daily-Meetings.html",
            "date": " • Oct 4, 2023"
        }
        
    
  
    
        ,"post154": {
            "title": "U1 Data Types - Student P3",
            "content": "SECTION 1.1 . Why does java matter? . one of the main reason that java is such an important language in the coding world is because it is a object-oriented-programming (OOP) language. . It offers a structure that is easy to solve big problems, nut I think that we all know that, so let’s skip to the real deal. . Basics of Java . Block Comments- The compiler will ignore any text between /* and */ . | Line comments- Same as above but // ignores one line . | Class Declaration - identifies the name, the start and the end of the class. the class name must match the file name. (case sensitive) . | main Method- controls all of the action in the program. . | System.out- methods that print output to the console . | System.out.print- prints what ever you out inside the () . | System.out.println- prints out input to the output and adds a newline to the end of it . | . tip: add “&lt;classname&gt;.main(null)” at the end of your code to see the output in your jupyter notebook. . /* this is a code block */ // code: printing out hello world. public class greeting { public static void main (String [] args) { System.out.println(&quot;Hello, World!&quot;); System.out.print(&quot;Hello,&quot;); System.out.print(&quot; World!&quot;); } } greeting.main(null) . What is a string literal? . any sequence of letters, numbers, or symbols that is put between quotes. | Java will put out anything in the quotes, no restrictions. | If you would like to include a quote character in your literal, you must escape it with a backslash (e.g. &quot; &quot;&quot; would print &quot;) | . Examples: . public class stingLiterals { public static void main (String[] args) { System.out.println(&quot;This is a string literal.&quot;); System.out.println(&quot;and so are these&quot;); System.out.println(&quot;1234567890&quot;); System.out.println(&quot;&amp;^&amp;*%^$&amp;%$#^%W#*^$%&amp;(*^)&quot;); System.out.println(&quot;Escaped quotation mark: &quot;Hello! &quot;&quot;) } } stingLiterals.main(null) . Errors . Syntax/compiler error: . messed up syntax | compiler is not happy &gt;:( | . public class syntaxError { public static void main (String[] args) { System.out.println(&quot;This is a syntax error.&quot;) //missing semicolon } } syntaxError.main(null) . | System.out.println(&quot;This is a syntax error.&quot;) &#39;;&#39; expected . Logic Error . compiler is happy (no error during compilation) | messed up in the string literals (you typed something wrong) | code runs fine, but has an unexpected output | . public class logicError { public static void main (String[] args) { System.out.println(&quot;This is a leogic error.&quot;); } } logicError.main(null) . This is a leogic error. . Exception error: . Your program compiles fine | Happens at runtime | For example: number is divided by zero | . public class exceptionError { public static void main(String[] args) { try { int result = 2 / 0; System.out.println(&quot;Result: &quot; + result); } catch (ArithmeticException e) { //this just makes the error more verbose e.printStackTrace(); } } } exceptionError.main(null) . java.lang.ArithmeticException: / by zero at REPL.$JShell$20$exceptionError.main($JShell$20.java:19) at REPL.$JShell$21.do_it$($JShell$21.java:16) at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104) at java.base/java.lang.reflect.Method.invoke(Method.java:578) at io.github.spencerpark.ijava.execution.IJavaExecutionControl.lambda$execute$1(IJavaExecutionControl.java:95) at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317) at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144) at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642) at java.base/java.lang.Thread.run(Thread.java:1623) . . SECTION 1.2 . Variable and Data Types. . Primitive Data . determines the size and type of data can we can worth with in a java program. | focus on three different types that can we can represent data. | . Smallest to biggest: . Boolean, takes up 1 bit. . true or false | . Int, take up 32 bit . whole number values. | add, subtract, multiply, etc. | . Doubles, AKA Floating point numbers. 64 bit . same as integers | . String . “Hello World!” | . Reference Purposes . (the collegeboard person used bows as reference so will i.) . there can be small bow | a medium bow | a red bow | a large red bow | . What is the difference? . primitive data are already in java, you don’t have to make it. Except for string, which is created by the programmer. | non-primitive data can be use methods to perform actions, but primitive data cannot. | . Primitive Activity . MIX&amp;MATCH . Choices: 1. int 2. double 3. boolean 4. String __ False __ &quot;ryan gosling&quot; __ 1738 __ 4.26 . Questions: . what type of data should be used to store . someones bank number and cvc? . | someones mother’s maiden name and their name? . | the first 16 digits of pi . | if you want to transact one million $. . | . Variables . A name given to a memory location that is holding a specified type of value. . how to name a variable (omg this is so hard !) . may consists of letters, digits, or an underscore (case sensitive) . | may not start with a digit | space are a big no no | may not use other characters as &amp;,@, or # | may not used java reserved words | . Tip! . use camel casing when naming a variables. This is a Java convention (it may be different for other programming languages) . example: . thisIsCamelCasing . Declare variables: . The three primitiva data types in Java: . integers (whole #): int | Decimal numbers (floating-point values): double | Boolean values (true/false): boolean | . Format: . dataType varibleName; . Example . int total; . boolean outcome; . double firstFifteenPi; . what if you don’t want to change the variable’s value after given? . Usually used for constants Constants are just numbers that have a fixed and known value, such as pi in match | . | . add final in front of the declaration: . final double PI; . final boolean WORKOUT_DECISION; . for final` variables, use all caps and underscores when naming them. This is also known as “screaming snake case”. . Practice . Find the odd ones out (hint: there are 5). . int value; . double 4eva; . boolean private; . integer sum; . double wow!; . boolean foundIt; . int numberOfStudents; . double chanceOfRain; . boolean #mortNews; . int count; . bool isFriday; . final int DOZEN; . . 1.3 Main Topics . Literal vs String Literal . Arithmetic operators . Additon | Minus | Multiply | Divide | Mod | . Arthemtic expressions . Int | Double | . Assigment Operator . = vs == | . Demo 1 . public class demo { public static void main(String[] args) { // Whats is the outputs between these two pieces of code // // // /* System.out.println(&quot;3&quot; + &quot;3&quot;); System.out.println(3 / 2); System.out.println(2.0 * 1.5); */ } } demo.main(null); . Cheat Sheet . Literal . The source code representation of a fixed value | . String Literal . Something enclosed in double qoutes | . Assigment Operator . = is an assigment operator: assign a variable name to a value | == is repesents just normal =: use it to test the equality of two variables | Assigment Operators movs left to right: = | X = Y = Z = 2; | Why is 7 = x; a non valid peice of code | | . PEMDAS . Java uses PEMDAS still but a tiny bit different | . Order . () | *, /, % | +, - | Primative Data Types . table . Operation vs Result . The bigger data type will always be the resulting output | If you were to add a double and a int what would be the result? | | . Demo 2 . public class Demo2 { public static void main(String[] args) { // Print a math equation that goes through these steps // Adds 19 + 134 // Multiplies that value by 5 // Then takes the mod of that value by 2 // It should print 1 System.out.println( &quot;add something here!&quot;); } } Demo2.main(null); . Odd Even . public class OddEven { // Without changing any variables, // Adjust the code such that it only prints odd numbers public static void main(String[] args) { int num = 2; int i = 0; while (i &lt;= 10) { if (i % num == 0) { System.out.println(i + &quot; is even&quot;); } i++; } } } OddEven.main(null); . 1.4 . Compound Assignment Operators . look at storing items in variables with assignment statemt. . also look at compound assignment operators (+=, -= etc) to modify values stored in variables in one step . += adds value to existing variable value . x += 7 is equivalent to x = x + 7; x -= 5 is equivalent to x = x - 5; . same for all compound assignment operators. . also learn how to trace through code (check comments of codeblock below) . public class CompoundDemo { public static void main(String[] args) { int x = 6; x += 7; // 6 + 7 = 13 x -= 3; // 13 - 3 = 10 System.out.println(x); x *= 10; // 10 * 10 x /= 5; // 100 / 5 = 20 System.out.println(x); x %= 3; // remainder of 100/3 = 2 System.out.println(x); } } CompoundDemo.main(null); // NOTE: going through these compound assignments with comments is called tracing, // when we do what the compiler does, and go through the code step by step. Should be //done on the AP test to avoid human error. . increment and decrement operator . IMPORTANT: THE USE OF INCREMENT AND DECREMENT OPERATORS IN THE PREFIX FORM (++X) AND INSIDE OTHER EXPRESSIONS (ARR[X++]) IS OUTSIDE THE SCOPE OF THE COURSE AND THE AP EXAM . public class incdecDemo { public static void main(String[] args) { int x = 1; int y = 1; x++; // x = x + 1, x = 2; y--; // y = y - 1, y = 1 - 1 = 1; System.out.println(x); System.out.println(y); } } incdecDemo.main(null); // NOTE: going through these compound assignments in order is important to // ensure you get the correct output at the end . learn how to describe code . the following code segment has comments that describe the line of code the comment is on. Look at how the code is described. . public class behaviorDemo { public static void main(String[] args) { int x = 20; // define an int variable x and set its initial value to 23 x *= 2; // take the current value of x, multiply it by 2, assign the result back to x x %= 10; // take the current value of x, find x modulus 10 (remainder x divided by 10), //assign result back to x System.out.println(x); // display the current value of x } } behaviorDemoDemo.main(null); . practice important concepts . public class numbers { public static void main(String[] args) { int x = 777; // challenge: use 2 compound assignment operators to turn the current value of x // into the value in the comment. print it at each step. for example, to change // the value to 1400: // x -= 77; // x *= 2; // 100? // 779? // 2? System.out.println(x); } } CompoundDemo.main(null); . // PRACTICE TRACING THROUGH THE FOLLOWING CODE (someone could come up and do it on a whiteboard if we have time for fun) // comment the value of x after each statement public class Demo { public static void main(String[] args) { int x = 758; // x = 758 x += 423; // x = ... x -= 137; x *= 99; x /= 33; x %= 111; System.out.println(x); } } CompoundDemo.main(null); . // DESCRIBE EACH LINE OF CODE in a comment after each statement int x = 5; x++; x /= 2; System.out.println(x); . what you must know . compound operators perform an operation on a variable and assign the result to the variable . ex: x /= 25; would take x and divide it by 25, then assign the result to x. . if x = 100, then the result of x/= 25; would be x=4. . increment and decrement operators take x and either increment it or decrement it by 1, then assign the value to x. . x++; would take x and add 1 to it, then assign the value to x. . x–; takes x and subtracts 1 from x, then assigns the value to x. . your frq will likely see if you know how to use compound operators in actual code. . mini hacks: . write some java code that uses compound operators and then trace through it similarly to the examples shown in this lesson. Use conditional statements as well, don’t just execute some compound operators on an x value in order and call it a day. You might have to do tracing on the AP test so this is for your own good. | example below . public class CompoundAssignment { public static void main(String[] args) { int sum = 0; for (int i = 0; i &lt; 2; i++) { // i = i + 1 each iteration, 1st iteration i = 0 for (int j = 0; j &lt; 2; j++) { // j = j + 1 each iteration, 1st iteration j = 0 System.out.println(&quot;i: &quot; + i); System.out.println(&quot;j: &quot; + j); sum += i + j; // sum = sum + (i + j) each iteration, 1st iteration sum = 0 + (0 + 0) System.out.println(sum); } } System.out.println(&quot;Sum: &quot; + sum); } } CompoundAssignment.main(null); . 1.5 . . . Casting Variable . CASTING . &quot;Change the data type of variable from one type to another.&quot; . Example . Int variable —-» double | String variable —-» Int | . /* * Purpose: Demonstrate casting using division. */ public class CastingNumbers { public static void main(String[] args) { System.out.println(6 / 4); // if I just do divide 6 by 4, these are both int value, so I&#39;m going to wing up with an int result. System.out.println (6.0 / 4); // Since one of those value is a double value, output will be double System.out.println(6 / 4.0); // (Same Reason) I wind up with the result of 1.5 } } . What will be the answer of System.out.println((double) 6/4); By using the casting operator of double in parentheses, it will still wind up with a double result of 1.5. | . | . Ranges of variable . int: Stored by using a finite amount (4 bytes) of memory. . Integer . Max: 2,147,483,647 Min: -2,147,483,648 . Double . up to 14 - 15 digits for storage . Boolean . only 2 (true and false) . /* * Purpose: Demonstrate Integer Range */ public class TooBigNumber { public static void main(String[] args) { int posInt = 2147483647; int negInt = -2147483648; System.out.println(posInt + &quot; &quot;); System.out.println(negInt); } } TooBigNumber.main(null); . /* * Purpose: Demonstrate Integer.MAX_VALUE and Integer.MIN_VALUE. */ public class IntMinMax { public static void main(String[] args) { int posInt = Integer.MAX_VALUE; int negInt = Integer.MIN_VALUE; System.out.println(posInt + &quot; &quot;); System.out.println(negInt); } } IntMinMax.main(null); . /* * Purpose: Demonstrate Integer Overflow */ public class TooBigNumber { public static void main(String[] args) { int posInt = Integer.MAX_VALUE; int negInt = Integer.MIN_VALUE; // overflows/wraps to opposite sign // basically produces nonsense System.out.println(posInt + 1); System.out.println(negInt - 1); } } TooBigNumber.main(null); . import java.util.Scanner; public class Sum_forABC { public static void main(String args[]) { int a = 70; int b = 63; int c = 82; int total = a + b + c; double avg = total / 3; // note: t means &quot;tab&quot;, which usually prints out the equivalent // of 4 spaces System.out.println(&quot;a tb tc&quot;); System.out.println(a+&quot; t&quot;+b+&quot; t&quot;+c); System.out.println(&quot;total:&quot; + total); System.out.printf(&quot;average: %.2f&quot;, avg); } } Sum_forABC.main(null); . &lt;!DOCTYPE html&gt; . Java Code Runner . /* Long: 64-bit two&#39;s complement integer */ public class sum { public static void main(String args[]) { int x = 100000; int y = 200000; long z = x * y; System.out.println(z); } } Run Code . . Questions . 1. what will be the output of (int) (2.5 * 3.0) . 7.0 7 7.5 7.50 . 2. what will be the output of (double) 25 / 4 . 6.50 6.0 6 6.25 . 3. what will be the output of 6 / (double) 5 . 1.0 1 1.2 1.125 . 4. what will be the output of (int) (-8.63 - 0.5) . -9 -13.63 -9.13 -8 . . Essential Knowledge (2.B) . The casting operators (int) and (double) can be used to created temporary value converted into a different data type. | Casting a double value to an int causes the digits to the right of the decimal point to be truncated. | Some programming code causes int values to be automatically cast(widened) to double values. | Value of type double can be rounded to the nearest integer (int) (x + 0.5) + (int) (x - 0.5) for negative numbers. | Essential Knowledge (5.B) . Integer values in Java are represented by values of type int, which are stored using a finite amount (4 bytes) of memory. Therefore, an int value must be in the range from Integer.MIN_VALUE to Integer.MAX_VALUE inclusive. | If an expression would evaluate to an int value outside of the allowed range, an integer overflow occurs. This could result in an incorrect value within the allowed range. | Questions . (int) (2.5 * 3.0) | (double) 25 / 4 | 6 / (double) 5 | Mini Hacks . Complete all uncompleted code segments | Answer all questions in the code | complete the activities in the lesson blogs | will be scaled to 0.2 depending on the completion of your code | . Main Hack . Use topics from 3 out of 4 of the Units | It has to be a 2 part style question, A and B | Will Be graded out of 4 points | Write a scoring sheet for what you have done out six points | Your real grade for the assigment will be based of two things | How creative, unique, cool your question and code is | Did you acheive 4/4 points for your code | That will be scaled to 0.8 of 1 for all your hacks | . Example FRQ 0.65 . Question: . Winner of the game is represented by gameWin. Player 1 score is represented by int variable x, and Player 2 score is represented by int variable y . public class Game { int x = 0; int y = 0; boolean xGameWin = false; boolean yGameWin = false; } . PART A . write a method gameWinchange that checks who wins . public class Game { int x = 0; int y = 0; boolean XgameWin = false; boolean YgameWin = false; public void gameWinchange(boolean X, boolean Y) { //insert code here if (X == true) { UpdateScore(x,y); X = true; } else { UpdateScore(y,x); Y = true; } } } . Part B . Write a method to update score for Player 1 and Player 2, The player that wins gain a point, the player that loses minus a point If a player hits 10 points, reset values . public class Game { //pretend previous method is above public int UpdateScore(int Wscore, int Lscore) { wScore += 1; lScore -= 1; if (wScore == 10) { wScore = 0; lScore = 0; } if (lScore == 10) { wScore = 0; lScore = 0; } } } . Grading . 1/1 Point for correctly changing the boolean in Part A . 1/1 Point for using Compound Assigment Operators in Part B . 1/1 Point for Values reseting when one hits 10 points . 1/1 Point for Passing Arguments through Part A and B .",
            "url": "http://localhost:4100/teacher_portfolio/2023/10/03/java-types-student-P3_IPYNB_2_.html",
            "relUrl": "/2023/10/03/java-types-student-P3_IPYNB_2_.html",
            "date": " • Oct 3, 2023"
        }
        
    
  
    
        ,"post155": {
            "title": "U1 Data Types - Student P1",
            "content": "Java is used around the world to create applications and is one of the most popular coding languages. The reason Java is so popular is because of it’s security and versatility provided by it’s Object Oriented nature. . 1.1 Basics . public class Main { int x = 5; public static void main(String[] args) { Main myObj = new Main(); System.out.println(myObj.x); } } . 1.2 Variables and Data Types . Variables . A Variable is a name given to a memory location that is holding the specified value. Here are some naming practices: . Use camel case. likeThis. | Don’t start with a number. | Spaces are not allowed. | No reserved characters, like $, @, and &amp; | . Java is a strongly typed language so you always need to declare the type of the variable. Variables can also be declared on their own or in the same line as when they are given a value: . int primitive5; // primitive5 = 1 // python comparison //Or... int primitive6 = 1; . What are the greatest values integers and doubles can store? . Primitive Data . Primitive data determines the size and type of information. Primitive types are the most simple type of variable. They are simply store a short amount of raw data, and are not associated with another class. . Here are the different primitive types: . byte: An 8-bit signed two’s complement integer. | short: A 16-bit signed two’s complement integer. | int: A 32-bit signed two’s complement integer. | long: A 64-bit signed two’s complement integer. | float: A single-precision 32-bit IEEE 754 floating point. | double: A double-precision 64-bit IEEE 754 floating point. | boolean: Stores either true or false. | char: Stores a single character. | . For this class you need to know: . int primitive1 = 0; //Whole number double primitive2 = 1.1; //Decimal values. Floating point numbers. boolean primitive3 = true; //Stores a true of false binary value char primitive4 = &#39;a&#39;; //Single character . Data Type Size (bits) . boolean | 8 | . int | 32 | . double | 64 | . char | 16 | . public class GreatestValue { public static void main(String[] args) { System.out.println(&quot;Max Integer: &quot; + Integer.MAX_VALUE); System.out.println(&quot;Min Integer: &quot; + Integer.MIN_VALUE); System.out.println(&quot;Max Double: &quot; + Double.MAX_VALUE); System.out.println(&quot;Min Double: &quot; + Double.MIN_VALUE); // Integer Show Overflow int i = Integer.MAX_VALUE; i++; System.out.println(&quot;Integer Max + 1, Overflow: &quot; + i); // Integer Show Underflow int j = Integer.MIN_VALUE; j--; System.out.println(&quot;Integer Min - 1, Underflow: &quot; + j); // Integer Max + Min int k = Integer.MAX_VALUE + Integer.MIN_VALUE; System.out.println(&quot;Integer Max + Min: &quot; + k); } } GreatestValue.main(null); . Max Integer: 2147483647 Min Integer: -2147483648 Max Double: 1.7976931348623157E308 Min Double: 4.9E-324 Integer Max + 1, Overflow: -2147483648 Integer Min - 1, Underflow: 2147483647 Integer Max + Min: -1 . Reference Types . Some data types, like String, start with a capital letter. This is because they are not primiative, but are refrence types. They are called this because they refrence an object. . “A reference type is a code object that is not stored directly where it is created, but that acts as a kind of pointer to a value stored elsewhere.” . int integer = 7120; //&quot;int&quot; starts with a lowercase String string = &quot;abc&quot;; //&quot;String&quot; starts with an uppercase, because it is an object and not a primitive type . All Reference Types Reference Objects: String Example . String is the most common reference type. Here is an example of how a String type is really just referencing an object. . public class WorseString { private char[] charArray; public WorseString(String inputString) { this.charArray = inputString.toCharArray(); } public String getChars() { return new String(this.charArray); } @Override public String toString() { return getChars(); } } . WorseString string = new WorseString(&quot;Hello, World!&quot;); System.out.println(string); . Hello, World! . Therefore, these two things are the same: . String string = &quot;abc&quot;; String string = new String(&quot;abc&quot;); . Literal vs String literal . Literal: Source code representation of a fixed value — 3 | String Literal: In double quotes, a String — “3” | . 1.3 Expressions and Assignment Statements . Calculations and evaluating arithmetic statements is important when coding to create algorithms and other code. Make sure you are doing arithmetic statements with int or double values and not String literals . Operators . Operator Example Equation Output Use . + | 5 + 3 | 8 | Add numbers together. | . - | 5 - 3 | 2 | Subtract one number from another. | . * | 5 * 3 | 15 | Multiply numbers together. | . / | 5 / 3.0 | 1.67 | Divide one number by double. | . / | 5 / 3 | 1 | Divide one number by int. | . % | 5 % 3 | 2 | Find the remainder of a division operation. | . Tip: In the AP subset, you only have to worry about operations with int values. However, it’s good to know how to use arithmetic statements with doubles and other types. . If you do an operation with two ints or doubles, it returns the respective type. If you mix types, Java returns the one with more bits, a double in this case. . Modulus . Modulus gets the remainder if you were to divide two numbers. One common use is to find odd/even numbers. . 5 % 2 = 1 | 100 % 10 = 0 | . You try: . 8 % 3 = ? | 4 % 1 = ? | . Modulus joins multiplication and division in the order of operations . Assignment Operator . = is called the assignment operator because it is used to assign a value to a variable. It is the last in the order of operations. . Casting . Casting is converting one type of variable to another ex: double to int . public class Casting { public static void main(String[] args) { double castTest = 3.2; System.out.println((int) castTest); castTest = 3.7; System.out.println((int) castTest); System.out.println((int) (castTest+0.5)); int castTest2 = 3; System.out.println(castTest2/2); System.out.println(castTest2/2.0); } } Casting.main(null); . 3 3 4 1 1.5 . What will this output? castTest2 = 7; System.out.println(castTest2/3); System.out.println((int) (castTest2+0.5)); . Wrapper Classes . For many operations in Java, you need to have a class. Some examples are: . ArrayLists or HashMaps | If you require nullability (meaning the value could be null) | Generics | Methods that require objects as input | . To accomplish this, we use a wrapper class. A wrapper class is essentially a class which ‘wraps’ the primitive type and makes it into an object rather than a primitive. . What is a downside of using wrapper classes? Why not always use them? . Increased memory usage //This code fails ArrayList ArrayList = new ArrayList&lt;int&gt;(); . | ArrayList ArrayList = new ArrayList&lt;int&gt;(); unexpected type required: reference found: int . //This code works ArrayList ArrayList = new ArrayList&lt;Integer&gt;(); . . public class Wrappers { int age; Integer ageWrapper; Double gpa; String gpaString; Double gpaDouble; public static void main(String[] args) { // make an instance of class Wrappers wrapper = new Wrappers(); // work with int and Integer wrapper.ageWrapper = 17; wrapper.age = Integer.parseInt(wrapper.ageWrapper.toString()); System.out.println(&quot;Age &quot; + wrapper.age); System.out.println(&quot;Age Wrapper &quot; + wrapper.ageWrapper); // work with String and Double wrapper.gpaString = &quot;3.9&quot;; System.out.println(&quot;Wrapper GPA &quot; + wrapper.gpaString); // string to double with calculation wrapper.gpaDouble = (Double.parseDouble(wrapper.gpaString) + 3.7) / 2; System.out.println(&quot;Double GPA &quot; + wrapper.gpaDouble); wrapper.gpa = Double.parseDouble(wrapper.gpaDouble.toString()); System.out.println(&quot;GPA &quot; + wrapper.gpa); } } Wrappers.main(null); . Age 17 Age Wrapper 17 Wrapper GPA 3.9 Double GPA 3.8 GPA 3.8 . How do you complete this output so that it outputs an integer String grade = “95”; ? . How do you complete this output so that it outputs a double? String grade = “95.5”; ? . Enums . What are they? . Enums are a type of data, which allows a variable to be a predetermined set of values Uses . Examples: days of the week | . Things you can do with Enums . ordinal | switch | for loops | . public class EnumTest { enum Units { PRIMITVE_DATA_TYPES, CLASSES, BOOLEAN, ITERATION, WRITING_CLASSES, ARRAY, ARRAY_LIST, TWO_DIMENSIONAL_ARRAY, INHERITANCE, RECURSION; } public static void main(String[] args) { System.out.println(&quot;What is the third unit in AP CSA? Answer: &quot; + Units.BOOLEAN); Units classUnit = Units.CLASSES; System.out.println(&quot;What is the unit is Classes in AP CSA? Answer: &quot; + (classUnit.ordinal() + 1)); Units selectedUnit = Units.ARRAY_LIST; switch(selectedUnit) { case PRIMITVE_DATA_TYPES: System.out.println(&quot;The selected unit is: primitive data types&quot;); break; case BOOLEAN: System.out.println(&quot;The selected unit is: boolean&quot;); break; case CLASSES: System.out.println(&quot;The selected unit is: classes&quot;); break; case ITERATION: System.out.println(&quot;The selected unit is: iteration&quot;); break; case WRITING_CLASSES: System.out.println(&quot;The selected unit is: writing classes&quot;); break; case ARRAY: System.out.println(&quot;The selected unit is: array&quot;); break; case ARRAY_LIST: System.out.println(&quot;The selected unit is: array list&quot;); break; case TWO_DIMENSIONAL_ARRAY: System.out.println(&quot;The selected unit is: 2d array&quot;); break; case INHERITANCE: System.out.println(&quot;The selected unit is: inheritance&quot;); break; case RECURSION: System.out.println(&quot;The selected unit is: recursion&quot;); break; } for (Units allUnits: Units.values()) { System.out.println(allUnits); } } } EnumTest.main(null); . Homework . All of your homework is on this form. (Link is https://forms.gle/M6FgxZwX1AnWdZmL9) .",
            "url": "http://localhost:4100/teacher_portfolio/2023/10/03/java-types-student-P1_IPYNB_2_.html",
            "relUrl": "/2023/10/03/java-types-student-P1_IPYNB_2_.html",
            "date": " • Oct 3, 2023"
        }
        
    
  
    
        ,"post156": {
            "title": "P5 Procedures",
            "content": "- CB 3.12,3.13 Developing Procedures . What is a procedure? . A procedure is a named group of code that has paramaters and return values. Procedures are known as methods or functions depending on the language. . A procedure executes the statements within it on the parameters to provide a return value. . What are parameters? . Paramaters are input values of a procedure that are specified by arguments.Arguments specify the values of the parameters when a procedure is called. . By creating theses algorithms the readibility of code increases and the complexity decreases. This is becasue a function’s name can tell the reader what action it will perform, and by calling it, the code becomes more clean and easy to understand. . What is a return value? . A return value is the value that is returned when a function or a method is called. . That return value can be assigned or printed . . Procedures are used to create algorthims that can perform certain actions or return values. When a procedure returns a value, theis information must be stored in a variable for later use. However some procedures like the MOVE_FORWARD() perform an action, and don’t return a value. The image above provides an example of where procedures that don’t output a value would be used. . A 60$ item recieves a 20% discount and taxed at 8%. PROCEDURE applyDiscount(cost, percentDiscounted) { temp ← 100 - percentDiscounted temp← temp/ 100 cost ← cost *temp RETURN(cost) } price ← applyDiscount(60, 20) This is how we get the final price with the discount by calling the procedure and assigning it to the price variable. PROCEDURE applyTax(cost, percentTaxed) { temp ← 100 + percentTaxed temp← temp/ 100 cost ← cost *temp RETURN(cost) } price ← applyTax(price, 8) This applys the 8% tax to the price determined after the discount. . Popcorn Hack 1 . Given the applyTax procedure above: How would you call the procedure to get it to find the price using cost = 50, and percentTaxed = 10, and what value will it return? . #code here . What Are Functions? . Collections of code | Divides large program into smaller chunks | Better readability | Less repetitive code | More efficient code | Good organization | . What Are The Components of a Function? . The function declaration | The parameters (input). This is also referred to as an argument when a value is being passed to the actual function. | The functionality | The return value (output) | Calling the function | . # Defining Functions # # def function_name(parameter1, parameter2, etc..): # code here... # # return return_value; # return the value of parameter1 plus parameter2; def add(parameter1, parameter2): # creates a function that takes in two parameters solution = parameter1 + parameter2; # sets solution to the sum of parameter1 and parameter2 return solution; # return solution print(add(5, 5)); # prints the return value of add(5,5) . Popcorn Hack 2: . 1. Make a function that returns the difference of two numbers . # Code here . What is a Class? . A class is an outline for a set of nested functions and variables. | There are instance variables | Functions | Constructor method (Required) | To String method | Getter method | Setter method | . . How Does a Class Work? . # Defining Classes class person: def __init__(self, name, age, ): # constructor self.name = name; self.age = age; def getName(self): # method to create get name return self.name; def getAge(self): # method to create get age return self.age; def setName(self, name): # method to create set name self.name = name; def setAge(self, age): # method to create set age self.age = age; def yearOlder(self): # method to increment age by 1 self.age += 1; def __str__(self): # method that returns a string when the object is printed return (f&quot;My name is {self.name} and I am {self.age} years old.&quot;) Person1 = person(&quot;John Doe&quot;, 15); print(Person1) print(Person1); . Popcorn Hack 3: . 1. Create a Car class which has the attributes model, vehicle name, and price . 2. Create instances of the following cars . Name: Honda Civic , Model Year: 2018 , Price: $13,000 | Name: Toyota Prius, Model Year: 2023 , Price: $28,000 | Name: Chevrolet Impala, Model Year: 2020 , Price: $22,000 | . Homework: . Assignment 1: How do you use functions? . Create a turtle python function that... . Takes a single parameter as the number of sides | Outputs a shape corresponding to the number of sides | Call the function with the argument being a variable with the user input | Hint: . import turtle pen = turtle.Turtle(); # pen is the instance of Turtle which has methods that do certain actions # Necessary methods: # .forward(50) - moves the pen forward 50 units # .right(angle) - turns the pen angle degrees right # OR # .left(angle) - turns the pen angle degrees left def shape(sides): #code here numsides = input(&#39;How many sides do yoUUUU wnat in YOUUUURRRR shape?!?!!?!: &#39;) shape(int(numsides)) . Assignment 2: . Create a student class that... . Has a constructor that takes three parameters as attributes | email | name | grade | . | Three getter methods to access the name, email, and grade | Three setter methods to modify the name, email, and grade | A to string method that returns the three instance variables in this format - &quot;My name is {name}. My email is {email}. My grade is {grade} | Create an instance of the class that corresponds with you |",
            "url": "http://localhost:4100/teacher_portfolio/2023/10/03/P5_developingProcedures_IPYNB_2_.html",
            "relUrl": "/2023/10/03/P5_developingProcedures_IPYNB_2_.html",
            "date": " • Oct 3, 2023"
        }
        
    
  
    
        ,"post157": {
            "title": "P1 Data Abstraction",
            "content": "3.1.1 - What are variables . Sharon Kodali . Variables: an abstraction inside a program that can hold a value . A variable can be thought of as a container or a box that holds information that your program can use or modify . Variables help you manage and organize your work with data, making your code more organized, readable, and adaptable. . different data types to store variables in . integer used to store numbers that can later be used in mathematical operations ex: age or temperature | Text(string) Used to store texts lists and words that can later be referenced ex: Name, phone number, or address | Boolean used to store simply of true or false ex: is it raining | . Correct way to name variables . incorrect: my highs-coreinthegame or n . too long and can make the code messy | dashes are not allowed when naming variables | spaces are not allowed when naming variables | descriptive enough to easily recall what the variable repersents | . correct: highscore or numstudents or israining . short | descriptive | easy to distingush type of variable | . 3.1.1 Hacks . instructions: Determine what would be the the best variable name and data type for the specific prompt . storing if someones pet is a dog | storing someones birthday | storing the amount of money someone is spending | storing if it is sunny | . Homework: write a greeting using variables in python . Naming Conventions . - Must start with a letter or an underscore - Cannot start with a number - Can only have alphanumeric characters or underscores - Are case sensitive - Cannot be python keywords such as &#39;else&#39; . myName = &quot;Tara&quot; print(myName) . Tara . 1Tara = &quot;16&quot; . Cell In[2], line 1 1Tara = &quot;16&quot; ^ SyntaxError: invalid decimal literal . myAge = 16 myage = 46 print(myAge) print(myage) . else = 22 . Primitive v. Collection Data Types . Primitive Data Types . - int - string - float - boolean . Collection Data Types . - list - dictionary . myInt = 20 myString = &quot;My name is Tara&quot; myFloat = 77.29 myBool = False . agesOfMyFriendsList = [16, 20, 15, 12] print(agesOfMyFriendsList) . agesOfMyFriendsDictionary = { &quot;Tara&quot; : 16, &quot;Tanisha&quot; : 15, &quot;Dylan&quot; : 12, &quot;Tara &quot; : 17} print(agesOfMyFriendsDictionary[&quot;Tara&quot;]) print(agesOfMyFriendsDictionary[&quot;Tara &quot;]) . Concatenation . ‘Joining’ of strings and other types . myFirstName = &quot;Tara&quot; myLastName = &quot;Sehdave&quot; print(myFirstName + &quot; &quot; + myLastName) . myFirstInt = 5 mySecondInt = 10 print(myFirstInt + mySecondInt) . Formatting allows us to display values using pre-decided rules . message = &quot;My first name is {0} and my last name is {1}&quot; print(message.format(&quot;Tara&quot;, &quot;Sehdave&quot;)) print(message.format(&quot;Tanisha&quot;, &quot;Patil&quot;)) . x = .77 message = &quot;Show this as a percentage {0:.0%}&quot; print(message.format(x)) print(message.format(.25)) . message = &quot;The binary value of {0} is {0:b} and the binary value of {1} is {1:b}&quot; print(message.format(7, 6836)) . Conversions . import json myDictionary = {&quot;A&quot;: 1, &quot;B&quot;: 2} print(myDictionary) myStringDictionary = json.dumps(myDictionary) print(myStringDictionary) myDictionaryRecreated = json.loads(myStringDictionary) print(myDictionaryRecreated) . # Python Data Types in CB Pseudo Code ## Primitive Types a &lt;-- expression - myInt &lt;-- 18 - myString &lt;-- &quot;My name is Tara&quot; - myFloat &lt;-- 6.8 - myBool &lt;-- False # Collection Types - myList &lt;-- [1, 2, 3] - No dictionary . Data Type Practice . Question 1: Integer Operation . Declare two integer variables, num1Int and num2Int, and assign them values of your choice. | Calculate the sum of num1Int and num2Int | Print the sum | Question 2: Float Operation . Declare two float variables, float1 and float2, and assign them values of your choice. | Calculate the quotient of ‘float1’ and ‘float2’ | Print the quotient | Question 3: Format Manipulation . Write a message that equals a sentence with two placeholder variables | Write two strings with two placeholder variables to insert into the message | Print that message | Answers . # Integer Operations num1Int = 16 num2Int = 12 print(num1Int + num2Int) . # Float Operation float1 = 1.00 float2 = .75 print(float1 / float2 ) . # Format Manipulation message = &quot;{0} is {1} years old&quot; print(message.format(&quot;Tara&quot;, &quot;16&quot;)) print (message.format(&quot;Sharon&quot;, &quot;8&quot;)) print (message.format(&quot;Dylan&quot;, &quot;80&quot;)) . ☆ Topic 3.2 ☆ . ☆ Using lists as an abstraction to manage a program&#39;s complexity . ☆ learn about the lists section of the exam reference sheet . Things to remember . use lists to store multiple elements | data abstraction provides a seperation between abstract parts of a datatype and the actual details of it | it can be created using lists | the exam reference sheets has list notations | the reference sheet has a list structure with index values 1-#of elements in the list. if list index is less that 1 or greater than the list | variables must be bundled together strings, characters, words, numbers | . | give one name to a set of cells | . num =[1, 2, 3, 4] abc = [&quot;a&quot;, &quot;b&quot;, &quot;c&quot;] colors = [&quot;red&quot;, &quot;green&quot;, &quot;blue&quot;] emptylist = [] #replacing alist = [10, 20, 30, 40, 50] blist = [20, 40, 60, 80, 100] alist = blist print(alist) #what will be the output of this code? . %%javascript # Define an array with elements const colors = [&quot;Red&quot;, &quot;Green&quot;, &quot;Blue&quot;, &quot;Yellow&quot;]; # Access elements using indexes const firstColor = colors[0]; // Index 0: &quot;Red&quot; const secondColor = colors[1]; // Index 1: &quot;Green&quot; # Modify an element at a specific index colors[2] = &quot;Purple&quot;; // Index 2 is changed from &quot;Blue&quot; to &quot;Purple&quot; # Add a new element to the array colors.push(&quot;Orange&quot;); // Adds &quot;Orange&quot; to the end of the array # Print elements and their indexes console.log(&quot;First Color:&quot;, firstColor); console.log(&quot;Second Color:&quot;, secondColor); console.log(&quot;Updated Colors Array:&quot;, colors); # Define a string const greeting = &quot;Hello, World!&quot;; # Print the string console.log(greeting); . 3.2.3 Data Abstraction . -Manages complexity of data collection -Program easier to develop and maintain -Lists -If a list index is less than 1 or greater than the length of the list, an error message will be produced . How lists help with complexity . -Less variables (like one variable that holds multiple numbers instead of one variable for each number) -Changes number of variables -Consistency -Helps readability . Example . variable1 = 2 variable2 = 5 variable3 = 4 . Would be simplified like this! . scores = [2, 5, 4] . Activity - Turn this into a list! . variable1 = 7 variable2 = 9 variable3 = 2 variable4 = 8 .",
            "url": "http://localhost:4100/teacher_portfolio/2023/10/03/P1_data_abstraction_IPYNB_2_.html",
            "relUrl": "/2023/10/03/P1_data_abstraction_IPYNB_2_.html",
            "date": " • Oct 3, 2023"
        }
        
    
  
    
        ,"post158": {
            "title": "Anatomy of Java Spring",
            "content": "Highlights of a Spring Web Application . This article introduces key considerations in setting up a Java Spring Backend project. . Overview of files for Spring / Maven / Thymeleaf . Prepare for this review by completing Tools Setup and README instruction to clone and buid. . README.md: This file contains instructions and information about the project. It is a standard component of all properly set up GitHub projects. . | pom.xml: This file is the Maven Project Object Model (POM) file. It defines the project configuration, dependencies, build settings, and other metadata required for building and managing the Java project. . | src/main/java/: This directory contains your Java source code files, including controllers, services, models, and other backend components of your Spring application. . | src/main/resources/static/: This directory is the location for static web resources such as CSS, JavaScript, images, and other assets that will be served directly by the web server without any processing. . | src/main/resources/templates/: This directory contains Thymeleaf template files. These are dynamic HTML templates that can be rendered on the server-side and populated with data from your Java code. Thymeleaf provides powerful templating features and allows you to create dynamic web pages with Java integration. . | application.properties or application.yml: These files contain configuration properties for the Spring application. They can include settings related to the database connection, server port, logging, security, and other application-specific configurations. . | Main.java: This Java file contains the main entry point of the Spring application. It is annotated with @SpringBootApplication and includes the main method to start the application. . | SecurityConfiguration.java: This Java file is a Java class that typically plays a crucial role in configuring the security aspects of a web application using Spring Security framework. It is responsible for defining security rules, authentication mechanisms, authorization policies, and other security-related configurations. . | ...ApiController.java: These Java files define the web controllers responsible for handling incoming requests and generating appropriate responses. They typically use annotations like @RestController or @Controller to define the request mapping endpoints. . | ...ServiceImpl.java: These Java files contain the business logic of the application. They encapsulate complex operations and provide services to the controllers. Service classes are often annotated with @Service. . | ...JpaRepository.java: These Java files define the data access layer of the application. They interact with the database or other data sources to perform CRUD operations. . | . Please note that this is a general overview, and the specific file and directory structure can vary as any project progresses or the framework change. . Main.java . Entry point for Java Spring Application . @SpringBootApplication public class Main { // Starts a spring application as a stand-alone application from the main method public static void main(String[] args) { SpringApplication.run(Main.class, args); } } . application.properties . Key properties like server.port, secret keys, and database connections are listed in this file. . server.error.whitelabel.enabled=false spring.devtools.add-properties=false logging.level.root=warn spring.jpa.database-platform=com.nighthawk.spring_portfolio.SQLDialect spring.jpa.hibernate.ddl-auto=update spring.jpa.show-sql=false spring.jpa.properties.hibernate.format_sql=false spring.jpa.open-in-view=false spring.datasource.url = jdbc:sqlite:volumes/sqlite.db spring.datasource.driver-class-name = org.sqlite.JDBC spring.datasource.username = admin spring.datasource.password = admin server.port=8085 jwt.secret=nighthawk . pom.xml . All the modules included into the project are listed in this file. Here you can see some of the dependencies added to make the Java project into Spring Web Application. As you add features or frameworks you will add to this file. . &lt;dependencies&gt; &lt;!-- Spring --&gt; &lt;dependency&gt; &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt; &lt;artifactId&gt;spring-boot-starter-validation&lt;/artifactId&gt; &lt;/dependency&gt; &lt;dependency&gt; &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt; &lt;artifactId&gt;spring-boot-starter-thymeleaf&lt;/artifactId&gt; &lt;/dependency&gt; &lt;dependency&gt; &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt; &lt;artifactId&gt;spring-boot-starter-web&lt;/artifactId&gt; &lt;/dependency&gt; &lt;dependency&gt; &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt; &lt;artifactId&gt;spring-boot-starter-security&lt;/artifactId&gt; &lt;/dependency&gt; &lt;dependency&gt; &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt; &lt;artifactId&gt;spring-boot-devtools&lt;/artifactId&gt; &lt;scope&gt;runtime&lt;/scope&gt; &lt;optional&gt;true&lt;/optional&gt; &lt;/dependency&gt; &lt;dependency&gt; &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt; &lt;artifactId&gt;spring-boot-starter-test&lt;/artifactId&gt; &lt;scope&gt;test&lt;/scope&gt; &lt;/dependency&gt; &lt;dependency&gt; &lt;groupId&gt;org.thymeleaf&lt;/groupId&gt; &lt;artifactId&gt;thymeleaf-spring5&lt;/artifactId&gt; &lt;!-- TODO Remove once available in platform BOM --&gt; &lt;version&gt;${org.thymeleaf-version}&lt;/version&gt; &lt;/dependency&gt; &lt;dependency&gt; &lt;groupId&gt;org.thymeleaf.extras&lt;/groupId&gt; &lt;artifactId&gt;thymeleaf-extras-springsecurity4&lt;/artifactId&gt; &lt;!-- TODO Remove version once available in platform BOM --&gt; &lt;version&gt;${org.thymeleaf.extras.springsecurity4-version}&lt;/version&gt; &lt;/dependency&gt; ... &lt;/dependencies&gt; . PersonApiController.java . Build APIs requires a lot of annotations. This controller in Module View Control (MVC) establish mechanism to receive and respond to API requests. . @RestController @RequestMapping(&quot;/api/person&quot;) public class PersonApiController { // @Autowired // private JwtTokenUtil jwtGen; /* #### RESTful API #### Resource: https://spring.io/guides/gs/rest-service/ */ // Autowired enables Control to connect POJO Object through JPA @Autowired private PersonJpaRepository repository; /* GET List of People */ @GetMapping(&quot;/&quot;) public ResponseEntity&lt;List&lt;Person&gt;&gt; getPeople() { return new ResponseEntity&lt;&gt;( repository.findAllByOrderByNameAsc(), HttpStatus.OK); } /* GET individual Person using ID */ @GetMapping(&quot;/{id}&quot;) public ResponseEntity&lt;Person&gt; getPerson(@PathVariable long id) { Optional&lt;Person&gt; optional = repository.findById(id); if (optional.isPresent()) { // Good ID Person person = optional.get(); // value from findByID return new ResponseEntity&lt;&gt;(person, HttpStatus.OK); // OK HTTP response: status code, headers, and body } // Bad ID return new ResponseEntity&lt;&gt;(HttpStatus.BAD_REQUEST); } /* DELETE individual Person using ID */ @DeleteMapping(&quot;/delete/{id}&quot;) public ResponseEntity&lt;Person&gt; deletePerson(@PathVariable long id) { Optional&lt;Person&gt; optional = repository.findById(id); if (optional.isPresent()) { // Good ID Person person = optional.get(); // value from findByID repository.deleteById(id); // value from findByID return new ResponseEntity&lt;&gt;(person, HttpStatus.OK); // OK HTTP response: status code, headers, and body } // Bad ID return new ResponseEntity&lt;&gt;(HttpStatus.BAD_REQUEST); } /* POST Aa record by Requesting Parameters from URI */ @PostMapping( &quot;/post&quot;) public ResponseEntity&lt;Object&gt; postPerson(@RequestParam String email, @RequestParam String password, @RequestParam String name, @RequestParam(&quot;dob&quot;) String dobString) { Date dob; try { dob = new SimpleDateFormat(&quot;MM-dd-yyyy&quot;).parse(dobString); } catch (Exception e) { return new ResponseEntity&lt;&gt;(dobString +&quot; error; try MM-dd-yyyy&quot;, HttpStatus.BAD_REQUEST); } // A person object WITHOUT ID will create a new record with default roles as student Person person = new Person(email, password, name, dob); repository.save(person); return new ResponseEntity&lt;&gt;(email +&quot; is created successfully&quot;, HttpStatus.CREATED); } // ... // } . Deployment Files . In addition to Java / Spring. It is always a requirement to consider deployment. Be sure your docker files are created modifying the templates below to fit you needs. . # Dockerfile FROM openjdk:18-alpine3.13 WORKDIR /app RUN apk update &amp;&amp; apk upgrade &amp;&amp; apk add --no-cache git COPY . /app RUN ./mvnw package CMD [&quot;java&quot;, &quot;-jar&quot;, &quot;target/spring-0.0.1-SNAPSHOT.jar&quot;] EXPOSE 8085 . # docker-compose.yml version: &#39;3&#39; services: web: image: java_springv1 # Change the image name to something unique to your project, aka my_unique_name_v1 build: . ports: - &quot;8:8085&quot; # Edit the number on the left to match the port you selected volumes: - ./volumes:/volumes restart: unless-stopped . Hacks . Start your own Spring Project: https://github.com/nighthawkcoders/spring_portfolio .",
            "url": "http://localhost:4100/teacher_portfolio/c4.0/2023/10/02/java-spring-anatomy_IPYNB_2_.html",
            "relUrl": "/c4.0/2023/10/02/java-spring-anatomy_IPYNB_2_.html",
            "date": " • Oct 2, 2023"
        }
        
    
  
    
        ,"post159": {
            "title": "P4 Data Abstraction",
            "content": "3.1 Variables and Assignments . Variables . What is a variable? . An abstraction inside a program that can hold value/store information | Note: a variable should be concise but not too short (i.e. one letter), and it shouldn’t have spaces or any special characters Ex: “highScore” is more concise than “highestscoreinthegame” | Ex: “name” is more specific than “n” | Ex: “isitraining” doesn’t have spaces in between the words | Ex: “phonenumber” doesn’t have a hyphen like “555-number” | . | . Examples . numStudents = 26 print(numStudents) car = &quot;Tesla&quot; print(car) . 26 Tesla . Popcorn Hack 1 . Define your own variable and print it in a separate code cell using Python. Make it relate to one of your hobbies or interests. Data Types . A data type is a type of variable, and these are 3 of the 4 main types: . integer: a mathematical number | boolean: a yes/no or true/false statement | text (or string): for any text-based variable (including phone numbers) | . Examples . Note that for Python you need to classify anything other than a string as a string (or “str”) in order to print | the following examples represent the storing of data within a variable | . highScore = 9 isRaining = False firstName = &quot;Nikki&quot; print(str(highScore) + &quot; is an integer&quot;) print(str(isRaining) + &quot; is a boolean&quot;) print(firstName + &quot; is a string&quot;) . 9 is an integer False is a boolean Nikki is a string . Popcorn Hack 2 . Define a string, boolean, and integer. Print all 3 together like so. Changing Values . A variable itself isn’t static, so you can change it to give different or more updated information. An example of this is having a variable that calculates changing age. . Examples . The following examples shows how you can replace one variable with another. See if you can figure out what data will be printed out before it runs! . currentScore = 10 highScore = currentScore currentScore = 7 print(str(highScore)) . 10 . num1 = 25 num2 = 15 num3 = 30 num2 = num3 num3 = num1 num1 = num2 print(str(num1)) print(str(num2)) print(str(num3)) . 30 30 25 . Popcorn Hack 3 . Write a program to equate the value of a first variable to a second variable. Print the second variable, and you should see the same content as the first variable. 3.2 Data Abstraction . New Types of Variables . Strings an ordered sequence of characters | may contain letters, numbers, and all other special characters | Ex: words, phrases, sentences, ID numbers | . | Lists an ordered sequence of elements | each element is a variable | Ex: playlist of songs, names of students in a class, contacts in your phone | . | . List Index . Each element of a string is referenced by an index | For the AP test an index will start at 1 (example image below), but in actuality it starts at 0 (the following examples) | . . Examples . groupNames = [&quot;Nikki&quot;, &quot;Ankit&quot;, &quot;Varun&quot;, &quot;Monika&quot;] print(groupNames[0]) print(groupNames[1]) print(groupNames[2]) print(groupNames[3]) . Nikki Ankit Varun Monika . Popcorn Hack 4 . Create a list with your current schedule of classes. Print only the 2nd class in your schedule. Data Abstraction - Lists . lists allow for data abstraction bundle variables together strings, numbers, characters, etc. | . | give one name to a set of memory cells do not need to know how many variables will be needed | . | do not need to know how the elements are stored together | . | . Examples . The following example showcases the concept of changing values but with lists instead. . scores1 = [89, 72, 34, 56, 83] scores2 = [23, 25, 96, 55] scores1 = scores2 print(str(scores1)) . [23, 25, 96, 55] . How Lists Manage Complexity of a Program . May not need as many variables (improves readability) Ex: variable for each student is more tedious than one variable that holds all students | . | Change the number of variables Ex: if a student transfers in/out of school, you won’t need to add/delete an entire variable (you’re just deleting one element from a list) | . | Consistent computations Ex: a list of test scores can be curved with the same calculation for all scores (you can do it to everything all at once) | . | . Examples . The following example showcases the convenience a list offers. The first series of scores would require more time to print out versus the second version (in list form). We would be able to curve the scores of a class all at once more easily using the second version. . score1 = 23 score2 = 35 score3 = 25 score4 = 44 score5 = 56 score6 = 78 score7 = 62 score8 = 92 score9 = 94 score10 = 47 scores = [23, 35, 25, 44, 56, 78, 62, 92, 94, 47] print(str(scores)) . [23, 35, 25, 44, 56, 78, 62, 92, 94, 47] . Converting Data Types to and from JSON . This is useful for converting Python lists containing integers to a string. It can be used when connecting backend code (Python) to frontend code (JavaScript) . The following shows us assigning a variable “a” to a list of integers that has been converted to a string using json.dumps . import json lst = [1,2,3,4] print(type(lst)) a = json.dumps(lst) print(a) print(type(a)) . &lt;class &#39;list&#39;&gt; [1, 2, 3, 4] &lt;class &#39;str&#39;&gt; . Popcorn Hack 5 . Convert a list of integers in Python to a string using JSON. Assign a new variable to the newly converted string and print it. Also print the type of the new variable to ensure it is a string. Hack 1 . Sort the variables in the code cell below into these categories and write the adjoining numbers for each type: Integer: | List: | Boolean: | String: | . # Variable 1 numStudents = 26 print(numStudents) # Variable 2 car = &quot;Tesla&quot; print(car) # Variable 3 groupMates = [&quot;Nikki&quot;, &quot;Monika&quot;, &quot;Ankit&quot;, &quot;Varun&quot;] print(groupMates) # Variable 4 dogsbeatcats = True print(dogsbeatcats) . 26 Tesla [&#39;Nikki&#39;, &#39;Monika&#39;, &#39;Ankit&#39;, &#39;Varun&#39;] True . Hack 2 . Now in a separate code cell, define one variable for each type above! Make them unique to your interests and be creative. For your list, convert it to a string using JSON and print it out.",
            "url": "http://localhost:4100/teacher_portfolio/2023/10/02/P4_Data_Abstractions_IPYNB_2_.html",
            "relUrl": "/2023/10/02/P4_Data_Abstractions_IPYNB_2_.html",
            "date": " • Oct 2, 2023"
        }
        
    
  
    
        ,"post160": {
            "title": "P1 Algorithims",
            "content": "Algorithims . Definition: A finite set of instructions to accomplish a task . Algorithim Basics . Sequence: Follows a sequence of steps . Selection: choose different outcomes at steps based on a condition that is made . Iteration: Repetition of code segment if condition is met . . Psuedo Code . Definition: A planning language/text that conveys the general implementation of an algorithim to all programers . Sample College Board Psuedo Code(Strings): . . Robot MCQ(Algorithims) . . Develop an general algorithm that allows the robot in EVERY box to go around the black rectangular box once, back to its original starting point. . . . . String Operations . Length function gives the length of a string . Python Example/Pseudo Code example: len(“codecodecode”) returns 12 . String Concatenation is similar to adding strings together . Pseudo Code: Concat(“String1 ”,”String2”) returns “String1 String2” Python Code: “String1 “+”String2” concatenates the strings together . String substringing can collect a range of character from a string . Pseudo Code: substring(“MortensonBest”,1,4) returns Mort PythonCode: string=”MortensonBest” string[0:4] returns “Mort” . String Algorithims . Palindrome . Takes user input and converts to a palindrome by duplicating the string backwards. Users can choose to duplicate last character or not. . Constraints: defaults to no duplication unless user types exactly “yes” . A palindrome string or number is the same read forwards or backwards. Simple as that. . Ex. . “bob” . “hannah” . 1337331 . 9 . Example of Palindrome Algorithim Used: . Takes user input and converts to a palindrome by duplicating the string backwards. Users can choose to duplicate last character or not. . Constraints: defaults to no creation of palindrome unless user types exactly “yes” . mystr = str(input(&quot;Enter your string: &quot;)) mybool = input(&quot;Would you like to make a palindrome that also duplicates the middle character?&quot;).lower() if mybool == &quot;yes&quot;: secondstr = mystr[::-1] else: secondstr = mystr[:-1] secondstr = secondstr[::-1] endresult = mystr+secondstr print(endresult) . Enter your string: codecodecode Would you like to make a palindrome that also duplicates the middle character?no codecodecodedocedocedoc . Popcorn Hack: Write steps for an algorithim that can find the index of any character in a string . Example: Input: “C” String &lt;- “ABCDEFG” . Output: 2 . Answer . Collect Input Character | Define the string | Loop through each character | While looping compare input character and the character in the string and if same print the index | Homework Hack For String Algorithims . Write Python Code or Psuedo Code that is able to take a string as input and detect if its a palindrome . Math Algorithims . . Fibonacci Sequence . . Prints the first n fibonacci numbers in a list Constraints: n &gt; 1 . f0 = 0 f1 = 1 fiblist = [f0,f1] r = int(input(&quot;How many items do you want in your fibonacci sequence? Enter a number 2 or greater&quot;)) for i in range(r-2): x = fiblist[-1] y = fiblist[-2] fiblist.append(x+y) # Add the sum of the previous 2 numbers to the list print(fiblist) . How many items do you want in your fibonacci sequence? Enter a number 2 or greater5 [0, 1, 1, 2, 3] . Popcorn Hack: Can anybody tell how we can fix this code so it correctly makes a fibonacci sequence? . . Sorting Algorithims . . Sorts an array of integers in increasing order. Relatively inefficient, however. . array = [3,5,6,1,4,2] n = len(array) for i in range(n): for j in range(0,n-i-1): if array[j] &gt; array[j+1]: array[j], array[j+1] = array[j+1], array[j] print(array) . [1, 2, 3, 4, 5, 6] . Selection Sort . . Homework Hack 2 . Create a program that uses at least 1 of the algorithmic concepts covered in this notebook in a real-world application . .",
            "url": "http://localhost:4100/teacher_portfolio/2023/10/02/P1-algorithms_IPYNB_2_.html",
            "relUrl": "/2023/10/02/P1-algorithms_IPYNB_2_.html",
            "date": " • Oct 2, 2023"
        }
        
    
  
    
        ,"post161": {
            "title": "Alien World Background",
            "content": "",
            "url": "http://localhost:4100/teacher_portfolio/2023/10/01/javascript-background-alien.html",
            "relUrl": "/2023/10/01/javascript-background-alien.html",
            "date": " • Oct 1, 2023"
        }
        
    
  
    
        ,"post162": {
            "title": "P5 Developing Algorithms",
            "content": "Lets start off with the basics. What is an algorithm? . An algorithm is a procedure or formula used for solving a problem. It has a sequence of events, inputs, and outputs. | . What are algorithms used for? . Algorithms are used in many different aspect of life. For example a form of routine is an algorithm as it is a series of specified events. | . Why are algorithms important? . It solves a problem in a way that it can be applied to any similar problem. It allows the computer to solve the problem on its own w/o any form of human interference. | . # Psuedo Code 1 DISPLAY (&quot;What is the temperature outside in F?&quot;) temp &lt;- INPUT() IF (temp &gt;= 90) { DISPLAY(&quot;its too hot outide&quot;) } ELSE { IF (temp &gt;= 65){ DISPLAY (&quot;sure I will play outside&quot;) } ELSE { DISPLAY (&quot;its too cold outside&quot;) } } # Psuedo Code 2 DISPLAY (&quot;What is the temperature outside in F?&quot;) temp &lt;- INPUT() IF (temp &gt;= 90) { DISPLAY(&quot;its too hot outide&quot;) } IF (temp &gt;= 65) { DISPLAY (&quot;sure I will play outside&quot;) } IF (temp &lt; 65) { DISPLAY (&quot;its too cold outside&quot;) } . What is the difference between the two pieces of code in the cell above? . # Code 1 print(&quot;What is the temperature outside in F?&quot;) temp = int(input()) if temp &gt;= 90: print(&quot;its too hot outide&quot;) else: if temp &gt;= 65: print(&quot;sure I will play outside&quot;) else: print(&quot;its too cold outside&quot;) . # Code 2 print(&quot;What is the temperature outside in F?&quot;) temp = int(input()) if temp &gt;= 90: print(&quot;its too hot outide&quot;) if temp &gt;= 65: print(&quot;sure I will play outside&quot;) if temp &lt; 65: print(&quot;its too cold outside&quot;) . What is the temperature outside in F? its too hot outide sure I will play outside . What happens if we plug 56 for the temp? What happens if we plug 95 in? . If we plug 56 in, then it will display the text “its too cold outside.” It first checks the first input, if temp is greater than or equal to 90. Which it isn’t so it moves on to the next if. If temp is greater than or equal to 65, which it isn’t so it checks the last if/else statement and displays the text its too cold outside. . If we plug 95 in we get two different results. Code one displays “its too hot outide” but code two displays “its too hot outide” and “sure I will play outside.” Why is this? . Popcorn Hack #1 . Adjust Pseudo Code #2 so that it has the same output as Code #1 for all inputs. . # Insert your code here: . Conditionals vs Booleans . Quick reminder: . Conditionals: checks if a condition is true or false using statements like if, elif, and else if. | Booleans: Data type that conditionals use, only two: true and false | . We have given an algorithm that uses conditionals and two boolean statements that should have the same output as the conditional. Which boolean statement works and which one doesn’t? . Conditional: . # Psuedo Code IF (isHoliday) { driveWork&lt;- False } ELSE { IF (iswWeekday) { driveWork &lt;_ True } ELSE { driveWork &lt;- False } } . Boolean . # Option 1: driveWork &lt;- ( (isHoliday) AND (isWeekday)) # Option 2: driveWork &lt;- ( (NOT (isHoliday)) AND (isWeekday)) . Answer . | . Option 2 is the correct answer . Popcorn Hack #2 . Using the commands listed below, move the robot (gray triangle) through the white squares to the gray square wihtout touching the black squares in the least amount of lines as possible. . Commands allowed: MOVE_FORWARD() . moves the robot one sqaure in the direction it is facing ROTATE_LEFT() | rotates the robot 90 degrees counterclockwise relative to itself ROTATE_RIGHT() | rotates the robot 90 degrees clockwise relative to itself CAN_MOVE() | checks if the robot can move forward in true or false (true: it can move forward. false: it can’t move forward) | . | . # Insert your code here: . Optional Popcorn Hack . Change your code to an algorithm that works for any given course. . Hint: use if, elif, else, and CAN_MOVE() . # Insert your code here: . Combining Selection and/or Iteration . Create an algorithm that uses selection and/or iteration to determine the cost of one item. THe display at the stores says the follorwing: . Green tagged items: 25% off | Red tagged items: 60% off | Tax on all items is 10% | . # Psuedo Code DISPLAY (&quot;What is the cost of the item?&quot;) cost &lt;- INPUT() DIPLAY (&quot;Is the tag green or red (type &quot;True&quot; if it is green, type &quot;False&quot; for red)&quot;) tag &lt;- BOOL(INPUT()) IF (tag == True) # Check if it is green tag (refer to lines above) { cost &lt;- 0.75 * cost } IF (tag == False) # Check if it is green tag (refer to lines above) { cost &lt;- 0.40 * cost } cost &lt;- 1.10 * cost . print(&quot;What is the cost of the item?&quot;) cost = int(input()) print(&quot;Is the tag green or red (type &quot;True&quot; if it is green, type &quot;False&quot; for red)&quot;) tag = bool(input()) if tag == True: # Check if it is green tag (refer to lines above) cost = 0.75 * cost if tag == False: # Check if it is green tag (refer to lines above) cost = 0.40 * cost cost = 1.10 * cost # accounting for tax . Famous Collatz Conjecture . Start with any positive integer | IF that number is even, divide by 2 | If that number is odd, multiply by 3 and add 1 | Repeat steps 2 and 3 until you reach the number 1 | 6 -&gt; 3 -&gt; 10 -&gt; 5 -&gt; 16 -&gt; 8 -&gt; 4 -&gt; 2 -&gt; 1 . Collatz proposed that this sequence of numbers would always terminate at 1. The problem of whether this is true or not for all positive integers is still unsolved today. . Lets create an algorithm that will start with any positive integer “n” and display the full sequence of numbers that result from this conjecture. . # Psuedo Code DISPLAY (&quot;choose a value for n&quot;) n &lt;- INPUT() DISPLAY (n) REPEAT UNTIL (n = 1) { IF (n MOD 2 = 0) { n &lt;- n/2 } ELSE { n &lt;- 3 * n + 1 } DISPLAY (n) } . # Code print(&quot;choose a value for n&quot;) n = int(input()) print(n) while n != 1: if n % 2 == 0: n = n/2 else: n = (n*3)+1 print(n) . choose a value for n 6 3.0 10.0 5.0 16.0 8.0 4.0 2.0 1.0 . Popcorn hack #3 . We are given an algorhtim (below) for a robot to move from the current square to the grey square, completing the course (below). However it doesn’t work. Why does the given algorithm not work? . Using the commands listed below, fix the algorithm . Commands allowed: MOVE_FORWARD() . moves the robot one sqaure in the direction it is facing ROTATE_LEFT() | rotates the robot 90 degrees counterclockwise relative to itself ROTATE_RIGHT() | rotates the robot 90 degrees clockwise relative to itself CAN_MOVE() | checks if the robot can move forward in true or false (true: it can move forward. false: it can’t move forward) | . Course: . | . Given Algorithm . REPEAT UNTIL (goalReached) { IF (CAN_MOVE(FORWARD)) { MOVE_FORWARD } ELSE { IF CAN_MOVE(RIGHT) { ROTATE_RIGHT MOVE_FORWARD } } } . Put your answer to the question “Why does the given algorithm not work?” here: . # Insert your updated algorithm here: . Homework . Create an algorithm that uses selection and/or iteration that will represent one player’s turn in a game. . | During a turn, each player gets 4 attempts/chances to get the greates number possible. . | During each attempt the player will use a random number generator to select a random number 1-10. . | After the player has had 4 chances, their score is the greatest number they receieved from the random number generator, and their turn is over. . | . Use the following flowchart to assist you: . | .",
            "url": "http://localhost:4100/teacher_portfolio/2023/09/30/P5_developingAlgorithms_IPYNB_2_.html",
            "relUrl": "/2023/09/30/P5_developingAlgorithms_IPYNB_2_.html",
            "date": " • Sep 30, 2023"
        }
        
    
  
    
        ,"post163": {
            "title": "Student Teaching Tri1",
            "content": "Teaching Requirements . Each team will give a 10 minute lesson, 10 minute popcorn hacks and assign 30 minutes of homework to introduce their topic. Make sure lesson has the following… . Read Specifc ideas in write-up for units | Lesson describes Purpose and Objectives from College Board | Highlight Key Vocabulary | Highlight Key Coding requirements, share by interactive coding challenges (popcorn hacks) during lesson | Assign homework to re-informce lesson, 48 hours to complete. | Have a grading plan on homework and publish results 48 hours after due. | . Sign Ups . Sheet for sign up .",
            "url": "http://localhost:4100/teacher_portfolio/2023/09/28/python-student-teach-tri1.html",
            "relUrl": "/2023/09/28/python-student-teach-tri1.html",
            "date": " • Sep 28, 2023"
        }
        
    
  
    
        ,"post164": {
            "title": "Passion Project Tri1",
            "content": "Product Owner Background . Your Teacher wants thier students to learn Collaboration, and Full Stack Development. I am looking for Projects that help students gain a passion for College Board Big Idea 2 - Data. . Evidence of understanding of Big Idea 2: Binary, Data Compression, and Extracting Information from Data are key topics. Both College Board and Tech Talks will support Ideation on these topics. | In teams, with success on Team Test, there was typically a great division of work. Dividing and Conquering was very evident, these skills will continue to be very important as you move to first objective of Ideation. | In video production, teams were very effective in budgeting time. Thus, your Teacher was able to complete 40 minutes of reviews in an hour. As you go forward in Ideation reviews, you should consider techniques that allow you divide and conquer and stay in budget of time. | . Product Owner Ideas . The recent Student Panel talked about making projects out of something you see, do, need, or like. Right now, you must see “College Board Big Ideas” and “Collaboration” per this “Product Owner requirements document”. . Turn something you are required to do into a passion project. The Teacher got really excited about binary counting visualiztion/games, manipulating images (grey scale/sizing), and machine learning when reading and studying these College Board topics. However, since I would like to build my skills and capabilities before working on something that complex, I started my journey by building a simple list of Jokes to learn how to do APIs. | . This project has many layers of investigation. Ideation code start on APIs. Looking at these screens can be very helpful in meeting multiple requirements for this project (Prentation design - UI, Data Design - UML). . API Design | Jokes API. | Covid API | . Frontend/Binary. A key object of this class is learning and using binary. Doing something like this can help the Frontend developers to learn Frontend Development without the need to wait for Backend developers to provide depenencies. There is a frontend description here. This page contains a link to a Frontend binary project. Adding features to this could include 2^N labels under each bit (lightbulb) to assist in understanding. Making a calculator to add two binary numbers together. Showing how binary numbers are used to represent color. Combining ideas from the Game of Life, binary, and colors to make a tool to sketch and teach binary. . Backend/Data Compression. Using Python libaries and only Python/Flask it is possible to become very adept in backend code, but also do visualization. Here is a project that I envisioned worth visiting Lassen National Park. This includes features such as blur, grey scale, etc. There are red, blue, and green scale functions that are easier adaptations to this project. Building this and then providing uploads, api transport over base64 and persistance for images on server is a wonderful learning project and something the Teacher wants in his coffer of repos. . Backend/ML. This really needs no introduction. There is so much going on in this space. The key to this project would be to have data that a user(s) provide to make the learning model dynmic and immersive in a short demo at N@tM. . Deployment. Unless a project is versioned controlled, has a README, and is deployed (with AWS in our case) it is not useful to you or your Teacher. Every project we have should be stored and shared. This is the key to development and to turning coding into usefulness. . Realizations and Adjustments to thinking . In a team, project, or life in general there will be those that are better prepared or more equipped than others for a task. This project should be considered an opportunity to build scaffolding for all to participate and to contribute (equity). Find a roll for everyone, add roles if necessary, aka beyond frontend, backend. . Python and Jupyter Notebooks. Someone could work on researching machine learning, college board, and building ideas in Jupyter Notebooks. This could build Python fundamentals, but also be a valuable contribution to your passion project. | Javascript can be a great learning platform as discussed in the Teacher requirements. Building a visual project in Javascript will lead to thinking about persistence of data. Sharing of data will then lead to Full Stack. | The scrum master or lead programmer(s) could be responsible for bringing things together, but people working on foundation pieces need to be responsive to “management”, not check out or quit. | Scrum Team roles Agile Manifesto should be adapted to skill sets of team. | Don’t be reluctant to be you; don’t try to fake you. The Teacher quickly knows of your contirubions,capabilities, and participation. Remember, your Teacher has tons of analytics on you from GitHub alone. Be real, improve on you and points will come. | . . Project Requirements . The Theme for the 1st Trimester Passion Project must be on “Learning JavaScript and Python for College Board and as a Team”. . The project must have have JavaScript as frontend and Python as backend. . | Backend must contain APIs. . | An emphasis of project must be on Big Idea 2 - Data. . | Each student must show evidence of Code, through GitHub analytics. This evidence must show iteration of commits sustained over last six weeks of trimester. . | Each student must show evidence of completing team goals and objectives. . | Team/Scrum Master must have evidence of collaboration. This is particularly important at the Ideation Checkpoint. Make sure that Team members get credit for work completed through issues. . Team must have evidence of design, try Figma or Canva. | Team must have evidence of data design, try Figma or Canva or draw.io | Team/Users must have Issues in GitHub. Issues should be managed in a Project Layer | Start project by setting up repositories and make sure backend is deployed using AWS | . | .",
            "url": "http://localhost:4100/teacher_portfolio/2023/09/28/python-flask_passion.html",
            "relUrl": "/2023/09/28/python-flask_passion.html",
            "date": " • Sep 28, 2023"
        }
        
    
  
    
        ,"post165": {
            "title": "Game Project Ideation",
            "content": "Product Owner Background . The Teacher wants students to learn Collaboration and perform JavaScript Development. To learn JavaScript we will focus on Animation and Game development. . Collobarte with GitHub. This is a key Software Engineering Skill. GitHub repository. Make a shared repository and add Collaborators (team members) to the repository. | GitHub Issues and Project. Issues should be managed in a Project Layer | Working on the same work in parallel, working on the same work with VS Code Live Share and commiting code in a shared GitHub repo are key skills and make coders more productive. | . | Design. Use a tool like Figma or Canva to start to build layouts for the portions of the game you would like to emulate. The better you plan, the better the Game potential for Nov 2nd. A Team must have evidence of design, try Figma or Canva. | . | Make a Video. Ideation phase will require a video. This has the benefit of making sure everyone reviews the plan and has access to the plan. | . Product Owner Ideas . The recent Student Panel talked about making projects out of something you see, do, need, or like. It is up to the student team to pick the game. . Turn something you are required to do into a passion project. . | Often, mimicing an existing game or a portion of a game will help with Ideation. Doing something with an idea requires a lot more designing and explanation. . | . Realizations and Adjustments to thinking . In an team, project, or life in general. there will be those that are better prepared or more equipped than others for a task. This project should be considered an opportunity to build scaffolding for all to participate and to contribute (equity). Find a roll for everyone, add roles if necessary, aka beyond frontend, backend. . The scrum master or lead programmer(s) could be responsible for bringing things together, but people working on foundation pieces need to be responsive to “management”, not check out or quit. | Scrum Team roles and an Agile Manifesto should be adapted to skill sets of team. | Don’t be reluctant to be you; don’t try to fake you. The Teacher quickly knows of your contirubions,capabilities, and participation. Remember, the Teacher has tons of analytics on you from GitHub alone. Be real, improve on you and points will come. | . . Project Requirements . The Theme for the 1st Trimester Passion Project must be on “Learning JavaScript and building a Game”. . The project must be done in JavaScript without usage of 3rd party frameworks. . | Each student must show evidence of Code, through GitHub analytics. This evidence must show iteration of commits sustained over last six weeks of trimester. . | Each student must show evidence of completing team goals and objectives. . | Team/Scrum Master must have evidence of collaboration. This is particularly important at the Ideation Checkpoint. Make sure that Team members get credit for work completed through issues. . Pick a project idea. Discuss if you are planning to mimic an classic game. . | Team must have evidence of design (Figma or Canva) . | Start project by setting up a shared repository. Make sure each member has a commit. . | Show initial issues and project management plan using GitHub tools. . | Have a Sprite selected with basic Animation running, as we have performed in class. . | . | .",
            "url": "http://localhost:4100/teacher_portfolio/2023/09/28/javascript-game_passion.html",
            "relUrl": "/2023/09/28/javascript-game_passion.html",
            "date": " • Sep 28, 2023"
        }
        
    
  
    
        ,"post166": {
            "title": "Student Teaching Tri1",
            "content": "Teaching Requirements . Each team will give a 10 minute lesson and assign 30 minutes of homework to introduce their unit. Make sure lesson has the following… . Lesson describes Purpose and Objectives from AP | Review of Unit Materials and Videos from AP Classroom | Key Vocabulary | Key Coding requirements, share by interactive coding challenges during lesson | Highlight any Tricks or Gotchas from Unit, could be added to coding challenge | Assign homework to re-informce lesson, 48 hours to complete. | Have a grading plan on homework and publish results 48 hours after due. | . List of tech terms required . A big emphasis on learning Units #1-#10 is learning vocabulary. Be sure to incorporate all of these terms into your units as applicable. Don’t just have a list of definitions. It is best if vocabulary is incorporated within working code, ie Jupyter Notebooks. . Casting, specifically for Division | Casting, specifically for Truncating or Rounding | Wrapper Classes, why wrap int, double. Show examples | Concatenation, explain or illustrate rules on mixed type Concatenation | Math class, specifically Random usage | Compound Boolean Expression | Truth Tables | De Morgan’s Law | Comparing Numbers | Comparing Strings | Comparing Objects | for loop, enhanced for loop | while loop versus do while loop | nested loops | Creating a Class, describe Naming Conventions | Constructor, describe why there is no return | Accessor methods, relationship to getter | Mutator methods, relationship to setter, describe void return type | Static variables, Class variables, show use case in code | Show use case of access modifiers: Public, Private, Protected | Static methods, Class methods | this Keyword | main method, tester methods | Inheritance, extends | Subclass constructor, super Keyword | Overloading a method, same name different parameters | Overriding a method, same signature of a method | Abstract Class, Abstract Method | Standard methods: toString(), equals(), hashCode() | Late binding of object, referencing superclass object, ie Animal a = new Chicken(); Animal b = new Goat(); | Polymorphism: any of overloading, overriding, late binding | Big O notation for Hash map, Binary Search, Single loop, Nested Loop | .",
            "url": "http://localhost:4100/teacher_portfolio/2023/09/28/java-student-teach-tri1.html",
            "relUrl": "/2023/09/28/java-student-teach-tri1.html",
            "date": " • Sep 28, 2023"
        }
        
    
  
    
        ,"post167": {
            "title": "Passion Project Tri1",
            "content": "Product Owner Background . Teacher is struggling with means to get students passionate about both Collaboration and Java. I am looking for Projects to assist in creating passion for Collaboration and Java. . Evidence of understanding FRQ Method and Control Structures, Arrays and ArrayLists, 2D Arrays was not strongly evident in surpise test on September 22nd within many teams. | In teams, with success on September 22nd, there was typically a dominant programmer that was doing the majority of the work. Coat tailing was very evident. IMO, this presents two problems… a. dominant programmer needs to guide others b. coat tailors need to get vested in activities. | In crossover presentation during the week, individuals talked exhaustively about a single FRQ, way over time. Thus, Teacher was unable to complete 40 minutes of reviews in an hour. | Most people talked to the NPC, but not to the people who needed to learn material. | . Product Owner Ideas . The Student Panel talked about making projects out of something you see. Right now, you must see “College Board” and “Collaboration” per this “Product Owner requirements document”. . Turn something you are required to do into a passion project. The Teacher was really excited about the Lightboard concept when reading the FRQ. After discussing it with Sahil Samar last year I started on an adaptaion of the idea that led to new code. lightboard code. This could be an idea for building api to support color paletes and storage. Or, it could be used for lightshow introduction web page. Or, … | . | Observe life in the classroom and apply it to code, ie collaboration. Two years ago, I had a student named Yeonjoon Hong in my class and I named his group the squirrels. While making the quiz I decided to make a squirrel predictor. methods and data types. The quiz and the squirrel predictor could be an idea used to theme a hack-a-thon. The remaining portions could be used to build hack-a-thon and the questions could be model answers used for grading and judging. FYI, many teams used Judge0 to build a online testing system. | . | . Realizations and Adjustments to thinking . In an team, project, or life in general there will be those that are better prepared or more equipped than others for a task. This project should be considered an opportunity to build scaffolding for all to participate and to contribute (equity). Find a roll for everyone, add roles if necessary, aka beyond frontend, backend. . Someone could work on something similar to the methods and data types and generate ideas from CB FRQs. This could build Java fundamentals, but also add or contribute to vision project. | Javascript can be a great learning platform for Java methods and control structures and arrays. Note, data types are different and you will need to use console.log() instead of System.out.println(). | The scrum master or lead programmer(s) could be responsible for bringing things together, but people working on foundation pieces need to be responsive to “management”, not check out or quit. | Scrum Team roles Agile Manifesto should be adapted to skill sets of team. | Don’t be reluctant to be you; don’t try to fake you. Teacher knows your capabilities and participation. Be real, improve on you and points will come. | . . Project Requirements . The Theme for the 1st Trimester Passion Project must be on “Learning Java for College Board and as a Team”. . The project must have have JavaScript as frontend and Java as backend. . | Backend must contain APIs and persistent data. . | An emphasis of project must be on Java. Each student must show evidence of Java work. . | Each student must show evidence of completing team goals and objectives. . | Team must have evidence of collaboration. This is particularly important with people that have “dominant”, those that are “struggling” to keep up, or those that “disconnect” in body language and activity. . | .",
            "url": "http://localhost:4100/teacher_portfolio/2023/09/28/java-spring_passion.html",
            "relUrl": "/2023/09/28/java-spring_passion.html",
            "date": " • Sep 28, 2023"
        }
        
    
  
    
        ,"post168": {
            "title": "PP Ideation Checkpoint",
            "content": "Passion Project Ideation . Looking for the following… . Big idea. Looking for useful or analytical solution to my delima of Collaboration and usage of Java. Turn something you see into passion. | Frontend/JavaScript. Initial Ideation must contain Front end screens or user interactions. | Backend Data/Java. Their must be APIs, Data design or UML diagram that describes how data will be stored. Since Java is a big focus, we should consider Data elements that cover all the FRQ types: Methods and Control Structures, Class(s), Arrays/ArrayList, and 2D Arrays. | Collaboration. Since this project is on Collaboration there needs to be a work plan. That workplan should explain how you intend to progrss Frontend and Backend independently. For instance, usage of postman on backend and hardcoded data JSON data according to API definition on Frontend. Additionally, you should have features assigned to Pairs or Individuals according to needs for research, development, and equity. | Suggestion for optimal efficiency in Team. Add something to your project that can be used to support Popcorn Hacks in your Unit 1-10 lesson. | Libaries or Frameworks. Consider what key library(s) or framework(s0) you will add to your project. | .",
            "url": "http://localhost:4100/teacher_portfolio/2023/09/28/java-spring-passion-idea.html",
            "relUrl": "/2023/09/28/java-spring-passion-idea.html",
            "date": " • Sep 28, 2023"
        }
        
    
  
    
        ,"post169": {
            "title": "AWS Deployment",
            "content": "Prerequisites . Fullfil these requirements prior to moving forward in this guide. . Must have a backend repository on GitHub. | Verify Backend Docker files are running on localhost. If it doesn’t run on localhost, then it won’t run on the deployment server!!! | You must have a configured Domain Name pointing to the Public IP of your deployment server. This will require working with AWS Route 53. ​ | Accessing AWS EC2 . Development Operations (DevOps) requires server access. . Amazon Web Services (AWS) Management Console . Login to AWS Console using your account. Navigate to “EC2” and the “Instances” dropdown. | . . From here, a variety of instances will show up. For this project, depending on which class you have, select either “CSP” or “CSA” | . Unrestricted Gateway to AWS EC2 Terminal . At school access csp.nighthawkcodingsociety.com or csa.nighthawkcodingsociety.com to log in to the deployment server. Observe Cockpit features in section below, but primarily you will be using Terminal in this setup. - Username is ubuntu. Password hint is 3 Musketeers . Application Setup . Finding a Port . In AWS EC2 terminal; . Run docker ps review list and find a port number starting in 8— that is not in use. Valid ports are between 1024-49150, but we are asking that you stick to 8—. | On localhost setup Docker files using VSCode . Open VSCode and navigate to your repository (backend) . | Make sure your Dockerfile and docker-compose.yml match the port you discovered with docker ps on AWS EC2. Refer to anatomy guide for you language and framework for a guide to you Docker files. . | Test docker-compose up or sudo docker-compose up in your VSCode terminal (don’t forget to ‘cd’ into the right repo.) Errors will be shown in Terminal, be sure NOT to type -d. . | After it’s done building, type in http://localhost:8 in your browser (replace ‘8—’ with your port number you’ve chosen) . | If all runs smoothly, push your changes to Github and continue to AWS setup . | Server Setup . In the AWS EC2 terminal; . cd ~ . | Clone your backend repo: git clone github.com/server/project.git my_unique_name . | Navigate to your repo: cd my_unique_name . | Build your site: docker-compose up -d --build . | Test your site: curl localhost:8 (replace ‘8—’ with your port number) . This should show you all the html content of your home page. If this provides 500 error you need to check your site on localhost. If it produces broken pipe error you need to check your ports between docker-compose.yml and Docker files. If the page does not have your content, you need to check docker ps as someone is using your port number. . | If all runs smooth, continue to DNS &amp; NGINX Setup . Route 53 DNS . Goto AWS Route 53 and setup DNS subdomain for your backend server. . Route 53 Hosted Zone Configuration File: . . Route 53 DNS Setup: . Record name Type Value/Route traffic to . projectUniqueName | CNAME | csp.nighthawkcodingsociety.com | . projectUniqueName | CNAME | csa.nighthawkcodingsociety.com | . Nginx setup . Begin process of establishing reverse proxy (map) of your application to your Domain. . Navigate to in terminal to nginx: cd /etc/nginx/sites-available . | Create an nginx config file (change projectUniqueName to make you unique config file, suggest using your registered domain): sudo nano projectUniqueName . | Use the format below to write into your config file, make updates according to comments . | server { listen 80; listen [::]:80; server_name --.stu.nighthawkcodingsociety.com ; # CHANGE SERVER NAME TO YOUR REGISTERED DOMAIN location / { proxy_pass http://localhost:8; # CHANGE PORT TO YOUR UNIQUE PORT # Simple requests if ($request_method ~* &quot;(GET|POST|PUT|DELETE)&quot;) { # Customize Request methods based on your needs add_header &quot;Access-Control-Allow-Origin&quot; *; } # Preflighted requests if ($request_method = OPTIONS ) { add_header &quot;Access-Control-Allow-Origin&quot; *; add_header &quot;Access-Control-Allow-Methods&quot; &quot;GET, POST, PUT, DELETE, OPTIONS, HEAD&quot;; # Make sure the request methods above match here add_header &quot;Access-Control-Allow-Headers&quot; &quot;Authorization, Origin, X-Requested-With, Content-Type, Accept&quot;; return 200; } } } . To save changes, ctl X or cmd X, then y, then enter . | Activate configuration. Create a symbolic link (change projectUniqueName to your nginx config file name): cd /etc/nginx/sites-enabled, then sudo ln -s /etc/nginx/sites-available/projectUniqueName /etc/nginx/sites-enabled . | Validate by running: sudo nginx -t . | Restart nginx by running sudo systemctl restart nginx . | Test your domain name on your desktop browser now (only http://, not https://) . | If all runs smoothly, continue to Certbot config . Certbot Config . Certbot allows your site to get a certificate in order for the http request to be secure (https) . Run command below and follow prompts | . sudo certbot --nginx . Ideal outcome is shown below . There are two outcomes during Certbot Success, test your domain name on your desktop browser now using https:// | Failure, follow guidance provided by CertBot | . | . Saving debug log to /var/log/letsencrypt/letsencrypt.log Plugins selected: Authenticator nginx, Installer nginx Which names would you like to activate HTTPS for? - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - ... 28: cars.nighthawkcodingsociety.com 29: dolphin.nighthawkcodingsociety.com 30: saakd.nighthawkcodingsociety.com ... - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - Select the appropriate numbers separated by commas and/or spaces, or leave input blank to select all options shown (Enter &#39;c&#39; to cancel): # ENTER YOUR CORRESPONDING NUMBER Cert not yet due for renewal You have an existing certificate that has exactly the same domains or certificate name you requested and isn&#39;t close to expiry. (ref: /etc/letsencrypt/renewal/nighthawkcodingsociety.com-0001.conf) What would you like to do? - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 1: Attempt to reinstall this existing certificate 2: Renew &amp; replace the cert (limit ~5 per 7 days) - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - Select the appropriate number [1-2] then [enter] (press &#39;c&#39; to cancel): 2 Renewing an existing certificate Performing the following challenges: http-01 challenge for nighthawkcodingsociety.com http-01 challenge for csa.nighthawkcodingsociety.com http-01 challenge for cso.nighthawkcodingsociety.com http-01 challenge for flm.nighthawkcodingsociety.com Waiting for verification... Cleaning up challenges Deploying Certificate to VirtualHost /etc/nginx/sites-enabled/nighthawk_society Deploying Certificate to VirtualHost /etc/nginx/sites-enabled/nighthawk_csa Deploying Certificate to VirtualHost /etc/nginx/sites-enabled/nighthawk_csp Deploying Certificate to VirtualHost /etc/nginx/sites-enabled/nighthawk_flm Please choose whether or not to redirect HTTP traffic to HTTPS, removing HTTP access. - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 1: No redirect - Make no further changes to the webserver configuration. 2: Redirect - Make all requests redirect to secure HTTPS access. Choose this for new sites, or if you&#39;re confident your site works on HTTPS. You can undo this change by editing your web server&#39;s configuration. - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - Select the appropriate number [1-2] then [enter] (press &#39;c&#39; to cancel): 2 Traffic on port 80 already redirecting to ssl in /etc/nginx/sites-enabled/nighthawk_society Traffic on port 80 already redirecting to ssl in /etc/nginx/sites-enabled/nighthawk_csa Traffic on port 80 already redirecting to ssl in /etc/nginx/sites-enabled/nighthawk_csp Traffic on port 80 already redirecting to ssl in /etc/nginx/sites-enabled/nighthawk_flm - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - Your existing certificate has been successfully renewed, and the new certificate has been installed. The new certificate covers the following domains: https://nighthawkcodingsociety.com, https://csa.nighthawkcodingsociety.com, https://csp.nighthawkcodingsociety.com, and https://flm.nighthawkcodingsociety.com, You should test your configuration at: https://www.ssllabs.com/ssltest/analyze.html?d=nighthawkcodingsociety.com https://www.ssllabs.com/ssltest/analyze.html?d=csa.nighthawkcodingsociety.com https://www.ssllabs.com/ssltest/analyze.html?d=csp.nighthawkcodingsociety.com https://www.ssllabs.com/ssltest/analyze.html?d=flm.nighthawkcodingsociety.com - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - IMPORTANT NOTES: - Congratulations! Your certificate and chain have been saved at: /etc/letsencrypt/live/nighthawkcodingsociety.com-0001/fullchain.pem Your key file has been saved at: /etc/letsencrypt/live/nighthawkcodingsociety.com-0001/privkey.pem Your cert will expire on 2022-03-06. To obtain a new or tweaked version of this certificate in the future, simply run certbot again with the &quot;certonly&quot; option. To non-interactively renew *all* of your certificates, run &quot;certbot renew&quot; - If you like Certbot, please consider supporting our work by: Donating to ISRG / Let&#39;s Encrypt: https://letsencrypt.org/donate Donating to EFF: https://eff.org/donate-le . Changing Code will require Deployment Updates . Changing Code in VSCode . To keep deployment working, good practices in your coding process with verifications prior to pushing code to GitHub will save a lot of troubleshooting. . Make sure to git pull before making changes This will make sure that you pull any changes made by your team, and prevents merge conflicts . | Open terminal in VSCode and run python3 main.py (Make sure you cd into your repo) This should give you a local address where your flask is running. Open this in your browser to see your changes live . | Make changes that are needed Refer to your running site often to see changes as you develop . | Commit your changes locally Do not Sync change from UI or git push from terminal yet, just Commit. It is great practice to Commit Often with sensible comments. Anytime after you commit you can pull team members changes for additional verifications. . | Before updating deployment start Docker Desktop app and test your Web Application. Test docker-compose up or sudo docker-compose up in your VSCode terminal (don’t forget to ‘cd’ into the right repo). . | After Docker is done building, type in http://localhost:8 in your browser. Replace ‘8—’ with your port number. Review your personal changes and team members changes in running site. As long as Docker Desktop and Docker App is running, you can make little changes and save, they should refresh in site within a few seconds. Any errors, runtime errors, will appear in browser of VSCode terminal, read messages thoroughly and debug errors. Docker Desktop may consume a lot of CPU resources, if you are unplugged you may want to close it after you are done testing. . | If all goes well, Sync change from UI or git push from terminal. If you can’t push review git status from terminal. Resolve all open files git restore or git commit, then git pull and repeat steps 5 to 7. . | Pulling Changes into AWS EC2 deployment . Updates should be quick and easy, as long as your teams verifies problems on localhost prior to these steps. . In your AWS EC2 terminal; . Navigate to your repo: cd ~/my_unique_name . | docker-compose down Test Server in browser using https://, it should be down (502 Bad Gateway in browser) . | git pull . | Rebuild your docker container: docker-compose up -d --build Test Server in browser using https://, sll updates should be up and running on internet. . | Optional, Troubleshooting checks on AWS EC2 . These commands let you see status of your running web application on AWS EC2 . Try to curl: curl localhost:8 (replace ‘8—’ with your port number) Verify home pages is yours . | Run docker-compose ps Perform check on your container, verify docker is up . | Run docker ps Perform checks on all containers and all images . | Cockpit Navigation . This portion will cover Cockpit’s features. Login to Cockpit by accessing your subdomain. . The left navigation bar in Cockpit presents a few options that you can select: . Overview . The overview section provides a summary of health, usage, system, and configuration information. Click on “View details and history” to check CPU, memory, and network settings. . Logs . These provide information about the system, such as a failed login. Logs can be filtered based on criteria such as time or priority. . Storage . See disk read and write settings and storage logs. . Networking . This portion shows the network traffic of the server and interface information. VLANs and bridges can also be added here. . Accounts . This setting allows the administrator to create and manage accounts. You can click on a user to edit user settings, such as changing the password and adding SSH keys. . Services . Click on a service to view its settings. A service can be reloaded, restarted, or stopped by clicking on the three dots. The dropdown under “Show relationships” includes information such as a service’s dependencies and when it starts in relation with other services (what services start before and after this service) . Software Updates . If you are running Ubuntu 17.10 or later, a “Loading available updates failed” error message will appear. This is because Ubuntu changed the network management from network-manager to netplan.io, which has not been updated in Cockpit. A way to fix this is to change netplan’s configuration file to manage one interface with network-manager. . sudo nano /etc/netplan/50-cloud-init.yaml . Next, add the following line under network: . renderer: NetworkManager . Then, execute . sudo netplan try . Refresh Cockpit, and the “Software Updates” page should work. Updates can now be installed. . Terminal . A command line interface that is the same as the machine’s terminal on AWS EC2. . Update hostname and system time . Go to Overview -&gt; Configuration -&gt; Click on “edit” next to “Hostname” and configure a hostname for the server. . Click on the time next to “System time” to set the time zone. . User account settings . Go to Accounts -&gt; Click on “Create new account” and fill out the boxes . After the user is created, click on the user. You can check “Server administrator” to give the user sudo privileges. . You can also configure account expiration and password expiration settings by clicking on “edit” next to the two settings. . . To test the new user account created, logout, and then login with the new user credentials. If the user has administrative privileges, you can click on the button that says “Limited access” at the top right corner to gain those privileges. . Note: If the user was not configured as a “Server administrator” and tried to gain admin privileges by clicking the button, the attempt will fail and will be logged. You can view the log by clicking on “Logs” in the sidebar: . . Congratulations! . Congratulations on deploying your site with AWS! .",
            "url": "http://localhost:4100/teacher_portfolio/c7.0/c7.1/c7.2/2023/09/27/aws-deployment_IPYNB_2_.html",
            "relUrl": "/c7.0/c7.1/c7.2/2023/09/27/aws-deployment_IPYNB_2_.html",
            "date": " • Sep 27, 2023"
        }
        
    
  
    
        ,"post170": {
            "title": "Sprite Sheet Animation",
            "content": "Setting up Spritesheet . This blog will go through the steps by using this spritesheet as a demonstration: . Download the image into your files. Then, create an image folder in the _notebooks directory and save this image in that folder. . . Base HTML . Create the webpage layout of your animation, including the div in which each image is generated. Below is HTML for a very basic structure which can be used to test your sprites: . &lt;body&gt; &lt;div&gt; &lt;canvas id=&quot;spriteContainer&quot;&gt; &lt;!-- Within the base div is a canvas. An HTML canvas is used only for graphics. It allows the user to access some basic functions related to the image created on the canvas (including animation) --&gt; &lt;img id=&quot;dogSprite&quot; src=&quot;/teacher/images/dogSprites.png&quot;&gt; &lt;/canvas&gt; &lt;div id=&quot;controls&quot;&gt; &lt;!--basic radio buttons which can be used to check whether each individual animaiton works --&gt; &lt;input type=&quot;radio&quot; name=&quot;animation&quot; id=&quot;idle&quot; checked&gt; &lt;label for=&quot;idle&quot;&gt;Idle&lt;/label&gt;&lt;br&gt; &lt;input type=&quot;radio&quot; name=&quot;animation&quot; id=&quot;barking&quot;&gt; &lt;label for=&quot;barking&quot;&gt;Barking&lt;/label&gt;&lt;br&gt; &lt;input type=&quot;radio&quot; name=&quot;animation&quot; id=&quot;walking&quot;&gt; &lt;label for=&quot;walking&quot;&gt;Walking&lt;/label&gt;&lt;br&gt; &lt;/div&gt; &lt;/div&gt; &lt;/body&gt; . Setting up Javascript . Set up the main function, which will contain the object class for the animation, including the parameters of the object, and the different methods of what the object can do. . For most cases, it is simplest to have the function called when the page is loaded, which would ensure the code works every time someone opens the game. We will also set a few variables, which are further explained in the code comments. . Since we are switching over to Javascript, be sure to put all code within the &lt;script&gt; tag, which will allow the computer to know the code is no longer HTML . &lt;script&gt; window.addEventListener(&#39;load&#39;, function () { const canvas = document.getElementById(&#39;spriteContainer&#39;); // sets the canvas as a variable by calling the canvas element from the HTML code, using the id we set const ctx = canvas.getContext(&#39;2d&#39;); // the getContext function is a given function within the canvas object. It allows us more functionality with the sprite image. // constant variables used for sprite const SPRITE_WIDTH = 160; const SPRITE_HEIGHT = 144; const FRAME_LIMIT = 48; // sets canvas properties const SCALE_FACTOR = 2; canvas.width = SPRITE_WIDTH * SCALE_FACTOR; canvas.height = SPRITE_HEIGHT * SCALE_FACTOR; //more code will be placed here later }); &lt;/script&gt; . NOTE: the particular sprite sheet given for this animation has sprites that are 160 by 144 pixels. Setting the width and height as a variable allows us to change the scale easily. When using other sprite sheets, be sure to find out what the dimensions of the sprite are . Using Object Oriented Programming . Object Oriented Programming is a model in programming which creates ‘objects’. Specific data or parameters can then be assigned to the object in classes. The classes are essentially ‘blueprints’, which can be used to create more instances of the same object. This makes it easier to reuse and keep track of data. . We are going to create a class for our sprite. Each class can have different methods, which are functions assigned to each class. Our sprite object will have 3 methods; constructor method, draw method, and update method . The constructor method sets the values which will be assigned to this class. The values assigned are explained in the code’s comments . We are also creating a draw method, in order to ‘draw’ the image on the canvas created earlier. The parameters given to the method are the same we set in the constructor method . place this class structure within the onLoad function we created earlier . class Dog { constructor(){ // constructor method for outlining data points about the sprite this.image = document.getElementById(&quot;dogSprite&quot;); this.spriteWidth = SPRITE_WIDTH; this.spriteHeight = SPRITE_HEIGHT; this.width = this.spriteWidth; //takes sprite dimensions and accounts for it in image generation this.height = this.spriteHeight; this.x = 0; //starts image generation in coordinate (0,0) px on sprite sheet this.y = 0; this.scale = 1; //scale of image this.minFrame = 0; this.maxFrame = FRAME_LIMIT; // how many sprites there are in a row this.frameX = 0; // sets position of sprite that is being generated. There are the two parameters we will be changing in order to crete the animation. this.frameY = 0; } draw(context) { context.drawImage( this.image, this.frameX * this.spriteWidth, this.frameY * this.spriteHeight, this.spriteWidth, this.spriteHeight, this.x, this.y, this.width * this.scale, this.height * this.scale ); } . How the animation works . As mentioned above, the sprite sheet contains sprites placed side by side at even intervals. The code we write will generate an image with the dimensions 160 by 144 pixels, since that is the size of an individual sprite. The first image generated starts at the origin point (0,0) px. The update method will then shift the origin point over to the right by 160 pixels, so that the next image generated is the 2nd frame. . Writing the Update Method . class Dog { constructor() { this.image = document.getElementById(&quot;dogSprite&quot;); this.x = 0; this.y = 0; this.minFrame = 0; this.maxFrame = FRAME_LIMIT; this.frameX = 0; this.frameY = 0; } // draw dog object draw(context) { context.drawImage( this.image, this.frameX * SPRITE_WIDTH, this.frameY * SPRITE_HEIGHT, SPRITE_WIDTH, SPRITE_HEIGHT, this.x, this.y, canvas.width, canvas.height ); } // update frameX of object update() { if (this.frameX &lt; this.maxFrame) { this.frameX++; } else { this.frameX = 0; } } } } . NOTE: This code only plays one of the three animations. In other words only one row of the sprite sheet is being played. In order to have the animation change, we will need to code user inputs into the update method. . Making Your Animation User Responsive . In order to make our animations adaptive to user inputs, we can use eventListeners to detect when a user clicks on a different button. While we are using radio buttons in this example, eventListeners can be set to detect other user inputs, such as a mouse movement or keystroke, or even an in-game event like losing the game. . These eventListeners will then trigger a certain function which changes the animation on the screen. . The parameter this.frameY is what controls which animation is being played, but we can change its value through eventListeners. ‘Idle’ would set this.frameY equal to 0, which would play the first row of animation on the spreadsheet (remember: python starts it’s index from 0). The “bark” button would play the second row by setting this.frameY equal to 1, and so on. . Place the following code after the Dog class . const dog = new Dog(); // This makes the game object, Dog // Add event listener to the parent container for event delegation const controls = document.getElementById(&#39;controls&#39;); controls.addEventListener(&#39;click&#39;, function (event) { if (event.target.tagName === &#39;INPUT&#39;) { const selectedAnimation = event.target.id; switch (selectedAnimation) { case &#39;idle&#39;: dog.frameY = 0; break; case &#39;barking&#39;: dog.frameY = 1; break; case &#39;walking&#39;: dog.frameY = 2; break; default: break; } } }); . Calling Class Methods . All the functions have been written; all thats left is to put them together by calling them when the page loads. . Place the following code outside after previous code, but still within the onLoad function: . // Animation recursive control function function animate() { // Clears the canvas to remove the previous frame. ctx.clearRect(0, 0, canvas.width, canvas.height); // Draws the current frame of the sprite. dog.draw(ctx); // Updates the `frameX` property to prepare for the next frame in the sprite sheet. dog.update(); // Uses `requestAnimationFrame` to synchronize the animation loop with the display&#39;s refresh rate, // ensuring smooth visuals. requestAnimationFrame(animate); } animate(); . Put It all Together . Create a new HTML file and place all the code together! The animation should run similar to the example show below . Hacks . Try and see if you can get the animation to respond to different user inputs (other then the radio buttons) . | Or; get the dog sprite to actually move across the screen during the walk animation using translations . | . your code should end up looking like the example below . %%html &lt;body&gt; &lt;div&gt; &lt;canvas id=&quot;spriteContainer&quot;&gt; &lt;!-- Within the base div is a canvas. An HTML canvas is used only for graphics. It allows the user to access some basic functions related to the image created on the canvas (including animation) --&gt; &lt;img id=&quot;dogSprite&quot; src=&quot;/teacher/images/dogSprites.png&quot;&gt; // change sprite here &lt;/canvas&gt; &lt;div id=&quot;controls&quot;&gt; &lt;!--basic radio buttons which can be used to check whether each individual animaiton works --&gt; &lt;input type=&quot;radio&quot; name=&quot;animation&quot; id=&quot;idle&quot; checked&gt; &lt;label for=&quot;idle&quot;&gt;Idle&lt;/label&gt;&lt;br&gt; &lt;input type=&quot;radio&quot; name=&quot;animation&quot; id=&quot;barking&quot;&gt; &lt;label for=&quot;barking&quot;&gt;Barking&lt;/label&gt;&lt;br&gt; &lt;input type=&quot;radio&quot; name=&quot;animation&quot; id=&quot;walking&quot;&gt; &lt;label for=&quot;walking&quot;&gt;Walking&lt;/label&gt;&lt;br&gt; &lt;/div&gt; &lt;/div&gt; &lt;/body&gt; &lt;script&gt; // start on page load window.addEventListener(&#39;load&#39;, function () { const canvas = document.getElementById(&#39;spriteContainer&#39;); const ctx = canvas.getContext(&#39;2d&#39;); const SPRITE_WIDTH = 160; // matches sprite pixel width const SPRITE_HEIGHT = 144; // matches sprite pixel height const FRAME_LIMIT = 48; // matches number of frames per sprite row, this code assume each row is same const SCALE_FACTOR = 2; // control size of sprite on canvas canvas.width = SPRITE_WIDTH * SCALE_FACTOR; canvas.height = SPRITE_HEIGHT * SCALE_FACTOR; class Dog { constructor() { this.image = document.getElementById(&quot;dogSprite&quot;); this.x = 0; this.y = 0; this.minFrame = 0; this.maxFrame = FRAME_LIMIT; this.frameX = 0; this.frameY = 0; } // draw dog object draw(context) { context.drawImage( this.image, this.frameX * SPRITE_WIDTH, this.frameY * SPRITE_HEIGHT, SPRITE_WIDTH, SPRITE_HEIGHT, this.x, this.y, canvas.width, canvas.height ); } // update frameX of object update() { if (this.frameX &lt; this.maxFrame) { this.frameX++; } else { this.frameX = 0; } } } // dog object const dog = new Dog(); // update frameY of dog object, action from idle, bark, walk radio control const controls = document.getElementById(&#39;controls&#39;); controls.addEventListener(&#39;click&#39;, function (event) { if (event.target.tagName === &#39;INPUT&#39;) { const selectedAnimation = event.target.id; switch (selectedAnimation) { case &#39;idle&#39;: dog.frameY = 0; break; case &#39;barking&#39;: dog.frameY = 1; break; case &#39;walking&#39;: dog.frameY = 2; break; default: break; } } }); // Animation recursive control function function animate() { // Clears the canvas to remove the previous frame. ctx.clearRect(0, 0, canvas.width, canvas.height); // Draws the current frame of the sprite. dog.draw(ctx); // Updates the `frameX` property to prepare for the next frame in the sprite sheet. dog.update(); // Uses `requestAnimationFrame` to synchronize the animation loop with the display&#39;s refresh rate, // ensuring smooth visuals. requestAnimationFrame(animate); } // run 1st animate animate(); }); &lt;/script&gt; . // change sprite here Idle Barking Walking",
            "url": "http://localhost:4100/teacher_portfolio/cpt/animate",
            "relUrl": "/cpt/animate",
            "date": " • Sep 21, 2023"
        }
        
    
  
    
        ,"post171": {
            "title": "Sprite Sheet Intro",
            "content": "Animated characters, objects, or backgrounds have been an essential part of videogames. Many iconic games, such as Super Mario Bros and Sonic the Hedgehog, have used sprite animation to bring their characters to life, and make their products more engaging and visually appealing. This blog is a brief exploration of how javascript can be used to create your own simple animations using sprites. We’ll also talk about how your animations can be made more dynamic, and adapt to user inputs . Spritesheet . Animation is achieved by quickly sequencing through a series of still images, which when put together, allow the images to appear as if they are moving. . . In order to create the animation, you need to find an image which contains each individual frame side by side (like shown below) also known as a spritesheet. The code will then sequence through each frame to create the animation. It is an option to make your own, many students have used Pixel Art . Below is an example spritesheet, showing 4 different kinds of animation . . Deer by Calciumtrice, usable under Creative Commons Attribution 3.0 license. . Resources for Public Sprites . OpenGameArt.org: An excellent resource for free and open-source game assets, including sprite sheets. It offers a wide range of sprites for various game genres. . Kenney.nl: A vast collection of free game assets, including sprites, textures, and sound effects. It’s a great place to find sprite sheets for both 2D and 3D games. . itch.io: A platform that hosts indie games and game development resources. You can find many game assets, including sprite sheets, created by independent artists. . GameDev Market: This is a marketplace for game assets, including sprites. While many assets are paid, you can also find free assets from time to time. . DeviantArt: Some artists on DeviantArt share their game assets, including sprite sheets, for free. Be sure to check the usage rights and give proper credit to the artists. . Resources to Build Your Own Sprites . Graphic Design Software: Popular graphic design software like Adobe Photoshop, Adobe Illustrator, or GIMP (free) can be used to create and edit sprites. These tools offer powerful features for creating pixel art and animations. . Pixel Art Software: Consider using specialized pixel art software like Aseprite, Pyxel Edit, or GraphicsGale. These tools are designed specifically for creating pixel art and animations. . Online Pixel Art Editors: There are various online pixel art editors that are beginner-friendly, such as Piskel and Lospec Pixel Editor. These tools are accessible through web browsers and are suitable for creating simple sprites. . Tutorials and Courses: To learn how to create sprites, there are online tutorials and courses. Websites like Udemy, Coursera, and YouTube offer many tutorials on pixel art and sprite animation. .",
            "url": "http://localhost:4100/teacher_portfolio/2023/09/20/spritesheet_animation.html",
            "relUrl": "/2023/09/20/spritesheet_animation.html",
            "date": " • Sep 20, 2023"
        }
        
    
  
    
        ,"post172": {
            "title": "ML and Fitness",
            "content": "Overview . Machine learning is a powerful and expanding field within artifical intelligence. It has found applications throughout a variety of industries. At its core, machine learning is driven by algorithms and models that enable computers to learn and make predictions based on already available (test) data. Machine learning is utilized in today’s world to predict disease outcomes, analyze medical images, detect fraud, predict market trends, and much more. Its ability to extract insights from complex datasets to make data driven decisions enhances efficiency, unlocks otherwise hidden patterns, and make predictions that have been impossible in the past… . The Machine Learning Process . . Data Sample . Below is fitbit data detailing 20 workouts, their duration, my heartbeat, workout type, and the resulting calories I burnt. As an athlete I want to maximize the amount of calories I burn, so I can optimize my workouts. However, due to the various factors involved in burning calories, the best way to achieve my goal is a machine learning model. . Duration (minutes) | Heart Rate (bpm) | Intensity Level | Calories Burned 30 | 120 | 3 | 200 45 | 140 | 6 | 300 60 | 160 | 9 | 400 20 | 110 | 2 | 150 35 | 130 | 5 | 250 50 | 150 | 8 | 350 25 | 125 | 4 | 180 40 | 145 | 7 | 280 55 | 165 | 10 | 410 30 | 120 | 3 | 210 45 | 140 | 6 | 320 60 | 160 | 9 | 390 20 | 110 | 2 | 160 35 | 130 | 5 | 240 50 | 150 | 8 | 360 25 | 125 | 4 | 170 40 | 145 | 7 | 270 55 | 165 | 10 | 400 30 | 120 | 3 | 220 45 | 140 | 6 | 310 . Data Preprocessing . Given the fitness dataset, we first establish the following variables: Dependent Variable: . Calories Burned | . Independent Variables: . Duration : length of the workout in minutes | Heart Rate : average rate of heart beat in beats per minute during the workout | Intensity level : Workout intensity level from a scale of 1 (sitting) to 10 (sprinting) These independent variables were chosen for this model because they are believed to be the most relevant factors affecting calories burned. . | . The dependent variable, Calories Burned, is the target variable the model will aim to predict. It represents the amount of calories burned during a specific fitness activity. The Independent variables will be the inputs used to predict the dependent variable using a linear regression model. The linear regression model will analyze the relationship between the independent and dependent variables in order to create accurate predictions. This can be done easily using the scikit-learn library in Python. See installation instructions here. You will also need pandas. . Variable Relationship Visualization . These visualizations are meant to show the relationship between the independent variables and dependent variable (target calories burnt) . pip install matplotlib . import pandas as pd import matplotlib.pyplot as plt # Load the fitness dataset into a pandas DataFrame data = pd.DataFrame({ &#39;Duration&#39;: [30, 45, 60, 20, 35, 50, 25, 40, 55, 30, 45, 60, 20, 35, 50, 25, 40, 55, 30, 45], &#39;Heart Rate&#39;: [120, 140, 160, 110, 130, 150, 125, 145, 165, 120, 140, 160, 110, 130, 150, 125, 145, 165, 120, 140], &#39;Intensity Level&#39;: [3, 6, 9, 2, 5, 8, 4, 7, 10, 3, 6, 9, 2, 5, 8, 4, 7, 10, 3, 6], &#39;Calories Burned&#39;: [200, 300, 400, 150, 250, 350, 180, 280, 410, 210, 320, 390, 160, 240, 360, 170, 270, 400, 220, 310] }) #Duration vs. Calories Burned plt.scatter(data[&#39;Duration&#39;], data[&#39;Calories Burned&#39;], label=&#39;Data&#39;) plt.xlabel(&#39;Duration (minutes)&#39;) plt.ylabel(&#39;Calories Burned&#39;) plt.title(&#39;Duration vs. Calories Burned&#39;) plt.legend() plt.show() #Heart Rate vs. Calories Burned plt.scatter(data[&#39;Heart Rate&#39;], data[&#39;Calories Burned&#39;], label=&#39;Data&#39;) plt.xlabel(&#39;Heart Rate (bpm)&#39;) plt.ylabel(&#39;Calories Burned&#39;) plt.title(&#39;Heart Rate vs. Calories Burned&#39;) plt.legend() plt.show() # Intensity Level vs. Calories Burned plt.scatter(data[&#39;Intensity Level&#39;], data[&#39;Calories Burned&#39;], label=&#39;Data&#39;) plt.xlabel(&#39;Intensity Level&#39;) plt.ylabel(&#39;Calories Burned&#39;) plt.title(&#39;Intensity Level vs. Calories Burned&#39;) plt.legend() plt.show() . . . . Splitting the Data . This dataset includes 15 rows of TRAIN fitbit data and 5 rows of TEST data, with various combinations of duration, heart rate, workout type, and the corresponding calories burned. The trained machine learning model will make predictions on new, unseen instances and compare them with the actual calories burned values. . import pandas as pd from sklearn.model_selection import train_test_split # Load the fitness dataset into a pandas DataFrame data = pd.DataFrame({ &#39;Duration&#39;: [30, 45, 60, 20, 35, 50, 25, 40, 55, 30, 45, 60, 20, 35, 50, 25, 40, 55, 30, 45], &#39;Heart Rate&#39;: [120, 140, 160, 110, 130, 150, 125, 145, 165, 120, 140, 160, 110, 130, 150, 125, 145, 165, 120, 140], &#39;Intensity Level&#39;: [3, 6, 9, 2, 5, 8, 4, 7, 10, 3, 6, 9, 2, 5, 8, 4, 7, 10, 3, 6], &#39;Calories Burned&#39;: [200, 300, 400, 150, 250, 350, 180, 280, 410, 210, 320, 390, 160, 240, 360, 170, 270, 400, 220, 310] }) # Split the dataset train_data, test_data = train_test_split(data, test_size=5, random_state=42) # Print training data print(&quot;Training Data:&quot;) print(train_data) # Print test data print(&quot; nTest Data:&quot;) print(test_data) . Training Data: Duration Heart Rate Intensity Level Calories Burned 5 50 150 8 350 11 60 160 9 390 3 20 110 2 150 18 30 120 3 220 16 40 145 7 270 13 35 130 5 240 2 60 160 9 400 9 30 120 3 210 19 45 140 6 310 4 35 130 5 250 12 20 110 2 160 7 40 145 7 280 10 45 140 6 320 14 50 150 8 360 6 25 125 4 180 Test Data: Duration Heart Rate Intensity Level Calories Burned 0 30 120 3 200 17 55 165 10 400 15 25 125 4 170 1 45 140 6 300 8 55 165 10 410 . Model Training and Evaluation . In this code, we start by loading the fitness dataset into a pandas DataFrame. Then, we split the dataset into training and test data using train_test_split (just as before). We assign the independent variables (Duration, Heart Rate, Intensity Level) and the dependent variable (Calories Burned) to separate variables for both the training and test data. . Next, we create a linear regression model using LinearRegression(). We fit the model to the training data by calling fit and passing in the training features and target variables (X_train and y_train). . After fitting the model, we use it to make predictions on the test data by calling predict and passing in the test features (X_test). The predicted values are stored in y_pred. This way we can test the accuracy of the model with real data. . Finally, we calculate the mean squared error (MSE) between the actual target values (y_test) and the predicted values (y_pred) using the mean_squared_error function from scikit-learn. The MSE provides a measure of the average squared difference between the predicted and actual values. It is a measure of how well the model performs on the test data, where lower value indicates a better performance. We print the calculated MSE to evaluate the performance of the model. . In summary, this code demonstrates the process of splitting the dataset into training and test data, creating a linear regression model, fitting it, and then calculating the margin of error in testing. . import pandas as pd from sklearn.linear_model import LinearRegression from sklearn.metrics import mean_squared_error # Load the fitness dataset into a pandas DataFrame data = pd.DataFrame({ &#39;Duration&#39;: [30, 45, 60, 20, 35, 50, 25, 40, 55, 30, 45, 60, 20, 35, 50, 25, 40, 55, 30, 45], &#39;Heart Rate&#39;: [120, 140, 160, 110, 130, 150, 125, 145, 165, 120, 140, 160, 110, 130, 150, 125, 145, 165, 120, 140], &#39;Intensity Level&#39;: [3, 6, 9, 2, 5, 8, 4, 7, 10, 3, 6, 9, 2, 5, 8, 4, 7, 10, 3, 6], &#39;Calories Burned&#39;: [200, 300, 400, 150, 250, 350, 180, 280, 410, 210, 320, 390, 160, 240, 360, 170, 270, 400, 220, 310] }) # Split the dataset into training and test data train_data, test_data = train_test_split(data, test_size=5, random_state=42) # Separate the features (X) and the target variable (y) for training and test data X_train = train_data[[&#39;Duration&#39;, &#39;Heart Rate&#39;, &#39;Intensity Level&#39;]] y_train = train_data[&#39;Calories Burned&#39;] X_test = test_data[[&#39;Duration&#39;, &#39;Heart Rate&#39;, &#39;Intensity Level&#39;]] y_test = test_data[&#39;Calories Burned&#39;] # Create a linear regression model model = LinearRegression() # Fit the model to the training data model.fit(X_train, y_train) # Make predictions on the test data y_pred = model.predict(X_test) # Calculate the mean squared error mse = mean_squared_error(y_test, y_pred) print(&quot;Mean Squared Error:&quot;, mse) . Mean Squared Error: 569.4444444444464 . Model Testing and Interpretation . The mean squared error represents the inaccuracy of the model. A mean squared error of 569.444 indicates that the model is quite inaccurate. In general this can be fixed through a few ways: . Feature Engineering: Exploring other relevant factors to the variable “calories burned”. This may be even categorical like activity type. This would require changing your original dataset. | Data Cleaning: Reviewing the database for missing data, outliers, or inconsistent data.This would also require changing your original dataset. | Feature Scaling: Normalize the data so they are on a similar numerical scale. For example, calories burned is on a quite larger scale than intensity level. (up to 410 for calories versus up to 10 for intensity) | 4. Regularization: IMPORTANT CONCEPT ~ This is a method to prevent overfitting, which is essentially when the model “memorizes” data rather than associating. Think of it like this.. Say you are trying to study for a math test. You could go about it two ways: The first option is that you memorize all of the answers on your homework to a T. The other option is to take time to understand the concept so you are prepared for whatever may come your way on the test. Which would you choose? You probably said it is a better idea to choose the second option. If you chose the first option and saw something unfamiliar on the test, you would have no idea how to answer it! In this way, overfitting data is similar to option 1 (memorization). You do not want your model to be over-trained, or overfitted because it must be able to respond to a variety of data rather than just ‘memorize’ the test data. . Changes Made: . Polynomial Features: . Polynomial features are created using ‘PolynomialFeatures’ from scikit-learn. | The degree determines the maximum power to which each independent can be raised to. The degree=2, is an arbritary number. It depends on many factors like the complexity of the model, etc. but for simplcity it is customary to start at around 1-2 and then incrementally increase the degree, and reevaluate the models performance at each step. | By introducing polynomial features, the model can model non-linear relationships between the independent variables and the target variable. This flexibility allows the model to fit more complex patterns in the data and reduce the MSE. | Also this may indirectly affect the feature scaling, but it is not the primary purpose | . Ridge Regression: . Ridge regression is utilized using ‘Ridge’ from scikit-learn. It is a regularization technique. Essentially, every variable is given a ‘weight’ in how much it contributes to the end prediction. For example, the intensity level may have a higher weight, or impact on the calorie loss compared to duration of the workout. Ridge regression basically encourages the model to have smaller weights for each feature so the model doesn’t overfit or memorize as explained earlier. This controls the model’s complexity and again avoids overfitting. | By adding a small positive alpha (alpha=0.1 in this case), the model’s coefficients, or weights are penalized. This regularization helps reduce the impact of irrelevant features and prevents overfitting. | . Pipeline: . A pipeline is constructed using make_pipeline from scikit-learn. In simple terms: It combines multiple preprocessing steps into a single one | Using a pipeline allows for a more streamlined and concise implementation. It ensures that the transformations(mentioned above) are applied consistently to both the training and test data. | This is not an actual modification to the data/methods used | . import pandas as pd from sklearn.model_selection import train_test_split from sklearn.linear_model import Ridge from sklearn.preprocessing import PolynomialFeatures from sklearn.pipeline import make_pipeline from sklearn.metrics import mean_squared_error # Load the fitness dataset into a pandas DataFrame data = pd.DataFrame({ &#39;Duration&#39;: [30, 45, 60, 20, 35, 50, 25, 40, 55, 30, 45, 60, 20, 35, 50, 25, 40, 55, 30, 45], &#39;Heart Rate&#39;: [120, 140, 160, 110, 130, 150, 125, 145, 165, 120, 140, 160, 110, 130, 150, 125, 145, 165, 120, 140], &#39;Intensity Level&#39;: [3, 6, 9, 2, 5, 8, 4, 7, 10, 3, 6, 9, 2, 5, 8, 4, 7, 10, 3, 6], &#39;Calories Burned&#39;: [200, 300, 400, 150, 250, 350, 180, 280, 410, 210, 320, 390, 160, 240, 360, 170, 270, 400, 220, 310] }) # Split the dataset into training and test data X_train, X_test, y_train, y_test = train_test_split(data[[&#39;Duration&#39;, &#39;Heart Rate&#39;, &#39;Intensity Level&#39;]], data[&#39;Calories Burned&#39;], test_size=0.2, random_state=42) # Create a pipeline with polynomial features and Ridge regression model = make_pipeline(PolynomialFeatures(degree=2), Ridge(alpha=0.1)) # Fit the model to the training data model.fit(X_train, y_train) # Make predictions on the test data y_pred = model.predict(X_test) # Calculate the mean squared error mse = mean_squared_error(y_test, y_pred) print(&quot;Mean Squared Error:&quot;, mse) . Mean Squared Error: 108.33239800289937 . As you can see, the MSE (the inaccuracy) decreased significantly after the last change. I suggest you . Interactive Model Testing . The code below will run in terminal. It is an interactive model, where the user can enter their workout duration, heart rate, intensity level. They will recieve a prediction or estimate created by the linear regression model on number of calories burned. The user can input the actual number of calories burned to recieve an accuracy. . Test Data: . Duration (minutes): 30 | Heart Rate (bpm) : 140 | Intensity Level: 6 | Actual Calories Loss: 140 | . from sklearn.linear_model import LinearRegression def calculate_estimate(): duration = float(input(&quot;Enter Duration (minutes): &quot;)) heart_rate = float(input(&quot;Enter Heart Rate (bpm): &quot;)) intensity_level = float(input(&quot;Enter Intensity Level: &quot;)) # Make a prediction using the user input prediction = model.predict([[duration, heart_rate, intensity_level]]) print(&quot;Duration:&quot;,duration) print(&quot;Heart Rate:&quot;,heart_rate) print(&quot;Intensity Level:&quot;,intensity_level) print(&quot;Calorie Loss Estimate:&quot;, prediction[0]) actual_calories_burned = float(input(&quot;Enter Actual Calories Burned: &quot;)) print(&quot;Actual Calories Loss:&quot;, actual_calories_burned) percent_accuracy = 100 * (1 - abs(prediction[0] - actual_calories_burned) / actual_calories_burned) print(&quot;Percent Accuracy: {:.2f}%&quot;.format(percent_accuracy)) # Prompt user for input and calculate estimate calculate_estimate() . /home/tanisha1234/anaconda3/lib/python3.9/site-packages/sklearn/base.py:450: UserWarning: X does not have valid feature names, but LinearRegression was fitted with feature names warnings.warn( Duration: 20.0 Heart Rate: 140.0 Intensity Level: 6.0 Calorie Loss Estimate: 156.1542610571737 Actual Calories Loss: 140.0 Percent Accuracy: 88.46% . Hacks . Build a proper web frontend for this (or your own) regression model. (Machine learning can be a complicated concept…How can you make a simple UI to present the model to the user in an efficient way?) | Use real test cases on this model (Collect data from a real group of people - a sports team for example- and see if the calorie loss prediction is actually accurate. If the model is innacurate, what are some ways we discussed in the lesson to reduce innacuracy? Try implementing those ways!) | Add more components/independen variables to compliment the model. (How can you incorporate something like categorical- non numerical- data for example? What would this entail? Will adding more numerical categories increase the models accuracy.. or just overcomplicate it? Test these things on your own!) | For the math inclined people - try explaining the Math used in the sklearn learning models. Mathematically describe how these predefined methods (such as model.fit) really work. | Try a new machine learning model (decision tree regression, random forest) | Try to find the most important feature (independent variable) to determining calorie loss. (Try comparing coefficients, etc - this may require some more research) | Conclusion and Further Exploration . This lesson introduced the concept of using machine learning, specifically linear regression, to estimate calorie loss during fitness activities. This lesson explored how independent variables such as duration, heart rate, and intensity level can be used to predict the dependent variable, calories burned even when the model is non-linear. . Further Exploration: Here are some videos to watch to learn more about this topic. Researching on your own is HIGHLY encouraged! . A very simple explanation of what multivariable regression is (includes a graphical and mathematical perspective which may appeal to some students) : https://www.youtube.com/watch?v=SZ–3sUoNmY | Walkthrough of using sklearn in python for multivariable regression: https://www.youtube.com/watch?v=KYNuzfn5Fx0 | Explains underfitting, overfitting perfectly and gives suggestions! : https://www.youtube.com/watch?v=o3DztvnfAJg | . To further your understanding of machine learning and regression models, here are some suggestions: . Try Different Models: Experiment with other regression models such as decision trees, random forests,K nearest neighboors, and compare their performance to the linear regression model. Analyze the strengths and weaknesses of different models for this specific calorie loss estimation task. Different models are beneficial for their own reasons, it is important to learn how to weigh their pros and cons. . | Data Collection and Preprocessing: Collect a different dataset related to fitness activities (or a topic of your choice) and create your own model using linear regression. Research in incorporating catogorical elements such as “activity type” rather than just numerical ones - this would be an interesting take. . | Evaluation Metrics: Explore alternative evaluation metrics beyond mean squared error (MSE) for regression models. Consider metrics like mean absolute error (MAE) or R-squared to gain further insights into model performance. . | . Machine learning is vast, keep yourself updated! Continuously exploring and experimenting with different techniques, datasets, and evaluation metrics will deepen your proficiency in applying machine learning algorithms for various real-world scenarios. .",
            "url": "http://localhost:4100/teacher_portfolio/2023/09/19/python-pandas_ml_fitness_IPYNB_2_.html",
            "relUrl": "/2023/09/19/python-pandas_ml_fitness_IPYNB_2_.html",
            "date": " • Sep 19, 2023"
        }
        
    
  
    
        ,"post173": {
            "title": "Python Pandas",
            "content": "An Introduction . Interacting with data is something we do everyday, whether consciously or subconsciously. . If you are interested into going into any field of STEM - whether it be the medical field, data science, or computer science, you will often be working with large datasets with tons of useful AND useless information. . A skillset that is becoming increasingly important in these areas of work is the ability to effectively query and filter for data in large datasets and draw conclusions based on these filters. . Pandas . Pandas is a Python library that allows for the manipulation, querying, and filtering of data. . Over time, it has become one of the most popular Python libraries for data analysis. . Here is the documentation link: https://pandas.pydata.org/docs/ . Our Data . Data is readable in many formats. As someone who is working with datasets, you should be able to recognize what formats are easiest to understand for you and for any program that you write. Here are two of the most common data formats: . JSON: This is a standard file format that is very easy for humans and computers to read and write. It is a compact way to store data. . | CSV: These are comma-separated value files. This is where data has comma delimiters (separaters). . | For the purpose of this notebook, we’ll use a JSON file containing data about the average income level in each of the 50 states in the USA (located in /assets/datasets/income.json) . We will look to first understand and interpret the data ourselves and use Pandas and Numpy to provide insightful statistical information about the dataset that we may not be as easy to find by ourselves. . import pandas as pd df = pd.read_json(&#39;files/income.json&#39;) # This defines the dataframe in question. In this case, it is reading from the JSON file (hence read_json) income.json. # It is very important that the relative file path is correct, otherwise it won&#39;t be reading the file that you want it to. display(df) # This is now displaying the readable JSON data. . State MeanHouseholdIncome . 0 Alabama | 71964 | . 1 Alaska | 98811 | . 2 Arizona | 84380 | . 3 Arkansas | 69357 | . 4 California | 111622 | . 5 Colorado | 100933 | . 6 Connecticut | 115337 | . 7 Delaware | 92308 | . 8 Florida | 83104 | . 9 Georgia | 85961 | . 10 Hawaii | 107348 | . 11 Idaho | 77399 | . 12 Illinois | 95115 | . 13 Indiana | 76984 | . 14 Iowa | 80316 | . 15 Kansas | 82103 | . 16 Kentucky | 72318 | . 17 Louisiana | 73759 | . 18 Maine | 78301 | . 19 Maryland | 114236 | . 20 Massachusetts | 115964 | . 21 Michigan | 80803 | . 22 Minnesota | 96814 | . 23 Mississippi | 65156 | . 24 Missouri | 78194 | . 25 Montana | 76834 | . 26 Nebraska | 82306 | . 27 Nevada | 84350 | . 28 New Hampshire | 101292 | . 29 New Jersey | 117868 | . 30 New Mexico | 70241 | . 31 New York | 105304 | . 32 North Carolina | 79620 | . 33 North Dakota | 85506 | . 34 Ohio | 78796 | . 35 Oklahoma | 74195 | . 36 Oregon | 88137 | . 37 Pennsylvania | 87262 | . 38 Rhode Island | 92427 | . 39 South Carolina | 76390 | . 40 South Dakota | 77932 | . 41 Tennessee | 76937 | . 42 Texas | 89506 | . 43 Utah | 94452 | . 44 Vermont | 83767 | . 45 Virginia | 106023 | . 46 Washington | 103669 | . 47 West Virginia | 65332 | . 48 Wisconsin | 82757 | . 49 Wyoming | 83583 | . Dataset statistics . Let’s find and display some statistics from the dataset.. . dfmean = df[&quot;MeanHouseholdIncome&quot;].mean() # Defines dfmean as using the &quot;mean&quot; operation (finds average) of the dataframe in question. # A label is given to make sure that the user knows what is being computed. print(&quot;Mean Household Income: $&quot; + str(dfmean)) # The dfmean value is converted into a string format so that there is no space between the dollar sign and the mean value. . Mean Household Income: $87461.46 . Dataframe sort, Household Income . In this example, analytical data is sorted. . df.sort_values(by=&quot;MeanHouseholdIncome&quot;) # 50 states are being sorted based on the &quot;MeanHouseholdIncome&quot; column in ascending order . State MeanHouseholdIncome . 23 Mississippi | 65156 | . 47 West Virginia | 65332 | . 3 Arkansas | 69357 | . 30 New Mexico | 70241 | . 0 Alabama | 71964 | . 16 Kentucky | 72318 | . 17 Louisiana | 73759 | . 35 Oklahoma | 74195 | . 39 South Carolina | 76390 | . 25 Montana | 76834 | . 41 Tennessee | 76937 | . 13 Indiana | 76984 | . 11 Idaho | 77399 | . 40 South Dakota | 77932 | . 24 Missouri | 78194 | . 18 Maine | 78301 | . 34 Ohio | 78796 | . 32 North Carolina | 79620 | . 14 Iowa | 80316 | . 21 Michigan | 80803 | . 15 Kansas | 82103 | . 26 Nebraska | 82306 | . 48 Wisconsin | 82757 | . 8 Florida | 83104 | . 49 Wyoming | 83583 | . 44 Vermont | 83767 | . 27 Nevada | 84350 | . 2 Arizona | 84380 | . 33 North Dakota | 85506 | . 9 Georgia | 85961 | . 37 Pennsylvania | 87262 | . 36 Oregon | 88137 | . 42 Texas | 89506 | . 7 Delaware | 92308 | . 38 Rhode Island | 92427 | . 43 Utah | 94452 | . 12 Illinois | 95115 | . 22 Minnesota | 96814 | . 1 Alaska | 98811 | . 5 Colorado | 100933 | . 28 New Hampshire | 101292 | . 46 Washington | 103669 | . 31 New York | 105304 | . 45 Virginia | 106023 | . 10 Hawaii | 107348 | . 4 California | 111622 | . 19 Maryland | 114236 | . 6 Connecticut | 115337 | . 20 Massachusetts | 115964 | . 29 New Jersey | 117868 | . Dataframe sort, State . In this example, categorical can be sorted. . df.sort_values(by=&quot;State&quot;) # The data is sorted alphabetically based on the &quot;State&quot; column. . State MeanHouseholdIncome . 0 Alabama | 71964 | . 1 Alaska | 98811 | . 2 Arizona | 84380 | . 3 Arkansas | 69357 | . 4 California | 111622 | . 5 Colorado | 100933 | . 6 Connecticut | 115337 | . 7 Delaware | 92308 | . 8 Florida | 83104 | . 9 Georgia | 85961 | . 10 Hawaii | 107348 | . 11 Idaho | 77399 | . 12 Illinois | 95115 | . 13 Indiana | 76984 | . 14 Iowa | 80316 | . 15 Kansas | 82103 | . 16 Kentucky | 72318 | . 17 Louisiana | 73759 | . 18 Maine | 78301 | . 19 Maryland | 114236 | . 20 Massachusetts | 115964 | . 21 Michigan | 80803 | . 22 Minnesota | 96814 | . 23 Mississippi | 65156 | . 24 Missouri | 78194 | . 25 Montana | 76834 | . 26 Nebraska | 82306 | . 27 Nevada | 84350 | . 28 New Hampshire | 101292 | . 29 New Jersey | 117868 | . 30 New Mexico | 70241 | . 31 New York | 105304 | . 32 North Carolina | 79620 | . 33 North Dakota | 85506 | . 34 Ohio | 78796 | . 35 Oklahoma | 74195 | . 36 Oregon | 88137 | . 37 Pennsylvania | 87262 | . 38 Rhode Island | 92427 | . 39 South Carolina | 76390 | . 40 South Dakota | 77932 | . 41 Tennessee | 76937 | . 42 Texas | 89506 | . 43 Utah | 94452 | . 44 Vermont | 83767 | . 45 Virginia | 106023 | . 46 Washington | 103669 | . 47 West Virginia | 65332 | . 48 Wisconsin | 82757 | . 49 Wyoming | 83583 | . Statistical summary . In this example, all the summary statistics generated using: df.describe. . print(df.describe()) . MeanHouseholdIncome count 50.000000 mean 87461.460000 std 13945.982845 min 65156.000000 25% 77532.250000 50% 83675.000000 75% 96389.250000 max 117868.000000 . Statistical Review . As seen in the above output, the dataframe is being described from the information for the column where applicable statistics are present. The “count” statistic for example, is the number of not-empty cells in the mean household income column. The mean is the average mean household income across all 50 states, and the standard deviation is how much the values within the mean household income column deviate from the mean. . It is important to note that in many more complex datasets, there will be multiple columns with explanatory data. In those cases, the df.describe() method will need to be specified based on a specific column. . Conclusion . What are the key takeaways from this lesson? . The purpose is to obtain a basic understanding of working with a dataset, using Pandas dataframes. To obtain a more comprehensive understanding of Pandas capabilities, research operations such as filtering data based on certain criteria, grouping data, or performing calculations on multiple columns. Additional work can be done with these Python modules (ie numpy, matplotlib). . Explain each example briefly and provide a real-world scenario where such an operation would be useful. Every dataset that you work with should have a purpose - that’s what the field of data science is all about. . For instance, in the Household income example, we analyzed a mean household income by state dataset. This could be applicable if someone wanted to find out where the most affordable place to live. . Find the minimum household income | Expand data to look at affordability of areas within state | Perhaps add other factors like employment in those areas | . Additional Resources . Pandas Documentation This is an essential resource for learning about Pandas and its various functionalities. It provides detailed documentation, examples, and explanations of different methods and operations. | . | Data Science Applications This resource provides an overview of major applications of data science across various domains. It can help students understand the practical implications of data analysis and how it is used in different industries. | . | Kaggle Datasets Kaggle is a popular platform for data science and machine learning. It offers a wide range of datasets for practice and exploration. Students can find interesting datasets on different topics to apply their Pandas learning and gain hands-on experience. | . | NumPy Documentation NumPy is another important Python library often used in conjunction with Pandas for numerical operations and scientific computing. The official NumPy documentation provides in-depth explanations and examples of working with arrays, mathematical functions, and more. | . | Matplotlib Documentation Matplotlib is a powerful data visualization library in Python. It allows students to create a wide range of plots and charts to visualize their data. The Matplotlib documentation offers comprehensive guidance on creating different types of visualizations, customizing plots, and using various plotting functions. By referring to these resources, students can further expand their knowledge and explore advanced topics in Pandas, NumPy, and data visualization. | . | Hacks . Find a CSV/JSON Dataset that interests you. Refer to Kaggle Datasets mentioned above. . | Try to show your Pandas learning by illustrating 5 different numerical analysis operations being done on the dataset. After showing each operation in a separate code block, add a sentence explaining what that operation is showing and what real-world implication it has. It is important to make sure that you are not only able to run code to analyze data, but also understand its implications. . | EXTRA: Research Matplotlib Documentation mentioned and implement a code block where you create a graph showing and visualize relationship in your chosen dataset. Then, add a sentence or two explaining what the relationship shows. . |",
            "url": "http://localhost:4100/teacher_portfolio/c4.0/2023/09/19/python-pandas_intro_IPYNB_2_.html",
            "relUrl": "/c4.0/2023/09/19/python-pandas_intro_IPYNB_2_.html",
            "date": " • Sep 19, 2023"
        }
        
    
  
    
        ,"post174": {
            "title": "PP Ideation CheckPoint",
            "content": "Create Frontend Design . Design for Frontend is typically perfomed in a drawing tool like Figma or Canva. Typically, there is transition between one or more pages including description of inputs and outputs. . Build a Data Model(s) using UML . Traditionally I would use Visio, but Figna Figjam or Canva may be a good alternatives. In any system you need data and trying to analyze how it will work in a definition is critical to success. . Start shared Frontend Repo using GitHub Pages . Make a team repository from the student repo. Reduce and customize for need, for instance you probably don’t need a Time Box or Blog page. Start to build out User Interface (UI) according to Frontend Design. Frontend developers will design frontend and screen transitions before data is available, this meet requirements of this step in process. . Student Repo | New Nighthawk-Pages includes on pages search, built with minima themes with more intuitve SASS customizations. | . Start Backend Repo using Flask/Flask . Make a team repository from flask portfolio. Review flask anatomy and start to customize for your needs. On a backend you usually have an Adminstrative User Interface and APIs. According to UML design you can start defining APIs with static data to support development. Early testing is done with a tool called Postman, this would meet requirements of this step in process. . Flask Repo | . Deploy on AWS . To deploy you need minimal backend software. In fact, you should be able to start deployment process once you start your flask portfolio project. Follow deployment guide. You will need to pick a subdomain using AWS Route 53. .",
            "url": "http://localhost:4100/teacher_portfolio/2023/09/18/unit-2-data-project-design.html",
            "relUrl": "/2023/09/18/unit-2-data-project-design.html",
            "date": " • Sep 18, 2023"
        }
        
    
  
    
        ,"post175": {
            "title": "2.3 Extracting Data, Pandas",
            "content": "Files To Get . Save this file to your _notebooks folder . wget https://raw.githubusercontent.com/nighthawkcoders/APCSP/master/_notebooks/2023-03-09-AP-unit2-3.ipynb . Save these files into a subfolder named files in your _notebooks folder . wget https://raw.githubusercontent.com/nighthawkcoders/APCSP/master/_notebooks/files/data.csv . wget https://raw.githubusercontent.com/nighthawkcoders/APCSP/master/_notebooks/files/grade.json . Save this image into a subfolder named images in your _notebooks folder . wget https://raw.githubusercontent.com/nighthawkcoders/APCSP/master/_notebooks/images/table_dataframe.png . Pandas and DataFrames . In this lesson we will be exploring data analysis using Pandas. . College Board talks about ideas like Tools. “the ability to process data depends on users capabilities and their tools” | Combining Data. “combine county data sets” | Status on Data”determining the artist with the greatest attendance during a particular month” | Data poses challenge. “the need to clean data”, “incomplete data” | . | From Pandas Overview – When working with tabular data, such as data stored in spreadsheets or databases, pandas is the right tool for you. pandas will help you to explore, clean, and process your data. In pandas, a data table is called a DataFrame. | . . &#39;&#39;&#39;Pandas is used to gather data sets through its DataFrames implementation&#39;&#39;&#39; import pandas as pd . Cleaning Data . When looking at a data set, check to see what data needs to be cleaned. Examples include: . Missing Data Points | Invalid Data | Inaccurate Data | . Run the following code to see what needs to be cleaned . # reads the JSON file and converts it to a Pandas DataFrame df = pd.read_json(&#39;files/grade.json&#39;) print(df) # What part of the data set needs to be cleaned? # From PBL learning, what is a good time to clean data? Hint, remember Garbage in, Garbage out? . Student ID Year in School GPA 0 123 12 3.57 1 246 10 4.00 2 578 12 2.78 3 469 11 3.45 4 324 Junior 4.75 5 313 20 3.33 6 145 12 2.95 7 167 10 3.90 8 235 9th Grade 3.15 9 nil 9 2.80 10 469 11 3.45 11 456 10 2.75 . Extracting Info . Take a look at some features that the Pandas library has that extracts info from the dataset . DataFrame Extract Column . #print the values in the points column with column header print(df[[&#39;GPA&#39;]]) print() #try two columns and remove the index from print statement print(df[[&#39;Student ID&#39;,&#39;GPA&#39;]].to_string(index=False)) . GPA 0 3.57 1 4.00 2 2.78 3 3.45 4 4.75 5 3.33 6 2.95 7 3.90 8 3.15 9 2.80 10 3.45 11 2.75 Student ID GPA 123 3.57 246 4.00 578 2.78 469 3.45 324 4.75 313 3.33 145 2.95 167 3.90 235 3.15 nil 2.80 469 3.45 456 2.75 . DataFrame Sort . #sort values print(df.sort_values(by=[&#39;GPA&#39;])) print() #sort the values in reverse order print(df.sort_values(by=[&#39;GPA&#39;], ascending=False)) . Student ID Year in School GPA 11 456 10 2.75 2 578 12 2.78 9 nil 9 2.80 6 145 12 2.95 8 235 9th Grade 3.15 5 313 20 3.33 3 469 11 3.45 10 469 11 3.45 0 123 12 3.57 7 167 10 3.90 1 246 10 4.00 4 324 Junior 4.75 Student ID Year in School GPA 4 324 Junior 4.75 1 246 10 4.00 7 167 10 3.90 0 123 12 3.57 3 469 11 3.45 10 469 11 3.45 5 313 20 3.33 8 235 9th Grade 3.15 6 145 12 2.95 9 nil 9 2.80 2 578 12 2.78 11 456 10 2.75 . DataFrame Selection or Filter . #print only values with a specific criteria print(df[df.GPA &gt; 3.00]) . Student ID Year in School GPA 0 123 12 3.57 1 246 10 4.00 3 469 11 3.45 4 324 Junior 4.75 5 313 20 3.33 7 167 10 3.90 8 235 9th Grade 3.15 10 469 11 3.45 . DataFrame Selection Max and Min . print(df[df.GPA == df.GPA.max()]) print() print(df[df.GPA == df.GPA.min()]) . Student ID Year in School GPA 4 324 Junior 4.75 Student ID Year in School GPA 11 456 10 2.75 . Create your own DataFrame . Using Pandas allows you to create your own DataFrame in Python. . Python Dictionary to Pandas DataFrame . import pandas as pd #the data can be stored as a python dictionary dict = { &quot;calories&quot;: [420, 380, 390], &quot;duration&quot;: [50, 40, 45] } #stores the data in a data frame print(&quot;-Dict_to_DF&quot;) df = pd.DataFrame(dict) print(df) print(&quot;-Dict_to_DF_labels--&quot;) #or with the index argument, you can label rows. df = pd.DataFrame(dict, index = [&quot;day1&quot;, &quot;day2&quot;, &quot;day3&quot;]) print(df) . -Dict_to_DF calories duration 0 420 50 1 380 40 2 390 45 -Dict_to_DF_labels-- calories duration day1 420 50 day2 380 40 day3 390 45 . Examine DataFrame Rows . print(&quot;-Examine Selected Rows&quot;) #use a list for multiple labels: print(df.loc[[&quot;day1&quot;, &quot;day3&quot;]]) #refer to the row index: print(&quot;--Examine Single Row--&quot;) print(df.loc[&quot;day1&quot;]) . -Examine Selected Rows calories duration day1 420 50 day3 390 45 --Examine Single Row-- calories 420 duration 50 Name: day1, dtype: int64 . Pandas DataFrame Information . #print info about the data set print(df.info()) . &lt;class &#39;pandas.core.frame.DataFrame&#39;&gt; Index: 3 entries, day1 to day3 Data columns (total 2 columns): # Column Non-Null Count Dtype -- -- 0 calories 3 non-null int64 1 duration 3 non-null int64 dtypes: int64(2) memory usage: 180.0+ bytes None . Example of larger data set . Pandas can read CSV and many other types of files, run the following code to see more features with a larger data set . import pandas as pd #read csv and sort &#39;Duration&#39; largest to smallest df = pd.read_csv(&#39;files/data.csv&#39;).sort_values(by=[&#39;Duration&#39;], ascending=False) print(&quot;--Duration Top 10&quot;) print(df.head(10)) print(&quot;--Duration Bottom 10&quot;) print(df.tail(10)) . --Duration Top 10 Duration Pulse Maxpulse Calories 69 300 108 143 1500.2 79 270 100 131 1729.0 109 210 137 184 1860.4 60 210 108 160 1376.0 106 180 90 120 800.3 90 180 101 127 600.1 65 180 90 130 800.4 61 160 110 137 1034.4 62 160 109 135 853.0 67 150 107 130 816.0 --Duration Bottom 10 Duration Pulse Maxpulse Calories 68 20 106 136 110.4 100 20 95 112 77.7 89 20 83 107 50.3 135 20 136 156 189.0 94 20 150 171 127.4 95 20 151 168 229.4 139 20 141 162 222.4 64 20 110 130 131.4 112 15 124 139 124.2 93 15 80 100 50.5 . APIs are a Source for Writing Programs with Data . 3rd Party APIs are a great source for creating Pandas Data Frames. . Data can be fetched and resulting json can be placed into a Data Frame | Observe output, this looks very similar to a Database | . &#39;&#39;&#39;Pandas can be used to analyze data&#39;&#39;&#39; import pandas as pd import requests def fetch(): &#39;&#39;&#39;Obtain data from an endpoint&#39;&#39;&#39; url = &quot;https://flask.nighthawkcodingsociety.com/api/covid/&quot; fetch = requests.get(url) json = fetch.json() # filter data for requirement df = pd.DataFrame(json[&#39;countries_stat&#39;]) # filter endpoint for country stats print(df.loc[0:5, &#39;country_name&#39;:&#39;deaths&#39;]) # show row 0 through 5 and columns country_name through deaths fetch() . country_name cases deaths 0 USA 82,649,779 1,018,316 1 India 43,057,545 522,193 2 Brazil 30,345,654 662,663 3 France 28,244,977 145,020 4 Germany 24,109,433 134,624 5 UK 21,933,206 173,352 . Hacks . Early Seed award . Add this Blog to you own Blogging site. | Have all lecture files saved to your files directory before Tech Talk starts. Have data.csv open in vscode. Don’t tell anyone. Show to Teacher. | . AP Prep . Add this Blog to you own Blogging site. In the Blog add notes and observations on each code cell. | In blog add College Board practice problems for 2.3. | . The next 4 weeks, Teachers want you to improve your understanding of data. Look at the blog and others on Unit 2. Your intention is to find some things to differentiate your individual College Board project. . Create or Find your own dataset. The suggestion is to use a JSON file, integrating with your PBL project would be Amazing. . | When choosing a data set, think about the following… . Does it have a good sample size? | Is there bias in the data? | Does the data set need to be cleaned? | What is the purpose of the data set? | … | . | Continue this Blog using Pandas extract info from that dataset (ex. max, min, mean, median, mode, etc.) . | . Hack Helpers . Here is how Mort started on this assignment by asking ChatGPT … Regarding Python Pandas, what are some data sets that would be good for learning Pandas? . There are many data sets that are suitable for learning pandas, depending on your interests and the skills you want to develop. . Here are some suggestions… . Titanic Dataset: This is a classic dataset for data analysis and machine learning, and is often used as an introduction to pandas. The dataset contains information about passengers on the Titanic, including their demographics, ticket class, and survival status. . | Iris Dataset: This is another classic dataset that is often used in machine learning and data analysis courses. The dataset contains information about iris flowers, including their sepal length, sepal width, petal length, and petal width. . | NBA Player Stats: This dataset contains information about NBA players, including their stats for various games, their positions, and their salaries. It is a great dataset for learning how to clean and manipulate data using pandas. . | Housing Prices Dataset: This dataset contains information about housing prices in a particular city or region, including variables such as the number of bedrooms, square footage, and price. It is a great dataset for learning how to manipulate and analyze numerical data using pandas. . | COVID-19 Dataset: This dataset contains information about the COVID-19 pandemic, including the number of cases, deaths, and recoveries in various countries and regions. It is a great dataset for learning how to manipulate and analyze time-series data using pandas. . | World Bank Dataset: This dataset contains information about economic indicators from various countries, such as GDP, population, and poverty rates. It is a great dataset for learning how to manipulate and analyze large datasets using pandas. . | . | These are just a few examples of the many datasets that are suitable for learning pandas. The best dataset for you will depend on your interests and the specific skills you want to develop. . | . Follow up question, “where can I find Titanic data set?” . The Titanic dataset is a popular dataset for data analysis and machine learning, and it can be found on various websites and data repositories. Here are a few places where you can find the Titanic dataset… . Kaggle: The Titanic dataset is available on Kaggle, which is a popular platform for data scientists and machine learning enthusiasts. You can download the dataset from the Kaggle website after creating an account. . | UCI Machine Learning Repository: The Titanic dataset is also available on the UCI Machine Learning Repository, which is a collection of datasets that are commonly used for machine learning research. You can download the dataset from the UCI Machine Learning Repository website. . | Seaborn library: If you have the Seaborn library installed in your Python environment, you can load the Titanic dataset directly from the library using the following code: . | . import seaborn as sns titanic_data = sns.load_dataset(&#39;titanic&#39;) . | . Titanic Data . Look at a sample of data. . import seaborn as sns # Load the titanic dataset titanic_data = sns.load_dataset(&#39;titanic&#39;) print(&quot;Titanic Data&quot;) print(titanic_data.columns) # titanic data set print(titanic_data[[&#39;survived&#39;,&#39;pclass&#39;, &#39;sex&#39;, &#39;age&#39;, &#39;sibsp&#39;, &#39;parch&#39;, &#39;class&#39;, &#39;fare&#39;, &#39;embark_town&#39;]]) # look at selected columns . Titanic Data Index([&#39;survived&#39;, &#39;pclass&#39;, &#39;sex&#39;, &#39;age&#39;, &#39;sibsp&#39;, &#39;parch&#39;, &#39;fare&#39;, &#39;embarked&#39;, &#39;class&#39;, &#39;who&#39;, &#39;adult_male&#39;, &#39;deck&#39;, &#39;embark_town&#39;, &#39;alive&#39;, &#39;alone&#39;], dtype=&#39;object&#39;) survived pclass sex age sibsp parch class fare 0 0 3 male 22.0 1 0 Third 7.2500 1 1 1 female 38.0 1 0 First 71.2833 2 1 3 female 26.0 0 0 Third 7.9250 3 1 1 female 35.0 1 0 First 53.1000 4 0 3 male 35.0 0 0 Third 8.0500 .. ... ... ... ... ... ... ... ... 886 0 2 male 27.0 0 0 Second 13.0000 887 1 1 female 19.0 0 0 First 30.0000 888 0 3 female NaN 1 2 Third 23.4500 889 1 1 male 26.0 0 0 First 30.0000 890 0 3 male 32.0 0 0 Third 7.7500 embark_town 0 Southampton 1 Cherbourg 2 Southampton 3 Southampton 4 Southampton .. ... 886 Southampton 887 Southampton 888 Southampton 889 Cherbourg 890 Queenstown [891 rows x 9 columns] . Use Pandas to clean the data. Most analysis, like Machine Learning or even Pandas in general like data to be in standardized format. This is called ‘Training’ or ‘Cleaning’ data. . # Preprocess the data from sklearn.preprocessing import OneHotEncoder td = titanic_data td.drop([&#39;alive&#39;, &#39;who&#39;, &#39;adult_male&#39;, &#39;class&#39;, &#39;embark_town&#39;, &#39;deck&#39;], axis=1, inplace=True) td.dropna(inplace=True) td[&#39;sex&#39;] = td[&#39;sex&#39;].apply(lambda x: 1 if x == &#39;male&#39; else 0) td[&#39;alone&#39;] = td[&#39;alone&#39;].apply(lambda x: 1 if x == True else 0) # Encode categorical variables enc = OneHotEncoder(handle_unknown=&#39;ignore&#39;) enc.fit(td[[&#39;embarked&#39;]]) onehot = enc.transform(td[[&#39;embarked&#39;]]).toarray() cols = [&#39;embarked_&#39; + val for val in enc.categories_[0]] td[cols] = pd.DataFrame(onehot) td.drop([&#39;embarked&#39;], axis=1, inplace=True) td.dropna(inplace=True) print(td) . survived pclass sex age sibsp parch fare alone embarked_C 0 0 3 1 22.0 1 0 7.2500 0 0.0 1 1 1 0 38.0 1 0 71.2833 0 1.0 2 1 3 0 26.0 0 0 7.9250 1 0.0 3 1 1 0 35.0 1 0 53.1000 0 0.0 4 0 3 1 35.0 0 0 8.0500 1 0.0 .. ... ... ... ... ... ... ... ... ... 705 0 2 1 39.0 0 0 26.0000 1 0.0 706 1 2 0 45.0 0 0 13.5000 1 0.0 707 1 1 1 42.0 0 0 26.2875 1 0.0 708 1 1 0 22.0 0 0 151.5500 1 0.0 710 1 1 0 24.0 0 0 49.5042 1 1.0 embarked_Q embarked_S 0 0.0 1.0 1 0.0 0.0 2 0.0 1.0 3 0.0 1.0 4 0.0 1.0 .. ... ... 705 0.0 1.0 706 0.0 1.0 707 1.0 0.0 708 0.0 1.0 710 0.0 0.0 [564 rows x 11 columns] . The result of ‘Training’ data is making it easier to analyze or make conclusions. In looking at the Titanic, as you clean you would probably want to make assumptions on likely chance of survival. . This would involve analyzing various factors (such as age, gender, class, etc.) that may have affected a person’s chances of survival, and using that information to make predictions about whether an individual would have survived or not. . Data description: Survival - Survival (0 = No; 1 = Yes). Not included in test.csv file. | Pclass - Passenger Class (1 = 1st; 2 = 2nd; 3 = 3rd) | Name - Name | Sex - Sex | Age - Age | Sibsp - Number of Siblings/Spouses Aboard | Parch - Number of Parents/Children Aboard | Ticket - Ticket Number | Fare - Passenger Fare | Cabin - Cabin | Embarked - Port of Embarkation (C = Cherbourg; Q = Queenstown; S = Southampton) | . | Perished Mean/Average | . print(titanic_data.query(&quot;survived == 0&quot;).mean()) . survived 0.000000 pclass 2.464072 sex 0.844311 age 31.073353 sibsp 0.562874 parch 0.398204 fare 24.835902 alone 0.616766 embarked_C 0.185629 embarked_Q 0.038922 embarked_S 0.775449 dtype: float64 . Survived Mean/Average | . print(td.query(&quot;survived == 1&quot;).mean()) . survived 1.000000 pclass 1.878261 sex 0.326087 age 28.481522 sibsp 0.504348 parch 0.508696 fare 50.188806 alone 0.456522 embarked_C 0.152174 embarked_Q 0.034783 embarked_S 0.813043 dtype: float64 . Survived Max and Min Stats . print(td.query(&quot;survived == 1&quot;).max()) print(td.query(&quot;survived == 1&quot;).min()) . survived 1.0000 pclass 3.0000 sex 1.0000 age 80.0000 sibsp 4.0000 parch 5.0000 fare 512.3292 alone 1.0000 embarked_C 1.0000 embarked_Q 1.0000 embarked_S 1.0000 dtype: float64 survived 1.00 pclass 1.00 sex 0.00 age 0.75 sibsp 0.00 parch 0.00 fare 0.00 alone 0.00 embarked_C 0.00 embarked_Q 0.00 embarked_S 0.00 dtype: float64 . Machine Learning Visit Tutorials Point . Scikit-learn (Sklearn) is the most useful and robust library for machine learning in Python. It provides a selection of efficient tools for machine learning and statistical modeling including classification, regression, clustering and dimensionality reduction via a consistence interface in Python. . Description from ChatGPT. The Titanic dataset is a popular dataset for data analysis and machine learning. In the context of machine learning, accuracy refers to the percentage of correctly classified instances in a set of predictions. In this case, the testing data is a subset of the original Titanic dataset that the decision tree model has not seen during training……After training the decision tree model on the training data, we can evaluate its performance on the testing data by making predictions on the testing data and comparing them to the actual outcomes. The accuracy of the decision tree classifier on the testing data tells us how well the model generalizes to new data that it hasn’t seen before……For example, if the accuracy of the decision tree classifier on the testing data is 0.8 (or 80%), this means that 80% of the predictions made by the model on the testing data were correct….Chance of survival could be done using various machine learning techniques, including decision trees, logistic regression, or support vector machines, among others. . | Code Below prepares data for further analysis and provides an Accuracy. IMO, you would insert a new passenger and predict survival. Datasets could be used on various factors like prediction if a player will hit a Home Run, or a Stock will go up or down. . Decision Trees, prediction by a piecewise constant approximation. . | Logistic Regression, the probabilities describing the possible outcomes. . | . | . from sklearn.model_selection import train_test_split from sklearn.tree import DecisionTreeClassifier from sklearn.linear_model import LogisticRegression from sklearn.metrics import accuracy_score # Split arrays or matrices into random train and test subsets. X = td.drop(&#39;survived&#39;, axis=1) y = td[&#39;survived&#39;] X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.3, random_state=42) # Train a decision tree classifier dt = DecisionTreeClassifier() dt.fit(X_train, y_train) # Test the model y_pred = dt.predict(X_test) accuracy = accuracy_score(y_test, y_pred) print(&#39;DecisionTreeClassifier Accuracy:&#39;, accuracy) # Train a logistic regression model logreg = LogisticRegression() logreg.fit(X_train, y_train) # Test the model y_pred = logreg.predict(X_test) accuracy = accuracy_score(y_test, y_pred) print(&#39;LogisticRegression Accuracy:&#39;, accuracy) . DecisionTreeClassifier Accuracy: 0.7705882352941177 LogisticRegression Accuracy: 0.788235294117647 /Users/johnmortensen/opt/anaconda3/lib/python3.9/site-packages/sklearn/linear_model/_logistic.py:814: ConvergenceWarning: lbfgs failed to converge (status=1): STOP: TOTAL NO. of ITERATIONS REACHED LIMIT. Increase the number of iterations (max_iter) or scale the data as shown in: https://scikit-learn.org/stable/modules/preprocessing.html Please also refer to the documentation for alternative solver options: https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression n_iter_i = _check_optimize_result( .",
            "url": "http://localhost:4100/teacher_portfolio/2023/09/18/python-pandas-U2-3_IPYNB_2_.html",
            "relUrl": "/2023/09/18/python-pandas-U2-3_IPYNB_2_.html",
            "date": " • Sep 18, 2023"
        }
        
    
  
    
        ,"post176": {
            "title": "2.2 Data Compression, Images",
            "content": "Enumerate “Data” Big Idea from College Board . Some of the big ideas and vocab that you observe, talk about it with a partner … . “Data compression is the reduction of the number of bits needed to represent data” | “Data compression is used to save transmission time and storage space.” | “lossy data can reduce data but the original data is not recovered” | “lossless data lets you restore and recover” | . The Image Lab Project contains a plethora of College Board Unit 2 data concepts. Working with Images provides many opportunities for compression and analyzing size. . Image Files and Size . Here are some Images Files. Download these files, load them into images directory under _notebooks in your Blog. . Clouds Impression | Lassen Volcano | Green Square | . Describe some of the meta data and considerations when managing Image files. Describe how these relate to Data Compression … . File Type, PNG and JPG are two types used in this lab | Size, height and width, number of pixels | Visual perception, lossy compression | . Displaying images in Python Jupyter notebook . Python Libraries and Concepts used for Jupyter and Files/Directories . IPython . Support visualization of data in Jupyter notebooks. Visualization is specific to View, for the web visualization needs to be converted to HTML. . pathlib . File paths are different on Windows versus Mac and Linux. This can cause problems in a project as you work and deploy on different Operating Systems (OS’s), pathlib is a solution to this problem. . What are commands you use in terminal to access files? | What are the command you use in Windows terminal to access files? | What are some of the major differences? | . Provide what you observed, struggled with, or leaned while playing with this code. . Why is path a big deal when working with images? | How does the meta data source and label relate to Unit 5 topics? | Look up IPython, describe why this is interesting in Jupyter Notebooks for both Pandas and Images? | . from IPython.display import Image, display from pathlib import Path # https://medium.com/@ageitgey/python-3-quick-tip-the-easy-way-to-deal-with-file-paths-on-windows-mac-and-linux-11a072b58d5f # prepares a series of images def image_data(path=Path(&quot;images/&quot;), images=None): # path of static images is defaulted if images is None: # default image images = [ {&#39;source&#39;: &quot;Peter Carolin&quot;, &#39;label&#39;: &quot;Clouds Impression&quot;, &#39;file&#39;: &quot;clouds-impression.png&quot;}, {&#39;source&#39;: &quot;Peter Carolin&quot;, &#39;label&#39;: &quot;Lassen Volcano&quot;, &#39;file&#39;: &quot;lassen-volcano.jpg&quot;} ] for image in images: # File to open image[&#39;filename&#39;] = path / image[&#39;file&#39;] # file with path return images def image_display(images): for image in images: display(Image(filename=image[&#39;filename&#39;])) # Run this as standalone tester to see sample data printed in Jupyter terminal if __name__ == &quot;__main__&quot;: # print parameter supplied image green_square = image_data(images=[{&#39;source&#39;: &quot;Internet&quot;, &#39;label&#39;: &quot;Green Square&quot;, &#39;file&#39;: &quot;green-square-16.png&quot;}]) image_display(green_square) # display default images from image_data() default_images = image_data() image_display(default_images) . Reading and Encoding Images (2 implementations follow) . PIL (Python Image Library) . Pillow or PIL provides the ability to work with images in Python. Geeks for Geeks shows some ideas on working with images. . base64 . Image formats (JPG, PNG) are often called *Binary File formats, it is difficult to pass these over HTTP. Thus, base64 converts binary encoded data (8-bit, ASCII/Unicode) into a text encoded scheme (24 bits, 6-bit Base64 digits). Thus base64 is used to transport and embed binary images into textual assets such as HTML and CSS. . How is Base64 similar or different to Binary and Hexadecimal? | Translate first 3 letters of your name to Base64. | . numpy . Numpy is described as “The fundamental package for scientific computing with Python”. In the Image Lab, a Numpy array is created from the image data in order to simplify access and change to the RGB values of the pixels, converting pixels to grey scale. . io, BytesIO . Input and Output (I/O) is a fundamental of all Computer Programming. Input/output (I/O) buffering is a technique used to optimize I/O operations. In large quantities of data, how many frames of input the server currently has queued is the buffer. In this example, there is a very large picture that lags. . Where have you been a consumer of buffering? | From your consumer experience, what effects have you experienced from buffering? | How do these effects apply to images? | . Data Structures, Imperative Programming Style, and working with Images . Introduction to creating meta data and manipulating images. Look at each procedure and explain the the purpose and results of this program. Add any insights or challenges as you explored this program. . Does this code seem like a series of steps are being performed? | Describe Grey Scale algorithm in English or Pseudo code? | Describe scale image? What is before and after on pixels in three images? | Is scale image a type of compression? If so, line it up with College Board terms described? | . from IPython.display import HTML, display from pathlib import Path # https://medium.com/@ageitgey/python-3-quick-tip-the-easy-way-to-deal-with-file-paths-on-windows-mac-and-linux-11a072b58d5f from PIL import Image as pilImage # as pilImage is used to avoid conflicts from io import BytesIO import base64 import numpy as np # prepares a series of images def image_data(path=Path(&quot;images/&quot;), images=None): # path of static images is defaulted if images is None: # default image images = [ {&#39;source&#39;: &quot;Internet&quot;, &#39;label&#39;: &quot;Green Square&quot;, &#39;file&#39;: &quot;green-square-16.png&quot;}, {&#39;source&#39;: &quot;Peter Carolin&quot;, &#39;label&#39;: &quot;Clouds Impression&quot;, &#39;file&#39;: &quot;clouds-impression.png&quot;}, {&#39;source&#39;: &quot;Peter Carolin&quot;, &#39;label&#39;: &quot;Lassen Volcano&quot;, &#39;file&#39;: &quot;lassen-volcano.jpg&quot;} ] for image in images: # File to open image[&#39;filename&#39;] = path / image[&#39;file&#39;] # file with path return images # Large image scaled to baseWidth of 320 def scale_image(img): baseWidth = 320 scalePercent = (baseWidth/float(img.size[0])) scaleHeight = int((float(img.size[1])*float(scalePercent))) scale = (baseWidth, scaleHeight) return img.resize(scale) # PIL image converted to base64 def image_to_base64(img, format): with BytesIO() as buffer: img.save(buffer, format) return base64.b64encode(buffer.getvalue()).decode() # Set Properties of Image, Scale, and convert to Base64 def image_management(image): # path of static images is defaulted # Image open return PIL image object img = pilImage.open(image[&#39;filename&#39;]) # Python Image Library operations image[&#39;format&#39;] = img.format image[&#39;mode&#39;] = img.mode image[&#39;size&#39;] = img.size # Scale the Image img = scale_image(img) image[&#39;pil&#39;] = img image[&#39;scaled_size&#39;] = img.size # Scaled HTML image[&#39;html&#39;] = &#39;&lt;img src=&quot;data:image/png;base64,%s&quot;&gt;&#39; % image_to_base64(image[&#39;pil&#39;], image[&#39;format&#39;]) # Create Grey Scale Base64 representation of Image def image_management_add_html_grey(image): # Image open return PIL image object img = image[&#39;pil&#39;] format = image[&#39;format&#39;] img_data = img.getdata() # Reference https://www.geeksforgeeks.org/python-pil-image-getdata/ image[&#39;data&#39;] = np.array(img_data) # PIL image to numpy array image[&#39;gray_data&#39;] = [] # key/value for data converted to gray scale # &#39;data&#39; is a list of RGB data, the list is traversed and hex and binary lists are calculated and formatted for pixel in image[&#39;data&#39;]: # create gray scale of image, ref: https://www.geeksforgeeks.org/convert-a-numpy-array-to-an-image/ average = (pixel[0] + pixel[1] + pixel[2]) // 3 # average pixel values and use // for integer division if len(pixel) &gt; 3: image[&#39;gray_data&#39;].append((average, average, average, pixel[3])) # PNG format else: image[&#39;gray_data&#39;].append((average, average, average)) # end for loop for pixels img.putdata(image[&#39;gray_data&#39;]) image[&#39;html_grey&#39;] = &#39;&lt;img src=&quot;data:image/png;base64,%s&quot;&gt;&#39; % image_to_base64(img, format) # Jupyter Notebook Visualization of Images if __name__ == &quot;__main__&quot;: # Use numpy to concatenate two arrays images = image_data() # Display meta data, scaled view, and grey scale for each image for image in images: image_management(image) print(&quot;- meta data --&quot;) print(image[&#39;label&#39;]) print(image[&#39;source&#39;]) print(image[&#39;format&#39;]) print(image[&#39;mode&#39;]) print(&quot;Original size: &quot;, image[&#39;size&#39;]) print(&quot;Scaled size: &quot;, image[&#39;scaled_size&#39;]) print(&quot;-- original image --&quot;) display(HTML(image[&#39;html&#39;])) print(&quot; grey image -&quot;) image_management_add_html_grey(image) display(HTML(image[&#39;html_grey&#39;])) print() . Data Structures and OOP . Most data structures classes require Object Oriented Programming (OOP). Since this class is lined up with a College Course, OOP will be talked about often. Functionality in remainder of this Blog is the same as the prior implementation. Highlight some of the key difference you see between imperative and oop styles. . Read imperative and object-oriented programming on Wikipedia | Consider how data is organized in two examples, in relations to procedures | Look at Parameters in Imperative and Self in OOP | . Additionally, review all the imports in these three demos. Create a definition of their purpose, specifically these … . PIL | numpy | base64 | . from IPython.display import HTML, display from pathlib import Path # https://medium.com/@ageitgey/python-3-quick-tip-the-easy-way-to-deal-with-file-paths-on-windows-mac-and-linux-11a072b58d5f from PIL import Image as pilImage # as pilImage is used to avoid conflicts from io import BytesIO import base64 import numpy as np class Image_Data: def __init__(self, source, label, file, path, baseWidth=320): self._source = source # variables with self prefix become part of the object, self._label = label self._file = file self._filename = path / file # file with path self._baseWidth = baseWidth # Open image and scale to needs self._img = pilImage.open(self._filename) self._format = self._img.format self._mode = self._img.mode self._originalSize = self.img.size self.scale_image() self._html = self.image_to_html(self._img) self._html_grey = self.image_to_html_grey() @property def source(self): return self._source @property def label(self): return self._label @property def file(self): return self._file @property def filename(self): return self._filename @property def img(self): return self._img @property def format(self): return self._format @property def mode(self): return self._mode @property def originalSize(self): return self._originalSize @property def size(self): return self._img.size @property def html(self): return self._html @property def html_grey(self): return self._html_grey # Large image scaled to baseWidth of 320 def scale_image(self): scalePercent = (self._baseWidth/float(self._img.size[0])) scaleHeight = int((float(self._img.size[1])*float(scalePercent))) scale = (self._baseWidth, scaleHeight) self._img = self._img.resize(scale) # PIL image converted to base64 def image_to_html(self, img): with BytesIO() as buffer: img.save(buffer, self._format) return &#39;&lt;img src=&quot;data:image/png;base64,%s&quot;&gt;&#39; % base64.b64encode(buffer.getvalue()).decode() # Create Grey Scale Base64 representation of Image def image_to_html_grey(self): img_grey = self._img numpy = np.array(self._img.getdata()) # PIL image to numpy array grey_data = [] # key/value for data converted to gray scale # &#39;data&#39; is a list of RGB data, the list is traversed and hex and binary lists are calculated and formatted for pixel in numpy: # create gray scale of image, ref: https://www.geeksforgeeks.org/convert-a-numpy-array-to-an-image/ average = (pixel[0] + pixel[1] + pixel[2]) // 3 # average pixel values and use // for integer division if len(pixel) &gt; 3: grey_data.append((average, average, average, pixel[3])) # PNG format else: grey_data.append((average, average, average)) # end for loop for pixels img_grey.putdata(grey_data) return self.image_to_html(img_grey) # prepares a series of images, provides expectation for required contents def image_data(path=Path(&quot;images/&quot;), images=None): # path of static images is defaulted if images is None: # default image images = [ {&#39;source&#39;: &quot;Internet&quot;, &#39;label&#39;: &quot;Green Square&quot;, &#39;file&#39;: &quot;green-square-16.png&quot;}, {&#39;source&#39;: &quot;Peter Carolin&quot;, &#39;label&#39;: &quot;Clouds Impression&quot;, &#39;file&#39;: &quot;clouds-impression.png&quot;}, {&#39;source&#39;: &quot;Peter Carolin&quot;, &#39;label&#39;: &quot;Lassen Volcano&quot;, &#39;file&#39;: &quot;lassen-volcano.jpg&quot;} ] return path, images # turns data into objects def image_objects(): id_Objects = [] path, images = image_data() for image in images: id_Objects.append(Image_Data(source=image[&#39;source&#39;], label=image[&#39;label&#39;], file=image[&#39;file&#39;], path=path, )) return id_Objects # Jupyter Notebook Visualization of Images if __name__ == &quot;__main__&quot;: for ido in image_objects(): # ido is an Imaged Data Object print(&quot;- meta data --&quot;) print(ido.label) print(ido.source) print(ido.file) print(ido.format) print(ido.mode) print(&quot;Original size: &quot;, ido.originalSize) print(&quot;Scaled size: &quot;, ido.size) print(&quot;-- scaled image --&quot;) display(HTML(ido.html)) print(&quot; grey image &quot;) display(HTML(ido.html_grey)) print() . Hacks . Early Seed award . Add this Blog to you own Blogging site. | In the Blog add a Happy Face image. | Have Happy Face Image open when Tech Talk starts, running on localhost. Don’t tell anyone. Show to Teacher. | . AP Prep . In the Blog add notes and observations on each code cell that request an answer. | In blog add College Board practice problems for 2.2 | Choose 2 images, one that will more likely result in lossy data compression and one that is more likely to result in lossless data compression. Explain. | . Project Addition . If your project has images in it, try to implement an image change that has a purpose. (Ex. An item that has been sold out could become gray scale) | . Pick a programming paradigm and solve some of the following … . Numpy, manipulating pixels. As opposed to Grey Scale treatment, pick a couple of other types like red scale, green scale, or blue scale. We want you to be manipulating pixels in the image. | Binary and Hexadecimal reports. Convert and produce pixels in binary and Hexadecimal and display. | Compression and Sizing of images. Look for insights into compression Lossy and Lossless. Look at PIL library and see if there are other things that can be done. | There are many effects you can do as well with PIL. Blur the image or write Meta Data on screen, aka Title, Author and Image size. | . Alternative Hack . Something fun with backgrounds. Below is a project from Teacher repository that has some problems. Help the Teacher figure this out. . Identify problems | Propose solutions | Implement solutions | alien world . Parallex backgrounds . feepix backgrounds . Useful image tool . brew install imagemagick . Use identify to obtain dimensions of image: identify your_image.jpg . | In my case I have image of width 7000 height 2500. Use the convert command to resize width (3500x) of image and maintain aspect ratio: convert your_image.jpg -resize 3500x your_resized_image.jpg . | .",
            "url": "http://localhost:4100/teacher_portfolio/2023/09/17/python-images-U2-2_IPYNB_2_.html",
            "relUrl": "/2023/09/17/python-images-U2-2_IPYNB_2_.html",
            "date": " • Sep 17, 2023"
        }
        
    
  
    
        ,"post177": {
            "title": "FRQ Mini-lab review",
            "content": "Mini-Lab Review Format . Event #1. During the week Teams will schedule live reviews with crossover teams. Teacher will perfom observation. . 10 minutes per team. | . Event #2. The following week, student will perform live review with teacher for final grade. . Review ticket on FRQ Summary of work accomplished | 30 second to 1 minute video reviews | . | Conclusion | . Teacher grade. . 1 point for personal / team FRQ reviews | 1 point for collaboration evidence with crossover team | 1 point for individual/team FRQ technical work; code quality and code runtime. | 1 point for final review ticket with video summary | .",
            "url": "http://localhost:4100/teacher_portfolio/2023/09/15/java-free_response_showcase.html",
            "relUrl": "/2023/09/15/java-free_response_showcase.html",
            "date": " • Sep 15, 2023"
        }
        
    
  
    
        ,"post178": {
            "title": "1.4 Correcting errors",
            "content": "College Board Big Idea 1 . Identifying and Correcting Errors (Unit 1.4) . Become familiar with types of errors and strategies to fixing them . Lightly Review Videos and take notes on topics with Blog | Complete assigned MCQ questions | . Here are some code segments you can practice fixing: . #Create a list of the alphabet alphabet = &quot;abcdefghijklmnopqrstuvwxyz&quot; alphabetList = [] for i in alphabet: alphabetList.append(i) print(alphabetList) . The intended outcome is to determine where the letter is in the alphabet using a while loop . What is a good test case to check the current outcome? Why? | Make changes to get the intended outcome. | . letter = input(&quot;What letter would you like to check?&quot;) i = 0 while i &lt; 26: if alphabetList[i] == letter: print(&quot;The letter &quot; + letter + &quot; is the &quot; + str(i) + &quot; letter in the alphabet&quot;) i += 1 . The intended outcome is to determine where the letter is in the alphabet using a for loop . What is a good test case to check the current outcome? Why? | Make changes to get the intended outcome. | . letter = input(&quot;What letter would you like to check?&quot;) for i in alphabetList: count = 0 if i == letter: print(&quot;The letter &quot; + letter + &quot; is the &quot; + str(count) + &quot; letter in the alphabet&quot;) count += 1 . This code outputs the even numbers from 0 - 10 using a while loop. . Analyze this code to determine what can be changed to get the outcome to be odd numbers. (Code block below) | . evens = [] i = 0 while i &lt;= 10: evens.append(i) i += 2 print(evens) . This code should output the odd numbers from 0 - 10 using a while loop. . odds = [] i = 0 while i &lt;= 10: odds.append(i) i += 2 print(odds) . This code outputs the even numbers from 0 - 10 using a for loop. . Analyze this code to determine what can be changed to get the outcome to be odd numbers. (Code block below) | . numbers = [0,1,2,3,4,5,6,7,8,9,10] evens = [] for i in numbers: if (numbers[i] % 2 == 0): evens.append(numbers[i]) print(evens) . This code should output the odd numbers from 0 - 10 using a for loop. . numbers = [0,1,2,3,4,5,6,7,8,9,10] odds = [] for i in numbers: if (numbers[i] % 2 == 0): odds.append(numbers[i]) print(odds) . The intended outcome is printing a number between 1 and 100 once, if it is a multiple of 2 or 5 . What values are outputted incorrectly. Why? | Make changes to get the intended outcome. | . numbers = [] newNumbers = [] i = 0 while i &lt; 100: numbers.append(i) i += 1 for i in numbers: if numbers[i] % 5 == 0: newNumbers.append(numbers[i]) if numbers[i] % 2 == 0: newNumbers.append(numbers[i]) print(newNumbers) . Challenge . This code segment is at a very early stage of implementation. . What are some ways to (user) error proof this code? | The code should be able to calculate the cost of the meal of the user | . Hint: . write a “single” test describing an expectation of the program of the program | test - input burger, expect output of burger price | run the test, which should fail because the program lacks that feature | write “just enough” code, the simplest possible, to make the test pass | . Then repeat this process until you get program working like you want it to work. . menu = {&quot;burger&quot;: 3.99, &quot;fries&quot;: 1.99, &quot;drink&quot;: 0.99} total = 0 #shows the user the menu and prompts them to select an item print(&quot;Menu&quot;) for k,v in menu.items(): print(k + &quot; $&quot; + str(v)) #why does v have &quot;str&quot; in front of it? #ideally the code should prompt the user multiple times item = input(&quot;Please select an item from the menu&quot;) #code should add the price of the menu items selected by the user print(total) . Hacks . Now is a good time to think about Testing of your teams final project… . What errors may arise in your project? | What are some test cases that can be used? | Make sure to document any bugs you encounter and how you solved the problem. | What are “single” tests that you will perform on your project? Or, your part of the project? As Hack Design and Test plan action … Divide these “single” tests into Issues for Scrum Board prior to coding. FYI, related tests could be in same Issue by using markdown checkboxes to separate tests. | . | .",
            "url": "http://localhost:4100/teacher_portfolio/c3.0/c5.0/c5.1/c5.2/c5.3/c5.4/c5.5/c5.6/2023/09/15/1_4-python-errors_IPYNB_2_.html",
            "relUrl": "/c3.0/c5.0/c5.1/c5.2/c5.3/c5.4/c5.5/c5.6/2023/09/15/1_4-python-errors_IPYNB_2_.html",
            "date": " • Sep 15, 2023"
        }
        
    
  
    
        ,"post179": {
            "title": "2.1 Binary",
            "content": "Plus Binary Octal Hexadecimal Decimal Minus . +1 | 00000000 | 0 | 0 | 0 | -1 | . Turn on Turn on Turn on Turn on Turn on Turn on Turn on Turn on . | | | | | | | | .",
            "url": "http://localhost:4100/teacher_portfolio/c4.4/2023/09/14/javascript-binary-U2-1.html",
            "relUrl": "/c4.4/2023/09/14/javascript-binary-U2-1.html",
            "date": " • Sep 14, 2023"
        }
        
    
  
    
        ,"post180": {
            "title": "FRQ Mini-lab project",
            "content": "Mini-Labs . The mini labs done by each person are valuable to other members of team; they are all part of testing. The goal of FRQ mini-labs is to help you explore, learn to code, and establish the abililty to communicate and collaborate with you team members. Additionally, you will showcase and record; specifically sharing work with another table. Finally, you will edit and share highlights of recording through video editing. . Continuous Communication is Key . If there is one important skill you need to quickly pick up at the start of your Project Journey, it is to plan, communicate, code, communicate, commit, communicate, and share! Let me reiterate it until it sinks into your brain: communicate your work as often as needed! The tech industry moves at a fast pace, so if you want to ensure that all your hard work doesn’t go to waste, communication is essential. . So, how can you achieve that? Here are a few steps: . Regularly update your team members on your progress, even if you’re not finished yet. One effective way to do this is by sharing small nuggets of the most interesting pieces or insights about your work with the relevant people, such as your pair programmer, team, cross over team, and teacher. However, ensure that you organize or prepare beforehand. . You can do this through: . Shareout messages via platforms like Slack, Discord, or Emails. | Pair meetings. | Standup meetings. | Crossover reviews. | Live reviews with your teacher. | . Whenever you come across a noteworthy insight, take the time to prepare your thoughts and share them. The act of preparation and sharing will help you identify gaps, inconsistencies, clarify misunderstandings on key concepts, and more. If these communications go unnoticed, you are not effectively collaborating. . | Find the right sharing cadence for you, your team members, and stakeholders. Experiment with different sharing frequencies until you discover the one that works best for everyone. Sharing only at the end or when you think you are done is the wrong approach. Remember, everything in tech is a “Work in Progress.” Iteration is the path through which great ideas progress into reality. . In school, it’s common to work in isolation for extended periods and share only when we believe we are finished. However, sharing also includes committing code frequently. In the tech industry, there is no time for delayed sharing or late commits. Therefore, increase your sharing pace, do it frequently, and commit your work often! . | FRQ Hacks . During the year we need to learn the four types of FRQs. . Pick a question of type 01 from one of the years posted on the former EXAM page. Solve the problem, including missing pieces in a Jupyter Notebook. | Make this a quality blog. My suggestion each member of team do a different type of FRQ, to make reviews and grading more valuable. | Browse through multiple questions, find questions that mayhave future PBL interest for you or team. FRQ No. 1: Methods and Control Structures | FRQ No. 2: Classes | FRQ No. 3: Array/ArrayList | FRQ No. 4: 2D Array | . | . Regarding Array/ArrayList/2D Arrays . It is really import that each student learn to iterate through Arrays, ArrayLists, and 2D arrays. On these FRQs, make sure you do some extra work to highlight these concepts, if they are not present in the FRQ. . Change or add data to arrays, easier for ArrayList. How would you do it for others? | Displaying Array/ArrayList by columns, as well as by rows horizontally | Display content backwards | . Live Grading Presentation.  . On Live grading reviews each team will present to another Table/Team while the Teacher observes. Each team will have 10 minutes to go over their FRQs; or a little over 2 minutes per FRQ. . Create a Team Review and Review Ticket for all 4 FRQs with each Team Member participating in the discussion. | Record presentations and make a highlight clip 30 seconds to 1 minute on each of the FRQs. There will be a live review to go over final review ticket and clips. | . Presentation. Introduce ‘FRQ lesson’ and introduce how you plan to present the Material(s). . Have parts that each person will go over. | Consider an activity or illustration other than Code/Code/Coding to learn about each FRQ. | Outside sources can be used to complement the lesson: College Board, Khan Academy, etc | It would be interesting if you adapt FRQs, so that they work together. This would show your ability to plan and produce something useful. | . Live Review requirements . If code is not given by College Board you must complete it, your FRQs must run. | Jupyter Notebooks contain comments and markdown cells that describe work, in this case it should be easy to understand FRQ, purpose, and funciton. | Show grades and blog(s)/comments used during reviews. | Java output of cells in Jupyter Notebook is required when posting. | .",
            "url": "http://localhost:4100/teacher_portfolio/2023/09/14/java-free_response.html",
            "relUrl": "/2023/09/14/java-free_response.html",
            "date": " • Sep 14, 2023"
        }
        
    
  
    
        ,"post181": {
            "title": "JS Output w/ Objects",
            "content": "JavaScript and Jupyter references . JavaScript is the most important language you need to learn as a frontend developer. Jupyter Notebooks is a convenient way to learn portions of the language without the overhead of creating a full Website. Jupyter Notebooks have ChatGPT plugins to assist with design and troubleshooting problems. This Notebook has colors on HTML pages that were designed with a dark mode background. . JavaScript / Jupyter General References W3Schools HTML Reference | W3Schools JS Reference | ChatGPT AI assistant for Chrome/Jupyter | Theme setup for Jupyter Article. Or do these commands from shell… Install pip: pip install jupyterthemes | Revert to original theme: jt -r | List themes: jt -l | Install with Theme, Name, Logo: jt -t onedork -T -N -kl | . | Chrome Dev Tools | . | Coding with jQuery Jupyter Notebook GitHub, wget: https://raw.githubusercontent.com/nighthawkcoders/APCSP/master/_notebooks/2022-09-19-PBL-javascript_tutorial.ipynb | Markdown Fetch example in GitHub project for APCSP | HTML Static example in GitHub project for flask_portfolio | . | . output using HTML and CSS . Multiple cells are used to setup HTML in this lesson. Many of the JavaScript cells will use the output tag(s) to write into the HTML that has been setup. . %%html is used to setup HTML code block | “style” tag enables visuals customization | “div” tag is setup to receive data | . %%html &lt;html&gt; &lt;head&gt; &lt;style&gt; #output { background-color: #353b45; padding: 10px; border: 3px solid #ccc; } &lt;/style&gt; &lt;/head&gt; &lt;body&gt; &lt;p id=&quot;data&quot; hidden&gt; &lt;/p&gt; &lt;div id=&quot;output&quot;&gt; Hello! &lt;/div&gt; &lt;/body&gt; &lt;/html&gt; . other outputs explored . There are several ways to ouput the classic introduction message: “Hello, World!” . Before you go further, open Console on your Browser. JavaScript developer leaves Console open all the time!!! | The function console.log() outputs to Console, this is often used for inspection or debugging. | “Hello, World” is a String literal. This is the referred to as Static text, as it does not change. Developer call this a hard coded string. | &quot;Hello, World&quot; literal is a parameter to console.log(), element.txt() and alert(). | The element.textContent is part of Jupyter Notebook %%js magic. This is convenient for Notebook and testing. | The alert command outputs the parameter to a dialog box, so you can see it in this Jupyter notebook. The alert commands are shown, but are commented out as the stop run all execution of the notebook. | Note, in a Web Application Debugging: An alert is often used for less savy Developers. Console is used by more savy developers; console often requires setting up a lot of outputs. Source level debugging is the most powerful solution for debugging and does not require alert or console commands. | . %%js // required to allow cell to be JavaScript enabled console.log(&quot;JavaScript/Jupyter Output Intro&quot;); // Browser Console output; debugging or tracing console.log(&quot;Hello, World!&quot;); // Set element in HTML above using DOM (Document Object Model) document.getElementById(&quot;output&quot;).textContent = &quot;Hello, World!&quot;; // Jupyter built in magic element for testing and convenience of development element.textContent = &quot;Hello, World!&quot;; // element is an output option as part of %%js magic //alert(&quot;Hello, World!&quot;); . multiple outputs using one variable . This second example is a new sequence of code, two or more lines of code forms a sequence. This example defines a variable, thank goodness!!! In the previous example we were typing the string &quot;Hello, World&quot; over and over. Observe with the variable msg=&quot;Hello, World!&quot;; we type the string once and now use msg over and over. . The variable “var msg =” is used to capture the data | The console.log(msg) outputs to console, be sure to Inspect it! | The element.text() is part of Jupyter Notebooks and displays as output blow the code on this page. Until we build up some more interesting data for Web Site, we will not use be using the Python HTML, CSS technique. | The alert(msg) works the same as previous, but as the other commands uses msg as parameter. | . %%js console.log(&quot;Variable Definition&quot;); var msg = &quot;Hello, World Again!&quot;; // Use msg to output code to Console and Jupyter Notebook console.log(msg); //right click browser select Inspect, then select Console to view document.getElementById(&quot;output&quot;).textContent = msg; element.append(msg); //alert(msg); . output showing use of a function . This example passes the defined variable “msg” to the newly defined “function logIt(output)”. . There are multiple steps in this code.. The “definition of the function”: “function logIt(output) {}” and everything between curly braces is the definitions of the function. Passing a parameter is required when you call this function. | The “call to the function:”logIt(msg)” is the call to the function, this actually runs the function. The variable “msg” is used a parameter when calling the logIt function. | . | Showing reuse of function… There are two calls to the logIt function | This is called Prodedural Abstraction, a term that means reusing the same code | . | . %%js console.log(&quot;Function Definition&quot;); /* Function: logIt * Parameter: output * Description: The parameter is &quot;output&quot; to console and jupyter page */ function logIt(msg) { console.log(msg); element.append(msg); document.getElementById(&quot;output&quot;).textContent = msg; //alert(output); } // sequence of code build logIt parameter using concatenation var msg = &quot;Hello, Students!&quot; // replaces content of variable var classOf = &quot;Welcome CS class of 2023-2024.&quot; logIt(msg + &quot; &quot; + classOf); // concatenation of strings . output showing Loosely typed data . JavaScript is a loosely typed language, meaning you don’t have to specify what type of information will be stored in a variable in advance. . To define a variable you prefix the name with var or const. The variable type is determined by JavaScript at runtime. | Python and many interpretive languages are loosely typed like JavaScript. This is considered programmer friendly. | Java which is a compiled language is strongly typed, thus you will see terms like String, Integer, Double, and Object in the source code. | In JavaScript, the typeof keyword returns the type of the variable. Become familiar with type as it is valuable in conversation and knowing type help you understand how to modify data. Each variable type will have built in methods to manage content within the data type. | . %%js console.log(&quot;Examine Data Types&quot;); // Function to add typeof to output function getType(output) { return typeof output + &quot;: &quot; + output; } // Function defintion function logIt(msg) { console.log(getType(msg)); // logs string console.info(msg); // logs object document.getElementById(&quot;output&quot;).textContent = msg; element.append(getType(msg) + &quot; &quot;); // adds to Jupyter output //alert(getType(msg)); } // Common Types element.append(&quot;Common Types &quot;); logIt(&quot;Mr M&quot;); // String logIt(1997); // Number logIt(true); // Boolean // Object Type, this definition is often called a array or list element.append(&quot;Object Type, array &quot;); var scores = [ 90, 80, 100 ]; logIt(scores); // Complex Object, this definition is often called hash, map, hashmap, or dictionary element.append(&quot;Object Type, hash or dictionary &quot;); var person = { // key:value pairs seperated by comma &quot;name&quot;: &quot;Mr M&quot;, &quot;role&quot;: &quot;Teacher&quot; }; logIt(person); logIt(JSON.stringify(person)); //method used to convert this object into readable format . Build a Person object, JSON, and show output . JavaScript and other languages have special properties and syntax to store and represent data. In fact, a class in JavaScript is a special function. . Definition of class allows for a collection of data, the “class Person” allows programmer to retain name, github id, and class of a Person. | Instance of a class, the “const teacher = new Person(“Mr M”, “jm1021”, 1977)” makes an object “teacher” which is an object representation of “class Person”. | Setting and Getting properties After creating teacher and student objects, observe that properties can be changed/muted or extracted/accessed. | . %%js console.log(&quot;Person objects&quot;); /* class: Person * Description: A collection of Person data */ class Person { /* method: constructor * parameters: name, ghID - GitHub ID, classOf - Graduation Class * description: returns object when &quot;new Person()&quot; is called with matching parameters * assignment: this.name, this.ghID, ... are properties retained in the returned object * default: role uses a default property, it is set to &quot;Student&quot; */ constructor(name, ghID, classOf, role=&quot;Student&quot;) { this.name = name; this.ghID = ghID; this.classOf = classOf; this.role = role; } /* method: setter * parameters: role - role in classroom * description: this.role is updated from default value to value contained in role parameter */ setRole(role) { this.role = role; } /* method: getter * description: turns properties of object into JSON object * return value: JSON object */ getJSON() { const obj = {type: typeof this, name: this.name, ghID: this.ghID, classOf: this.classOf, role: this.role}; const json = JSON.stringify(obj); return json; } /* method: logIT * description: this Person object is logged to console */ logIt() { //Person Object console.info(this); // HTML output document.getElementById(&quot;output&quot;).textContent = this.getJSON(); //Log to Jupter element.append(this.role + &quot; object in JSON: &quot;); element.append(this.getJSON()); element.append(&quot; &quot;); //alert(this.getJSON()); } } // make a new Person Object const teacher = new Person(&quot;Mr M&quot;, &quot;jm1021&quot;, 1977); // object type is easy to work with in JavaScript // update role to Teacher var role = &quot;Teacher&quot;; teacher.setRole(role); // set the role teacher.logIt(); // log to console // make a new Person Object const student = new Person(&quot;Jane Doe&quot;, &quot;jane&quot;, 2007); // object type is easy to work with in JavaScript student.logIt(); // log to console . Build a Classroom Array/List of Persons, JSON, and show output . Many key elements are shown again. New elements include… . Building an Array, “var students” is an array of many persons | Building a Classroom, this show forEach iteration through an array and .push adding to an array. These are key concepts in all programming languages. | . %%js console.log(&quot;Classroom object&quot;); /* class: Person * Description: A collection of Person data */ class Person { /* method: constructor * parameters: name, ghID - GitHub ID, classOf - Graduation Class * description: returns object when &quot;new Person()&quot; is called with matching parameters * assignment: this.name, this.ghID, ... are properties retained in the returned object * default: this.role is a default property retained in object, it is set to &quot;Student&quot; */ constructor(name, ghID, classOf, role=&quot;Student&quot;) { this.name = name; this.ghID = ghID; this.classOf = classOf; this.role = role; } /* method: setter * parameters: role - role in classroom * description: this.role is updated from default value to value contained in role parameter */ setRole(role) { this.role = role; } /* method: getter * description: turns properties of object into JSON object * return value: JSON object */ getJSON() { const obj = {type: typeof this, name: this.name, ghID: this.ghID, classOf: this.classOf, role: this.role}; const json = JSON.stringify(obj); return json; } /* method: logIT * description: this Person object is logged to console */ logIt() { //Person Object console.info(this); // HTML output tag document.getElementById(&quot;output&quot;).textContent = this.getJSON(); //Log to Jupter element.append(&quot;Person json &lt;br&gt;&quot;); element.append(this.getJSON() + &quot;&lt;br&gt;&quot;); //alert(this.getJSON()); } } /* class: Classroom * Description: A collection of Person objects */ class Classroom { /* method: constructor * parameters: teacher - a Person object, students - an array of Person objects * description: returns object when &quot;new Classroom()&quot; is called containing properties and methods of a Classroom * assignment: this.classroom, this.teacher, ... are properties retained in the returned object */ constructor(teacher, students) { /* spread: this.classroom contains Teacher object and all Student objects * map: this.json contains of map of all persons to JSON */ this.teacher = teacher; this.students = students; this.classroom = [teacher, ...students]; // ... spread option this.json = &#39;{&quot;classroom&quot;:[&#39; + this.classroom.map(person =&gt; person.getJSON()) + &#39;]}&#39;; } /* method: logIT * description: this Classroom object is logged to console */ logIt() { //Classroom object console.log(this); // HTML output document.getElementById(&quot;data&quot;).textContent = this.json; document.getElementById(&quot;output&quot;).textContent = this.json; //Classroom json element.append(&quot;Classroom object in JSON: &quot;); element.append(this.json); //alert(this.json); } } /* function: constructCompSciClassroom * Description: Create data for Classroom and Person objects * Returns: A Classroom Object */ function constructCompSciClassroom() { // define a Teacher object const teacher = new Person(&quot;Mr M&quot;, &quot;jm1021&quot;, 1977, &quot;Teacher&quot;); // optional 4th parameter // define a student Array of Person objects const students = [ new Person(&quot;Anthony&quot;, &quot;tonyhieu&quot;, 2022), new Person(&quot;Bria&quot;, &quot;B-G101&quot;, 2023), new Person(&quot;Allie&quot;, &quot;xiaoa0&quot;, 2023), new Person(&quot;Tigran&quot;, &quot;Tigran7&quot;, 2023), new Person(&quot;Rebecca&quot;, &quot;Rebecca-123&quot;, 2023), new Person(&quot;Vidhi&quot;, &quot;VidhiKulkarni&quot;, 2024) ]; // make a CompSci classroom from formerly defined teacher and student objects return new Classroom(teacher, students); // returns object } // assigns compsci to the object returned by &quot;constructCompSciClassroom()&quot; function const compsci = constructCompSciClassroom(); // output of Objects and JSON in CompSci classroom compsci.logIt(); . for loop to generate Table Rows in HTML output . This code extracts JSON text from HTML, that was placed in DOM in a previous JavaScript cell, then it parses text into a JavaScript object. In addition, there is a for loop that iterates over the extracted object generating formated rows and columns in an HTML table. . Table generation is broken into parts… table data is obtained from a classroom array inside of the extracted object. | the JavaScript for loop allows the construction of a new row of data for each Person hash object inside of the the Array. | in the loop a table row &lt;tr&gt; ... &lt;/tr&gt; is created for each Hash object in the Array. | in the loop table data, a table column, &lt;td&gt; ... &lt;/td&gt; is created for name, ghID, classOf, and role within the Hash object. | . | . - | HTML | | DOM | | data output | - ref: id=&quot;data&quot;, id=&quot;output&quot; - ⇓ ⇑ get set - | JavaScript | - get data: | code | const jsonText = document.getElementById(&quot;data&quot;).innerHTML; |getElementById| - set output: - document.getElementById(&quot;output&quot;).innerHTML = htmlOut; . %%js console.log(&quot;Classroom Web Page&quot;); // extract JSON text from output element in HTML page const jsonText = document.getElementById(&quot;data&quot;).innerHTML; // convert JSON text to a JavaScript Object to process const classroom = JSON.parse(jsonText).classroom; console.log(classroom); // make an HTML Out format for pretty display /* Template literals (`), can make HTML generation more concise; * the map functions generates row strings and the join method combines them; * this replaces longer and ugly for loop and string concatenation. */ const htmlOut = ` &lt;table&gt; &lt;thead&gt; &lt;tr&gt; &lt;th&gt;Name&lt;/th&gt; &lt;th&gt;GitHub ID&lt;/th&gt; &lt;th&gt;Class Of&lt;/th&gt; &lt;th&gt;Role&lt;/th&gt; &lt;/tr&gt; &lt;/thead&gt; &lt;tbody&gt; ${classroom.map(row =&gt; ` &lt;tr&gt; &lt;td&gt;${row.name}&lt;/td&gt; &lt;td&gt;${row.ghID}&lt;/td&gt; &lt;td&gt;${row.classOf}&lt;/td&gt; &lt;td&gt;${row.role}&lt;/td&gt; &lt;/tr&gt; `).join(&#39;&#39;)} &lt;/tbody&gt; &lt;/table&gt; `; // assign/set htmlOut to output element in HTML page document.getElementById(&quot;output&quot;).innerHTML = htmlOut; // show raw HTML console.log(htmlOut); element.append(htmlOut); . Hacks . Work with output and objects. . Adapt this tutorial to your own work and interests, how many steps do you understand? | Relate console output on last step to a previous hack | Explain, how console.log can help find errors in code? | Try out ChatGPT Jupyter features; though I prefer using Web and cut-copy-paste | .",
            "url": "http://localhost:4100/teacher_portfolio/2023/09/13/javascript_output_objects_IPYNB_2_.html",
            "relUrl": "/2023/09/13/javascript_output_objects_IPYNB_2_.html",
            "date": " • Sep 13, 2023"
        }
        
    
  
    
        ,"post182": {
            "title": "1.1-1.4 Team Test",
            "content": "Make a Video as a Team . Test will be conducted by creating a video. Make sure video has segments with transition pages. Have each member of Agile Team in at least 1 segment. Edit video effectively and try to keep it under 4 minutes. The video can instruct user to pause and interact with a Jupyter Notebook, this does not count against video time. . Collaboration Review . It is a common belief in industry that collaboration is one of the key skills of a Software Engineer. Simple activities like think-pair-share, agile methodolgoy, and making and reviewing plans are consider fundamental in speeding up the development life cycle. An Agile mindset and checking in with other often is fundamental. Remember, “collaboration” is the 1st topic in AP Classroom, first usually means important. . What are the benefits of a team? Explain some of the diveristies that your team has to offer. | Describe how you will facilitate communication amongst group members. | How will you hold each person accountable for their portion of the work? Think about dates, review tickets, and peer revies. | . Program Function and Purpose . To “make” a program with function and purpose, you need to “plan” a program with function and purpose. Build a Jupyter Notebook to show examples of the following. . Program with Output | Program with Input and Output | Program with a List | Program with a Dictionary | Program with Iteration | Program with a Function to perform mathematical and/or a statistical calculations. | Program with a Selection/Condition | Finish with a Program with Purpose | . Program Design and Development . Share a program that you have expanded upon that was written by another. Show extensive documentation on that program (ie use ChatGPT for help). Here are some minimum requirements for Design and Development documentation. . Create a Visual Illustration of a program, algorithm, ot process. | Show documentation of a program with a List and Iteration. | Show comments on a program that does a mathematical and/or statistical calculation. | . Identyfing and Correct Errors . Often, when we develop code the initial functionality is very simple. However, when we consider invalid conditions when using our code we often increase the complexity of our code or functions. . Create a tester function that runs a program and validates its functionality. | Show comments and code logic that reduces errors in code with if / else statements. | Show comments and code logic that reduces errors in code with try / catch statements. | .",
            "url": "http://localhost:4100/teacher_portfolio/2023/09/12/unit-1-summary.html",
            "relUrl": "/2023/09/12/unit-1-summary.html",
            "date": " • Sep 12, 2023"
        }
        
    
  
    
        ,"post183": {
            "title": "Data Types, Lists, Dictionaries",
            "content": "Variables and Types . All useful data is a collection of different types of data: letters, words, numbers, tables, etc. . In Python, we use variables to store data, each are given a type at assignment. Variables have names, types, and data. Python variables can be of type: String, Integer, Float, List and Dictionary. The types are important to understand and will impact coding operations, for instance we are required to use str() function in concatenation of different data types. A type of List allows developer to perform iteration. . Developers often think of variables as primitives or collections. Look at this example and see if you can see hypothesize the difference between a primitive and a collection. | Take a minute and see if you can reference other elements in the list or other keys in the dictionary. Show output. | # Sample of Python Variables # variable of type string print(&quot;What is the variable name/key?&quot;, &quot;value?&quot;, &quot;type?&quot;, &quot;primitive or collection, why?&quot;) name = &quot;John Doe&quot; print(&quot;name&quot;, name, type(name)) . # variable of type integer print(&quot;What is the variable name/key?&quot;, &quot;value?&quot;, &quot;type?&quot;, &quot;primitive or collection, why?&quot;) age = 18 print(&quot;age&quot;, age, type(age)) . # variable of type float print(&quot;What is the variable name/key?&quot;, &quot;value?&quot;, &quot;type?&quot;, &quot;primitive or collection, why?&quot;) score = 90.0 print(&quot;score&quot;, score, type(score)) . # variable of type list (many values in one variable) print(&quot;What is variable name/key?&quot;, &quot;value?&quot;, &quot;type?&quot;, &quot;primitive or collection?&quot;) print(&quot;What is different about the list output?&quot;) langs = [&quot;Python&quot;, &quot;JavaScript&quot;, &quot;Java&quot;] print(&quot;langs&quot;, langs, type(langs), &quot;length&quot;, len(langs)) print(&quot;- langs[0]&quot;, langs[0], type(langs[0])) print(&quot;- langs[1]&quot;, langs[1], type(langs[1])) print(&quot;- langs[2]&quot;, langs[2], type(langs[2])) . # variable of type dictionary (a group of keys and values) print(&quot;What is the variable name/key?&quot;, &quot;value?&quot;, &quot;type?&quot;, &quot;primitive or collection, why?&quot;) print(&quot;What is different about the dictionary output?&quot;) person = { &quot;name&quot;: name, &quot;age&quot;: age, &quot;score&quot;: score, &quot;langs&quot;: langs } print(&quot;person&quot;, person, type(person), &quot;length&quot;, len(person)) print(&#39;- person[&quot;name&quot;]&#39;, person[&quot;name&quot;], type(person[&quot;name&quot;])) print(&#39;- person[&quot;age&quot;]&#39;, person[&quot;age&quot;], type(person[&quot;age&quot;])) print(&#39;- person[&quot;score&quot;]&#39;, person[&quot;score&quot;], type(person[&quot;score&quot;])) print(&#39;- person[&quot;langs&quot;]&#39;, person[&quot;langs&quot;], type(person[&quot;langs&quot;])) . List and Dictionary purpose . Our society is being built on information. List and Dictionaries are used to collect information. Mostly, when information is collected it is formed into patterns. As that pattern is established you will be able collect many instances of that pattern. . A List is used to collect many instances of a pattern | A Dictionary is used to organize data patterns. | Iteration is often used to process through lists. | . To start exploring more deeply into List, Dictionary and Iteration this example will explore constructing a List of people and cars. . As we learned above, a List is a data type: class ‘list’ | A &#39;list&#39; data type has the method &#39;.append(expression)&#39; that allows you to add to the list. A class usually has extra methods to support working with its objects. | In the example below, the expression is appended to the ‘list’ is the data type: class ‘dict’ | At the end, you see a fairly complicated data structure. This is a list of dictionaries, or a collection of many similar data patterns. The output looks similar to JavaScript Object Notation (JSON), Jekyll/GitHub pages yml files, FastPages Front Matter. As discussed we will see this key/value patter often, you will be required to understand this data structure and understand the parts. Just believe it is easy ;) and it will become so. | . # Define an empty List called InfoDb InfoDb = [] # InfoDB is a data structure with expected Keys and Values # Append to List a Dictionary of key/values related to a person and cars InfoDb.append({ &quot;FirstName&quot;: &quot;John&quot;, &quot;LastName&quot;: &quot;Mortensen&quot;, &quot;DOB&quot;: &quot;October 21&quot;, &quot;Residence&quot;: &quot;San Diego&quot;, &quot;Email&quot;: &quot;jmortensen@powayusd.com&quot;, &quot;Owns_Cars&quot;: [&quot;2015-Fusion&quot;, &quot;2011-Ranger&quot;, &quot;2003-Excursion&quot;, &quot;1997-F350&quot;, &quot;1969-Cadillac&quot;] }) # Append to List a 2nd Dictionary of key/values InfoDb.append({ &quot;FirstName&quot;: &quot;Sunny&quot;, &quot;LastName&quot;: &quot;Naidu&quot;, &quot;DOB&quot;: &quot;August 2&quot;, &quot;Residence&quot;: &quot;Temecula&quot;, &quot;Email&quot;: &quot;snaidu@powayusd.com&quot;, &quot;Owns_Cars&quot;: [&quot;4Runner&quot;] }) # Append to List a 2nd Dictionary of key/values InfoDb.append({ &quot;FirstName&quot;: &quot;Shane&quot;, &quot;LastName&quot;: &quot;Lopez&quot;, &quot;DOB&quot;: &quot;February 27&quot;, &quot;Residence&quot;: &quot;San Diego&quot;, &quot;Email&quot;: &quot;???@powayusd.com&quot;, &quot;Owns_Cars&quot;: [&quot;2021-Insight&quot;] }) # Print the data structure print(InfoDb) . Formatted output of List/Dictionary - for loop . Managing data in Lists and Dictionaries is for the convenience of passing the data across the internet, to applications, or preparing it to be stored into a database. It is a great way to exchange data between programs and programmers. Exchange of data between programs includes the data type the method/function and the format of the data type. These concepts are key to learning how to write functions, receive, and return data. This process is often referred to as an Application Programming Interface (API). . Next, we will take the stored data and output it within our notebook. There are multiple steps to this process… . Preparing a function to format the data, the print_data() function receives a parameter called “d_rec” short for dictionary record. It then references different keys within [] square brackets. | Preparing a function to iterate through the list, the for_loop() function uses an enhanced for loop that pull record by record out of InfoDb until the list is empty. Each time through the loop it call print_data(record), which passes the dictionary record to that function. | Finally, you need to activate your function with the call to the defined function for_loop(). Functions are defined, not activated until they are called. By placing for_loop() at the left margin the function is activated. | . # This jupyter cell has dependencies on one or more cells above # print function: given a dictionary of InfoDb content def print_data(d_rec): print(d_rec[&quot;FirstName&quot;], d_rec[&quot;LastName&quot;]) # using comma puts space between values print(&quot; t&quot;, &quot;Residence:&quot;, d_rec[&quot;Residence&quot;]) # t is a tab indent print(&quot; t&quot;, &quot;Birth Day:&quot;, d_rec[&quot;DOB&quot;]) print(&quot; t&quot;, &quot;Cars: &quot;, end=&quot;&quot;) # end=&quot;&quot; make sure no return occurs print(&quot;, &quot;.join(d_rec[&quot;Owns_Cars&quot;])) # join allows printing a string list with separator print() # for loop algorithm iterates on length of InfoDb def for_loop(): print(&quot;For loop output n&quot;) for record in InfoDb: print_data(record) # call to function for_loop() # call to function . Alternate methods for iteration - while loop . In coding, there are usually many ways to achieve the same result. Defined are functions illustrating using index to reference records in a list, these methods are called a “while” loop and “recursion”. . The while_loop() function contains a while loop, “while i &lt; len(InfoDb):”. This counts through the elements in the list start at zero, and passes the record to print_data() | . # This jupyter cell has dependencies on one or more cells above # while loop algorithm contains an initial n and an index incrementing statement (n += 1) def while_loop(): print(&quot;While loop output n&quot;) i = 0 while i &lt; len(InfoDb): record = InfoDb[i] print_data(record) i += 1 return while_loop() . Calling a function repeatedly - recursion . This final technique achieves looping by calling itself repeatedly. . recursive_loop(i) function is primed with the value 0 on its activation with “recursive_loop(0)” | the last statement indented inside the if statement “recursive_loop(i + 1)” activates another call to the recursive_loop(i) function, each time i is increasing | ultimately the “if i &lt; len(InfoDb):” will evaluate to false and the program ends | . # This jupyter cell has dependencies on one or more cells above # recursion algorithm loops incrementing on each call (n + 1) until exit condition is met def recursive_loop(i): if i &lt; len(InfoDb): record = InfoDb[i] print_data(record) recursive_loop(i + 1) return print(&quot;Recursive loop output n&quot;) recursive_loop(0) . Hacks . Add a few records to the InfoDb | Try to do a for loop with an index, research this as 4th way | Pair Share code somethings creative or unique, with loops and data. Hints… Would it be possible to output data in a reverse order? | Are there other methods that can be performed on lists? | Could you create new or add to dictionary InfoDB? Could you do it with input? | Make a quiz that stores in a List of Dictionaries. | . | .",
            "url": "http://localhost:4100/teacher_portfolio/c3.1/c4.0/c4.1/c4.3/c4.4/c4.6/c4.7/c4.9/2023/09/12/python_lists_IPYNB_2_.html",
            "relUrl": "/c3.1/c4.0/c4.1/c4.3/c4.4/c4.6/c4.7/c4.9/2023/09/12/python_lists_IPYNB_2_.html",
            "date": " • Sep 12, 2023"
        }
        
    
  
    
        ,"post184": {
            "title": "Flask/Python Repo and App",
            "content": "Flask/Python Web Application . Next up is making a Web Application from a completely customizable framework and language. This project will focus on building a standalone Web Application. The intentions are to use this framework for Group work and backend work. At the conclusion of this article this project will only be run locally. Ultimately, this project will be hosted on AWS. . Flask is the Web Application Framework. | Python will be the Backend Development languages. | Jinja2 is the Web Template language, that work well with Flask and Python. | HTML, CSS, JavaScript will support frontend work built into the Flask project. | The external Fastpages/Github Pages project will use the Flask/Python project for backend services, like persistent data or databases (ie SQL). | . Setup Flask/Python Project . Start Flask/Python GitHub repo from a Template. Setup VSCode project to run python. Make a change and push to GitHub. . Generate your own copy of repository GitHub: https://github.com/nighthawkcoders/flask_portfolio/generate | “Copy” https address of newly Generated repository, use screen that looks like this: | Open terminal and goto your vscode directory: cd ~/vscode | Clone new GitHub project by run git clone &lt;paste/replace with https link&gt; | Run VSCode project code &lt;replace with name of project&gt; | In VSCode type Shift-Command-P or Shift-Control-P to select your Python Interpreter | Select Python that matches terminal: which python | In VSCode terminal install project dependencies: pip install -r requirements.txt | Select main.py from VSCode navigator and press ▶️ in upper right corner. An alternate method is type python main.py in terminal. Observe terminal output, this sample illustrates a good outcome. | In terminal output you can shift-click on http://127.0.0.1:5000/, or goto Browser and type: 127.0.0.1:5000 | Navigate the site, look for things to change. | . Hacks . Try a little bit of customization and make sure you are able to run, edit, and push. Most changes should update while server is running . Conclude setup activity by pushing a minor change to Stub.html. This will verify GitHub support with VSCode. Click for VSCode guide for version control | Stub.html lines of code to for simple change | . | . &lt;div class=&quot;px-5 py-5 mx-auto&quot;&gt; &lt;h1 class=&quot;text-primary&quot;&gt;&lt;strong&gt;Stubby Body&lt;/strong&gt;&lt;/h1&gt; &lt;p class=&quot;text-secondary&quot;&gt;Put your name here&lt;/p&gt; &lt;/div&gt; . Group/Collaboration activity. Share a GitHub project. . Make a team project, make each person as a Collaborator through GitHub settings. | Each member take the HTML file under the Project menu and customize it to point to individuals material (aka Fastpages). | GitHub gotcha when Collaborating on a Repo. Remember to Pull before you Push/Sync. The repository will be updating while your copy is isolated. Pull or Rebase gets you back on track with the shared branch of code. | .",
            "url": "http://localhost:4100/teacher_portfolio/c7.1/2023/09/12/python-flask-repo.html",
            "relUrl": "/c7.1/2023/09/12/python-flask-repo.html",
            "date": " • Sep 12, 2023"
        }
        
    
  
    
        ,"post185": {
            "title": "Anatomy of Python Flask",
            "content": "Overview of Flask . This article overviews key considerations in setting up a Python Flask backend project. . Overview of Python files to support a Flask server . Discuss how to develop a home page, code, run local server test, and then sync to deploy to GitHub Pages. . Review tools setup and make in README.md to support this lesson. | . Files and Directories in this Project . These are some of the key files and directories in this project . README.md: This file contains instructions for setting up the necessary tools and cloning the project. A README file is a standard component of all properly set up GitHub projects. . | requirements.txt: This file lists the dependencies required to turn this Python project into a Flask/Python project. It may also include other backend dependencies, such as dependencies for working with a database. . | main.py: This Python source file is used to run the project. Running this file starts a Flask web server locally on localhost. During development, this is the file you use to run, test, and debug the project. . | Dockerfile and docker-compose.yml: These files are used to run and test the project in a Docker container. They allow you to simulate the project’s deployment on a server, such as an AWS EC2 instance. Running these files helps ensure that your tools and dependencies work correctly on different machines. . | instances: This directory is the standard location for storing data files that you want to remain on the server. For example, SQLite database files can be stored in this directory. Files stored in this location will persist after web application restart, everyting outside of instances will be recreated at restart. . | static: This directory is the standard location for files that you want to be cached by the web server. It is typically used for image files (JPEG, PNG, etc.) or JavaScript files that remain constant during the execution of the web server. . | api: This directory contains code that receives and responds to requests from external servers. It serves as the interface between the external world and the logic and code in the rest of the project. . | model: This directory contains files that implement the backend functionality for many of the files in the api directory. For example, there may be files in the model directory that directly interact with the database. . | templates: This directory contains files and subdirectories used to support the home and error pages of the website. . | .gitignore: This file specifies elements to be excluded from version control. Files are excluded when they are derived and not considered part of the project’s original source. In the VSCode Explorer, you may notice some files appearing dimmed, indicating that they are intentionally excluded from version control based on the rules defined in .gitignore. . | . Please note that there are many other key files and directories in a Flask Python backend server, but we will highlight them as the development progresses. . Dockerfile and docker-compose.yml . Make sure your docker files are created using these examples. These files are the best way to determine if your web application is ready for deployment. . Examining and understanding these files will help you understand a great deal about your project. . Dockerfile python 3.10 environment is used as or deployment container | python3-pip is installed, as pip is the package manager | requirement.txt is used to update project dependencies in the container | gunicorn is used to run a production version of python/flask, in this configuration 3 workers or 3 instances of the server are run. This balances load. | main:app means the main.py is the primary file and app contains server configuration | . | docker-compose.yml image name the docker container | port declares address for web application on web server | volumes declares that the instance directory contains persistant data | restart tells web applciation to come back up if something like power outage or reboot takes down web server | . | . FROM docker.io/python:3.10 WORKDIR / # [Install python and pip] RUN apt-get update &amp;&amp; apt-get upgrade -y &amp;&amp; apt-get install -y python3 python3-pip git COPY . / RUN pip install --no-cache-dir -r requirements.txt RUN pip install gunicorn ENV GUNICORN_CMD_ARGS=&quot;--workers=3 --bind=0.0.0.0:8080&quot; EXPOSE 8080 CMD [ &quot;gunicorn&quot;, &quot;main:app&quot; ] . version: &#39;3&#39; services: web: image: flask_port_v1 # Change the image name to something unique to your project, aka my_unique_name_v1 build: . ports: - &quot;8:8080&quot; # Edit the number on the left to match the port you selected volumes: - ./volumes:/volumes - ./instance:/instance restart: unless-stopped .",
            "url": "http://localhost:4100/teacher_portfolio/c4.0/2023/09/12/python-flask-anatomy_IPYNB_2_.html",
            "relUrl": "/c4.0/2023/09/12/python-flask-anatomy_IPYNB_2_.html",
            "date": " • Sep 12, 2023"
        }
        
    
  
    
        ,"post186": {
            "title": "Calculator Reviews",
            "content": "Calculator Review . It is a common belief that the best way to learn to code is to start coding on a project. . In this task, you will work with the two provided calculators and adapt them to be your own. Customization to each Calculator, plus the customizations to the Snake game will prepare you to move to Animation. . The goal is to build notebook(s) and represent hacks in JS Input in your own blog. . | Make sure you use skills described in JS Output w/Objects to help in debugging (ie console.log). . | Make sure you use skills for writing to DOM describe in JS Ouput w/Objects. . | Classroom time will be used to support students with questions. . | If you are feeling advanced… . try to represent both calculation styles into a single web page. Consider your design, perhaps a Canva drawing, before you attempt the task. | customize backgrounds, instead of VANTA images, play a background movie with CSS | or any other idea of interest | . | . Agile Plan . I would like you to split work. Two working on one calculator and Two working on the other. There is a live share extention in VS Code where you could both work on the same code at the same time. . In the end (on this project), everyone will have Two Calculators in their own GH Pages Time Box. Students are not ready to work on a shared projects in GitHub. We have formed collaboration teams, we need to build skills in collaboration, but we also need to manage our own files. So, this will be a hybrid of “Collaboration”, but still managing “Independent” work. .",
            "url": "http://localhost:4100/teacher_portfolio/2023/09/12/javascript-calculator-reviews.html",
            "relUrl": "/2023/09/12/javascript-calculator-reviews.html",
            "date": " • Sep 12, 2023"
        }
        
    
  
    
        ,"post187": {
            "title": "JS Basics Test",
            "content": "JavaScript Basics Rubric . Total points 4 . Each Hack . .5 point: Have a working HTML code cell in a notebook based on the wireframe representation provided under HTML hacks (HTML Hack) | .5 point: Have a working javascript code cell in a notebook which creates, manipulates, and logs an object (Data Types Hack) | .5 point: Have a working javascript code cell in a notebook which modifies elements in the first HTML code cell hack or another HTML code cell based on the same wireframe representation (DOM Hack) | .5 point: Have a working javascript code cell in a notebook which compares two variables (Javascript Hack) | .5 point: Have code cells in a notebook which shows the corrections made to the first three code cells in the 1.4 correcting errors page (Correcting Errors Hack) | . Reviews and Scoring . 1 point: Have all of the different notebooks and cells made working in their own individual GitHub Pages with utterances and reviewers comments | .5 point: Make a summary review ticket based on the Total Test and utterances. Have a total of the other people’s scores that they collaborated with on the test | .",
            "url": "http://localhost:4100/teacher_portfolio/2023/09/12/javascript-basics-review.html",
            "relUrl": "/2023/09/12/javascript-basics-review.html",
            "date": " • Sep 12, 2023"
        }
        
    
  
    
        ,"post188": {
            "title": "Database CRUD Operations",
            "content": "| CSSE | CSP | CSA | Game | . Create User . GitHub Username: Full Name: Password: Need Server: Yes No Active Classes: APCSA APCSP CSSE Archived Classes: APCSA APCSP CSSE . Current Records . Full Name GitHub Username Active Classes Archived Classes Server Needed Edit Delete . X GitHub Username: Full Name: Need Server: Yes No Edit Active Classes: APCSA APCSP CSSE Edit Archived Classes: APCSA APCSP CSSE",
            "url": "http://localhost:4100/teacher_portfolio/devops/cloud_database",
            "relUrl": "/devops/cloud_database",
            "date": " • Sep 10, 2023"
        }
        
    
  
    
        ,"post189": {
            "title": "P4 Iteration",
            "content": "Team Tech Talk: Iteration . Group members: Marcus, Hao, Ameer, Kayden . What is Iteration? In coding, &quot;iteration&quot; means to repetitively perform a set of actions or operations, typically with the purpose of processing or examining a collection of items, such as a list, array, or other data structures. It is a fundamental concept in programming and is often used when you need to perform a specific task multiple times or when you want to process a collection of data, such as a list or an array. Below is an example of an iteration, and its uses. python for number in range(5): print(number) 0 1 2 3 4 for &quot;number&quot; in range(5): - This line initiates a for loop. The loop variable &quot;number&quot; is used to iterate through a sequence of numbers generated by the range(5) function. range(5) generates a sequence of numbers from 0 to 4, which means the loop will run 5 times. print(number) - Inside the loop, this line prints the value of the loop variable &quot;number&quot; to the console. Since &quot;number&quot; takes on the values from the range(5) sequence, it will print the numbers 0, 1, 2, 3, and 4 in separate lines. You can also create an iteration using words or a list. Examples below. python fruits = [&quot;apple&quot;, &quot;banana&quot;, &quot;cherry&quot;, &quot;date&quot;, &quot;fig&quot;] for fruit in fruits: for number in range(3): print(fruit) apple apple apple banana banana banana cherry cherry cherry date date date fig fig fig In this example, the input was a list of fruits, which is then put into the code where the fruits will be printed and repeated 3 times, because of the iteration of &quot;for number in range(3)&quot; keyword &quot;range(3)&quot; Popcorn Hack #1 now create your own iteration, wheter that be a list of numbers or words, its up to you. (3 minutes) Indefinite Iteration Indefinite iteration, also known as conditional or while-loop iteration, involves repeating a block of code as long as a specified condition remains true. Unlike definite iteration, where you know the exact number of iterations in advance, with indefinite iteration, the loop continues as long as the condition is met. If the condition becomes false at any point, the loop terminates. Below is an example of the layout python while condition: # Loop body condition: This is a boolean expression. The loop will continue executing as long as this condition is True. #Loop body: This is the block of code that gets executed during each iteration. It can include one or more statements. Below is an example code of indefinite iteration: python while True: user_input = input(&quot;Enter something (type &#39;exit&#39; to quit): &quot;) if user_input == &quot;exit&quot;: break print(&quot;You entered:&quot;, user_input) We use a &quot;while True&quot; loop, which means the loop will run indefinitely until we explicitly exit it. &lt;/br&gt; Inside the loop, we ask the user for input and store it in the user_input variable. &lt;/br&gt; We checked if the user input is equal to &quot;exit.&quot; If it is, we use the break statement to exit the loop. &lt;/br&gt; If the input from the user is not &quot;exit,&quot; we print what they entered. We can see this through the code (&quot;You entered:&quot;, user_input) &lt;/br&gt; This code will keep asking for input and printing it until the user types &quot;exit,&quot; at which point the loop will terminate. Loop Control Statements Loop control statements are used to manage the flow of loops and determine when to exit, skip, or repeat iterations within a loop. There are three primary loop control statements: (Break) - Exit a Loop Prematurely: &lt;/br&gt; break is used to exit a loop when a specific condition is met. Example: Exit a loop when the number 5 is encountered. python for i in range(10): if i == 5: break print(i) 0 1 2 3 4 (Continue) - Skip the Current Iteration: &lt;/br&gt; continue is used to skip the current iteration of a loop and move to the next. Example: Skip printing the number 2 in a loop. python for i in range(5): if i == 2: continue print(i) 0 1 3 4 return (in Functions) - Exit a Function and Loop: &lt;/br&gt; In functions, return is used to exit the function and any loop within it. Example: Exit a function and loop when a target value is found. python def calculate_rectangle_area(length, width): area = length * width return area length = 5 width = 3 area = calculate_rectangle_area(length, width) print(&quot;The area of the rectangle is:&quot;, area) The area of the rectangle is: 15 Above is more of a complex iteration, but we use the return statement to specify that the result of the function is the value stored in the (area) variable. # Homework! create a code for each of the different scenarios below: a list of numbers that repeats (10 times) &lt;/br&gt; a list of words (use your creativity) &lt;/br&gt; a hack using indefinite iteration. You could ask the user for a password, number, phrase, or something that will initiate the exit. Example below. python while True: user_input = input(&quot;Enter something (type &#39;exit&#39; to quit): &quot;) if user_input == &quot;exit&quot;: break print(&quot;You entered:&quot;, user_input) | | | | | | . | | | | | . | | . | | .",
            "url": "http://localhost:4100/teacher_portfolio/2023/09/10/P4_Iteration_IPYNB_2_.html",
            "relUrl": "/2023/09/10/P4_Iteration_IPYNB_2_.html",
            "date": " • Sep 10, 2023"
        }
        
    
  
    
        ,"post190": {
            "title": "Python/Flask in Jupyter",
            "content": "Introduction . Welcome to this journey into the world of web servers and the Flask framework! In the previous weeks, you’ve successfully set up a web server using GitHub Pages, converting Jupyter Notebooks into Markdown for a seamless online presentation. Today, we’ll take that knowledge to the next level as we dive into creating your very own web server using Flask. . Understanding Web Servers . What is a Web Server? . Traditionally, we had librarians at libraries that would help you find books or information. Today in the digital world, thousands upon thousands of home pages, search engines, and digital archives have been built using web servers. . GitHub Pages vs. Flask . You’ve already experienced a form of web server through GitHub Pages. Think of GitHub Pages as a library that has established rules for publishing Markdown notes and Jupyter Notebooks neatly on a bookshelf. . Now, let’s introduce Flask, your personal web server. Flask can create and manage any type of content, including customizing everything according to your preferences, and even serve additional information (like a database with APIs). . The Flask Framework Flask is a micro web framework written in Python. It’s designed to be minimal and easy to use, making it perfect for building web applications, APIs, and, yes, even your web server. Today, we will start with the basics of Flask and see how it empowers you to create and manage web content. . Our Goals for Today . Here’s what we’ll accomplish in this session: . Create a minimal Flask server. | Explore the Python/Flask process. | Access data from our Flask server using Python. | Access data from our Flask server using JavaScript. | Learn how to stop the Python/Flask process gracefully. | . Note: Jupyter magic commmand %%python --bg that follows runs the server in background. This enables us to continue interacting with the subsequent Notebook cells. . %%python --bg from flask import Flask, jsonify from flask_cors import CORS # initialize a flask application (app) app = Flask(__name__) CORS(app, supports_credentials=True, origins=&#39;*&#39;) # Allow all origins (*) # ... your existing Flask # add an api endpoint to flask app @app.route(&#39;/api/data&#39;) def get_data(): # start a list, to be used like a information database InfoDb = [] # add a row to list, an Info record InfoDb.append({ &quot;FirstName&quot;: &quot;John&quot;, &quot;LastName&quot;: &quot;Mortensen&quot;, &quot;DOB&quot;: &quot;October 21&quot;, &quot;Residence&quot;: &quot;San Diego&quot;, &quot;Email&quot;: &quot;jmortensen@powayusd.com&quot;, &quot;Owns_Cars&quot;: [&quot;2015-Fusion&quot;, &quot;2011-Ranger&quot;, &quot;2003-Excursion&quot;, &quot;1997-F350&quot;, &quot;1969-Cadillac&quot;] }) # add a row to list, an Info record InfoDb.append({ &quot;FirstName&quot;: &quot;Shane&quot;, &quot;LastName&quot;: &quot;Lopez&quot;, &quot;DOB&quot;: &quot;February 27&quot;, &quot;Residence&quot;: &quot;San Diego&quot;, &quot;Email&quot;: &quot;slopez@powayusd.com&quot;, &quot;Owns_Cars&quot;: [&quot;2021-Insight&quot;] }) return jsonify(InfoDb) # add an HTML endpoint to flask app @app.route(&#39;/&#39;) def say_hello(): html_content = &quot;&quot;&quot; &lt;html&gt; &lt;head&gt; &lt;title&gt;Hellox&lt;/title&gt; &lt;/head&gt; &lt;body&gt; &lt;h2&gt;Hello, World!&lt;/h2&gt; &lt;/body&gt; &lt;/html&gt; &quot;&quot;&quot; return html_content if __name__ == &#39;__main__&#39;: # starts flask server on default port, http://127.0.0.1:5001 app.run(port=5001) . Show Python/Flask process . This script discovers the running flask process . %%script bash # After app.run(), see the the Python process lsof -i :5001 # see the the Python app lsof -i :5001 | awk &#39;/Python/ {print $2}&#39; | xargs ps . Access API with Python . This script extracts data from Web Server. . import requests res = requests.get(&#39;http://127.0.0.1:5001/api/data&#39;) res.json() . Access API with JavaScript . This code extracts data “live” from a local Web Server with JavaScript fetch. Additionally, it formats the data into a table. . First Name Last Name Residence . Kill Python/Flask process . This script ends Python/Flask process . %%script bash lsof -i :5001 | awk &#39;/Python/ {print $2}&#39; | xargs kill -9 . Hacks . Edit, stop and start the web server. . Add to the Home Page | Add your own information to the Web API | Use from Template to start your own Team Flask project https://github.com/nighthawkcoders/flask_portfolio | .",
            "url": "http://localhost:4100/teacher_portfolio/c4.0/2023/09/06/python-flask_in_jupyter_IPYNB_2_.html",
            "relUrl": "/c4.0/2023/09/06/python-flask_in_jupyter_IPYNB_2_.html",
            "date": " • Sep 6, 2023"
        }
        
    
  
    
        ,"post191": {
            "title": "UX, jQuery | CRUD",
            "content": "Lessons on jQuery . This blog should be expanded . https://www.w3schools.com/jquery/default.asp | https://colorlib.com/wp/jquery-plugins-effects/ | . It is expected to teach jQuery to complement PBL projects. . Below is jQuery table. An example could be added at the end of the example to include fetch. FYI, jQuery is used in Student Database here | Teacher is looking for great example to use jQuery here, objective would be to have CRUD operation folded in very nicely. | . | . Markdown Table . Google markdown cheat sheet and it lead you to an outline for how to make a table. . Make Model Year Color Price . Ford | Mustang | 2022 | Red | $35,000 | . Toyota | Camry | 2022 | Silver | $25,00 | . Tesla | Model S | 2022 | White | $80,000 | . Cadillac | Broughan | 1969 | Black | $10,000 | . Ford | F-350 | 1997 | Green | $15,000 | . Ford | Excursion | 2003 | Green | $25,000 | . Ford | Ranger | 2012 | Red | $8,000 | . Kuboto | L3301 Tractor | 2015 | Orange | $12,000 | . Ford | Fusion Energi | 2015 | Green | $15,000 | . Acura | XL | 2006 | Grey | $10,000 | . Ford | F150 Lightning | 2023 | Grey | $70,000 | . HTML Table . Google w3schools html table and it will lead you to a tutorial on how to make tables. . %%html &lt;h2&gt;HTML Cell Output from Jupyter&lt;/h2&gt; &lt;!-- Body contains the contents of the Document --&gt; &lt;body&gt; &lt;table class=&quot;table&quot;&gt; &lt;thead&gt; &lt;tr&gt; &lt;th&gt;Make&lt;/th&gt; &lt;th&gt;Model&lt;/th&gt; &lt;th&gt;Year&lt;/th&gt; &lt;th&gt;Color&lt;/th&gt; &lt;th&gt;Price&lt;/th&gt; &lt;/tr&gt; &lt;/thead&gt; &lt;tbody&gt; &lt;tr&gt; &lt;td&gt;Ford&lt;/td&gt; &lt;td&gt;Mustang&lt;/td&gt; &lt;td&gt;2022&lt;/td&gt; &lt;td&gt;Red&lt;/td&gt; &lt;td&gt;$35,000&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;Toyota&lt;/td&gt; &lt;td&gt;Camry&lt;/td&gt; &lt;td&gt;2022&lt;/td&gt; &lt;td&gt;Silver&lt;/td&gt; &lt;td&gt;$25,000&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;Tesla&lt;/td&gt; &lt;td&gt;Model S&lt;/td&gt; &lt;td&gt;2022&lt;/td&gt; &lt;td&gt;White&lt;/td&gt; &lt;td&gt;$80,000&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;Cadillac&lt;/td&gt; &lt;td&gt;Broughan&lt;/td&gt; &lt;td&gt;1969&lt;/td&gt; &lt;td&gt;Black&lt;/td&gt; &lt;td&gt;$10,000&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;Ford&lt;/td&gt; &lt;td&gt;F-350&lt;/td&gt; &lt;td&gt;1997&lt;/td&gt; &lt;td&gt;Green&lt;/td&gt; &lt;td&gt;$15,000&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;Ford&lt;/td&gt; &lt;td&gt;Excursion&lt;/td&gt; &lt;td&gt;2003&lt;/td&gt; &lt;td&gt;Green&lt;/td&gt; &lt;td&gt;$25,000&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;Ford&lt;/td&gt; &lt;td&gt;Ranger&lt;/td&gt; &lt;td&gt;2012&lt;/td&gt; &lt;td&gt;Red&lt;/td&gt; &lt;td&gt;$8,000&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;Kuboto&lt;/td&gt; &lt;td&gt;L3301 Tractor&lt;/td&gt; &lt;td&gt;2015&lt;/td&gt; &lt;td&gt;Orange&lt;/td&gt; &lt;td&gt;$12,000&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;Ford&lt;/td&gt; &lt;td&gt;Fusion Energi&lt;/td&gt; &lt;td&gt;2015&lt;/td&gt; &lt;td&gt;Guard&lt;/td&gt; &lt;td&gt;$25,000&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;Acura&lt;/td&gt; &lt;td&gt;XL&lt;/td&gt; &lt;td&gt;2006&lt;/td&gt; &lt;td&gt;Grey&lt;/td&gt; &lt;td&gt;$10,000&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;Ford&lt;/td&gt; &lt;td&gt;F150 Lightning&lt;/td&gt; &lt;td&gt;2024&lt;/td&gt; &lt;td&gt;Guard&lt;/td&gt; &lt;td&gt;$70,000&lt;/td&gt; &lt;/tr&gt; &lt;/tbody&gt; &lt;/table&gt; &lt;/body&gt; . HTML Cell Output from Jupyter . Make Model Year Color Price . Ford | Mustang | 2022 | Red | $35,000 | . Toyota | Camry | 2022 | Silver | $25,000 | . Tesla | Model S | 2022 | White | $80,000 | . Cadillac | Broughan | 1969 | Black | $10,000 | . Ford | F-350 | 1997 | Green | $15,000 | . Ford | Excursion | 2003 | Green | $25,000 | . Ford | Ranger | 2012 | Red | $8,000 | . Kuboto | L3301 Tractor | 2015 | Orange | $12,000 | . Ford | Fusion Energi | 2015 | Guard | $25,000 | . Acura | XL | 2006 | Grey | $10,000 | . Ford | F150 Lightning | 2024 | Guard | $70,000 | . HTML Table in Markdown Cell with JavaScript jquery . JavaScript is a programming language that works with HTML data, CSS helps to style that data. In this example, we are using JavaScript and CSS that was developed by others (3rd party). Addithing the 3rd party code makes the table interactive. . Look at the href and src on lines inside of the lines in &lt;head&gt; tags. This is adding code to our page from others. | Observe the &lt;script&gt; tags at the bottom of the page. This is generating the interactive table, from the third party code, using the data &lt;table id=&quot;demo&quot;&gt; from the &lt;body&gt;. | . %%html &lt;!-- Head contains information to Support the Document --&gt; &lt;head&gt; &lt;!-- load jQuery and DataTables output style and scripts --&gt; &lt;link rel=&quot;stylesheet&quot; type=&quot;text/css&quot; href=&quot;https://cdn.datatables.net/1.13.4/css/jquery.dataTables.min.css&quot;&gt; &lt;script type=&quot;text/javascript&quot; language=&quot;javascript&quot; src=&quot;https://code.jquery.com/jquery-3.6.0.min.js&quot;&gt;&lt;/script&gt; &lt;script&gt;var define = null;&lt;/script&gt; &lt;script type=&quot;text/javascript&quot; language=&quot;javascript&quot; src=&quot;https://cdn.datatables.net/1.13.4/js/jquery.dataTables.min.js&quot;&gt;&lt;/script&gt; &lt;/head&gt; &lt;!-- Body contains the contents of the Document --&gt; &lt;body&gt; &lt;table id=&quot;xdemo&quot; class=&quot;table&quot;&gt; &lt;thead&gt; &lt;tr&gt; &lt;th&gt;Make&lt;/th&gt; &lt;th&gt;Model&lt;/th&gt; &lt;th&gt;Year&lt;/th&gt; &lt;th&gt;Color&lt;/th&gt; &lt;th&gt;Price&lt;/th&gt; &lt;/tr&gt; &lt;/thead&gt; &lt;tbody&gt; &lt;tr&gt; &lt;td&gt;Ford&lt;/td&gt; &lt;td&gt;Mustang&lt;/td&gt; &lt;td&gt;2022&lt;/td&gt; &lt;td&gt;Red&lt;/td&gt; &lt;td&gt;$35,000&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;Toyota&lt;/td&gt; &lt;td&gt;Camry&lt;/td&gt; &lt;td&gt;2022&lt;/td&gt; &lt;td&gt;Silver&lt;/td&gt; &lt;td&gt;$25,000&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;Tesla&lt;/td&gt; &lt;td&gt;Model S&lt;/td&gt; &lt;td&gt;2022&lt;/td&gt; &lt;td&gt;White&lt;/td&gt; &lt;td&gt;$80,000&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;Cadillac&lt;/td&gt; &lt;td&gt;Broughan&lt;/td&gt; &lt;td&gt;1969&lt;/td&gt; &lt;td&gt;Black&lt;/td&gt; &lt;td&gt;$10,000&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;Ford&lt;/td&gt; &lt;td&gt;F-350&lt;/td&gt; &lt;td&gt;1997&lt;/td&gt; &lt;td&gt;Green&lt;/td&gt; &lt;td&gt;$15,000&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;Ford&lt;/td&gt; &lt;td&gt;Excursion&lt;/td&gt; &lt;td&gt;2003&lt;/td&gt; &lt;td&gt;Green&lt;/td&gt; &lt;td&gt;$25,000&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;Ford&lt;/td&gt; &lt;td&gt;Ranger&lt;/td&gt; &lt;td&gt;2012&lt;/td&gt; &lt;td&gt;Red&lt;/td&gt; &lt;td&gt;$8,000&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;Kuboto&lt;/td&gt; &lt;td&gt;L3301 Tractor&lt;/td&gt; &lt;td&gt;2015&lt;/td&gt; &lt;td&gt;Orange&lt;/td&gt; &lt;td&gt;$12,000&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;Ford&lt;/td&gt; &lt;td&gt;Fusion Energi&lt;/td&gt; &lt;td&gt;2015&lt;/td&gt; &lt;td&gt;Guard&lt;/td&gt; &lt;td&gt;$25,000&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;Acura&lt;/td&gt; &lt;td&gt;XL&lt;/td&gt; &lt;td&gt;2006&lt;/td&gt; &lt;td&gt;Grey&lt;/td&gt; &lt;td&gt;$10,000&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;Ford&lt;/td&gt; &lt;td&gt;F150 Lightning&lt;/td&gt; &lt;td&gt;2024&lt;/td&gt; &lt;td&gt;Guard&lt;/td&gt; &lt;td&gt;$70,000&lt;/td&gt; &lt;/tr&gt; &lt;/tbody&gt; &lt;/table&gt; &lt;/body&gt; &lt;!-- Script is used to embed executable code --&gt; &lt;script&gt; $(&quot;#xdemo&quot;).DataTable(); &lt;/script&gt; . . Make Model Year Color Price . Ford | Mustang | 2022 | Red | $35,000 | . Toyota | Camry | 2022 | Silver | $25,000 | . Tesla | Model S | 2022 | White | $80,000 | . Cadillac | Broughan | 1969 | Black | $10,000 | . Ford | F-350 | 1997 | Green | $15,000 | . Ford | Excursion | 2003 | Green | $25,000 | . Ford | Ranger | 2012 | Red | $8,000 | . Kuboto | L3301 Tractor | 2015 | Orange | $12,000 | . Ford | Fusion Energi | 2015 | Guard | $25,000 | . Acura | XL | 2006 | Grey | $10,000 | . Ford | F150 Lightning | 2024 | Guard | $70,000 | . Hacks . This lesson teaches you about tables. In this hack, it is important that you analze the difference in the styles of output shown. . Make your own tables, with data according to your interests. | Describe a benefit of a markdown table. | Try to Style the HTML table using w3schools. | Describe the difference between HTML and JavaScript. | Describe a benefit of a table that uses JavaScript. | .",
            "url": "http://localhost:4100/teacher_portfolio/c3.0/c3.1/c4.1/2023/09/06/javascript-output-jquery_IPYNB_2_.html",
            "relUrl": "/c3.0/c3.1/c4.1/2023/09/06/javascript-output-jquery_IPYNB_2_.html",
            "date": " • Sep 6, 2023"
        }
        
    
  
    
        ,"post192": {
            "title": "JS Mario Animation",
            "content": ". . &lt;table&gt; &lt;tr&gt; &lt;td&gt;&lt;img src=&quot;/teacher_portfolio//images/logo.png&quot; height=&quot;60&quot; title=&quot;Frontend&quot; alt=&quot;&quot;&gt;&lt;/td&gt; &lt;td&gt;&lt;a href=&quot;/teacher_portfolio/navigation/csse&quot;&gt;CSSE&lt;/a&gt;&lt;/td&gt; &lt;td&gt;&lt;a href=&quot;/teacher_portfolio/navigation/csp&quot;&gt;CSP&lt;/a&gt;&lt;/td&gt; &lt;td&gt;&lt;a href=&quot;/teacher_portfolio/navigation/csa&quot;&gt;CSA&lt;/a&gt;&lt;/td&gt; &lt;td&gt;&lt;a href=&quot;/teacher_portfolio/navigation/game&quot;&gt;Game&lt;/a&gt;&lt;/td&gt; &lt;/tr&gt; &lt;/table&gt; &lt;! Liquid concatentation &gt; &lt;! Liquid list variable created from file containing mario metatdata for sprite &gt; &lt;! Liquid integer assignment &gt; &lt;! HTML for page contains &lt;p&gt; tag named &quot;mario&quot; and class properties for a &quot;sprite&quot; --&gt; &lt;p id=&quot;mario&quot; class=&quot;sprite&quot;&gt;&lt;/p&gt; &lt;! Embedded Cascading Style Sheet (CSS) rules, defines how HTML elements look &gt; &lt;style&gt; /*CSS style rules for the elements id and class above... */ .sprite { height: 256px; width: 256px; background-image: url(&#39;/teacher_portfolio/images/mario_animation.png&#39;); background-repeat: no-repeat; } /*background position of sprite element */ #mario { background-position: calc( * 256 * -1px) calc( * 256* -1px); } &lt;/style&gt; &lt;! Embedded executable code&gt; &lt;script&gt; ////////// convert yml hash to javascript key value objects ///////// var mario_metadata = {}; //key, value object var key = &quot;Rest&quot; //key var values = {} //values object values[&quot;row&quot;] = 0 values[&quot;col&quot;] = 0 values[&quot;frames&quot;] = 15 mario_metadata[key] = values; //key with values added var key = &quot;RestL&quot; //key var values = {} //values object values[&quot;row&quot;] = 1 values[&quot;col&quot;] = 0 values[&quot;frames&quot;] = 15 mario_metadata[key] = values; //key with values added var key = &quot;Walk&quot; //key var values = {} //values object values[&quot;row&quot;] = 2 values[&quot;col&quot;] = 0 values[&quot;frames&quot;] = 8 mario_metadata[key] = values; //key with values added var key = &quot;Tada&quot; //key var values = {} //values object values[&quot;row&quot;] = 2 values[&quot;col&quot;] = 11 values[&quot;frames&quot;] = 3 mario_metadata[key] = values; //key with values added var key = &quot;WalkL&quot; //key var values = {} //values object values[&quot;row&quot;] = 3 values[&quot;col&quot;] = 0 values[&quot;frames&quot;] = 8 mario_metadata[key] = values; //key with values added var key = &quot;TadaL&quot; //key var values = {} //values object values[&quot;row&quot;] = 3 values[&quot;col&quot;] = 11 values[&quot;frames&quot;] = 3 mario_metadata[key] = values; //key with values added var key = &quot;Run1&quot; //key var values = {} //values object values[&quot;row&quot;] = 4 values[&quot;col&quot;] = 0 values[&quot;frames&quot;] = 15 mario_metadata[key] = values; //key with values added var key = &quot;Run1L&quot; //key var values = {} //values object values[&quot;row&quot;] = 5 values[&quot;col&quot;] = 0 values[&quot;frames&quot;] = 15 mario_metadata[key] = values; //key with values added var key = &quot;Run2&quot; //key var values = {} //values object values[&quot;row&quot;] = 6 values[&quot;col&quot;] = 0 values[&quot;frames&quot;] = 15 mario_metadata[key] = values; //key with values added var key = &quot;Run2L&quot; //key var values = {} //values object values[&quot;row&quot;] = 7 values[&quot;col&quot;] = 0 values[&quot;frames&quot;] = 15 mario_metadata[key] = values; //key with values added var key = &quot;Puff&quot; //key var values = {} //values object values[&quot;row&quot;] = 8 values[&quot;col&quot;] = 0 values[&quot;frames&quot;] = 15 mario_metadata[key] = values; //key with values added var key = &quot;PuffL&quot; //key var values = {} //values object values[&quot;row&quot;] = 9 values[&quot;col&quot;] = 0 values[&quot;frames&quot;] = 15 mario_metadata[key] = values; //key with values added var key = &quot;Cheer&quot; //key var values = {} //values object values[&quot;row&quot;] = 10 values[&quot;col&quot;] = 0 values[&quot;frames&quot;] = 15 mario_metadata[key] = values; //key with values added var key = &quot;CheerL&quot; //key var values = {} //values object values[&quot;row&quot;] = 11 values[&quot;col&quot;] = 0 values[&quot;frames&quot;] = 15 mario_metadata[key] = values; //key with values added var key = &quot;Flip&quot; //key var values = {} //values object values[&quot;row&quot;] = 12 values[&quot;col&quot;] = 0 values[&quot;frames&quot;] = 15 mario_metadata[key] = values; //key with values added var key = &quot;FlipL&quot; //key var values = {} //values object values[&quot;row&quot;] = 13 values[&quot;col&quot;] = 0 values[&quot;frames&quot;] = 15 mario_metadata[key] = values; //key with values added ////////// animation control object ///////// class Mario { constructor(meta_data) { this.tID = null; //capture setInterval() task ID this.positionX = 0; // current position of sprite in X direction this.currentSpeed = 0; this.marioElement = document.getElementById(&quot;mario&quot;); //HTML element of sprite this.pixels = 256; //pixel offset of images in the sprite, set by liquid constant this.interval = 100; //animation time interval this.obj = meta_data; this.marioElement.style.position = &quot;absolute&quot;; } animate(obj, speed) { let frame = 0; const row = obj.row * this.pixels; this.currentSpeed = speed; this.tID = setInterval(() =&gt; { const col = (frame + obj.col) * this.pixels; this.marioElement.style.backgroundPosition = `-${col}px -${row}px`; this.marioElement.style.left = `${this.positionX}px`; this.positionX += speed; frame = (frame + 1) % obj.frames; const viewportWidth = window.innerWidth; if (this.positionX &gt; viewportWidth - this.pixels) { document.documentElement.scrollLeft = this.positionX - viewportWidth + this.pixels; } }, this.interval); } startWalking() { this.stopAnimate(); this.animate(this.obj[&quot;Walk&quot;], 3); } startRunning() { this.stopAnimate(); this.animate(this.obj[&quot;Run1&quot;], 6); } startPuffing() { this.stopAnimate(); this.animate(this.obj[&quot;Puff&quot;], 0); } startCheering() { this.stopAnimate(); this.animate(this.obj[&quot;Cheer&quot;], 0); } startFlipping() { this.stopAnimate(); this.animate(this.obj[&quot;Flip&quot;], 0); } startResting() { this.stopAnimate(); this.animate(this.obj[&quot;Rest&quot;], 0); } stopAnimate() { clearInterval(this.tID); } } const mario = new Mario(mario_metadata); ////////// event control ///////// window.addEventListener(&quot;keydown&quot;, (event) =&gt; { if (event.key === &quot;ArrowRight&quot;) { event.preventDefault(); if (event.repeat) { mario.startCheering(); } else { if (mario.currentSpeed === 0) { mario.startWalking(); } else if (mario.currentSpeed === 3) { mario.startRunning(); } } } else if (event.key === &quot;ArrowLeft&quot;) { event.preventDefault(); if (event.repeat) { mario.stopAnimate(); } else { mario.startPuffing(); } } }); //touch events that enable animations window.addEventListener(&quot;touchstart&quot;, (event) =&gt; { event.preventDefault(); // prevent default browser action if (event.touches[0].clientX &gt; window.innerWidth / 2) { // move right if (currentSpeed === 0) { // if at rest, go to walking mario.startWalking(); } else if (currentSpeed === 3) { // if walking, go to running mario.startRunning(); } } else { // move left mario.startPuffing(); } }); //stop animation on window blur window.addEventListener(&quot;blur&quot;, () =&gt; { mario.stopAnimate(); }); //start animation on window focus window.addEventListener(&quot;focus&quot;, () =&gt; { mario.startFlipping(); }); //start animation on page load or page refresh document.addEventListener(&quot;DOMContentLoaded&quot;, () =&gt; { // adjust sprite size for high pixel density devices const scale = window.devicePixelRatio; const sprite = document.querySelector(&quot;.sprite&quot;); sprite.style.transform = `scale(${0.2 * scale})`; mario.startResting(); }); &lt;/script&gt; .",
            "url": "http://localhost:4100/teacher_portfolio/c5.0/c7.0/c7.6/2023/09/06/javascript-motion-mario-oop.html",
            "relUrl": "/c5.0/c7.0/c7.6/2023/09/06/javascript-motion-mario-oop.html",
            "date": " • Sep 6, 2023"
        }
        
    
  
    
        ,"post193": {
            "title": "JS Input",
            "content": "HTML . Identify the HTML for a grade calculator; it enables input and totals. . DIV element defines a division or a section in an HTML document. Used to divide headings, totals, and input in this example. | SPAN element defines a inline container within text. Used to capture different totals in this example. | INPUT tag specifies an input field where the user can enter data. Used to capture series of numbers in this example. | ID attributes are used by CSS for style and JavaScript for reference. Used to update totals in this example. | . Resources HTML . HTML Tutorial | learn about id | . JavaScript newInputLine . Identify the function that generates a new input line after each score is entered. . Resources createElement . Create Element | Set Attribute | . JavaScript calculator . Indentify the code below calculates the the total, count, and average of the user inputs. . Resources getElements . Get Elements by ID | Get Elements by Name | . HTML Magic runs Calculator . The code below runs in VSCode and on Jupyter Notebook. . SCRIPT tag is used to embed JavaScript inside of HTML | . Hacks . Here are some ideas to alter this calculator. . Input two scores: 1.8 out of 2 | Add title: Tool Check 1.8 out of 2 | Format with colors or put into a table | Advanced, save in localstorage and repaint on load | . Sample Table . Assignment Score Maximum . Tool Check | 1.8 | 2.0 | . Lab Notebook Check | 1.7 | 2.0 | . Pair Showcase | 4.7 | 5.0 | . Here are some ideas to alter former calculator runtime, source. . Right justify result | Test conditions on small, big, and decimal numbers, report on findings. Fix issues. | Add the common math operation that is missing from calculator (/) | Advanced, implement a 1 number operation (ie SQRT) | . Grade Calculator . %%html &lt;!-- Help Message --&gt; &lt;h3&gt;Input scores, press tab to add each new number.&lt;/h3&gt; &lt;!-- Totals --&gt; &lt;ul&gt; &lt;li&gt; Total : &lt;span id=&quot;total&quot;&gt;0.0&lt;/span&gt; Count : &lt;span id=&quot;count&quot;&gt;0.0&lt;/span&gt; Average : &lt;span id=&quot;average&quot;&gt;0.0&lt;/span&gt; &lt;/li&gt; &lt;/ul&gt; &lt;!-- Rows added using scores ID --&gt; &lt;div id=&quot;scores&quot;&gt; &lt;!-- javascript generated inputs --&gt; &lt;/div&gt; &lt;script&gt; // Executes on input event and calculates totals function calculator(event) { var key = event.key; // Check if the pressed key is the &quot;Tab&quot; key (key code 9) or &quot;Enter&quot; key (key code 13) if (key === &quot;Tab&quot; || key === &quot;Enter&quot;) { event.preventDefault(); // Prevent default behavior (tabbing to the next element) var array = document.getElementsByName(&#39;score&#39;); // setup array of scores var total = 0; // running total var count = 0; // count of input elements with valid values for (var i = 0; i &lt; array.length; i++) { // iterate through array var value = array[i].value; if (parseFloat(value)) { var parsedValue = parseFloat(value); total += parsedValue; // add to running total count++; } } // update totals document.getElementById(&#39;total&#39;).innerHTML = total.toFixed(2); // show two decimals document.getElementById(&#39;count&#39;).innerHTML = count; if (count &gt; 0) { document.getElementById(&#39;average&#39;).innerHTML = (total / count).toFixed(2); } else { document.getElementById(&#39;average&#39;).innerHTML = &quot;0.0&quot;; } // adds newInputLine, only if all array values satisfy parseFloat if (count === document.getElementsByName(&#39;score&#39;).length) { newInputLine(count); // make a new input line } } } // Creates a new input box function newInputLine(index) { // Add a label for each score element var title = document.createElement(&#39;label&#39;); title.htmlFor = index; title.innerHTML = index + &quot;. &quot;; document.getElementById(&quot;scores&quot;).appendChild(title); // add to HTML // Setup score element and attributes var score = document.createElement(&quot;input&quot;); // input element score.id = index; // id of input element score.onkeydown = calculator // Each key triggers event (using function as a value) score.type = &quot;number&quot;; // Use text type to allow typing multiple characters score.name = &quot;score&quot;; // name is used to group all &quot;score&quot; elements (array) score.style.textAlign = &quot;right&quot;; score.style.width = &quot;5em&quot;; document.getElementById(&quot;scores&quot;).appendChild(score); // add to HTML // Create and add blank line after input box var br = document.createElement(&quot;br&quot;); // line break element document.getElementById(&quot;scores&quot;).appendChild(br); // add to HTML // Set focus on the new input line document.getElementById(index).focus(); } // Creates 1st input box on Window load newInputLine(0); &lt;/script&gt; . Input scores, press tab to add each new number. . Total : 0.0 Count : 0.0 Average : 0.0 | .",
            "url": "http://localhost:4100/teacher_portfolio/c3.0/c3.1/c4.1/2023/09/06/javascript-input_IPYNB_2_.html",
            "relUrl": "/c3.0/c3.1/c4.1/2023/09/06/javascript-input_IPYNB_2_.html",
            "date": " • Sep 6, 2023"
        }
        
    
  
    
        ,"post194": {
            "title": "Alien World Background",
            "content": "",
            "url": "http://localhost:4100/teacher_portfolio/c5.0/c7.0/c7.6/2023/09/06/javascript-background-alien.html",
            "relUrl": "/c5.0/c7.0/c7.6/2023/09/06/javascript-background-alien.html",
            "date": " • Sep 6, 2023"
        }
        
    
  
    
        ,"post195": {
            "title": "Snake Game",
            "content": "Snake score: 0 . . Welcome to Snake, press space to begin . new game settings Game Over, press space to try again . new game settings Settings Screen, press space to go back to playing . new game Speed: Slow Normal Fast . Wall: On Off .",
            "url": "http://localhost:4100/teacher_portfolio/2023/08/31/Snake_Game.html",
            "relUrl": "/2023/08/31/Snake_Game.html",
            "date": " • Aug 31, 2023"
        }
        
    
  
    
        ,"post196": {
            "title": "Pair Showcase",
            "content": "Showcase Overview . This will be a Live Review! A Live Review is where Students present to Teacher. The Students share accomplishments from the Sprint with the Teacher. The review will highlight elements from the sprint. . Work is performed daily in class, expectations are 2 hours of outside work weekly. A Showcase for a Sprint is where you, and in this case your pair, have progressed working on Canvas Assignments and Hacks in the time provided until you scheduled Showcase. Everything is iterative, so there is no such thing as extended time in a Sprint Showcase. Everyday you should be working and blogging to prepare for the Showcase. . Showcase Requirements . This is a culmination of all activities in a Sprint. During the Sprint there is always time to preview or communcate progress with the teacher; if you have shared progress during the sprint, be sure to highlight success to jog Teachers memory. Never, never expect the Teacher to remember something you did. The Showcase is time for you to shine and impress. . Format of Showcase. This is a pair event. This Sprint is focused on Pair Programming and Work, not Team. In a class, live reviews for this Showcase will be done in pairs or trios (rare, 3 or less per class) for this event. Make sure work is polished and reviewed. Part of working with a pair is preparation, review, and testing prior to presenting to Teacher. In the Tech world, quality presentation of Tech are as important as the Tech itself. Never share work that has not be previewed or share buggy work in a Showcase. This lacks professionalism. | Google or Microsoft Docs, Sheets, Presentations are frowned upon and will result in significant deduction. It is expected that you will be showing materials from your personal Student blog. The Teacher believes using a blog is helping with your ability to design, organize, and code. | Pair work can be shared, but both people should be able to talk about anything they expect to be counted toward their personal credit. If you did not participate or carry your load on a topic, be honest, don’t fake accomplishments. Attempts to get credit by coat tailing is frowned upon. | . | Preparation and Time. The Showcase requires preparation. At this event, it would be a mistake to ask “what do you want to see”. There are many sources that have been provided to answer that question. Sprint Illustration. Consider the outline for the sprint a a guideline of key elements expected to be in the Showcase. | Spring Blogs. The hacks within the blogs contain the majority of the requirements that should be incorporated into the materials you present in the Showcase. | . | . Ongoing Evaluations . There are many ways to perform assesments in classroom. Grade is not the only assessment that is on a report card. A Student, on a daily basis, establishes work behaviors and capabilities with a Teacher, An employee, on a daily basis, establishes work behaviors with peers and manager. We will be establishing a Data Science profile 1/0 for each student as we progress in the class, this profile will be maintained by Teacher and will be used in evaluating grade. . Focus, Intentions . Attendance: Does the student have a computer every day, were they overly tardy, or did they have any irregularities in presence; like being gone for 1/2 hour bathroom breaks, missing intro sessions to class, … . | Work Habits: Does the student have a class time work ethic or in Teacher perception appears to be productive; do they have collaboration meetings with pair and team? do they do their own work in class time? do the follow a plan? are the open to change? are the improving habits? are their work habits a positive to those around them?… . | Behavior: Does the student require redirection from Teacher to be on task? are they active and appropriately participating in Tech Talks? are they maintaining seed points? are they focussing on the right things? do they have grit and persistence? … . | Timely: Is the student ready to participate in live reviews? are they aware of assignments and due dates? is their work outcome in alignment with assignment expectation? are they on track with work and showing progress? is progress consistent with time period, expectations, and Teacher assessed capabilities? …. . | . | Technical Progression . Qualified, satisfies pre-requisites: Teacher assessment on if the Student was qualified to take class. For instance, some CSA students skip CSP and have had no previous background in CompSci. Another case, is the student a “good student”; someone that completes tasks and accomplishes goals; someone that is prepared to work in class and do homework? Finally, is the student able to identify their needs and learning style requirements; do they participate; do they ask questions; will they review visuals; talk about problems? … . | Tech sense: Teacher assesment on the “technical sense or sensibility” when entering the class and throughout the year. For instance, in the beginning is student able to navigate their own computer, locate files, install software? Or as they progress through year are they able to use their tools, perform tool updates, keep things working, troubleshoot? Are they able to navigate through technical elements? Over time, will they adapt and try to improve efficiency? … . | Clarity/Presentation: Does the student show the ability to explain what they have been working on? Are the able to describe technical elements with correct vocabulary? Are they able to understand technological jargon, understand the technical frameworks in order to explain it to others? Are they confident and prepared? … . | Tech growth: Teacher assesment on “technical rating” as student progresses in class or prepares to take the AP exam. Did the student acquire technical abilities in each Sprint prior to AP exam? Does the student learn the Tech, or do they simply try for the points? Is the student building on skills learned as foundations for the next task? At the time of the AP exam time, did the Teacher believe that they would undoubtedly receive a “3” or higher? . | . | Soft Skills, Presentation . Self advocacy: Teacher assesment and perception on how the student self advocates. Does the student effectively communicate, convey, negotiate or assert interests, desires, needs? Does the student seek out help when needed? Does the student ask questions on Slack, in person, of team members? Does the student attend Tutorial? Is the student aware and informed of assignments? Does student make informed decisions and take responsibility for their own decisions? . | Comm and Collab skills: Teacher assesment and perception on whether the student is a collaborator and communicator in classroom. Does the Teacher see the student exhibiting collaboritive behaviors? Does student explain and review work with others? Do they work consistently plan work with others? Are communication and collaboration willing and active attributes in the students behavior? Does the Teacher observe the student as active in communication during live reviews? . | Leadership: Teacher assesment or observation on leadership qualities of the student. Did the Teacher observe the student as having key leadership and organization skills? Did the Teacher see time management skills exhibited by the student, including schedule, finding the in-between time for things that are not part of the norm? Did the student exhibit networking, critical thiking, and proactivity? Did the Teacher ask the student to take on a leadership position in the classroom? Did the student follow through with that responsibiility? Would the Teacher ask the student to perform a task important to the entire classroom? . | Integrity: Teacher assesment on how the student represents their own work and behavior. Does the student have a general sense of self-awareness, group-awareness, and how actions impact others? Does the student and student group respect and follow the rules established in the classroom and by the Teacher? Without question, did the student do their own work on each assignment through the year? In live reviews, did the Teacher think the student was misrepresenting work as their own? Was there questionable behavior that was not atoned, for instance being a suspect or caught in cheating scandal? . | . | .",
            "url": "http://localhost:4100/teacher_portfolio/2023/08/30/showcase-S1-pair_IPYNB_2_.html",
            "relUrl": "/2023/08/30/showcase-S1-pair_IPYNB_2_.html",
            "date": " • Aug 30, 2023"
        }
        
    
  
    
        ,"post197": {
            "title": "Grab a Project",
            "content": "Overview . What do beginning developers like to work on? Everyones says the best way to learn a language is to build something. What would beginning developers like to build? . Geeks for Geeks Research Ideas Talk to someone who rembers their 1st Web project. What did the build? | Ask someone what they need. It is always best to be working on something that is useful. | Think about your school year. Computer Science is often thought about as a tool box. How would you use the tools of Computer Science to help you become a better student this year? | . | . Grab a Calculator . Students can grab a simple calculator using HTML, CSS, and JavaScript. This project will introduce them to basic user interface design and event handling in JavaScript. . Learn about STYLE and SCRIPT | Show how style usage is integrated into THEME . | Many calculators are available on Internet and ChatGPT, search “calculator in javascript”. Additionally, Teacher has these calculators… Conventional Calculator | Calculator with Background, Source | Binary Calculator | . | . Grab a Game . Building a game is an excellent project for students to explore more advanced JavaScript concepts, such as game logic, handling user interactions, and managing state. . Many Tic Tac Toe games are available on Internet and ChatGPT, search “tic-tack-toe in javascript”. Additionally, Teach has some other games that are very common… Snake Game | Game of Life | . | .",
            "url": "http://localhost:4100/teacher_portfolio/c1.3/2023/08/30/javascript_grab_IPYNB_2_.html",
            "relUrl": "/c1.3/2023/08/30/javascript_grab_IPYNB_2_.html",
            "date": " • Aug 30, 2023"
        }
        
    
  
    
        ,"post198": {
            "title": "JS Itunes API",
            "content": "| CSSE | CSP | CSA | Game | . Search Artist Track Images Preview . Hacks . The endpoint itunes.apple.com allows requests and they provide responses with their data. Our formatting of the response provides the Input and Output interaction with the itunes data. . We do not create or manage their data. The itunes system has backend processes that create and store data. . In this type of Website relationship we itunes could provide. . A better starting screen. Providing sample sample queries on screen. | Provide local storage to show recent or liked queries by the user. | Have interaction between this API and other functions on our site. For instance, we could allow music selection to dictate background music while playing a game. | . But, we would need backend help from itunes to.. . Show most popular queries. | Show songs by genre. | Show songs by era. | .",
            "url": "http://localhost:4100/teacher_portfolio/c7.0/2023/08/30/javascript-music-api.html",
            "relUrl": "/c7.0/2023/08/30/javascript-music-api.html",
            "date": " • Aug 30, 2023"
        }
        
    
  
    
        ,"post199": {
            "title": "Using Javascript with HTML DOM",
            "content": "| Home | HTML | Data Types | DOM | JavaScript | JS Debugging | . Following along . Remember to “git pull” on teacher repository to update to lates. . Run this notebook in VSCode | Activate Help-Toogel Developer Tools to add console outputs to runtime experience | . Referencing HTML elements using javascript . To get an HTML element, use document.getElementById(&quot;idTag&quot;) | You will use the ID that you set in your HTML | if you console.log the resulting variable you will get some information about the element | . %%html &lt;!-- the ID must be specified within the element --&gt; &lt;h1 id=&quot;domTitleID&quot;&gt;My Title&lt;/h1&gt; &lt;!-- javascript goes here --&gt; &lt;script&gt; var titleElement = document.getElementById(&quot;domTitleID&quot;) &lt;!-- outputs h1 tag --&gt; console.log(&quot;Example #1, show element in DOM&quot;) console.log(titleElement) &lt;/script&gt; . Getting the data within the HTML element . The variable titleElement stores the “object” | Basically think of this as the group of data enclosed in HTML tag | To access a certain type of data from an “object” we use “.” notation .innerHTML gets data within center of tag | . | . %%html &lt;!-- the ID must be specified within the element --&gt; &lt;h1 id=&quot;domTitleIDget&quot;&gt;My Title&lt;/h1&gt; &lt;!-- javascript goes here --&gt; &lt;script&gt; var titleElement = document.getElementById(&quot;domTitleIDget&quot;) &lt;!-- outputs h1 innerHTML from h1 tag --&gt; console.log(&quot;Example #2, show innerHTML&quot;) console.log(titleElement.innerHTML) &lt;/script&gt; . Setting the data within the HTML Element . The innerHTML data in this “object” can be set like a variable Change the value of the innerHTML using the “=” (assignment) operator | . | . %%html &lt;!-- the ID must be specified on the element --&gt; &lt;h1 id=&quot;domTitleIDset&quot;&gt;My Title&lt;/h1&gt; &lt;!-- javascript goes here --&gt; &lt;script&gt; var titleElement = document.getElementById(&quot;domTitleIDset&quot;) titleElement.innerHTML = &quot;Set and Update My Title&quot; &lt;!-- outputs h1 innerHTML after h1 tag has been updated --&gt; console.log(&quot;Example #3, update innerHTML&quot;) console.log(titleElement.innerHTML) &lt;/script&gt; . Creating elements . Create a new element with the document.createElement function -&gt; takes in the type of element | Set properties in the element just like the “h1” example | . %%html &lt;!-- the ID must be specified on the element --&gt; &lt;div id=&quot;divContainerID&quot;&gt; &lt;h1 id=&quot;h1ElementID&quot;&gt;My Title&lt;/h1&gt; &lt;/div&gt; &lt;!-- javascript goes here --&gt; &lt;script&gt; // creates a new element var pElement = document.createElement(&quot;p&quot;) pElement.innerHTML = &quot;Starting a paragraph of text.&quot; // outputs p tag after it has been created console.log(&quot;Example #4, create a p tag within JS&quot;) console.log(pElement) &lt;/script&gt; . Issue! How to Create element that appears in HTML? . Here is a visualization of what is happening =&gt; the “p” is not placed inside the HRML page! | . Solution . Correct by placeing the element somewhere in the page | For example, we could add the element within the div For this, use the appendChild function on the div object (the parameter would be the p element we created) | Remember, use the getELementById to get the object for something in the html (the div!) | . | Updated Diagram | . %%html &lt;!-- the ID must be specified on the element --&gt; &lt;div id=&quot;divContainerIDset&quot;&gt; &lt;h1 id=&quot;h1ElementIDset&quot;&gt;My Title&lt;/h1&gt; &lt;/div&gt; &lt;!-- javascript goes here --&gt; &lt;script&gt; // creates a new element var pElement = document.createElement(&quot;p&quot;) pElement.innerHTML = &quot;Starting a paragraph of text.&quot; // outputs p tag after it has been created console.log(&quot;Example #5, add p tag to HTML&quot;) console.log(pElement) // place the p element inside the HTML page var div = document.getElementById(&quot;divContainerIDset&quot;) div.appendChild(pElement) &lt;/script&gt; . Functions in JavaScript, using with DOM . Functions allow you to “do something” ex. “eat food” in a Snake Game | . | Functions were used in previous examples console.log = “print something” | document.getElementById = “find an element with id” | . | Functions take in parameters, what to do (inside the parenthesis) the parameter tells console.log what to print | the parameter in document.getElementById tells the id of the element | . | Functions can be used with DOM as well, thes will be shown below | . Creeating functions . document functions functions were used to create a lot of functionality, but how can a developer create their own? | function are useful to avoid writing the same code over and over again | function can contain parameters for input (they effectively become variables) | function can contain a return, the are the “output” of the function | . %%html &lt;!-- the ID must be specified on the element --&gt; &lt;div id=&quot;divContainerIDfunction&quot;&gt; &lt;h1 id=&quot;h1ElementIDfunction&quot;&gt;My Title&lt;/h1&gt; &lt;/div&gt; &lt;!-- javascript goew here --&gt; &lt;script&gt; // define a function =&gt; takes parameter text, returns a new p tab function createPTag(text) { // creates a new element var pElement = document.createElement(&quot;p&quot;) // using the parameter like a variable pElement.innerHTML = text // outputs p tag after it has been created console.log(&quot;Example #6, add p tag using a function&quot;) console.log(pElement) return pElement; } // using a function to create p tag var pTag = createPTag(&quot;Starting a paragraph with cooler text than before.&quot;) // place the p element in the webpage var div = document.getElementById(&quot;divContainerIDfunction&quot;) div.appendChild(pTag) &lt;/script&gt; . OnClick Event . Run a function when an event occurs In this case, the p tag is created when the button is clicked | . | . %%html &lt;!-- the ID must be specified on the elements --&gt; &lt;button id=&quot;buttonID&quot;&gt;Click here!&lt;/button&gt; &lt;div id=&quot;divContainerIDbutton&quot;&gt; &lt;h1 id=&quot;h1ElementIDbutton&quot;&gt;My Title&lt;/h1&gt; &lt;/div&gt; &lt;!-- our javascript goe here --&gt; &lt;script&gt; // define a function =&gt; takes parameter text, returns a new p tab function createPTag(text) { // creates a new element var pElement = document.createElement(&quot;p&quot;) // using the parameter like a variable pElement.innerHTML = text // outputs p tag after it has been created console.log(&quot;Example #7.1, add p tag using a function&quot;) console.log(pElement) return pElement; } // create a function that sets specific text and adds to div function addPTagOnButton() { // using our new function var pTag = createPTag(&quot;Starting a paragraph with text created on button press.&quot;) // place the p element in the webpage var div = document.getElementById(&quot;divContainerIDbutton&quot;) // add p tag to the div div.appendChild(pTag) // outputs p tag after it has been created console.log(&quot;Example #7.2, update container adding a &#39;p&#39; tag&quot;) console.log(div) } // add the P tag when our button is clicked var myButton = document.getElementById(&quot;buttonID&quot;) myButton.onclick = addPTagOnButton &lt;/script&gt; . Hacks . Copy your HTML code from the HTML hacks. Write a Javascript snippet to switch the links of the two a tags when a button is pressed. Once they are switched, change the inner HTML of the top p tag to the word “switched!” | . %%html &lt;!-- html code goes here (make sure to run) --&gt; &lt;script&gt; // your javascript code goes here &lt;/script&gt; .",
            "url": "http://localhost:4100/teacher_portfolio/basics/dom",
            "relUrl": "/basics/dom",
            "date": " • Aug 30, 2023"
        }
        
    
  
    
        ,"post200": {
            "title": "Javascript Data Types/Lists",
            "content": "| Home | HTML | Data Types | DOM | JavaScript | JS Debugging | . string datatype . We discussed that strings store text | It is useful to know a few functions that can be used on string manipulation (see example below) | We can see the type of data using typeof operator | . %%js // assign variable var hello = &quot;Hello World&quot;; console.log(&quot;variable: hello&quot;) console.log(hello) // seeing the type of this data console.log(&quot;variable: hello check typeof&quot;) console.log(typeof hello) // add strings together console.log(&quot;string concatenation: hello + Rohan!&quot;) console.log(hello + &quot; Rohan!&quot;) . .substring() . %%js var hello = &quot;Hello World&quot;; // getting a certain component of this text // (here the _ is a standin for the space character) // H e l l o _ W o r l d // 0 1 2 3 4 5 6 7 8 9 10 // if we want the hello component, we want characters 0-4, so we use the following function // (note how we use 0 and 5 as arguments, the last character is NOT INCLUSIVE) console.log(&quot;substring: hello 0, 5&quot;) console.log(hello.substring(0, 5)) . .toUpperCase() and .toLowerCase() . %%js var hello = &quot;Hello World&quot;; // useful functions to make string lowercase or uppercase console.log(&quot;string convert to upper case: hello toUpperCase&quot;) console.log(hello.toUpperCase()) console.log(&quot;string convert to lower case: hello toLowerCase&quot;) console.log(hello.toLowerCase()) . .includes() . %%js var hello = &quot;Hello World&quot;; // useful function to check if one string is contained in another console.log(&quot;string includes: hello includes Rohan&quot;) console.log(hello.includes(&quot;Rohan&quot;)) console.log(&quot;string includes: hello includes Hello&quot;) console.log(hello.includes(&quot;Hello&quot;)) . number datatype . we discussed that numbers store numbers | here are some useful ideas in javascript to deal with numbers | . %%js console.log(&quot;Numbers info&quot;) // assign numbers to varialbes console.log(&quot;variable: num1&quot;) var num1 = 9 console.log(num1) console.log(&quot;variable: num2&quot;) var num2 = 6 console.log(num2) // simple operations with numbers console.log(&quot;Operations&quot;) console.log(&quot;subtract: num1 - num2&quot;) console.log(num1 - num2) console.log(&quot;add: num1 + num2&quot;) console.log(num1 + num2) console.log(&quot;divide: num1 / num2&quot;) console.log(num1 / num2) console.log(&quot;multiply: num1 * num2&quot;) console.log(num1 * num2) console.log(&quot;remainder (modulo): num1 % num2&quot;) console.log(num1 % num2) . number formatting . %%js console.log(&quot;variable: num1&quot;) var num1 = 9 console.log(num1) console.log(&quot;variable: num2&quot;) var num2 = 6 console.log(num2) // converting numbers to text console.log(&quot;number convert string: num1&quot;) console.log(num1.toString()) // rounding a number console.log(&quot;round(num1 / num2)&quot;) console.log(Math.round(num1 / num2)) // rounding a number to decimal palces console.log(&quot;set decimals to 2 places (num1 / num2)&quot;) console.log((num1 / num2).toFixed(2)) . Array datatype . an array is just a list of other datatypes | put all the items in square brackets | some useful methods below | . %%js console.log(&quot;Array: assigning a list of strings&quot;) var str1 = &quot;1st string&quot; var arr_data = [str1, &quot;2nd string&quot;, &quot;3rd string&quot;] // seeing what is in the array console.log(arr_data) // getting one thing from an array // &quot;A string&quot; &quot;Other Data&quot; &quot;more data&quot; // 0 1 2 console.log(&quot;Array: referencing a cell #1&quot;) console.log([ arr_data[1] ]) // zero based counting: 1 is 2nd cell . array manipulation . %%js console.log(&quot;Array: assigning a list of strings&quot;) var str1 = &quot;1st string&quot; var arr_data = [str1, &quot;2nd string&quot;, &quot;3rd string&quot;] // seeing what is in the array console.log(arr_data) // adding something new to the array console.log(&quot;Array: adding to list&quot;) arr_data.push(&quot;4th string&quot;) console.log(arr_data) // removing the first element of array console.log(&quot;Array: removing from front of list&quot;) arr_data.shift() console.log(arr_data) // removing the last element of array console.log(&quot;Array: removing from end of list&quot;) arr_data.pop() console.log(arr_data) . Object datatype . store records as key-value pairs | are defined by enclosing data in curly braces {} | allow access and modification using dot . or square bracket [] notation | . %%js console.log(&quot;Object: assigning key-value objects&quot;) var obj = { name: &quot;Safin&quot;, age: 13 }; // The following is stored in the object called &quot;obj&quot; // { // name: &quot;Safin&quot;, // age: 13 // } // // The key &quot;name&quot; is associated with the string value &quot;Safin&quot; // The key &quot;age&quot; is associated with the number value 13 // Notice that keys are of the type &quot;string&quot; // print obj to the console console.log(obj); // -&gt; { name: &#39;Safin&#39;, age: 13 } // Notice that single quotes &#39; and double quotes &quot; can be used interchangeably . object access . %%js console.log(&quot;Object: assigning key-value objects&quot;) var obj = { name: &quot;Safin&quot;, age: 13 }; // The following is stored in the object called &quot;obj&quot; // { // name: &quot;Safin&quot;, // age: 13 // } // // The key &quot;name&quot; is associated with the string value &quot;Safin&quot; // The key &quot;age&quot; is associated with the number value 13 // Notice that keys are of the type &quot;string&quot; // print obj to the console console.log(obj); // -&gt; { name: &#39;Safin&#39;, age: 13 } // Notice that single quotes &#39; and double quotes &quot; can be used interchangeably // To access certain values within an object, also known as an object&#39;s fields, // you can use the name of the object suffixed with a dot and the name of the field // or using the square bracket notation shown below console.log(&quot;Object: using key name to access the name value (key notation)&quot;) console.log(obj[&quot;name&quot;]); console.log(&quot;Object: using key name to access the name value (dot notation)&quot;) console.log(obj.name); // -&gt; Safin // Fields of an object can be manipulated similar to variables console.log(&quot;Object: mutating the key name from Safin to John&quot;) obj.name = &quot;John&quot; console.log(obj); console.log(obj.name); // -&gt; John // A key-value pair can be added to the object console.log(&quot;Object: mutating the key name from Safin to John&quot;) obj[&quot;ghid&quot;] = &quot;jm1021&quot; console.log(obj); // Observe new key . Hacks . Create a JavaScript snippet below with the following requirements: . Create an object representing yourself as a person. The object should have keys for your name, age, current classes, interests, and two more of your choosing | Your object must contain keys whose values are arrays. The arrays can be arrays of strings, numbers, or even other objects if you would like | Print the entire object with console.log after declaring it | Manipulate the arrays within the object and print the entire object with console.log as well as the specific changed key afterwards | Perform mathematical operations on fields in your object such as +, -, /, % etc. and print the results with console.log along with a message contextualizing them | Use typeof to determine the types of at least 3 fields in your object | . %%js // put your javascript code here (make sure to run it and check your outputs in the console) . &lt;IPython.core.display.Javascript object&gt; .",
            "url": "http://localhost:4100/teacher_portfolio/basics/datatypes",
            "relUrl": "/basics/datatypes",
            "date": " • Aug 30, 2023"
        }
        
    
  
    
        ,"post201": {
            "title": "Agile Methodology",
            "content": "Agile Methodology . . Agile software development uses practices such as pair programming, test-driven development, stand-ups, planning sessions, and sprints. Agile includes the 12 Principles expressed in the Manifesto for Agile Software Development. . . Roles . To ensure transparency during the sprint the Team should meet daily at the daily scrum (sometimes called a standup). As adaptation for classroom, Team should have a standup meeting for weekly plans, should have assignments for tasks, assignments for integration and deployment. . Scrum Master: The scrum master helps to facilitate the sprint by ensuring that an agile framework is followed. He/she is committed to tracking issues and maintaining scrum boards, but should also remain flexible and open to opportunities for the team to improve their workflow. | DevOps: DevOps is the combination of cultural philosophies, practices, and tools that increases an team’s ability to deliver applications and services at high velocity: version control, integration, dependency file management (POM file, requirements.txt), AWS and GitHub deployment are some of the key functions that improve velocity. | Development Team: The development team can be comprised of all kinds of people including designers, writers, presenters, developers, etc. Two key roles in Web Development are … Frontend Developer: A front-end developer builds the front-end portion of websites and web applications—that is, the part that users actually see and interact with. | Backend Developer: Back-end developers build and maintain the mechanisms that process data and perform actions like data storage, security, and other server-side functions that are behind the scenes. | . | . Workload . When planning there is an expectation of time. . Individual in Class Time. You should expect 3 to 4 hours of productive classroom work each week. | Individual at Home Time. To maintain pace in this class, you should consider a 2 hour coding or design session (weekly) outside of class time. | Sprint Calculation Time. 5-6 hours of coding or planning per week per individual, or 20-24 hours per team. If we had a two week Sprint this would be 40-48 hours of work. | Key to success. Make great use of time in class. Pair share programming typically provides three time dividend over individual programming when you are learning something new. | . Issues . Sprint cadences have ideas/issues that are broken into short term work units called tasks. Teacher establishes Sprint time in class schedule. . Scrum Board / GitHub Project / Kanban Style . The Scrum Board contains issues that are assigned to individuals, each of these issues will have tangible deliverable links (code/video/…). Scrum Team will use Scrum Board to understand everyone’s ideas and efforts. This includes individual tasks. Use GitHub Projects add Issues to the board. Issues are placed in columns on a Scrum Board (Kanban) to represent progress. The below columns have been successful in our academic environment. . To do/backlog | In progress | Code Complete | Deployed | Verified | Sprint . Sprint is a period of time that Team uses to plan work and execute work. This includes planning, research, development, deployment, and test. Typically, sprints will be 4 weeks with shorter chekpoints in the classroom. Anytime a sprint lasts longer than a week, there needs to be weekly Review Tickets (formative assessment) and concluding with an end of Sprint Review Ticket (summative assessment). Sample sprint follows… . Week 1 Monday - Sprint Objectives, Scrum Team Planning | Tuesday - College Board Test Prep Tuesday (Student Led) | Wednesday - Code, Code, Code | Thursday - Tech Talk (Teacher) | Friday - Code, Code, Code; Teacher 1 v 2, formative review | 2 hours outside of class for project work | . | . … . Week 4 Monday - Sprint Crossover Grading, Scrum Team Planning | Tuesday - College Board Testing | Wednesday - Code, Code, Code | Thursday - Tech Talk (Teacher) | Friday - Code, Code, Code; Teacher 1 v 4 including Demos/Review Ticket/Peer, summative review | 2 hours outside of class for project work | . | . 7 Important Transferable Skills . Assessments / Reviews . During Teacher reviews meetings ( 1 v 2 pair, 1 v 4 team), the pair or team will provide Teacher with an Issues that that will be called a Review Ticket. The issue will be completed, it will reference Tasks Completed and Self/Crossover Score(s). Canvas should be used as a guide to completing a review ticket, make sure you account for everything. Make sure Point total is a the top of ticket, if points are important to you! All assessments will be looking for these 7 elements in your work… . Creativity Creativity doesn’t necessarily mean you paint or draw or sculpt well. Creativity in education and workplace, in many cases, presents itself in terms of how you approach tasks and solve problems, Do you both inside and outside of the box for solutions? Or, do you stick to a planned system? If you solve even the smallest problem, you’ve demonstrated creativity. This skill scales up: Big problems are enlarged small problems; small problems scaled are big problems. Conceptualize problems and solutions | Display foresight | Make connections | Make intelligent inferences | Synthesize ideas and data | . | Critical thinking Solving complex or abstract problems requires critical thinking, especially when the problems are critical. Not only that, but critical thinking skills also enable the discovery of deficiencies that could cause less than optimal results. The ability to take a step back and look at things more critically and say ‘Where might we have to have gotten this wrong?’ or ‘How might we be able to improve this?’ is critical thinking. IIf you can articulate this skill you will stand out! | Critical thinkers head off problems before they arise. And if they do surface, they take them head-on. | . | Communication Effective communication is the crux of everything you do.. It doesn’t matter how creative or intelligent you are, or how many computer languages you know: If you can’t communicate well, your other skills are meaningless. Students are encouraged to talk about how they were able to bring their teams together. Verbal skills. How do you address an audience in terms they can understand. | Listening skills. Learning and understanding without defensiveness. | Writing skills. You need to be able to write in such a way that non-experts will understand. | Technological communication skills. You should be able to discuss highly technical hard skills in a way appropriate to your audience. Communication details are not the same for all audiences. | . | Collaboration through Leadership Leadership skills generally encompass communication, problem-solving and managing conflict, relationship building and being able to get people on your team on board with a mission or project. Leaders are big-picture thinkers who take various interests into account when making major decisions. Leaders are responsible for: Delegating responsibility | Demonstrating effective time management | Initiating new ideas | Major decision-making | Managing conflict | Managing groups | Multitasking | Teaching and mentoring | . | Collaboration through Teamwork Individuals that work well with others. This is a important category mentioned in early school. But it applies to High School, College and adults. Trust is the major difference between working alone versus working in groups. And trust can be hard: Some people are skeptical by nature or want to work through an entire project lifecycle solo. But placing trust in an active, dynamic team provides more than just project completion. Teamwork — a sense of community — elevates spirits and improves productivity. Accepting responsibility | Making and implementing decisions | Managing time wisely | Meeting both short- and long-term goals | Organizing | Setting and meeting deadlines | . | Researching Research is not a process performed by Teacher, Boss, or some upstream process. Everything you do in Technology requires research. Research is a key part of the lifecycle: changing plans, fluctuating results, and roadblocks require research before anyone can take action. Conversing with team members is a form of research: If you’ve asked a peer’s opinion on a technical matter, you’ve performed research. Analyzing information | Brainstorming solutions | Delineating needs and requirements | Extracting information from data | Gathering information | Forecasting possible roadblocks | Setting goals | Solving problems | . | Technical Ability We live in a tech-heavy world, and you need to understand the tech your project requires. Try to stay current with the many technical advancements on your project. Make sure that you play with the different softwares and platforms that are part of your environment. Be knowledgeable and speak to the technical things that you are learning. Being easy to work with | Quick to learn | Glad to learn | Failing and always willing to try new things | Willing to open new doors in case of a drastic oversight | . | Hacks . Key deliverables of this Tech Talk… . Build Team Agile Manifesto, adapt from manifest provided. These points Teachers want to see adapted into your Manifesto: #1,#2,#5,#6,#7,#9,#12 | Build Team Agile Methodology Diagram, work in Manifesto elements, and add Team Member roles. | Every individual should have a development role and a facilitating/devops role(s)… It may be hard to picture everything. Sample: Frontend/JavaScript Events and Action &amp; Scrum Master, Backend/Database &amp; Deployment, Frontend/UX Design &amp; GitHub Branching, Backend/API &amp; Testing. | Create Issues and a Scrum Board as output of a Team Stand-up Meeting. | Build an individual Issue(s) and link to your Time Box page | Add to PBL and Agile vocabulary on your personal GH Pages | . .",
            "url": "http://localhost:4100/teacher_portfolio/c1.0/c1.1/c1.2/c1.3/c1.4/c1.5/c1.6/2023/08/30/agile_methodolgy.html",
            "relUrl": "/c1.0/c1.1/c1.2/c1.3/c1.4/c1.5/c1.6/2023/08/30/agile_methodolgy.html",
            "date": " • Aug 30, 2023"
        }
        
    
  
    
        ,"post202": {
            "title": "Basics of Javascript",
            "content": "| Home | HTML | Data Types | DOM | JavaScript | JS Debugging | . How to use javascript in any of your pages . Simply add a &lt;script&gt;&lt;/script&gt; in your markdown or jupyter cells | (Note: the %%html magic command allows us to add HTML and JavaScript into a jupyter notebook, the outputted “site” will be shown below the code) | . %%html &lt;h3&gt;Page Heading&lt;/h3&gt; &lt;p&gt;Paragraph description of page&lt;/p&gt; &lt;script&gt; console.log(&quot;Output to console, showing that JavaScript code is running&quot;) &lt;/script&gt; . Page Heading . Paragraph description of page . Writing text to console.log . The text written with console.log appears in the Console | console.log allows you to write text – but you don’t see any text in above example until you view Console. | Activate Console window VSCode Help-Toggle Developer Tools allows you to see console.log output | Chrome and other browsers require right click -&gt; inspect also allows access to console.log output Safari users will need to enable developer settings before inspecting an element. To do this go to Safari settings -&gt; advanced and check the box next to “Show develop menu in menu bar” | . | By default you usually need to click Console next to Elements, to see console.log output | Also, you may want to press clear console (cirlcl with slash) to clean up screen before analysis. | . | . Try code with Console . Developers typically keep console open | In console window, you can run javascript code from prompt | . Storing data . One of the most important things in programming is learning how data is stored, this is often called Data Abstraction (the ability to represent data in a programming language). | . Types of data . Javascript has a few basic types of data, which align with what the types of data you might know yourself | In javascript, these types are formalized as: text = “string”, number = “number”, true/false = “boolean” | . | . Name the Data . When you think of data, it has a name and a value. | Using the “var” JavaScript syntax you create a variable with a name and a value. | In javascript this can represented with the following: var someName = value; The name cannot have spaces | Text values must be wrapped in single or double quotes to identify it as text (see exmaples below) | . | . Accessing data . To access data (the value of a variable), simply just use the name of the variable | For example, we can use the values from previously in a console.log | . %%html &lt;script&gt; // create variables var firstName = &quot;Rohan&quot; var lastName = &#39;Juneja&#39; var age = 17; var isSchoolDay = true; // inspect values and type console.log(firstName, typeof firstName) console.log(lastName, typeof lastName) console.log(age, typeof age) console.log(isSchoolDay, typeof isSchoolDay) &lt;/script&gt; . String Operators . ”+” concatenates string, same as combining text | ”==” checks if strings are the same, if so it outputs true, otherwise false ”!==” is “not equal to” (opposite of equal to) | . | . Assignment Operator . ”=” can be used to change the value of a variable ie. if you already created “name1” you can reassign name1 = “New Name” | . | . %%html &lt;script&gt; // string assignment var name1 = &quot;Doe&quot; var name2 = &quot;Doe&quot; // compare names console.log(&quot;String Comparison&quot;) console.log(&quot;name1&quot;, name1) console.log(&quot;name2&quot;, name2) console.log(&quot;name1 == name2&quot;, name1 == name2) // changing the value of name1 and repeat compare console.log(&quot;String Comparison after change&quot;) name1 = &quot;John&quot; // reassign console.log(&quot;name1&quot;, name1) console.log(&quot;name2&quot;, name2) console.log(&quot;name1 == name2&quot;, name1 == name2) console.log(&quot;String Concatenation&quot;) console.log(name1 + &quot; &quot; + name2) &lt;/script&gt; . Number Operators . ”+” adds numbers together | ”-“ subtracts numbers, “/” divides numbers, “*” multiples numbers | ”===” checks if two values are the same, if so it outputs true, otherwise false ”!==” is “not equal to” (opposite of equal to) | normal oeprators like “&lt;”, “&gt;”, “&gt;=” (greater than or equal to), “&lt;=” with numbers | . | . Assignment Operator . ”=” can be used to create or change the value of a variable | . %%html &lt;script&gt; var age1 = 17 var age2 = 16 var age3 = &#39;17&#39; console.log(&quot;Number Comparisons&quot;) console.log(&quot;age1:&quot;, age1) console.log(&quot;age2:&quot;, age2) console.log(&quot;age3:&quot;, age3) console.log(&quot;age1 == age2&quot;, age1 == age2) console.log(&quot;age1 == age3&quot;, age1 == age3) console.log(&quot;age1 === age3&quot;, age1 === age3) console.log(&quot;age1 &gt; age2&quot;, age1 &gt; age2) console.log(&quot;age1 &lt; age2&quot;, age1 &lt; age2) var num1 = 9 var num2 = 5 console.log(&quot; n&quot;) console.log(&quot;Arithmetic Operations&quot;) console.log(&quot;num1:&quot;, num1) console.log(&quot;num2:&quot;, num2) console.log(&quot;num1 + num2&quot;, num1 + num2) console.log(&quot;num1 - num2&quot;, num1 - num2) console.log(&quot;num1 * num2&quot;, num1 * num2) console.log(&quot;num1 / num2&quot;, num1 / num2) console.log(&quot;num1 % num2&quot;, num1 % num2) &lt;/script&gt; . Conditional Statements . Think about any actions that you take: you usually take them based on information you take in If tommorow is a school day, set an alarm for tomorrow at 8am | . | We can also add additional clauses at the end If tommorow is a school day, set an alarm for tomorrow at 8am, otherwise (else) set an alarm for tommorow at 10am | . | . %%html &lt;script&gt; // the above example in code console.log(&quot;Alarm Example&quot;) var tommorowIsSchoolDay = false if (tommorowIsSchoolDay) { // this code runs if tommorw is a school day console.log(&quot;Setting alarm for 8am&quot;) } else { // this code runs if tommorow is not a school day console.log(&quot;Setting alarm for 10am&quot;) } &lt;/script&gt; . Conditional Statements + Operators . Since many operators return a true/false value (equals, gerater than, etc.) we can use them inside “if” statements | . %%html &lt;script&gt; console.log(&quot;If statements + Operators&quot;) var age1 = 17 var age2 = 37 if (age1 &gt; age2) { // runs if age1 is more than age2 console.log(&quot;age1 is more than age2&quot;) } else if (age1 == age2) { // runs if age1 and age2 are the same console.log(&quot;age1 is the same as age2&quot;) // (age1 &lt; age2) } else { // runs if age2 is more than age1 console.log(&quot;age1 is less than age2&quot;) } &lt;/script&gt; . Hacks . Write a JavaScript program that compares two variables, a and b. Log “a is greater” if a is greater than b, “b is greater” if b is greater than a, and “both are equal” if a and b are equal. Make sure to use if statements and console.log | . %%js // put your javascript code here . &lt;IPython.core.display.Javascript object&gt; .",
            "url": "http://localhost:4100/teacher_portfolio/basics/javascript",
            "relUrl": "/basics/javascript",
            "date": " • Aug 29, 2023"
        }
        
    
  
    
        ,"post203": {
            "title": "1.4 Correcting errors",
            "content": "| Home | HTML | Data Types | DOM | JavaScript | JS Debugging | . College Board Big Idea 1 . Identifying and Correcting Errors (Unit 1.4) . Become familiar with types of errors and strategies for fixing them . Review CollegeBoard videos and take notes on blog | Complete assigned MCQ questions if applicable | . Code Segments . Practice fixing the following code segments! . Segment 1: Alphabet List . Intended behavior: create a list of characters from the string contained in the variable alphabet . Code: . %%js var alphabet = &quot;abcdefghijklmnopqrstuvwxyz&quot;; var alphabetList = []; for (var i = 0; i &lt; 10; i++) { alphabetList.push(i); } console.log(alphabetList); . What I Changed . I changed… . Segment 2: Numbered Alphabet . Intended behavior: print the number of a given alphabet letter within the alphabet. For example: . &quot;_&quot; is letter number _ in the alphabet . Where the underscores (_) are replaced with the letter and the position of that letter within the alphabet (e.g. a=1, b=2, etc.) . Code: . %%js // Copy your previous code to built alphabetList here let letterNumber = 5 for (var i = 0; i &lt; alphabetList; i++) { if (i === letterNumber) { console.log(letterNumber + &quot; is letter number 1 in the alphabet&quot;) } } // Should output: // &quot;e&quot; is letter number 5 in the alphabet . What I Changed . I changed… . Segment 3: Odd Numbers . Intended behavior: print a list of all the odd numbers below 10 . Code: . %%js let evens = []; let i = 0; while (i &lt;= 10) { evens.push(i); i += 2; } console.log(evens); . What I Changed . I changed… . BELOW NOT EDITED . The intended outcome is printing a number between 1 and 100 once, if it is a multiple of 2 or 5 . What values are outputted incorrectly. Why? | Make changes to get the intended outcome. | . %%js var numbers = [] var newNumbers = [] var i = 0 while (i &lt; 100) { numbers.push(i) i += 1 } for (var i of numbers) { if (numbers[i] % 5 === 0) newNumbers.push(numbers[i]) if (numbers[i] % 2 === 0) newNumbers.push(numbers[i]) } console.log(newNumbers) . Challenge . This code segment is at a very early stage of implementation. . What are some ways to (user) error proof this code? | The code should be able to calculate the cost of the meal of the user | . Hint: . write a “single” test describing an expectation of the program of the program | test - input burger, expect output of burger price | run the test, which should fail because the program lacks that feature | write “just enough” code, the simplest possible, to make the test pass | . Then repeat this process until you get program working like you want it to work. . %%js var menu = {&quot;burger&quot;: 3.99, &quot;fries&quot;: 1.99, &quot;drink&quot;: 0.99} var total = 0 //shows the user the menu and prompts them to select an item console.log(&quot;Menu&quot;) for (var item in menu) { console.log(item + &quot; $&quot; + menu[item].toFixed(2)) //why is toFixed used? } //ideally the code should support mutliple items var item = &quot;burger&quot; //code should add the price of the menu items selected by the user console.log(total) . Hacks . Fix the errors in the first three segments in this notebook and say what you changed in the code cell under “What I Changed” (Challenge is optional) | .",
            "url": "http://localhost:4100/teacher_portfolio/basics/js-debug",
            "relUrl": "/basics/js-debug",
            "date": " • Aug 28, 2023"
        }
        
    
  
    
        ,"post204": {
            "title": "Basics of HTML Guide",
            "content": "| Home | HTML | Data Types | DOM | JavaScript | JS Debugging | . How does HTML work? . Similar function to Markdown, syntax defines how stuff should be displayed . HTML is based on beginning and closing tags &lt;tagname&gt;content&lt;/tagname&gt; Note the “/” on the ending or closing tag of the pair | . | . Compare markdown to html below . This below example shows comparison of a heading and paragraph. Click on links to see many more HTML examples. . %%markdown ### Markdown: This is a Heading This is a paragraph . Markdown: This is a Heading . This is a paragraph . %%html &lt;h3&gt;HTML: This is a Heading&lt;/h3&gt; &lt;p&gt;This is a paragraph.&lt;/p&gt; . HTML: This is a Heading . This is a paragraph. . Attributes . Learn about attributes | Tags can have additional info in the form of attributes | Attributes usually come in name/value pairs like: name=”value” | . &lt;tagname attribute_name=&quot;attribute_value&quot; another_attribute=&quot;another_value&quot;&gt;inner html text&lt;/tagname&gt; . href example with attribute for web link and inner html to describe link | . &lt;a href=&quot;https://www.w3schools.com/html/default.asp&quot;&gt;Visit W3Schools HTML Page&lt;/a&gt; . Sample Markdown vs HTML Tags . Image Tag - Markdown . ![describe image](link to image) . Image Tag - HTML . &lt;!-- no content so no end tag, width/height is optional (in pixels) --&gt; &lt;img alt=&quot;describe image&quot; src=&quot;link to image&quot; width=&quot;100&quot; height=&quot;200&quot;&gt; . Link Tag - Markdown . [link text](link) . Link Tag - HTML . &lt;a href=&quot;link&quot;&gt;link text&lt;/a&gt; . Bolded Text - Markdown . **Bolded Text** . Bolded Text - HTML . &lt;strong&gt;Bolded Text&lt;/strong&gt; . Italic Text - Markdown . *Italic Text* . Italic Text - HTML . &lt;i&gt;Italic Text&lt;/i&gt; . More tags (not really in markdown) . P tag (just represeants a paragraph/normal text) . &lt;p&gt;This is a paragraph&lt;/p&gt; . Button . &lt;button&gt;some button text&lt;/button&gt; . Div (groups together related content) . &lt;!-- first information --&gt; &lt;div&gt; &lt;!-- notice how tags can be put INSIDE eachother --&gt; &lt;p&gt;This is the first paragarph of section 1&lt;/p&gt; &lt;p&gt;This is the second paragraph of section 1&lt;/p&gt; &lt;/div&gt; &lt;!-- second information --&gt; &lt;div&gt; &lt;!-- notice how tags can be put INSIDE eachother --&gt; &lt;p&gt;This is the first paragarph of section 2&lt;/p&gt; &lt;p&gt;This is the second paragraph of section 2&lt;/p&gt; &lt;/div&gt; . Resources . https://www.w3schools.com/html/default.asp | I will show a demo of how to find information on this website | . HTML Hacks . Below is a wireframe for an HTML element you will create. A wireframe is a rough visual representation of HTML elements on a page and isn’t necessarily to scale or have the exact styling that the final HTML will have. Using the syntax above, try to create an HTML snippet that corresponds to the below wireframe. | The “a tags” can contain any links that you want | . . %%html &lt;!-- put your HTML code in this cell, Make sure to press the Run button to see your results below --&gt; .",
            "url": "http://localhost:4100/teacher_portfolio/basics/html",
            "relUrl": "/basics/html",
            "date": " • Aug 28, 2023"
        }
        
    
  
    
        ,"post205": {
            "title": "Web Programming Basics",
            "content": "| Home | HTML | Data Types | DOM | JavaScript | JS Debugging | . A guide to basic concepts in Web Notebook . Making a menu | Use menu to Guide topics | Make your own custom page and menu | Making a page dynamic through JavaScript | Review usage of Styles in GitHub Pages | . How to import this setup into your student repository . NOTE: To copy files between repostories, open two vscode windows and you can drag and drop | Copy the file _includes/nav_basics.html into the _includes folder of your student repository This creates the navigation between the different pages in the Web Dev Basics | . | Copy the following files from _notebooks into your _notebooks folder 2023-03-28-basics-home.ipynb, 2023-03-28-basics-html.ipynb, 2023-03-29-basics-of-js.ipynb, 2023-08-30-basics-of-js-data-types.ipynb, 2023-08-30-basics-js-with-html.ipynb, 2023-09-20-1_4-js-errors.ipynb | . | In the basics homepage (2023-03-28-basics-home.ipynb), you need to make an edit In the top cell, modify the courses to say { compsci: { week: 5 } } (this will move this into your schedule page) | . | . Seeing javascript console output in visual studio . When printing outputs from javascript to the console you will need to open the developer console Go to Help-&gt;Toggle Developer Tools and click console on the top bar of the developer window | . | .",
            "url": "http://localhost:4100/teacher_portfolio/basics/home",
            "relUrl": "/basics/home",
            "date": " • Aug 28, 2023"
        }
        
    
  
    
        ,"post206": {
            "title": "Python Tricks!",
            "content": "Emoji Print . It is easy to add an emoji to a message in code. However, using the emoji library or other libraries often requires you to install code on your machine. Before using a library, that is not part of Python distribution, you must install with pip . # terminal command to install library $ pip install emoji Collecting emoji Downloading emoji-2.5.1.tar.gz (356 kB) ... Successfully installed emoji-2.5.1 . #!pip install emoji from emoji import emojize print(emojize(&quot;:thumbs_up: Python is awesome! :grinning_face:&quot;)) . Extracting Data . Web sites become a lot more interesting when you are working with data, not trying to create it. Here is some code using a library called newspaper, this extracts a couple of writeups from the CNN Entertainment site. . Learn more on newspaper3k | Learn about library for wikipedia | . #!pip install newspaper3k from newspaper import Article from IPython.display import display, Markdown urls = [&quot;http://cnn.com/2023/03/29/entertainment/the-mandalorian-episode-5-recap/index.html&quot;, &quot;https://www.cnn.com/2023/06/09/entertainment/jurassic-park-anniversary/index.html&quot;] for url in urls: article = Article(url) article.download() article.parse() # Jupyter Notebook Display # print(article.title) display(Markdown(article.title)) # Jupyter display only display(Markdown(article.text)) # Jupyter display only print(&quot; n&quot;) . #!pip install wikipedia import wikipedia from IPython.display import display, Markdown # add for Jupyter terms = [&quot;Python (programming language)&quot;, &quot;JavaScript&quot;] for term in terms: # Search for a page result = wikipedia.search(term) # Get the summary of the first result summary = wikipedia.summary(result[0]) print(term) # print(summary) # console display display(Markdown(summary)) # Jupyter display . Inspecting a Function . The inspect module can give you the output of what’s inside many Python functions/objects. This can help you explore code behind what you are using. . Inspect documentation. | . import inspect from newspaper import Article # inspect newspaper Article function print(inspect.getsource(Article)) . Python Data Types . Dynamic typing means that the type of the variable is determined only during runtime. Strong typing means that variables do have a type and that the type matters when performing operations. In the illustration below there are two functions . mean… shows types required prior to calling average function | average, average2… calculates the average of a list of numbers | . Python has types. In the language you can use type hints, but most coders do not use them. In other languages like Java and ‘C’ you must specify types. . Python Types Cheat Sheet | . import sys from typing import Union # Define types for mean function, trying to analyze input possibilities Number = Union[int, float] # Number can be either int or float type Numbers = list[Number] # Numbers is a list of Number types Scores = Union[Number, Numbers] # Scores can be single or multiple def mean(scores: Scores, method: int = 1) -&gt; float: &quot;&quot;&quot; Calculate the mean of a list of scores. Average and Average2 are hidden functions performing mean algorithm If a single score is provided in scores, it is returned as the mean. If a list of scores is provided, the average is calculated and returned. &quot;&quot;&quot; def average(scores): &quot;&quot;&quot;Calculate the average of a list of scores using a Python for loop with rounding.&quot;&quot;&quot; sum = 0 len = 0 for score in scores: if isinstance(score, Number): sum += score len += 1 else: print(&quot;Bad data: &quot; + str(score) + &quot; in &quot; + str(scores)) sys.exit() return sum / len def average2(scores): &quot;&quot;&quot;Calculate the average of a list of scores using the built-in sum() function with rounding.&quot;&quot;&quot; return sum(scores) / len(scores) # test to see if scores is a list of numbers if isinstance(scores, list): if method == 1: # long method result = average(scores) else: # built in method result = average2(scores) return round(result + 0.005, 2) return scores # case where scores is a single valu # try with one number singleScore = 100 print(&quot;Print test data: &quot; + str(singleScore)) # concat data for single line print(&quot;Mean of single number: &quot; + str(mean(singleScore))) print() # define a list of numbers testScores = [90.5, 100, 85.4, 88] print(&quot;Print test data: &quot; + str(testScores)) print(&quot;Average score, loop method: &quot; + str(mean(testScores))) print(&quot;Average score, function method: &quot; + str(mean(testScores, 2))) print() badData = [100, &quot;NaN&quot;, 90] print(&quot;Print test data: &quot; + str(badData)) print(&quot;Mean with bad data: &quot; + str(mean(badData))) . Hacks . Here is a summary of some of the things learned above. . Formatting messages with emoji | Exploring data with newspaper and wikipedia libraries | Finding code on how the library we used was made | Learning about data types while writing an algorithm for mean | . Part of Project Based learning is the idea of combining concepts to form something more interesting. Make a plan, form some ideas, brainstorm ideas with pair. Produce something that is interesting and challenging. Samples… . Could I get input from user to look up wikipedia information? Python input, Article on Input | What could I learn in Python about Stats to get Machine Learning Read? Stats Calculations | Could I add emoji to an extracted article? String Find, String Methods | .",
            "url": "http://localhost:4100/teacher_portfolio/c4.0/2023/08/23/python_tricks_IPYNB_2_.html",
            "relUrl": "/c4.0/2023/08/23/python_tricks_IPYNB_2_.html",
            "date": " • Aug 23, 2023"
        }
        
    
  
    
        ,"post207": {
            "title": "JS Calculator",
            "content": "0 1 2 3 + 4 5 6 - 7 8 9 * A/C 0 . =",
            "url": "http://localhost:4100/teacher_portfolio/c7.0/2023/08/23/javascript-calculator.html",
            "relUrl": "/c7.0/2023/08/23/javascript-calculator.html",
            "date": " • Aug 23, 2023"
        }
        
    
  
    
        ,"post208": {
            "title": "Anatomy of GitHub Pages",
            "content": "Overview of GitHub Pages files . Discuss how to develop a home page, code, run local server test, and then sync to deploy to GitHub Pages. . Review tools setup and make in README.md to support this lesson. | . Files and Directories in this Project . Here are some defintion to key files and directories in this project . README.md: This file contains instructions and background information about the project. It is a standard file present in all properly set up GitHub projects. . | index.md: This is the source file for the home page of the project. It is a standard file for all GitHub Pages projects. Note that Markdown (.md) files are converted to HTML by the Jekyll build process. HTML files are the only file type that is rendered on a website. . | _notebooks: This directory contains Jupyter Notebook (.ipynb) files. These files are converted to Markdown (.md) files by the Makefile rules in the build process. The Markdown files are then converted to HTML by the Jekyll build process. . | _posts: This directory contains Markdown (.md) files that will be part of the website. These files are formatted similarly to index.md and include frontmatter (metadata coded in YAML) and Markdown, HTML, JavaScript, and CSS source code. You will also find Liquid code in these files, which is used to generate Markdown, HTML, JavaScript, and CSS. . | _data: This directory is the standard location for storing data files that support the _posts or _notebooks directories. . | images: This directory is the standard location for storing image files (JPEG, PNG, etc.) that support the _posts or _notebooks directories. . | _config.yml: This file contains YAML definitions (key-value properties) used to build the Jekyll website. . | .gitignore: This file specifies elements to be excluded from version control. Files are excluded when they are derived from the original source and not considered part of the project’s source code. In the VSCode Explorer, you may notice some files appearing dimmed, indicating that they are purposely excluded by the rules in .gitignore. . | . Please note that there are many other key files and directories in a GitHub Pages project, but we will highlight those as the development progresses. . Changing the Theme . Google “github pages themes” or this theme link. The purpose of this section is to help you change your Theme options. . _config.yml contains commented out alternatives to themes (see ‘# theme requirements’ cell below). Try these themes by commenting out midnight them with # at front and remove comment # from the front of theme of choice. After changing theme you will need to do a make clean followed by a make to test. | _includes/head.html this file contains code to ensure page loads the proper JavaScript. This is a partial effort at support. You will need to follow README.md instruction of theme provider to finish convertion. FYI, th head.html is included from _layouts/default.html Go to Themes click on Theme and scroll down to README.md and review requirements. Look their _layouts.html to understand requirements for integration. | Reading README.md should become common practice when using a repository. You should make sure your README has instructions. Also, in the Theme case, the best way to understand and make your own customizations is to understand how Theme providers customized theirs. Review these diligently if you want to become proficient and customizing your page. | . # theme requirements remote_theme: pages-themes/midnight@v0.2.0 # remote_theme: pages-themes/dinky@v0.2.0 # remote_theme: pages-themes/minimal@v0.2.0 # remote_theme: pages-themes/hacker@v0.2.0 # remote_theme: pages-themes/cayman@v0.2.0 # remote_theme: pages-themes/time-machine@v0.2.0 plugins: - jekyll-remote-theme . . Hacks . Perform customization to your ‘student’. This is an opportunity to learn a few concepts from ‘teacher’ repository and then customize your own page to your course needs and personal interests. . Customize Home Page . The home page to other pages is a common first step in building a project. To start you will need to form your index.md in your project, which behind the scenes is generated into an index.html by the GitHub Pages build process. . Change Title . Every page should have a title. Here is frontmatter sample… . layout: default title: My Title . GitHub Page, GitHub, GitHub Raw; Broken Links . Home Page usually is an information page describing the project. This often contains nice visuals and links to further content. Review the index.md of the teacher repository. . GitHub displays information in three forms. . GitHub Pages, Fully rendered link. This is the link we share with friends or community. | GitHub, Partial rendered link. This is the link developer typically uses to discover a file in a project, GitHub tries to present markdown in a pretty form by default. | GitHub raw, Source link. The raw link is in the project, but requires a 2nd click after discovery in GitHub. This contains the source the developer creates when building the pages. | . Learn to add /teacher_portfolio when referening files in project to avoid broken links. File locations on localhost and on github.io can be different, this makes sure they are always found. . ![csse](/teacher_portfolio/images/ccr.png) . Making a Submenu . This is made from markdown and references images from the image foler. . index.md is the file that contains markdown for this page | _includes/nav_home.html contains code for submenu, it is included in every page in this dialog | /teacher_portfolio refers to baseurl defined in _config.yml, this is the localtion of all files in WebSite. Note, this changes as you run on localhost and deployed; make sure you remember to use this for locations of files in site. | . &lt;table&gt; &lt;tr&gt; &lt;td&gt;&lt;img src=&quot;/teacher_portfolio//images/logo.png&quot; height=&quot;60&quot; title=&quot;Frontend&quot; alt=&quot;&quot;&gt;&lt;/td&gt; &lt;td&gt;&lt;a href=&quot;/teacher_portfolio/index&quot;&gt;Course&lt;/a&gt;&lt;/td&gt; &lt;td&gt;&lt;a href=&quot;/teacher_portfolio/home/table&quot;&gt;Table&lt;/a&gt;&lt;/td&gt; &lt;td&gt;&lt;a href=&quot;/teacher_portfolio/home/about&quot;&gt;About&lt;/a&gt;&lt;/td&gt; &lt;/tr&gt; &lt;/table&gt; . Style Hack . The Style submenu is using a Calculator as an example. . /assets/css/style.css contains import of style customization per rules defined by GitHub Pages themse. Read the description on how Stye customization are handled by midnight in the README.md. This is a way to use there repo of customization, but also add individual spice. This is much faster than trying to do this by yourself. | /_posts/&lt;date&gt;Example-calculator.md contains code for Calculator in the project. Only the top output is generating completely custom style, the remainder comes from adjusting style.css. | A Calculator is a great way to learn customizations of things like buttons, which are common elements in a Theme. Also, it is great way to learn Math operations. Suggested Hacks are inside this file. | As you view the content of this file you will see CSS, HTML, and JavaScipt. To enhance this you would need to start to learn the basic structures and use a Cheat Sheet for reference. Also, putting this code into ChatGPT and aking for overview is a great way to understand line by line. | .",
            "url": "http://localhost:4100/teacher_portfolio/c5.0/2023/08/23/github_pages_anatomy_IPYNB_2_.html",
            "relUrl": "/c5.0/2023/08/23/github_pages_anatomy_IPYNB_2_.html",
            "date": " • Aug 23, 2023"
        }
        
    
  
    
        ,"post209": {
            "title": "Flask/Python Web Application",
            "content": "Flask/Python Web Application . Next up is making a Web Application from a completely customizable framework and language. This project will focus on building a standalone Web Application. The intentions are to use this framework for Group work and backend work. At the conclusion of this article this project will only be run locally. Ultimately, this project will be hosted on AWS. . Flask is the Web Application Framework. | Python will be the Backend Development languages. | Jinja2 is the Web Template language, that work well with Flask and Python. | HTML, CSS, JavaScript will support frontend work built into the Flask project. | The external Fastpages/Github Pages project will use the Flask/Python project for backend services, like persistent data or databases (ie SQL). | . Setup Flask/Python Project . Start Flask/Python GitHub repo from a Template. Setup VSCode project to run python. Make a change and push to GitHub. . Generate your own copy of repository using the Template: https://github.com/nighthawkcoders/flask_portfolio | “Copy” https address of newly Generated repository, use screen that looks like this: | Open terminal and goto your vscode directory: cd ~/vscode | Clone new GitHub project by run git clone &lt;paste/replace with https address&gt; | Run VSCode project code &lt;replace with name of project&gt; | In VSCode type Shift-Command-P or Shift-Control-P to select your Python Interpreter | Select Python that is in Conda environment | In VSCode terminal install project dependencies: pip install -r requirements.txt | Select main.py from VSCode navigator and press ▶️ in upper right corner. An alternate method is type python3 main.py in terminal. Observe terminal output, this sample illustrates a good outcome. | In terminal output you can shift-click on http://127.0.0.1:5000/, or goto Browser and type: 127.0.0.1:5000 | Navigate the site, look for things to change. | . With all of this in place, we can spin up the development container inside VS Code. Then, from the VS Code terminal in our Docker container environment, we can run docker-compose up in the root of our project. This will start up our individual service containers on the host machine. But, thanks to the shared network and volumes, we can continue to edit code in our development container and see the changes immediately show up on our services! . It’s also possible to use the Docker CLI to shut down or restart services as needed in development. You can even open another VS Code window and use the Remote-Containers extension to connect to one of the running service containers to directly inspect logs, edit code within that constrained environment, etc. This is a generic setup that can work for any project. Onboarding new developers requires just installing VS Code and Docker and then cloning the repository and opening it in a container. The initial setup is a lot of work, but I think this is the cleanest development experience you can get with Docker right now. . Hacks . Try a little bit of customization and make sure you are able to run, edit, and push. Most changes should update while server is running . Conclude setup activity by pushing a minor change to Stub.html. This will verify GitHub support with VSCode. Click for VSCode guide for version control | Stub.html lines of code to for simple change | . | . &lt;div class=&quot;px-5 py-5 mx-auto&quot;&gt; &lt;h1 class=&quot;text-primary&quot;&gt;&lt;strong&gt;Stubby Body&lt;/strong&gt;&lt;/h1&gt; &lt;p class=&quot;text-secondary&quot;&gt;Put your name here&lt;/p&gt; &lt;/div&gt; . Group/Collaboration activity. Share a GitHub project. . Make a team project, make each person as a Collaborator through GitHub settings. | Each member take the HTML file under the Project menu and customize it to point to individuals material (aka Fastpages). | GitHub gotcha when Collaborating on a Repo. Remember to Pull before you Push/Sync. The repository will be updating while your copy is isolated. Pull or Rebase gets you back on track with the shared branch of code. | .",
            "url": "http://localhost:4100/teacher_portfolio/c1.4/2023/08/21/python_flask.html",
            "relUrl": "/c1.4/2023/08/21/python_flask.html",
            "date": " • Aug 21, 2023"
        }
        
    
  
    
        ,"post210": {
            "title": "Build a Student Page",
            "content": "HTML Fragments and Markdown . Building an entire frontend web application requires HTML, CSS, and JavaScript. HTML is responsible for the content, CSS adds styling to the web page, and JavaScript adds functionality and interactivity. Markdown is a short hand way of writing HTML, the GitHub pages system transforms Mardown to HTML. . In GitHub Pages, Jekyll serves as the build framework. It takes our choice of theme specified in the _config.yml file, along with our Markdown, HTML, and notebook files, to construct a complete static website. A significant portion of the frontend design work has already been done for users through the selection and use of a theme; this greatly reduces the need to code in CSS. . Jekyll converts Markdown (.md) files into HTML. Behind the scenes of GitHub Pages, Jekyll and Liquid programming language build and programmatically construct each Markdown file into a specific web page. Markdown provides a straightforward way to start with GitHub Pages development. In a Markdown file, you can exclusively use Markdown syntax or incorporate HTML, CSS, and JavaScript based on your expertise and experience. . Review these Fragments . The remainder of this document will describe and show code fragments to get the student developer ready for coding and commiting changes to GitHub. . GitHub Pages index.md . In GitHub Pages you can define code in Markdown. The index.md uses markdown to define a page about CompSci courses at Del Norte High School. . Markdown fragment. The markdown fragment is written by the developer and is an example of how to start a home page using Markdown. . ## Build your Home Page here # Investing in your Technical Future &gt; Explore the Computer Science Pathway at Del Norte High School and invest in your technical skills. All Del Norte CompSci classes are designed to provide a real-world development experience. Class time includes tech talks (lectures), peer collaboration, communication with teachers, critical thinking while coding, and creativity in projects. Grading is focused on time invested, participation with peers, and engagement in learning. - Introduction to concepts and requirements by the teacher - Project-based learning with teacher support - Peer communication and collaboration - Coding, developer operations, and critical thinking - Creativity, research, and utilizing ChatGPT - Class work with approximately 2-3 hours of homework per week ![csse](/teacher_portfolio/images/ccr.png) . | HTML conversion. The HTML conversion of the Markdown fragment produced by GitHub Pages using Jekyll. This is programmatically converted from Markdown to HTML. . &lt;div class=&quot;language-markdown highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; ## Build your Home Page here # Investing in your Technical Future &lt;span class=&quot;gt&quot;&gt; &amp;gt; Explore the Computer Science Pathway at Del Norte High School and invest in your technical skills. All Del Norte CompSci classes are designed to provide a real-world development experience. Class time includes tech talks (lectures), peer collaboration, communication with teachers, critical thinking while coding, and creativity in projects. Grading is focused on time invested, participation with peers, and engagement in learning.&lt;/span&gt; &lt;span class=&quot;p&quot;&gt; -&lt;/span&gt; Introduction to concepts and requirements by the teacher &lt;span class=&quot;p&quot;&gt; -&lt;/span&gt; Project-based learning with teacher support &lt;span class=&quot;p&quot;&gt; -&lt;/span&gt; Peer communication and collaboration &lt;span class=&quot;p&quot;&gt; -&lt;/span&gt; Coding, developer operations, and critical thinking &lt;span class=&quot;p&quot;&gt; -&lt;/span&gt; Creativity, research, and utilizing ChatGPT &lt;span class=&quot;p&quot;&gt; -&lt;/span&gt; Class work with approximately 2-3 hours of homework per week !&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;csse&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;](&lt;/span&gt;&lt;span class=&quot;sx&quot;&gt;/teacher/images/ccr.png&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;/div&gt; . | . Images . In GitHub Pages, you can insert images in HTML or Markdown. The Teacher finds &lt;img&gt; easier to work with for embedding links when trying to control size. This example shows Markdown syntax for embedding images, but students can also use HTML syntax with the tag. . See index.md for ![]() syntax for images, or reference Markdown images | Or use “img” tage referencing HTML images | . Links . HTML contains an &lt;href&gt; tag to create links. Students can use either HTML or Markdown syntax for links. . Look up HTML links &lt;href&gt; or Markdown links []() syntax. These should become easy and familiar. | . Web Page Layout . A complete HTML Web Application is typically made off of a Layout and a series of Fragments (sometimes called templates). . The design of GitHub pages allows us to change themes with the _config.yml file key/value, change the value to a supported theme. Here is a portion of the _config.yml, the # is a comment symbol. Add a comment to midnight line, uncomment dinky line to try a new theme. Repeate process until you find something you like. | . # theme requirements remote_theme: pages-themes/midnight@v0.2.0 # remote_theme: pages-themes/dinky@v0.2.0 # remote_theme: pages-themes/minimal@v0.2.0 # remote_theme: pages-themes/hacker@v0.2.0 # remote_theme: pages-themes/cayman@v0.2.0 # remote_theme: pages-themes/time-machine@v0.2.0 plugins: - jekyll-remote-theme . Extensive customization of CSS may require advanced knowledge and can be time-consuming for beginners. I have observed many Students spending to much of their time writing custom CSS. It is better, for now, to learn to extend or change a GitHub theme and work with fragments of Markdown or HTML. | . Hacks . At the end of this week you should select your theme and start customizing your page. . Students should select a theme from the available options in the _config.yml file and start customizing their page accordingly. | Try to alter index.md with images and links according to some of your personal interests. For instance, make an outline of your classes, school activities, and homework requirements. Add your freeform picture. | Google Markdown Cheatsheet or W3Schools HTML Tutorial for guideance. Try to do something on your index.md not discussed in this blog. | .",
            "url": "http://localhost:4100/teacher_portfolio/c4.3/c5.0/2023/08/17/markdown-html_fragments.html",
            "relUrl": "/c4.3/c5.0/2023/08/17/markdown-html_fragments.html",
            "date": " • Aug 17, 2023"
        }
        
    
  
    
        ,"post211": {
            "title": "P2 Routing and Computing",
            "content": "Networking . a network is essentially a bunch of computer or internet devices that are connected with wires so they can communicate . . This network, however, will take a long time to have A comunicate with G. So a network that will work faster is shown below. There are different benefits to each as well, the first one takes less resources, but if one of the wires breaks, the whole comunication fails. But wih the second one, it takes a lot of resources, but if one wire fails, the comunication will still work. This second network in this case is fault tolerent. . . popcorn hack 1 . Is this network fault tolerent? . . Redundancy . The Internet is fault tolerant and has been made to withstand errors or problems that may occur. It does this by using redundancy. Redundancy is the inclusion of extra components in order to mitigate the failure of one part of the system. One method of to achieve this is having multiple paths between connected devices allowing transfers to have alternative routes. If a route fails the data will be sent down a different path. Fault tolerance allows users to use a network even if there are system failures. One example where redundancy wasn’t present was the backend during the night at the museum. The pathway to transfer data likely broke, and there was no redundancy to allow for an alternative path. . Popcorn Hack #2 . What would make this network fault-tolerant. Insert image 4.2 video 2 3:57 . What is Computing? .",
            "url": "http://localhost:4100/teacher_portfolio/2023/08/17/P2-Routing-And-Computing_IPYNB_2_.html",
            "relUrl": "/2023/08/17/P2-Routing-And-Computing_IPYNB_2_.html",
            "date": " • Aug 17, 2023"
        }
        
    
  
    
        ,"post212": {
            "title": "Tools and Equipment Overview",
            "content": "Make Development Easy . Learning Development tools, working with Projects, is the key to a rapid entry into Code/Code/Coding. A Computer, Git, and an Code Editor are the starting points for coding. Add Jupyter Notebooks (computational documents) and you bridge a Computer with Data Science. The beauty of Jupyter Notebooks is that it creates a computational narrative, a document that allows code and data with visual analysis, hypothesis, and conjecture. . A laptop, bring a laptop to class every day with the Development Tools installed on it. Preferred laptops are MacOS or Windows. Computers using either MacOS, Windows, or Linux are requirements for the course. Computers issued by the School, ie Chromebook, are not as effective because of the restrictions placed on adding software by PUSD. If you only have access to a school issued Chromebook, we will provide an option to access a Linux machine on AWS. | Sharing Code. GitHub, is the defacto hosting platform for version control and collaboration. It lets you and others work together on projects from anywhere in the world. Git enables tracking changes, collaborating with others, and reverting to previous versions if needed. Think of it as the Google Docs for Coders. We will clone/push/pull changes to and from GitHub, this is the server where we store and share code in the cloud. Setup GitHub with a personal ID, not a school ID. GitHub Account. It is best if you can incorporate you first name or initials into your account, for recognition by those who know you. | . | Visual Studio Code (abbreviations VS Code, VSCode or VSC) is a powerful Code Editor. VSCode performs a lot of magic and automation behind the scenes to make your Code/Code/Coding life easier, ie telling you about errors in syntax. VS Code supports many programming languages, and has a marketplace of plugins and extensions that enhance the coding experience. VSCode Setup | . | GitHub Pages will be used to host your personal web site, notes, and experiences. GitHub Pages allows students to showcase their projects and create personal websites. Students can publish their coding projects, technical notes, and experiences on GitHub Pages for others to see. Review GitHub concepts 2-min https://www.youtube.com/watch?v=phGdqJB6ep0 | . | Jupyter Notebooks will be used to build running JavaScript, Python, or Java Code in to your own Technical Notes. Jupyter Notebooks is a valuable tool in data science and coding. It provides an interactive environment for running code, analyzing data, documenting code, and writing explanations. Review Jupyter basics 6-min https://www.youtube.com/watch?v=3jZYC9rGrNg | . | Slack Account and App, install App on Laptop, get used to reading announcements. Slack is a messaging tool similar to Discord. There will be important announcements and daily messages will be shared through Slack. Slack for Windows | Slack for MacOS | Slack for Linux | . | Windows Desktops install WSL. WSL enables students to work with Linux tools and environments on Windows machines. WSL supports a Linux-like terminal experience within the Windows operating system. WSL users will install WSL 2 and Ubuntu distriibutions. Everyone in this class will be working on a form of Linux when in Terminal. Install WSL | . | Docker is an open platform for developing, shipping, and running applications. Docker allows students to create isolated environments for testing and deploying their applications, ensuring consistency across different systems. Docker Desktop allows users to test deployment scripts on their local machines, enabling them to debug and troubleshoot their applications before deploying them on AWS. Docker Desktop for Macos | Docker Desktop for WSL2 Backend on Windows | . | Tools and Terminal Installs DeprecatedAnaconda (Conda) is the environment manager. Conda is an open-source package and environment management system that runs on Windows, MacOS, and Linux desktops. Conda is an environment manager that is very popular for data science projects. It helps you manage you tools in a controlled manner, this is called a virtual environment. Likely we will move away from Anaconda. The purpose of Conda is to avoid dependencies, but many people had problems with managing Python and Pid in VSCode related to Conda shell. Download Anaconda | . | Install a package manager. A package manager helps you install tools and manage updates. Homebrew is a package manager specifically for MacOS, while Ubuntu and AWS EC2 machines require the apt package manager for installing additional tools. Homebrew (brew install) for MacOS will be used to install tools. Homebrew is a package manager for MacOS. Apple’s MacOS does not have a development package manager by default. Install Homebrew | On Windows, Windows Subystem for Linux (WSL Ubuntu), use (sudo apt install) installs for packages. Things like Java, Python, and more will require installation with apt, as they are not included in Ubuntu by default. | On AWS Linux EC2 machines we will use (sudo apt install), similar to WSL, but is temporary to session. An AWS/Kasm Account for cloud computing will be required., account access will be provided by Teacher. AWS Cloud Computing and Electric Cloud Computing (EC2’s) will be used to run Development Enviornment from the Internet. | . | . | . Hacks . Review all the items mentioned above and get started with setup. Try to understand the concepts behind these tools and seek clarification when needed. Each student needs to take the setup process seriously and should highlight that consistent access to the necessary tools is essential for active participation in the class. . Bring your computer daily. If you don&#39;t have computer and tools access, you are effectually absent!!! | Review material on tools, draw a picture. Installing tools can be a bit of a process. Read, review, and get started. After you do it a little, it starts to become easy. | Blog why you love your tools. Do not fear your tools, love your tools&#39;. Then you become familiar and proficient in using your tools, they become extensions of your abilities and empower you to accomplish Code/Code/Coding tasks more efficiently. | Add yourself to Users Database. We need you registered so we know how to support you best. This registration will be used for automation now and through the year. | .",
            "url": "http://localhost:4100/teacher_portfolio/c4.3/c5.0/2023/08/16/tools_equipment.html",
            "relUrl": "/c4.3/c5.0/2023/08/16/tools_equipment.html",
            "date": " • Aug 16, 2023"
        }
        
    
  
    
        ,"post213": {
            "title": "Python IO",
            "content": "Print command using Static Text which performs output . The classic introduction to a programming language is to output a “Hello, World!” message. In Python, this is a print statement. . The command or function is print() | “Hello, World” is a String literal. This is the referred to as Static text, as it does not change. | “Hello, World” is a parameter to the print function in Python. | The print command outputs the parameter to the terminal, as you see it in this Jupyter document | Output in Jupyter Notebook is below the code cell. Output will vary depending on tools and development intentions. Python print typically outputs to a terminal, we will see that when students start using Visual Studio Code. | . print(&quot;Hello World!&quot;) . Dynamic example showing variables, input and output . This second example is a sequence of code, two or more lines forms a sequence. This example takes input from the user and stores the input into a variable called msg (short for message), then outputs the msg to terminal. - This example is Dynamic as the input and output can change each time the code is run. . A variable “msg” is part of both statement The variable “msg” is used to capture the input command | The variable “msg” is then used as a parameter to print command, causing input to be output to terminal, or in Jupyter Notebook below the code cell. | . | The “input” command activates the jupyter notebook input box, which obtains input from the user (try it!) the “msg” variable is the dynamic result of the input command | . | The print command outputs the “msg” variable captured in the input statement note, msg is a parameter to the print function | . | Input and Output in Jupyter Notebook Input is NOT in line with Output, this is a little annoyance and requires familiarity. Input and Output will vary depending on tools and development intentions. Python print typically obtains input and outputs to a terminal, students will see that when they run Python programs using Visual Studio Code. | . msg = input(&quot;Enter a greeting: &quot;) print(msg) . Building a Function . This example adds to the basics of the Python anatomy, a function. Input, output, and grouping commands in functions is the key to most programming languages. This example simulates a free response answer to a question. . The “def question_and_answer(prompt)” now contains multiple indented commands, the commands print and input were learned previously. | Grouping a sequence of commands, often used repeatedly, is called procedural abstraction. | Procedure, Function, def are all synonyms in the Python language. | The &quot;def&quot; is a key word in Python that defines a function. Using this keyword defines a group of commands, but does not run them initially. | The name of the function in this example is “question_and_answer”. In essence, we are defining our own command within the Python language. | The three “question_and_answer” commands that follow the function and indented commands allow this function to be run. | This code of the function is then run multiple times, each command line providing a unique “prompt” as a result of the literal parameter passed to the function. | The function takes a parameter called “prompt”, which is a message output to the user to describe the input requested. | String concatenation “+” prefixes the prompt with the literal message “Question: “. | The “msg” variable is captured as a result of the jupyter notebook input supplied by the user | The input “msg” is output back to the user with “Answer: “ concatenated to the front. | . def question_and_answer(prompt): print(&quot;Question: &quot; + prompt) msg = input() print(&quot;Answer: &quot; + msg) question_and_answer(&quot;Name the Python output command mentioned in this lesson?&quot;) question_and_answer(&quot;If you see many lines of code in order, what would College Board call it?&quot;) question_and_answer(&quot;Describe a keyword used in Python to define a function?&quot;) . Imports, Selection, and Logical Expressions . In Python anatomy of you will be importing libraries and functions. This is code that is developed by others. In this example we are importing from a library called “os”, this library extracts properties from the operating system of your existing system. Additionally, this example uses the custom function defined earlier in the Jupyter document. Python and Jupyter docs requires you to reference imports and definitions above the referencing line of code. . import os, sys obtain functions and variables from running environment | print(‘Hello, ‘ + getpass.getuser() + “ running “ + sys.executable + “ on “ + sys.platform + “!”), is a concatenated statement that outputs properties from the import | . Next, this example defines a new function “question_with_response”, this function returns a value input by the user. This allows programmer to evaluate the response. The purpose of obtaining the return value is to evaluate if correct response was given to the question. . response from “question_with_response” is captured in a variable called “rsp” return command in function returns msg input by user | assignment to “rsp” is allowed a function is returning a value, names do not need to match (but could) | . | if command is next command in sequence after “rsp” assignment this command contains an expression, rsp == “import” which compare what is typed to the string literal answer | an if expression is evaluated for true or false | true takes branch of code directly under if | false takes branch of code directly under else command | . | . The grand finally of this example is calculating the right/total. . question = 3 is defined as number of questions | correct = 0 is defined as running score | correct += 1 is the way to add one to the score, this code is placed in sequence under correct expression evaluation | since question and correct are numbers, versus strings, to place them in concatenation in print statements you must inclose them in Python function str() which turns number into string. | final print statement is concatenated and formatted to give user and right over wrong | . import getpass, sys def question_with_response(prompt): print(&quot;Question: &quot; + prompt) msg = input() return msg questions = 3 correct = 0 print(&#39;Hello, &#39; + getpass.getuser() + &quot; running &quot; + sys.executable) print(&quot;You will be asked &quot; + str(questions) + &quot; questions.&quot;) question_and_answer(&quot;Are you ready to take a test?&quot;) rsp = question_with_response(&quot;What command is used to include other functions that were previously developed?&quot;) if rsp == &quot;import&quot;: print(rsp + &quot; is correct!&quot;) correct += 1 else: print(rsp + &quot; is incorrect!&quot;) rsp = question_with_response(&quot;What command is used to evaluate correct or incorrect response in this example?&quot;) if rsp == &quot;if&quot;: print(rsp + &quot; is correct!&quot;) correct += 1 else: print(rsp + &quot; is incorrect!&quot;) rsp = question_with_response(&quot;Each &#39;if&#39; command contains an &#39;_________&#39; to determine a true or false condition?&quot;) if rsp == &quot;expression&quot;: print(rsp + &quot; is correct!&quot;) correct += 1 else: print(rsp + &quot; is incorrect!&quot;) print(getpass.getuser() + &quot; you scored &quot; + str(correct) +&quot;/&quot; + str(questions)) . Hacks . Test running a Python file directly . From python directory run quiz.py in VS Code, this will show workflow of Input and Output in terminal | . Build your own Jupyter Notebook meeting these College Board and CTE competencies . Build your own quiz, including my questions and show outputs | Create both Markdown for description and Code for execution | Structure your Python code with comments “#” to complement Markdown descriptions | . Additional requirements . Build your quiz so that it captures the key Vocabulary from this Jupyter document | Calculate the percentage of your quiz | Review College Board Big Idea outline, see if you can reference locations in Markdown that support vocabulary | . Extra credit, Advanced . Do you see repeating pattern of code? Try to implement solution to avoid the repeating pattern (hint: list and iteration) | .",
            "url": "http://localhost:4100/teacher_portfolio/c4.0/2023/08/16/python_hello_IPYNB_2_.html",
            "relUrl": "/c4.0/2023/08/16/python_hello_IPYNB_2_.html",
            "date": " • Aug 16, 2023"
        }
        
    
  
    
        ,"post214": {
            "title": "Pair Programming",
            "content": "“Real World” Projects . Don&#39;t do it alone. You and your pair, will collaboratively together and each of you will Build, deploy and host a Web Site. This Web project contains Technicals learned throughout the Trimester. This will be done in increments. Each week an assignment will be given and the next week it will be under Live Review. . Feature Considerations for Project Final Project and Blog Requirements A home or fun zone for your blog, also a unique idea(s) | Educational zones that capture every key learning objective | About Me, consider personal privacy issues as this will be public | . | Project Technicals Managing PBL Requirement for Project (Issues, Scrum Board) | CSSE, CSP, CSA. Use of “JavaScript, HTML, CSS”. Frontend or Presentation development. | CSP. Use of “Python Functions and Classes” in backend. | CSA. Use of “Java Classes and OOP” in backend. | Data Structures. The exchange between frontend and backend: Backend could be Data Frames from Pandas, “SQL” or “MongoDB” databases, etc. | . | . | Individual GitHub Pages considerations for Big Ideas 1 - 5 Each week we will be studying Big Ideas/Key Objectivies. There will be Units and blogs in the schedule will describe key objectives. In AP Classes this will include Collage Board Test Prep and PBL Tech Talks | GitHub (GH) Pages should be used as a project/lab notebook. In GH Pages, you can capture Project Based Learning (PBL). Also, in Jupyter Notebooks you can capture JavaScript, Python, Java key learnings each week using code cells! | BTW, using GH Pages will let you Code and Blog at the same time. Jupyter Notebooks using Python and Markdown will enable running code in code cells and notes in markdown cells. The Teachers like running code! Jupyter Notebooks, using Python kernel can do JavaScript, Python, Bash and other languages. | . | . Hacks . Establish PBL and Comp Sci attitude; often called an Agile Mindset or Growth Mindset. . Watch a video How I Would Learn To Code | Attitude. An Agile/Growth mindset is not knowing the answer, making lots of mistakes and performing iteration. A successful grade is dependent on making mistakes, research, asking questions, and continual iteration. | Requirement. Please bring a personal laptop or Chromebook to class daily. The Internet, ChatGPT, and AP Classroom web site will be considered a text book. | Requirements. Everything will be distributed electronically. All code you develop will be delivered to the Cloud. No paper! | Grading guidelines. There will be key technical objectives which will require &lt;/mark&gt;producing tangibles&lt;/mark&gt; aka tangible artifacts. Essentially, it is impossible to be late with work if you work consistently attend class, work in class and turn in progressive tangibles each week. Thus, failure to have work will result in point deduction. Additionally, late work must be defended in office hours and will receive 10% deduction. High “A” is very tough to achieve, something beyond the given tangible requirements. Something that exhibits an unforced desire to learn and Code/Code/Code. This grade is required to earn a Teacher recommendation. | Low “A” is consistency in producing tangibles toward Team Project and Individual GH Page according to Issues and Scrum Board plans. Plans must be consistent with key objectives and technicals. | “B” is having flaws in consistency or tangible shortcomings, but mostly on track. A flaw would be mostly working code, attempts, but incomplete. | “C” is a lack consistent effort, lacking tangibles. Lack of producing working Code. | Below “C” is composed of Slash/Slash/Slash offenses. Lack of attendance, disruptive behaviors, using phone inappropriately, doing work from other classes during CompSci class time, paper visible in class, and turning in tangibles that you can’t represent in live review. | Zero is a result of plagiarism. The Teachers will likely miss first offenses of plagiarism, thus any offense will result in an inquiry on previous work. Remember this is an effort based class. | . | .",
            "url": "http://localhost:4100/teacher_portfolio/c1.4/2023/08/16/pair_programming.html",
            "relUrl": "/c1.4/2023/08/16/pair_programming.html",
            "date": " • Aug 16, 2023"
        }
        
    
  
    
        ,"post215": {
            "title": "Linux Shell and Bash",
            "content": "Bash Tutorial . A brief overview of Bash, on your way to becoming a Linux expert. When a computer boots up, a kernel (MacOS, Windows, Linux) is started. This kernel provides a shell, or terminal, that allows user to interact with a most basic set of commands. Typically, the casual user will not interact with the shell/terminal as a Desktop User Interface is started by the computer boot up process. To activate a shell directly, users will run a “terminal” through the Desktop. VS Code provides ability to activate &quot;terminal&quot; while in the IDE. . Variable Prerequisites . Setup bash shell dependency variables for this page. Variables are one of the first aspects of programming. Variables have &quot;name&quot; and a &quot;value&quot;. . Hack Note: Change variables to match your student project. | . Define variable . The following code cell defines 3 variables and assigns each a value. There are some extra command, called a HERE document, that write these variables to a file. This is so we can use these variables over and over below. . %%script bash # Dependency Variables, set to match your project directories cat &lt;&lt;EOF &gt; /tmp/variables.sh export project_dir=$HOME/vscode # change vscode to different name to test git clone export project= $project_dir/teacher # change teacher to name of project from git clone export project_repo=&quot;https://github.com/nighthawkcoders/teacher.git&quot; # change to project of choice EOF . Output the value of a variable . The following code cell outputs the value of the variables, using the echo command. For visual understanding in the output, each echo command provide a title before the $variable . %%script bash # Extract saved variables source /tmp/variables.sh # Output shown title and value variables echo &quot;Project dir: $project_dir&quot; echo &quot;Project: $project&quot; echo &quot;Repo: $project_repo&quot; . Project Setup and Analysis with Bash Scripts . The bash scripts that follow automate what was done in the setup procedures. The purpose of this is to show that many of the commands we performed can be added to a script, then performed automatically. . Pull Code . Pull code from GitHub to your machine. This is a bash script, a sequence of commands, that will create a project directory and add the “project” from GitHub to the vscode directory. There is conditional logic to make sure that clone only happen if it does not (!) exist. Here are some key elements in this code… . cd command (change directory), remember this from terminal session | if statements (conditional statement, called selection statement by College Board), code inside only happens if condition is met | . %%script bash # Extract saved variables source /tmp/variables.sh echo &quot;Using conditional statement to create a project directory and project&quot; cd ~ # start in home directory # Conditional block to make a project directory if [ ! -d $project_dir ] then echo &quot;Directory $project_dir does not exists... makinng directory $project_dir&quot; mkdir -p $project_dir fi echo &quot;Directory $project_dir exists.&quot; # Conditional block to git clone a project from project_repo if [ ! -d $project ] then echo &quot;Directory $project does not exists... cloning $project_repo&quot; cd $project_dir git clone $project_repo cd ~ fi echo &quot;Directory $project exists.&quot; . Look at files Github project . All computers contain files and directories. The clone brought more files from cloud to your machine. Review the bash shell script, observe the commands that show and interact with files and directories. These were used during setup. . “ls” lists computer files in Unix and Unix-like operating systems | “cd” offers way to navigate and change working directory | “pwd” print working directory | “echo” used to display line of text/string that are passed as an argument | . %%script bash # Extract saved variables source /tmp/variables.sh echo &quot;Navigate to project, then navigate to area wwhere files were cloned&quot; cd $project pwd echo &quot;&quot; echo &quot;list top level or root of files with project pulled from github&quot; ls . Look at file list with hidden and long attributes . Most linux commands have options to enhance behavior. The enhanced listing below shows permission bits, owner of file, size and date. . ls reference . %%script bash # Extract saved variables source /tmp/variables.sh echo &quot;Navigate to project, then navigate to area wwhere files were cloned&quot; cd $project pwd echo &quot;&quot; echo &quot;list all files in long format&quot; ls -al # all files -a (hidden) in -l long listing . %%script bash # Extract saved variables source /tmp/variables.sh echo &quot;Look for posts&quot; export posts=$project/_posts # _posts inside project cd $posts # this should exist per fastpages pwd # present working directory ls -l # list posts . %%script bash # Extract saved variables source /tmp/variables.sh echo &quot;Look for notebooks&quot; export notebooks=$project/_notebooks # _notebooks is inside project cd $notebooks # this should exist per fastpages pwd # present working directory ls -l # list notebooks . %%script bash # Extract saved variables source /tmp/variables.sh echo &quot;Look for images in notebooks, print working directory, list files&quot; cd $notebooks/images # this should exist per fastpages pwd ls -l . Look inside a Markdown File . “cat” reads data from the file and gives its content as output . %%script bash # Extract saved variables source /tmp/variables.sh echo &quot;Navigate to project, then navigate to area wwhere files were cloned&quot; cd $project echo &quot;show the contents of README.md&quot; echo &quot;&quot; cat README.md # show contents of file, in this case markdown echo &quot;&quot; echo &quot;end of README.md&quot; . Env, Git and GitHub . Env(ironment) is used to capture things like path to Code or Home directory. Git and GitHub is NOT Only used to exchange code between individuals, it is often used to exchange code through servers, in our case deployment for Website. All tools we use have a behind the scenes relationships with the system they run on (MacOS, Windows, Linus) or a relationship with servers which they are connected to (ie GitHub). There is an “env” command in bash. There are environment files and setting files (.git/config) for Git. They both use a key/value concept. . “env” show setting for your shell | “git clone” sets up a director of files | “cd $project” allows user to move inside that directory of files | “.git” is a hidden directory that is used by git to establish relationship between machine and the git server on GitHub. | . %%script bash # This command has no dependencies echo &quot;Show the shell environment variables, key on left of equal value on right&quot; echo &quot;&quot; env . %%script bash # Extract saved variables source /tmp/variables.sh cd $project echo &quot;&quot; echo &quot;show the secrets of .git&quot; cd .git ls -l echo &quot;&quot; echo &quot;look at config file&quot; cat config . Advanced Student Request - Make a file in Bash . This example was requested by a student (Jun Lim, CSA). The request was to make jupyer file using bash, I adapted the request to markdown. This type of thought will have great extrapolation to coding and possibilities of using List, Arrays, or APIs to build user interfaces. JavaScript is a language where building HTML is very common. . To get more interesting output from terminal, this will require using something like mdless (https://github.com/ttscoff/mdless). This enables see markdown in rendered format. . On Desktop Install PKG from MacPorts | In Terminal on MacOS Install ncurses | gem install mdless | . | . Output of the example is much nicer in “jupyter” . %%script bash # This example has error in VSCode, it run best on Jupyter cd /tmp file=&quot;sample.md&quot; if [ -f &quot;$file&quot; ]; then rm $file fi tee -a $file &gt;/dev/null &lt;&lt;EOF # Show Generated Markdown This introductory paragraph and this line and the title above are generated using tee with the standard input (&lt;&lt;) redirection operator. - This bulleted element is still part of the tee body. EOF echo &quot;- This bulleted element and lines below are generated using echo with standard output (&gt;&gt;) redirection operator.&quot; &gt;&gt; $file echo &quot;- The list definition, as is, is using space to seperate lines. Thus the use of commas and hyphens in output.&quot; &gt;&gt; $file actions=(&quot;ls,list-directory&quot; &quot;cd,change-directory&quot; &quot;pwd,present-working-directory&quot; &quot;if-then-fi,test-condition&quot; &quot;env,bash-environment-variables&quot; &quot;cat,view-file-contents&quot; &quot;tee,write-to-output&quot; &quot;echo,display-content-of-string&quot; &quot;echo_text_&gt; $file,write-content-to-file&quot; &quot;echo_text_&gt;&gt; $file,append-content-to-file&quot;) for action in ${actions[@]}; do # for loop is very similar to other language, though [@], semi-colon, do are new action=${action//-/ } # convert dash to space action=${action//,/: } # convert comma to colon action=${action//_text_/ &quot;sample text &quot; } # convert _text_ to sample text, note escape character to avoid &quot;&quot; having meaning echo &quot; - ${action//-/ }&quot; &gt;&gt; $file # echo is redirected to file with &gt;&gt; done echo &quot;&quot; echo &quot;File listing and status&quot; ls -l $file # list file wc $file # show words mdless $file # this requires installation, but renders markown from terminal rm $file # clean up termporary file . Hack Preparation. . Review Tool Setup Procedures and think about some thing you could verify through a Shell notebook. . Come up with your own student view of this procedure to show your tools are installed. It is best that you keep the few things you understand, add things later as you start to understand them. | Name and create blog notes on some Linux commands you will use frequently. | Is there anything we use to verify tools we installed? Review versions? | How would you update a repository? Use the git command line? | .",
            "url": "http://localhost:4100/teacher_portfolio/5.a/c4.1/2023/08/16/linux_shell_IPYNB_2_.html",
            "relUrl": "/5.a/c4.1/2023/08/16/linux_shell_IPYNB_2_.html",
            "date": " • Aug 16, 2023"
        }
        
    
  
    
        ,"post216": {
            "title": "VSCode, GitHub Pages Setup",
            "content": "Hacks . Installation Hack It is fundamental that you learn how to make your own blogging Website and make sure you begin your understanding of the following. . Take note and describe the type of shell commands that you are using through Terminal in this installation procedure. wsl, cd, git, apt, brew, … | . | In the Development process, developers use Version control. Annotate in notes what you have learned about Version Control while doing this setup process. Where are the files from GitHub placed on your local machine. How do you navigate to those files. | Where are the files placed in the GitHub Cloud, how do you navigate to those files. | How would you update your Template or Fork of student repository if teacher wanted you to pick up an update? | . | Put into words the difference between viewing GitHub Pages running on localhost machine versus running on a deployed server. What is the localhost URL for your distribution? Can anyone else see it? | What is the GitHub Pages URL for your distribution? Can anyone else see it? | . | DNS is the address manager for the internet. Put into your own words how you changed the domain name of your student repository. Did you change the address? | . Terminal and Linux Navigation (Reference for cd, pwd, mkdir, ..) . Windows, MacOS, and Kasm Cloud provide options for a Terminal. We will be setting up our specific environment, but we will all be working with a Linux shell inside of Terminal. This provides options where you will be running commands to mange files for code and push your code to Github. . Click for Linux navigation commands. . Learning how to move around in the terminal to access files will be very helpful and required while coding. . Windows Subsytem for Linux (Windows/WSL only) . WSL . WSL (Windows Subsystem for Linux) provides a Linux environment on a Windows computer. Linux is an open source operating system that consists of many distributions, such as Ubuntu Linux which we will install and use. Once we install Ubuntu Linux we will be able to run Linux/Unix commands. Ubuntu contains a package manager called apt that enables us to add Developer packages and libraries to the machine. . To get started, download WSL and Ubuntu (skip the following steps if you are using a Mac): . Open PowerShell as an administrator (Right click -&gt; Run as administrator) and type: wsl --install . | After the installation finishes, restart your computer . | After restarting, a command prompt or PowerShell prompt may automatically open asking for a username. Enter a username and password to create your account. . If no prompt opens, open up PowerShell as an administrator and run: wsl --install -d Ubuntu . | Open Command Prompt or PowerShell as a regular user (just click on Command Prompt or PowerShell), and type wsl. The terminal’s prompt should change from PS C: Users &lt;username&gt; to &lt;username&gt;@MSI: You are now ready to use Linux/Unix commands. . | WSL (Reference, shows wsl commands) . As a WSL user you will need to refer to these Powershell commands when in trouble shooting issues or making changes to configuration. All of these commands work at PowerShell prompt PS C: Users &lt;username&gt;. . List all WSL commands . wsl -h . wsl -help . List all WSL distros that can be installed . wsl -l -o . To list installed WSL distros . wsl -l . wsl –list . To list installed WSL distros along with status and version . wsl -l -v . wsl -l –verbose . To run the default WSL distro . wsl . To run alternate listed distro . wsl -d distro_name . wsl –distribution distro_name . To shutdown a distro, this is like a reboot when it is acting up . wsl -t distro_name_to_shutdown . wsl –terminate distro_name_to_shutdown . To shutdown all disstros . wsl –shutdown . Set specific distro as default . wsl -s distro_name . wsl –set-default distro_name . WSL VSCode Install . VS Code provides a place to create and edit code. Follow the steps below to download VS Code onto your computer. . Install VS Code . | When the installer asks to Select Additional Tasks, check “Add to PATH”. . | Open VS Code. In the sidebar, click on “Extensions”. Search for “Remote Development extension pack” and install it. . | MacOS Setup (MacOs Setup Only) . VS Code provides a place to create and edit code. Homebrew provides a developer tools installation manager. . MacOS VSCode, Homebrew Install . MacOS terminal by default is a shell that supports Linux/Unix commands. MacOS requires the addition of Homebrew which contains a package manager called brew that enables us to add Developer packages and libraries to the machine. . VSCode install on MacOS. Install VSCode | . | Homebrew install on MacOS. This installs a tool called “brew” which helps add and manage developer packages on MacOS. Follow the instruction and install Homebrew. | . | Terminal Startup (All: WSL Ubuntu, MacOS, Cloud Ubuntu) . This section is to used to use GitHub, sync code and test VSode installation. . Git Clone and VSCode Launch . Follow steps in order. References to WSL are not applicable if you have MacOS or Cloud Ubuntu. . Open Terminal (type wsl if you’re not in WSL already and on Windows/WSL) . | Move to your home directory with cd . | Create and move into a vscode directory with: . mkdir vscode cd vscode . | Clone a repository, for example: git clone https://github.com/nighthawkcoders/teacher.git . | Open the repository in VS Code with code &lt;repository name&gt; (ex: code teacher); on Cloud you are required to open project after lanuching VSCode. Teacher will demonstrate. . | Wsl only!!! Check that VSCode is opened in WSL at the bottom left corner of the window: . . | Git Config . Run the following commands to configure user git connection to GitHub. This is required prior to pushing code to GitHub. . bash git config --global user.email &lt;your email&gt; git config --global user.name &lt;your github id&gt; . . Make personal Github Pages repository (All: WSL Ubuntu, MacOS, Cloud Ubuntu) . Create a personal repository. Teacher suggestion is to use Template to create your own repository. . Overview . You will want to create a personal Github Pages blog for this class. This is a place where you can code, complete the hacks, and record what you have learned. . click for Create Repository . Use Template to create student repository . | Once your repository is created, click on the green “Code” button and copy the HTTPS link provided. . | In Terminal, to your vscode directory (cd ~/vscode). Then clone the repository with git clone &lt;link copied from step 3&gt;. . | Open your repository in VS Code with code &lt;repository name&gt;. Cloud Terminal requires you to open after lanuching VSCode. . | Now you can start code, code, coding! . | . Install tools to run Github Pages locally (All: WSL Ubuntu, MacOS, Cloud Ubuntu) . When you run your Github Pages blog locally, you will be able to see your website update with a URL that starts with http://localhost as you edit your code. This is helpful because you can test locally to see if your code works, and push error-free code to your repository. . Tools Installation Steps . Run the following commands below to setup your GitHub pages to run on your local machine (check out the comments if you’re interested in what the commands do). When we do setup there will be differences between WSL and MacOS. . . If using Windows/WSL terminal . Perform steps in either option A or option B below to install required Ruby, Python, and Jupyter . # Option A -- MacOS install script, requires teacher repository ~/vscode/teacher/scripts/activate_ubuntu.sh . # Option B -- WSL/Ubuntu commands # This section is for setting up Ruby, Python, and Jupyter Notebook on WSL (Ubuntu). # Ugrade and install packages for Ubuntu echo &quot;=== Upgrade Packages ===&quot; sudo apt update sudo apt upgrade -y # Install Ruby and necessary development tools echo &quot;=== Install Ruby ===&quot; sudo apt install -y ruby-full build-essential zlib1g-dev # Install Python 3 and pip echo &quot;=== Install Python ===&quot; sudo apt-get install -y python3 python3-pip python-is-python3 # Install Jupyter Notebook echo &quot;=== Install Jupyter Notebook ===&quot; sudo apt-get install -y jupyter-notebook # Install Gems export GEM_HOME=&quot;$HOME/gems&quot; export PATH=&quot;$HOME/gems/bin:$PATH&quot; echo &#39;export GEM_HOME=&quot;$HOME/gems&quot;&#39; &gt;&gt; ~/.bashrc echo &#39;export PATH=&quot;$HOME/gems/bin:$PATH&quot;&#39; &gt;&gt; ~/.bashrc gem install jekyll bundler . . If using MacOS terminal . Perform steps in either option A or option B below to install required Ruby, Python, and Jupyter. . # Option A -- MacOS install script, requires teacher repository ~/vscode/teacher/scripts/activate_macos.sh . # Option B -- MacOS commands, perform steps manually # This section is for setting up Ruby, Python, and Jupyter Notebook on macOS. # Upgrade Homebrew and install xz (decompression utility) echo &quot;=== Upgrade Packages ===&quot; brew update brew upgrade brew install xz # decompression utility # Install rbenv, Ruby 3.1.4, and configure it echo &quot;=== Install Ruby ===&quot; brew install rbenv rbenv install 3.1.4 rbenv global 3.1.4 # Configure rbenv to initialize in the shell echo &#39;if which rbenv &gt; /dev/null; then eval &quot;$(rbenv init - zsh)&quot;; fi&#39; &gt;&gt; ~/.zshrc # Start a new terminal, test if Ruby 3.1.4 is set rbenv versions # Install Python and Pip using Homebrew echo &quot;=== Install Python ===&quot; brew install python # Install Jupyter Notebook using Homebrew echo &quot;=== Install Jupyter Notebook ===&quot; brew install jupyter # Install Gems export GEM_HOME=&quot;$HOME/gems&quot; export PATH=&quot;$HOME/gems/bin:$PATH&quot; echo &#39;export GEM_HOME=&quot;$HOME/gems&quot;&#39; &gt;&gt; ~/.zshrc echo &#39;export PATH=&quot;$HOME/gems/bin:$PATH&quot;&#39; &gt;&gt; ~/.zshrc gem install jekyll bundler . If using Cloud Ubuntu . Perform steps in either option A or option B below to install Gems . # Option A -- Cloud install script, requires teacher repository ~/vscode/teacher/scripts/activate.sh . # Option B -- Ubuntu commands # Install Gems export GEM_HOME=&quot;$HOME/gems&quot; export PATH=&quot;$HOME/gems/bin:$PATH&quot; echo &#39;export GEM_HOME=&quot;$HOME/gems&quot;&#39; &gt;&gt; ~/.bashrc echo &#39;export PATH=&quot;$HOME/gems/bin:$PATH&quot;&#39; &gt;&gt; ~/.bashrc gem install jekyll bundler . Version Checks (All) . From here on commands should be the same on all classroom machines. Start a new terminal and make sure all versions of tools have taken effect. . # Show the active Ruby version, MacOS is 3.1.4 ruby -v # Show active Python version, it needs to be 3.9 or better python --version ####################### Apple Only #################### # Only Apple Silicon M series, if Failure on python and pip ln -s /opt/homebrew/bin/python3 /opt/homebrew/bin/python ln -s /opt/homebrew/bin/pip3 /opt/homebrew/bin/pip # Only Apple Interl Selecton, if failure on python and pip sudo ln -s /usr/local/bin/python3 /usr/local/bin/python sudo ln -s /usr/local/bin/pip3 /usr/local/bin/pip ##################### End Apple Only ################### # Setup Python libraries for Notebook conversion pip install nbconvert # library for notebook conversion pip install nbformat # notebook file utility pip install pyyaml # notebook frontmatter # Show Jupyter packages, nbconvert needs to be in the list jupyter --version # Show Kernels, python3 needs to be in list jupyter kernelspec list # does not work on Cloud Ubuntu . Bundle Install and Make Steps (All) . Commands are the same for all Machines, Terminals, and Projects. We are all building GitHub pages websites in similar fashion. . Open your terminal in VS Code through View -&gt; Terminal. Alternatively, the shortcut Ctrl + ` can be used. (Opening up VS Code’s terminal opens your student repository in the project directory.) . | Type bundle install This command installs the dependencies in your Gemfile. . | Type make This runs the local server. . | #### Apple only issue, &quot;markdown&quot; error #### ln -s /opt/homebrew/share/jupyter/nbconvert ~/Library/Jupyter . Go to the localhost link provided in the output: | Now, whenever the blog is edited in VS Code, the local website will show the changes upon refresh (you could run make convert to check and ensure Juptyer Notebooks are built and up to date). . Make commands (local build: make, make clean, make stop, make convert) . These commands are used to build and manage a localhost version of website. The purpose of this is to verify and test code changes prior to pushing changes to GitHub Pages. . make This runs the local server . | make clean stops the local server and cleans the files (recommended to use this to stop). This means you will be unable to access your blog on http://localhost until you run make again. . | make stop stops the local server. . | make convert converts Jupyter Notebook files, run this if your .ipynb files are not updating on the server. . | . . VSCode Commit changes to pdate public GitHub Pages (All) . The VSCode saved files are only stored on your computer locally until you commit/sync the changes. If you go to your actual blog on the web (https://.github.io/student), you will notice that the changes are not reflected there. To ensure that the public website updates, you will need to commit and sync your changes in VSCode; this will push changes to GitHub and activate a rebuild of the website. . Commit Changes, version control locally . This creates a version update in you local git database. Often developers commit several times before they sync/push. This allows lots of small changes that can be easily reviewed and rolled back. Review COMMITS in VSCode. . Click on the button that says “Source Control” in VS Code’s left sidebar . | Click on the plus sign to stage your changes . . | Enter a message for your commit in the message box. . | Click the “Commit button” . | Sync Chaanges, update change in GitHub . This moves commit(s) from local git database to GitHub. This will create an Action in GitHub pages and trigger an update to the website, if code is without errors. . Click the Menu button and then click “Push”. . . | . Creat a Github Pages custom domain (Delayed) . Do Not Continue . Stick with standard gihub.io domain. We will not be doing a custom domain at this time, but we will do this sometime during the year.. . Overview . This process is used to change github.io to a custom domain, aka nighthawkcodingsociety.com. . AWS Route 53 is a DNS service that provides routing to web applications. When you enter a URL in your web browser, the request is sent to a DNS resolver. In our customization, the resolver finds a Route 53 server that can translate the URL’s domain intoan IP address. The Route 53 server sends the information back to the resolver, who then sends it to the browser. The browser is able to access the webpage through the IP address it has received. . . In addition, you can use Route 53 to create a subdomain that maps a Custom Domain to your Github Pages blog. In the example below, the domain https://lily.nighthawkcodingsociety.com/ will point to https://lwu1822.github.io/student/. . . Steps . AWS . Go to AWS Route 53, and click on “Hosted zones”. . | Click on “Create record”. . . | Create a subdomain in “Record name”. Change the “Record type” to CNAME. CNAME creates an alias that maps one domain name to another domain. Finally, in the “Value” section, enter your Github URL in the form of: &lt;username&gt;.github.io. Be sure to omit the link to your repository (use &lt;username&gt;.github.io instead of &lt;username&gt;.github.io/student). . . | Click on “Create records”. Your record should look something like this: . . | Github Pages . Create a Github pages repository and click on “Settings”. . | In the sidebar, click on “Pages”. Under “Build and deployment”, ensure that the Github Pages is being built from the main branch. If you forked nighthawkcoders/student, you might need to specify that before you can move on to Step 3. . . | Enter the subdomain you configured in Hosted zones. . . Github pages will run a DNS check. Once the check is successful, access your Github pages with your new subdomain name (ex: lily.nighthawkcodingsociety.com). The subdomain should redirect to your Github Pages blog. . Troubleshooting: If the check is unsuccessful, check to see that you did the “AWS” steps properly. Also check to see if you spelled the subdomain correctly in Github Pages. If that does not work, delete the record in AWS and create it again. (It took me multiple times to get it to work, even though I typed the correct domain name. So if you encounter this error, you may have to be patient.) . | Click “Enforce HTTPS” so that the subdomain will be accessed over HTTPS. . | . BaseURL configuration . In _config.yml, change the line that says baseurl to: . baseurl: &quot;&quot; . This ensures that Github Pages is formatted correctly. This is because originally, the Github Pages site was under the subdirectory student (ex: lwu1822.github.io/student). After configuring a domain/subdomain, the baseurl would be “” since the URL would look like https://lily.nighthawkcodingsociety.com/ (no subdirectory). . As you edit this file you will observe the left panel of icons puts a help hint of ‘1’ on the Explorer icon. Later when you save (ctl-s or cmd-s) the help hint will move to the Source Control icon. You will need to commit this change and sync it to GitHub. . VSCode/Git Reference . . Troubleshooting DNS (dig) . dig is a Linux command that outputs DNS information, which can be used for troubleshooting. . Run dig &lt;your subdomain&gt; to check that the subdomain and the Github URL it points to is properly configured. . dig lily.nighthawkcodingsociety.com A ; &lt;&lt;&gt;&gt; DiG 9.16.1-Ubuntu &lt;&lt;&gt;&gt; lily.nighthawkcodingsociety.com A ;; global options: +cmd ;; Got answer: ;; -&gt;&gt;HEADER&lt;&lt;- opcode: QUERY, status: NOERROR, id: 14554 ;; flags: qr rd ad; QUERY: 1, ANSWER: 5, AUTHORITY: 0, ADDITIONAL: 0 ;; WARNING: recursion requested but not available ;; QUESTION SECTION: ;lily.nighthawkcodingsociety.com. IN A ;; ANSWER SECTION: lily.nighthawkcodingsociety.com. 0 IN CNAME lwu1822.github.io. lwu1822.github.io. 0 IN A 185.199.111.153 lwu1822.github.io. 0 IN A 185.199.108.153 lwu1822.github.io. 0 IN A 185.199.109.153 lwu1822.github.io. 0 IN A 185.199.110.153 ;; Query time: 0 msec ;; SERVER: 172.30.208.1#53(172.30.208.1) ;; WHEN: Thu Jun 15 22:45:36 PDT 2023 ;; MSG SIZE rcvd: 192 . In the ANSWER SECTION, check to see that the CNAME line maps the subdomain to the Github URL. . The four IP addresses below the CNAME line are the IP addresses for Github Pages. . . Troubleshooting DNS (whatsmydns) . In addition, you can also check to see if and where your subdomain is active through https://www.whatsmydns.net/. . .",
            "url": "http://localhost:4100/teacher_portfolio/5.a/c4.1/2023/08/16/github_pages_setup_IPYNB_2_.html",
            "relUrl": "/5.a/c4.1/2023/08/16/github_pages_setup_IPYNB_2_.html",
            "date": " • Aug 16, 2023"
        }
        
    
  
    
        ,"post217": {
            "title": "Tool References",
            "content": "Visual Studio Code Overview . Jupyter Notebooks Review Jupyter basics 6-min . WSL Basic Commands . Linux Commands Cheat Sheet . Docker Docker Overview .",
            "url": "http://localhost:4100/teacher_portfolio/2023/08/16/Tools_Hide.html",
            "relUrl": "/2023/08/16/Tools_Hide.html",
            "date": " • Aug 16, 2023"
        }
        
    
  
    
        ,"post218": {
            "title": "Java Hello",
            "content": "Hello, World! . This article shows the basic language structures and constructs of Java (aka anatomy). In async order, it is critical to understand these examples and learn vocab for OOP and Creating Objects: . Object Oriented Programming | Creating Objects | Calling Methods | . Static example . The class HelloStatic contains the classic “Hello, World!” message that is often used as an introduction to a programming language. The “public static void main(String[] args)”, or main method, is the default runtime method in Java and has a very specific and ordered definition (signature). . The key terms in HelloStatic introduction: . “class” is a blueprint for code, it is the code definition and must be called to run | “method” or “static method” in this case, is the code to be run/executed, similar to a procedure | “method definition” or “signature” are the keywords “public static void” in front of the name “main” and the parameters “String[] args” after the name. | “method call” is the means in which we run the defined code | . // Define Static Method within a Class public class HelloStatic { // Java standard runtime entry point public static void main(String[] args) { System.out.println(&quot;Hello World!&quot;); } } // A method call allows us to execute code that is wrapped in Class HelloStatic.main(null); // Class prefix allows reference of Static Method . Dynamic Example . This example starts to use Java in its natural manner, using an object within the main method. This example is a very basic illustration of Object Oriente Programming (OOP). The main method is now used as a driver/tester, by making an instance of the class. Thus, it creates an Object using the HelloObject() constructor. Also, this Class contains a getter method called getHello() which returns the value with the “String hello”. . The key terms in HelloStatic introduction: . “Object Oriented Programming” focuses software design around data, or objects. | “object” contains both methods and data | “instance of a class” is the process of making an object, unique or instances of variables are created within the object | “constructor” special method in class, code that is used to initialize the data within the object | “getter” is a method that is used to extract or reference data from within the object. | . // Define Class with Constructor returning Object public class HelloObject { private String hello; // instance attribute or variable public HelloObject() { // constructor hello = &quot;Hello, World!&quot;; } public String getHello() { // getter, returns value from inside the object return this.hello; // return String from object } public static void main(String[] args) { HelloObject ho = new HelloObject(); // Instance of Class (ho) is an Object via &quot;new HelloObject()&quot; System.out.println(ho.getHello()); // Object allows reference to public methods and data } } // IJava activation HelloObject.main(null); . Dynamic Example with two constructors . This last example adds to the basics of the Java anatomy. The Class now contains two constructors and a setter to go with the getter. Also, observe the driver/tester now contains two objects that are initialized differently, 0 and 1 argument constructor. Look at the usage of the “this” prefix. The “this” keyword helps in clarification between instance and local variable. . The key terms in HelloDynamic introduction: . “0 argument constructor” constructor method with no parameter () | “1 argument constructor” construct method with a parameter (String hello) | “this keyword” allows you to clear reference something that is part of the object, data or method | “local variable” is a variable that is passed to the method in this example, see the 1 argument constructor as it has a local variable “String hello” | “dynamic” versus “static” is something that has option to change, static never changes. A class (blueprint) and objects (instance of blueprint) are generally intended to be dynamic. Constructors and Setters are used to dynamically change the content of an object. | “Java OOP, Java Classes/Objects, Java Class Attributes, Java Class Methods, Java Constructors” are explained if more complete detail in W3 Schools: https://www.w3schools.com/java/java_oop.asp | . // Define Class public class HelloDynamic { // name the first letter of class as capitalized, note camel case // instance variable have access modifier (private is most common), data type, and name private String hello; // constructor signature 1, public and zero arguments, constructors do not have return type public HelloDynamic() { // 0 argument constructor this.setHello(&quot;Hello, World!&quot;); // using setter with static string } // constructor signature, public and one argument public HelloDynamic(String hello) { // 1 argument constructor this.setHello(hello); // using setter with local variable passed into constructor } // setter/mutator, setter have void return type and a parameter public void setHello(String hello) { // setter this.hello = hello; // instance variable on the left, local variable on the right } // getter/accessor, getter used to return private instance variable (encapsulated), return type is String public String getHello() { // getter return this.hello; } // public static void main(String[] args) is signature for main/drivers/tester method // a driver/tester method is singular or called a class method, it is never part of an object public static void main(String[] args) { HelloDynamic hd1 = new HelloDynamic(); // no argument constructor HelloDynamic hd2 = new HelloDynamic(&quot;Hello, Nighthawk Coding Society!&quot;); // one argument constructor System.out.println(hd1.getHello()); // accessing getter System.out.println(hd2.getHello()); } } // IJava activation HelloDynamic.main(null); . Hacks . Build your own Jupyter Notebook meeting these College Board and CTE competencies. It is critical to understand Static versus Instance Now, this is College Board requirement!!! . Explain Anatomy of a Class in comments of program (Diagram key parts of the class). | Comment in code where there is a definition of a Class and an instance of a Class (ie object) | Comment in code where there are constructors and highlight the signature difference in the signature | Call an object method with parameter (ie setters). | . Additional requirements (Pick something) . Go through code progression of understanding Class usage and generating an Instance of a Class (Object). . a. Build a purposeful dynamic Class, using an Object, generate multiple instances: - Person: Name and Age - Dessert: Type and Cost - Location: City, State, Zip . b. Create a static void main tester method to generate objects of the class. . c. In tester method, show how setters/mutators can be used to make the data in the Object dynamically change . | Go through progression of understanding a Static Class. Build a purposeful static Class, no Objects. . Calculate common operations on a Date field, age since date, older of two dates, number of seconds since date . | Calculate stats functions on an array of values: mean, median, mode. . | . |",
            "url": "http://localhost:4100/teacher_portfolio/c4.0/2023/08/15/java-hello_IPYNB_2_.html",
            "relUrl": "/c4.0/2023/08/15/java-hello_IPYNB_2_.html",
            "date": " • Aug 15, 2023"
        }
        
    
  
    
        ,"post219": {
            "title": "JS Mario 6-Background",
            "content": "Overview | Player | Platform | Tube | Block | Goomba | Background | . %%html &lt;style&gt; #canvas { margin: 0; border: 1px solid white; } &lt;/style&gt; &lt;canvas id=&quot;canvas&quot;&gt;&lt;/canvas&gt; &lt;script&gt; // Create empty canvas let canvas = document.getElementById(&#39;canvas&#39;); let c = canvas.getContext(&#39;2d&#39;); // Set the canvas dimensions canvas.width = 650; canvas.height = 400; // Set gravity value let gravity = 1.5; // Define the Player class class Player { constructor() { // Initial position and velocity of the player this.position = { x: 100, y: 200 }; this.velocity = { x: 0, y: 0 }; // Dimensions of the player this.width = 30; this.height = 30; } // Method to draw the player on the canvas draw() { c.fillStyle = &#39;red&#39;; c.fillRect(this.position.x, this.position.y, this.width, this.height); } // Method to update the player position and velocity update() { this.draw(); this.position.y += this.velocity.y; this.position.x += this.velocity.x; // Apply gravity if player is not at the bottom if (this.position.y + this.height + this.velocity.y &lt;= canvas.height) this.velocity.y += gravity; else this.velocity.y = 0; } } // Define the Platform class class Platform { constructor(image) { // Initial position of the platform this.position = { x: 0, y: 300 } this.image = image; this.width = 650; this.height = 100; } // Method to draw the platform on the canvas draw() { c.drawImage(this.image, this.position.x, this.position.y, this.width, this.height); } } // Define the Tube class class Tube { constructor(image) { // Initial position of the tube this.position = { x: 500, y: 180 } this.image = image; this.width = 100; this.height = 120; } // Method to draw the tube on the canvas draw() { c.drawImage(this.image, this.position.x, this.position.y, this.width, this.height); } } // Define the BlockObject class class BlockObject { constructor(image) { // Initial position of the block object this.position = { x: 200, y: 100 }; this.image = image; this.width = 158; this.height = 79; } // Method to draw the block object on the canvas draw() { c.drawImage(this.image, this.position.x, this.position.y); } } //-- // NEW CODE - CREATE GENERICOBJECT CLASS FOR THE BACKGROUND IMAGES //-- class GenericObject { constructor({ x, y, image }) { this.position = { x, y }; this.image = image; this.width = 760; this.height = 82; } // Method to draw the generic object on the canvas draw() { c.drawImage(this.image, this.position.x, this.position.y); } } // Load image sources let image = new Image(); let imageTube = new Image(); let imageBlock = new Image(); //-- // NEW CODE - ADD IMAGES FOR BACKGROUND //-- let imageBackground = new Image(); let imageHills = new Image(); image.src = &#39;https://samayass.github.io/samayaCSA/images/platform.png&#39;; imageTube.src = &#39;https://samayass.github.io/samayaCSA/images/tube.png&#39;; imageBlock.src = &#39;https://samayass.github.io/samayaCSA/images/box.png&#39;; //-- // NEW CODE - IMAGE URLS FOR BACKGROUND IMAGES //-- imageBackground.src = &#39;https://samayass.github.io/samayaCSA/images/background.png&#39;; imageHills.src = &#39;https://samayass.github.io/samayaCSA/images/hills.png&#39;; // Create instances of platform, tube, block object, and generic objects let platform = new Platform(image); let tube = new Tube(imageTube); let blockObject = new BlockObject(imageBlock); //-- // NEW CODE - CREATE ARRAY FOR GENERIC OBJECTS THEN ADD THE HILLS AND BACKGROUND //-- let genericObjects = [ new GenericObject({ x:0, y:0, image: imageBackground }), new GenericObject({ x:0, y:70, image: imageHills }), ]; player = new Player(); // Define keys and their states let keys = { right: { pressed: false }, left: { pressed: false } }; // Animation loop function animate() { requestAnimationFrame(animate); c.clearRect(0, 0, canvas.width, canvas.height); //-- // NEW CODE - DRAW GENERIC OBJECTS WITH FOR EACH LOOP //-- genericObjects.forEach(genericObject =&gt; { genericObject.draw() }); // Draw platform, player, tube, and block object platform.draw(); player.update(); tube.draw(); blockObject.draw(); // Handle collisions and interactions // Handle collision between player and block object if ( player.position.y + player.height &lt;= blockObject.position.y &amp;&amp; player.position.y + player.height + player.velocity.y &gt;= blockObject.position.y &amp;&amp; player.position.x + player.width &gt;= blockObject.position.x &amp;&amp; player.position.x &lt;= blockObject.position.x + blockObject.width ) { player.velocity.y = 0; } // Handle collision between player and platform if ( player.position.y + player.height &lt;= platform.position.y &amp;&amp; player.position.y + player.height + player.velocity.y &gt;= platform.position.y &amp;&amp; player.position.x + player.width &gt;= platform.position.x &amp;&amp; player.position.x &lt;= platform.position.x + platform.width ) { player.velocity.y = 0; } // Handle interaction with tube if ( player.position.y + player.height &lt;= tube.position.y &amp;&amp; player.position.y + player.height + player.velocity.y &gt;= tube.position.y &amp;&amp; player.position.x + player.width &gt;= tube.position.x &amp;&amp; player.position.x &lt;= tube.position.x + tube.width ) { player.velocity.y = 0; player.position.y += 0.1; player.velocity.y = 0.0001; gravity = 0.2; } // Adjust gravity after leaving the tube if (player.position.y + player.height == tube.position.y + tube.height || player.position.y + player.height &lt;= tube.position.y || player.position.x + player.width &lt;= tube.position.x || player.position.x &gt;= tube.position.x + tube.width) { gravity = 1.5; } // Handle collision with tube sides if ( player.position.x + player.width&lt;= tube.position.x &amp;&amp; player.position.x + player.width + player.velocity.x &gt;= tube.position.x &amp;&amp; player.position.y + player.height &gt;= tube.position.y &amp;&amp; player.position.y &lt;= tube.position.y + tube.height ) { player.velocity.x = 0; } if ( player.position.x &gt;= tube.position.x + tube.width &amp;&amp; player.position.x + player.velocity.x &lt;= tube.position.x + tube.width &amp;&amp; player.position.y + player.height &gt;= tube.position.y &amp;&amp; player.position.y &lt;= tube.position.y + tube.height ) { player.velocity.x = 0; } if ( player.position.x &gt;= tube.position.x &amp;&amp; player.position.x + player.velocity.x &lt;= tube.position.x &amp;&amp; player.position.y + player.height &gt;= tube.position.y &amp;&amp; player.position.y &lt;= tube.position.y + tube.height ) { player.velocity.x = 0; } if ( player.position.x + player.width &lt;= tube.position.x + tube.width &amp;&amp; player.position.x + player.width + player.velocity.x &gt;= tube.position.x + tube.width &amp;&amp; player.position.y + player.height &gt;= tube.position.y &amp;&amp; player.position.y &lt;= tube.position.y + tube.height ) { player.velocity.x = 0; } // Move the player horizontally and adjust other objects if (keys.right.pressed &amp;&amp; player.position.x &lt; 400) { player.velocity.x = 15; } else if (keys.left.pressed &amp;&amp; player.position.x &gt; 100) { player.velocity.x = -15; } //-- // NEW CODE - PARALLAX SCROLLING EFFECT (MAKE THE BACKGROUND MOVE TO CREATE ILLUSION OF PLAYER MOVING) //-- else { player.velocity.x = 0; if (keys.right.pressed &amp;&amp; !keys.left.pressed) { platform.position.x -= 15; tube.position.x -= 15; blockObject.position.x -= 15; // make the background move slower for a cooler effect genericObjects.forEach(genericObject =&gt; { genericObject.position.x -= 5; }); } else if (keys.left.pressed &amp;&amp; !keys.right.pressed) { platform.position.x += 15; tube.position.x += 15; blockObject.position.x += 15; genericObjects.forEach(genericObject =&gt; { genericObject.position.x += 5; }); } } } // Start the animation loop animate(); // Event listener for key presses addEventListener(&#39;keydown&#39;, ({ keyCode }) =&gt; { switch (keyCode) { case 65: console.log(&#39;left&#39;); keys.left.pressed = true; break; case 83: console.log(&#39;down&#39;); break; case 68: console.log(&#39;right&#39;); keys.right.pressed = true; break; case 87: console.log(&#39;up&#39;); player.velocity.y -= 20; break; } }); // Event listener for key releases addEventListener(&#39;keyup&#39;, ({ keyCode }) =&gt; { switch (keyCode) { case 65: console.log(&#39;left&#39;); keys.left.pressed = false; break; case 83: console.log(&#39;down&#39;); break; case 68: console.log(&#39;right&#39;); keys.right.pressed = false; break; case 87: console.log(&#39;up&#39;); player.velocity.y = -20; break; } }); &lt;/script&gt; . Specific Hack . Add flying enemies that move at different rates (ex: birds with lasers) | . Open Ended Hack . Expand the map | .",
            "url": "http://localhost:4100/teacher_portfolio/2023/08/06/mario_background_IPYNB_2_.html",
            "relUrl": "/2023/08/06/mario_background_IPYNB_2_.html",
            "date": " • Aug 6, 2023"
        }
        
    
  
    
        ,"post220": {
            "title": "JS Mario 5-Goomba",
            "content": "Overview | Player | Platform | Tube | Block | Goomba | Background | . %%html &lt;style&gt; #canvas { margin: 0; border: 1px solid white; } &lt;/style&gt; &lt;canvas id=&#39;canvas&#39;&gt;&lt;/canvas&gt; &lt;script&gt; let canvas = document.getElementById(&#39;canvas&#39;); let c = canvas.getContext(&#39;2d&#39;); canvas.width = 650; canvas.height = 400; let gravity = 1.5; class Player { constructor() { this.position = { x: 100, y: 200 }; this.velocity = { x: 0, y: 0 }; this.width = 30; this.height = 30; } draw() { c.fillStyle = &#39;red&#39;; c.fillRect(this.position.x, this.position.y, this.width, this.height); } update() { this.draw(); this.position.y += this.velocity.y; this.position.x += this.velocity.x; if (this.position.y + this.height + this.velocity.y &lt;= canvas.height) this.velocity.y += gravity; else this.velocity.y = 0; } } class Platform { constructor(image) { this.position = { x: 0, y: 300 } this.image = image; this.width = 650; this.height = 100; } draw() { c.drawImage(this.image, this.position.x, this.position.y, this.width, this.height); } } class Tube { constructor(image) { this.position = { x: 500, y: 180 } this.image = image; this.width = 100; this.height = 120; } draw() { c.drawImage(this.image, this.position.x, this.position.y, this.width, this.height); } } class BlockObject { constructor(image) { this.position = { x: 200, y: 100 }; this.image = image; this.width = 158; this.height = 79; } draw() { c.drawImage(this.image, this.position.x, this.position.y); } } //-- // NEW CODE - CREATE GOOMBA CLASS //-- class Goomba { constructor(image) { this.position = { x: 250, y: 245 }; this.image = image; this.width = 55; this.height = 55; this.velocity = { x: -2, y: 0 } } draw() { c.drawImage(this.image, this.position.x, this.position.y, this.width, this.height); } update() { this.position.x += this.velocity.x; this.draw(); } } let image = new Image() let imageTube = new Image() let imageBlock = new Image() image.src = &#39;https://samayass.github.io/samayaCSA/images/platform.png&#39; imageTube.src = &#39;https://samayass.github.io/samayaCSA/images/tube.png&#39; imageBlock.src = &#39;https://samayass.github.io/samayaCSA/images/box.png&#39;; //-- // NEW CODE - ADD GOOMBA IMAGE //-- let imageGoomba = new Image() imageGoomba.src = &#39;https://samayass.github.io/samayaCSA/images/goomba.png&#39;; let platform = new Platform(image) let tube = new Tube(imageTube) let blockObject = new BlockObject(imageBlock) let goomba = new Goomba(imageGoomba) player = new Player() let keys = { right: { pressed: false }, left: { pressed: false } } function animate() { requestAnimationFrame(animate); c.clearRect(0, 0, canvas.width, canvas.height); platform.draw(); player.update(); tube.draw(); blockObject.draw(); //-- // NEW CODE - UPDATE GOOMBA ANIMATION //-- goomba.update(); if ( player.position.y + player.height &lt;= blockObject.position.y &amp;&amp; player.position.y + player.height + player.velocity.y &gt;= blockObject.position.y &amp;&amp; player.position.x + player.width &gt;= blockObject.position.x &amp;&amp; player.position.x &lt;= blockObject.position.x + blockObject.width ) { player.velocity.y = 0; } if (keys.right.pressed &amp;&amp; player.position.x + player.width &lt;= canvas.width - 50) { player.velocity.x = 15; } else if (keys.left.pressed &amp;&amp; player.position.x &gt;= 50) { player.velocity.x = -15; } else { player.velocity.x = 0; } if ( player.position.y + player.height &lt;= platform.position.y &amp;&amp; player.position.y + player.height + player.velocity.y &gt;= platform.position.y &amp;&amp; player.position.x + player.width &gt;= platform.position.x &amp;&amp; player.position.x &lt;= platform.position.x + platform.width ) { player.velocity.y = 0; } if ( player.position.y + player.height &lt;= tube.position.y &amp;&amp; player.position.y + player.height + player.velocity.y &gt;= tube.position.y &amp;&amp; player.position.x + player.width &gt;= tube.position.x &amp;&amp; player.position.x &lt;= tube.position.x + tube.width ) { player.velocity.y = 0; player.position.y += 0.1 player.velocity.y = 0.0001 gravity = 0.2 } if (player.position.y + player.height == tube.position.y + tube.height || player.position.y + player.height &lt;= tube.position.y || player.position.x + player.width &lt;= tube.position.x || player.position.x &gt;= tube.position.x + tube.width) { gravity = 1.5 } if ( player.position.x + player.width&lt;= tube.position.x &amp;&amp; player.position.x + player.width + player.velocity.x &gt;= tube.position.x &amp;&amp; player.position.y + player.height &gt;= tube.position.y &amp;&amp; player.position.y &lt;= tube.position.y + tube.height ) { player.velocity.x = 0; } if ( player.position.x &gt;= tube.position.x + tube.width &amp;&amp; player.position.x + player.velocity.x &lt;= tube.position.x + tube.width &amp;&amp; player.position.y + player.height &gt;= tube.position.y &amp;&amp; player.position.y &lt;= tube.position.y + tube.height ) { player.velocity.x = 0; } if ( player.position.x &gt;= tube.position.x &amp;&amp; player.position.x + player.velocity.x &lt;= tube.position.x &amp;&amp; player.position.y + player.height &gt;= tube.position.y &amp;&amp; player.position.y &lt;= tube.position.y + tube.height ) { player.velocity.x = 0; } if ( player.position.x + player.width &lt;= tube.position.x + tube.width &amp;&amp; player.position.x + player.width + player.velocity.x &gt;= tube.position.x + tube.width &amp;&amp; player.position.y + player.height &gt;= tube.position.y &amp;&amp; player.position.y &lt;= tube.position.y + tube.height ) { player.velocity.x = 0; } //-- // NEW CODE - GOOMBA COLLISION DETECTION //-- if( player.position.y + player.height &lt;= goomba.position.y &amp;&amp; player.position.y + player.height + player.velocity.y &gt;= goomba.position.y &amp;&amp; player.position.x + player.width &gt;= goomba.position.x &amp;&amp; player.position.x &lt;= goomba.position.x + goomba.width ) { player.velocity.y = -20; } if ( goomba.position.x &gt;= platform.position.x &amp;&amp; goomba.position.x &lt;= platform.position.x ) { goomba.velocity.x = 2; } if ( goomba.position.x + goomba.width &lt;= tube.position.x &amp;&amp; goomba.position.x + goomba.width + goomba.velocity.x &gt;= tube.position.x ) { goomba.velocity.x = -2; } } animate(); addEventListener(&#39;keydown&#39;, ({ keyCode }) =&gt; { switch (keyCode) { case 65: console.log(&#39;left&#39;); keys.left.pressed = true; break; case 83: console.log(&#39;down&#39;); break; case 68: console.log(&#39;right&#39;); keys.right.pressed = true; break; case 87: console.log(&#39;up&#39;); player.velocity.y -= 20; break; } }); addEventListener(&#39;keyup&#39;, ({ keyCode }) =&gt; { switch (keyCode) { case 65: console.log(&#39;left&#39;); keys.left.pressed = false; break; case 83: console.log(&#39;down&#39;); break; case 68: console.log(&#39;right&#39;); keys.right.pressed = false; break; case 87: console.log(&#39;up&#39;); player.velocity.y = -20; break; } }) &lt;/script&gt; . Specific Hacks . Add more goombas | Have the player jump on the goombas to make them disappear | Have the goombas “kill” the player and restart the game | .",
            "url": "http://localhost:4100/teacher_portfolio/2023/08/05/mario_goomba_IPYNB_2_.html",
            "relUrl": "/2023/08/05/mario_goomba_IPYNB_2_.html",
            "date": " • Aug 5, 2023"
        }
        
    
  
    
        ,"post221": {
            "title": "JS Mario 4-Block",
            "content": "Overview | Player | Platform | Tube | Block | Goomba | Background | . %%html &lt;style&gt; #canvas { margin: 0; border: 1px solid white; } &lt;/style&gt; &lt;canvas id=&quot;canvas&quot;&gt;&lt;/canvas&gt; &lt;script&gt; // Create empty canvas let canvas = document.getElementById(&#39;canvas&#39;); let c = canvas.getContext(&#39;2d&#39;); // Set the canvas dimensions canvas.width = 650; canvas.height = 400; // Define gravity value let gravity = 1.5; // Define the Player class class Player { constructor() { // Initial position and velocity of the player this.position = { x: 100, y: 200 }; this.velocity = { x: 0, y: 0 }; // Dimensions of the player this.width = 30; this.height = 30; } // Method to draw the player on the canvas draw() { c.fillStyle = &#39;red&#39;; c.fillRect(this.position.x, this.position.y, this.width, this.height); } // Method to update the player position and velocity update() { this.draw(); this.position.y += this.velocity.y; this.position.x += this.velocity.x; // Apply gravity if player is not at the bottom if (this.position.y + this.height + this.velocity.y &lt;= canvas.height) this.velocity.y += gravity; else this.velocity.y = 0; } } // Define the Platform class class Platform { constructor(image) { // Initial position of the platform this.position = { x: 0, y: 300 } this.image = image; this.width = 650; this.height = 100; } // Method to draw the platform on the canvas draw() { c.drawImage(this.image, this.position.x, this.position.y, this.width, this.height); } } // Define the Tube class class Tube { constructor(image) { // Initial position of the tube this.position = { x: 500, y: 180 } this.image = image; this.width = 100; this.height = 120; } // Method to draw the tube on the canvas draw() { c.drawImage(this.image, this.position.x, this.position.y, this.width, this.height); } } //-- // NEW CODE - DEFINE BLOCKOBJECT CLASS //-- class BlockObject { constructor(image) { // Initial position of the block object this.position = { x: 200, y: 100 }; this.image = image; this.width = 158; this.height = 79; } // Method to draw the block object on the canvas draw() { c.drawImage(this.image, this.position.x, this.position.y); } } // Load images let image = new Image(); let imageTube = new Image(); //-- // NEW CODE - ADD IMAGE FOR BLOCK OBJECT //-- let imageBlock = new Image(); // Load image sources image.src = &#39;https://samayass.github.io/samayaCSA/images/platform.png&#39;; imageTube.src = &#39;https://samayass.github.io/samayaCSA/images/tube.png&#39;; imageBlock.src = &#39;https://samayass.github.io/samayaCSA/images/box.png&#39;; // Create platform, tube, and block object instances let platform = new Platform(image); let tube = new Tube(imageTube); //-- // CREATE BLOCK OBJECT //-- let blockObject = new BlockObject(imageBlock); // Create a player object player = new Player(); // Define keyboard keys and their states let keys = { right: { pressed: false }, left: { pressed: false } } // Animation function to continuously update and render the canvas function animate() { requestAnimationFrame(animate); c.clearRect(0, 0, canvas.width, canvas.height); // Draw platform, player, tube, and block object platform.draw(); player.update(); tube.draw(); //-- // DRAW BLOCK OBJECT //-- blockObject.draw(); //-- // COLLISIONS BETWEEN BLOCK OBJECT AND PLAYER //-- if ( player.position.y + player.height &lt;= blockObject.position.y &amp;&amp; player.position.y + player.height + player.velocity.y &gt;= blockObject.position.y &amp;&amp; player.position.x + player.width &gt;= blockObject.position.x &amp;&amp; player.position.x &lt;= blockObject.position.x + blockObject.width ) { player.velocity.y = 0; } // Control player horizontal movement if (keys.right.pressed &amp;&amp; player.position.x + player.width &lt;= canvas.width - 50) { player.velocity.x = 15; } else if (keys.left.pressed &amp;&amp; player.position.x &gt;= 50) { player.velocity.x = -15; } else { player.velocity.x = 0; } // Check for collision between player and platform if ( player.position.y + player.height &lt;= platform.position.y &amp;&amp; player.position.y + player.height + player.velocity.y &gt;= platform.position.y &amp;&amp; player.position.x + player.width &gt;= platform.position.x &amp;&amp; player.position.x &lt;= platform.position.x + platform.width ) { player.velocity.y = 0; } // Check for collision between player and tube if ( player.position.y + player.height &lt;= tube.position.y &amp;&amp; player.position.y + player.height + player.velocity.y &gt;= tube.position.y &amp;&amp; player.position.x + player.width &gt;= tube.position.x &amp;&amp; player.position.x &lt;= tube.position.x + tube.width ) { player.velocity.y = 0; player.position.y += 0.1; player.velocity.y = 0.0001; gravity = 0.2; } // Reset gravity and collision when not colliding with tube if ( player.position.y + player.height == tube.position.y + tube.height || player.position.y + player.height &lt;= tube.position.y || player.position.x + player.width &lt;= tube.position.x || player.position.x &gt;= tube.position.x + tube.width ) { gravity = 1.5; } // Handle collision between player and tube sides if ( player.position.x + player.width &lt;= tube.position.x &amp;&amp; player.position.x + player.width + player.velocity.x &gt;= tube.position.x &amp;&amp; player.position.y + player.height &gt;= tube.position.y &amp;&amp; player.position.y &lt;= tube.position.y + tube.height ) { player.velocity.x = 0; } if ( player.position.x &gt;= tube.position.x + tube.width &amp;&amp; player.position.x + player.velocity.x &lt;= tube.position.x + tube.width &amp;&amp; player.position.y + player.height &gt;= tube.position.y &amp;&amp; player.position.y &lt;= tube.position.y + tube.height ) { player.velocity.x = 0; } if ( player.position.x &gt;= tube.position.x &amp;&amp; player.position.x + player.velocity.x &lt;= tube.position.x &amp;&amp; player.position.y + player.height &gt;= tube.position.y &amp;&amp; player.position.y &lt;= tube.position.y + tube.height ) { player.velocity.x = 0; } if ( player.position.x + player.width &lt;= tube.position.x + tube.width &amp;&amp; player.position.x + player.width + player.velocity.x &gt;= tube.position.x + tube.width &amp;&amp; player.position.y + player.height &gt;= tube.position.y &amp;&amp; player.position.y &lt;= tube.position.y + tube.height ) { player.velocity.x = 0; } } // Start the animation loop animate(); // Add event listeners for key presses addEventListener(&#39;keydown&#39;, ({ keyCode }) =&gt; { switch (keyCode) { case 65: console.log(&#39;left&#39;); keys.left.pressed = true; break; case 83: console.log(&#39;down&#39;); break; case 68: console.log(&#39;right&#39;); keys.right.pressed = true; break; case 87: console.log(&#39;up&#39;); player.velocity.y -= 20; break; } }); // Add event listeners for key releases addEventListener(&#39;keyup&#39;, ({ keyCode }) =&gt; { switch (keyCode) { case 65: console.log(&#39;left&#39;); keys.left.pressed = false; break; case 83: console.log(&#39;down&#39;); break; case 68: console.log(&#39;right&#39;); keys.right.pressed = false; break; case 87: console.log(&#39;up&#39;); player.velocity.y = -20; break; } }) &lt;/script&gt; . Specific Hacks . Add side and bottom collisions between the player and block object | Add more blocks to create alternative pathways | . Open Ended Hack . Add a power-up when the player jumps on the block object | .",
            "url": "http://localhost:4100/teacher_portfolio/2023/08/04/mario_block_IPYNB_2_.html",
            "relUrl": "/2023/08/04/mario_block_IPYNB_2_.html",
            "date": " • Aug 4, 2023"
        }
        
    
  
    
        ,"post222": {
            "title": "JS Mario 3-Tube",
            "content": "Overview | Player | Platform | Tube | Block | Goomba | Background | . %%html &lt;style&gt; #canvas { margin: 0; border: 1px solid white; } &lt;/style&gt; &lt;canvas id=&quot;canvas&quot;&gt;&lt;/canvas&gt; &lt;script&gt; // Create empty canvas let canvas = document.getElementById(&#39;canvas&#39;); let c = canvas.getContext(&#39;2d&#39;); // Set the canvas dimensions canvas.width = 650; canvas.height = 400; // Define gravity value let gravity = 1.5; // Define the Player class class Player { constructor() { // Initial position and velocity of the player this.position = { x: 100, y: 200 }; this.velocity = { x: 0, y: 0 }; // Dimensions of the player this.width = 30; this.height = 30; } // Method to draw the player on the canvas draw() { c.fillStyle = &#39;red&#39;; c.fillRect(this.position.x, this.position.y, this.width, this.height); } // Method to update the player position and velocity update() { this.draw(); this.position.y += this.velocity.y; this.position.x += this.velocity.x; // Apply gravity if player is not at the bottom if (this.position.y + this.height + this.velocity.y &lt;= canvas.height) this.velocity.y += gravity; else this.velocity.y = 0; } } // Define the Platform class class Platform { constructor(image) { // Initial position of the platform this.position = { x: 0, y: 300 } this.image = image; this.width = 650; this.height = 100; } // Method to draw the platform on the canvas draw() { c.drawImage(this.image, this.position.x, this.position.y, this.width, this.height); } } //-- // NEW CODE - DEFINE TUBE CLASS //-- class Tube { constructor(image) { // Initial position of the tube this.position = { x: 500, y: 180 } this.image = image; this.width = 100; this.height = 120; } // Method to draw the tube on the canvas draw() { c.drawImage(this.image, this.position.x, this.position.y, this.width, this.height); } } // Load images let image = new Image(); //-- // NEW CODE - ADD TUBE IMAGE //-- let imageTube = new Image(); image.src = &#39;https://samayass.github.io/samayaCSA/images/platform.png&#39; imageTube.src = &#39;https://samayass.github.io/samayaCSA/images/tube.png&#39; // Create platform and tube objects let platform = new Platform(image); //-- // NEW CODE - CREATE TUBE OBJECT //-- let tube = new Tube(imageTube); // Create a player object player = new Player(); // Define keyboard keys and their states let keys = { right: { pressed: false }, left: { pressed: false } } // Animation function to continuously update and render the canvas function animate() { requestAnimationFrame(animate); c.clearRect(0, 0, canvas.width, canvas.height); // Draw the platform, player, and tube platform.draw(); player.update(); //-- // NEW CODE - DRAW TUBE //-- tube.draw(); // Control player horizontal movement if (keys.right.pressed &amp;&amp; player.position.x + player.width &lt;= canvas.width - 50) { player.velocity.x = 15; } else if (keys.left.pressed &amp;&amp; player.position.x &gt;= 50) { player.velocity.x = -15; } else { player.velocity.x = 0; } // Check for collision between player and platform if ( player.position.y + player.height &lt;= platform.position.y &amp;&amp; player.position.y + player.height + player.velocity.y &gt;= platform.position.y &amp;&amp; player.position.x + player.width &gt;= platform.position.x &amp;&amp; player.position.x &lt;= platform.position.x + platform.width ) { player.velocity.y = 0; } //-- // NEW CODE - TUBE COLLISIONS WITH PLAYER //-- // Check for collision between player and tube if ( player.position.y + player.height &lt;= tube.position.y &amp;&amp; player.position.y + player.height + player.velocity.y &gt;= tube.position.y &amp;&amp; player.position.x + player.width &gt;= tube.position.x &amp;&amp; player.position.x &lt;= tube.position.x + tube.width ) { player.velocity.y = 0; player.position.y += 0.1; player.velocity.y = 0.0001; gravity = 0.2; } // Reset gravity and collision when not colliding with tube if ( player.position.y + player.height == tube.position.y + tube.height || player.position.y + player.height &lt;= tube.position.y || player.position.x + player.width &lt;= tube.position.x || player.position.x &gt;= tube.position.x + tube.width ) { gravity = 1.5; } // Check for collision between player and tube from other sides if ( player.position.x + player.width &lt;= tube.position.x &amp;&amp; player.position.x + player.width + player.velocity.x &gt;= tube.position.x &amp;&amp; player.position.y + player.height &gt;= tube.position.y &amp;&amp; player.position.y &lt;= tube.position.y + tube.height ) { player.velocity.x = 0; } if ( player.position.x &gt;= tube.position.x + tube.width &amp;&amp; player.position.x + player.velocity.x &lt;= tube.position.x + tube.width &amp;&amp; player.position.y + player.height &gt;= tube.position.y &amp;&amp; player.position.y &lt;= tube.position.y + tube.height ) { player.velocity.x = 0; } if ( player.position.x &gt;= tube.position.x &amp;&amp; player.position.x + player.velocity.x &lt;= tube.position.x &amp;&amp; player.position.y + player.height &gt;= tube.position.y &amp;&amp; player.position.y &lt;= tube.position.y + tube.height ) { player.velocity.x = 0; } if ( player.position.x + player.width &lt;= tube.position.x + tube.width &amp;&amp; player.position.x + player.width + player.velocity.x &gt;= tube.position.x + tube.width &amp;&amp; player.position.y + player.height &gt;= tube.position.y &amp;&amp; player.position.y &lt;= tube.position.y + tube.height ) { player.velocity.x = 0; } } // Start the animation loop animate(); // Event listener for keydown events addEventListener(&#39;keydown&#39;, ({ keyCode }) =&gt; { switch (keyCode) { case 65: console.log(&#39;left&#39;); keys.left.pressed = true; break; case 83: console.log(&#39;down&#39;); break; case 68: console.log(&#39;right&#39;); keys.right.pressed = true; break; case 87: console.log(&#39;up&#39;); player.velocity.y -= 20; break; } }); // Event listener for keyup events addEventListener(&#39;keyup&#39;, ({ keyCode }) =&gt; { switch (keyCode) { case 65: console.log(&#39;left&#39;); keys.left.pressed = false; break; case 83: console.log(&#39;down&#39;); break; case 68: console.log(&#39;right&#39;); keys.right.pressed = false; break; case 87: console.log(&#39;up&#39;); player.velocity.y = -20; break; } }) &lt;/script&gt; . Specific Hack . Add flag poles to tubes (to win) | . Open Ended Hacks . Once the player jumps into the tube create a win animation | .",
            "url": "http://localhost:4100/teacher_portfolio/2023/08/03/mario_tube_IPYNB_2_.html",
            "relUrl": "/2023/08/03/mario_tube_IPYNB_2_.html",
            "date": " • Aug 3, 2023"
        }
        
    
  
    
        ,"post223": {
            "title": "JS Mario 2-Platform",
            "content": "Overview | Player | Platform | Tube | Block | Goomba | Background | . %%html &lt;style&gt; #canvas { margin: 0; border: 1px solid white; } &lt;/style&gt; &lt;canvas id=&quot;canvas&quot;&gt;&lt;/canvas&gt; &lt;script&gt; // Create empty canvas let canvas = document.getElementById(&#39;canvas&#39;); let c = canvas.getContext(&#39;2d&#39;); // Set the canvas dimensions canvas.width = 650; canvas.height = 400; // Define gravity value let gravity = 1.5; // Define the Player class class Player { constructor() { // Initial position and velocity of the player this.position = { x: 100, y: 200 }; this.velocity = { x: 0, y: 0 }; // Dimensions of the player this.width = 30; this.height = 30; } // Method to draw the player on the canvas draw() { c.fillStyle = &#39;red&#39;; c.fillRect(this.position.x, this.position.y, this.width, this.height); } // Method to update the players position and velocity update() { this.draw(); this.position.y += this.velocity.y; this.position.x += this.velocity.x; // Apply gravity if player is not at the bottom if (this.position.y + this.height + this.velocity.y &lt;= canvas.height) this.velocity.y += gravity; else this.velocity.y = 0; } } //-- // NEW CODE - PLATFORM //-- // Define the Platform class class Platform { constructor(image) { // Initial position of the platform this.position = { x: 0, y: 300 } this.image = image; this.width = 650; this.height = 100; } // Method to draw the platform on the canvas draw() { c.drawImage(this.image, this.position.x, this.position.y, this.width, this.height); } } //-- // NEW CODE - CREATE PLATFORM OBJECT WITH IMAGE //-- // Load platform image let image = new Image(); image.src = &#39;https://samayass.github.io/samayaCSA/images/platform.png&#39; // Create a platform object let platform = new Platform(image); // Create a player object player = new Player(); // Define keyboard keys and their states let keys = { right: { pressed: false }, left: { pressed: false } } // Animation function to continuously update and render the canvas function animate() { requestAnimationFrame(animate); c.clearRect(0, 0, canvas.width, canvas.height); //-- // NEW CODE - DRAW PLATFORM //-- platform.draw(); player.update(); // Control players horizontal movement if (keys.right.pressed &amp;&amp; player.position.x + player.width &lt;= canvas.width - 50) { player.velocity.x = 15; } else if (keys.left.pressed &amp;&amp; player.position.x &gt;= 50) { player.velocity.x = -15; } else { player.velocity.x = 0; } //-- // NEW CODE - PLATFORM COLLISIONS //-- // Check for collision between player and platform if ( player.position.y + player.height &lt;= platform.position.y &amp;&amp; player.position.y + player.height + player.velocity.y &gt;= platform.position.y &amp;&amp; player.position.x + player.width &gt;= platform.position.x &amp;&amp; player.position.x &lt;= platform.position.x + platform.width ) { player.velocity.y = 0; } } // Start the animation loop animate(); // Event listener for keydown events addEventListener(&#39;keydown&#39;, ({ keyCode }) =&gt; { switch (keyCode) { case 65: console.log(&#39;left&#39;); keys.left.pressed = true; break; case 83: console.log(&#39;down&#39;); break; case 68: console.log(&#39;right&#39;); keys.right.pressed = true; break; case 87: console.log(&#39;up&#39;); player.velocity.y -= 20; break; } }); // Event listener for keyup events addEventListener(&#39;keyup&#39;, ({ keyCode }) =&gt; { switch (keyCode) { case 65: console.log(&#39;left&#39;); keys.left.pressed = false; break; case 83: console.log(&#39;down&#39;); break; case 68: console.log(&#39;right&#39;); keys.right.pressed = false; break; case 87: console.log(&#39;up&#39;); player.velocity.y = -20; break; } }) &lt;/script&gt; . Specific Hack . Add creative “death pits” (gap between platforms) that restart game if fallen through | . Open Ended Hack . Experiment with different terrains (ice could cause sliding) | .",
            "url": "http://localhost:4100/teacher_portfolio/2023/08/02/mario_platform_IPYNB_2_.html",
            "relUrl": "/2023/08/02/mario_platform_IPYNB_2_.html",
            "date": " • Aug 2, 2023"
        }
        
    
  
    
        ,"post224": {
            "title": "JS Mario 1-Player",
            "content": "Overview | Player | Platform | Tube | Block | Goomba | Background | . %%html &lt;style&gt; #canvas { margin: 0; border: 1px solid white; } &lt;/style&gt; &lt;canvas id=&#39;canvas&#39;&gt;&lt;/canvas&gt; &lt;script&gt; // Create empty canvas let canvas = document.getElementById(&#39;canvas&#39;); let c = canvas.getContext(&#39;2d&#39;); // Set the canvas dimensions canvas.width = 650; canvas.height = 400; // Define gravity value let gravity = 1.5; // Define the Player class class Player { constructor() { // Initial position and velocity of the player this.position = { x: 100, y: 200 }; this.velocity = { x: 0, y: 0 }; // Dimensions of the player this.width = 30; this.height = 30; } // Method to draw the player on the canvas draw() { c.fillStyle = &#39;red&#39;; c.fillRect(this.position.x, this.position.y, this.width, this.height); } // Method to update the players position and velocity update() { this.draw(); this.position.y += this.velocity.y; this.position.x += this.velocity.x; if (this.position.y + this.height + this.velocity.y &lt;= canvas.height) this.velocity.y += gravity; else this.velocity.y = 0; } } // Create a player object player = new Player(); // Define keyboard keys and their states let keys = { right: { pressed: false }, left: { pressed: false } }; // Animation function to continuously update and render the canvas function animate() { requestAnimationFrame(animate); c.clearRect(0, 0, canvas.width, canvas.height); player.update(); if (keys.right.pressed &amp;&amp; player.position.x + player.width &lt;= canvas.width - 50) { player.velocity.x = 15; } else if (keys.left.pressed &amp;&amp; player.position.x &gt;= 50) { player.velocity.x = -15; } else { player.velocity.x = 0; } } animate(); // Event listener for keydown events addEventListener(&#39;keydown&#39;, ({ keyCode }) =&gt; { switch (keyCode) { case 65: console.log(&#39;left&#39;); keys.left.pressed = true; break; case 83: console.log(&#39;down&#39;); break; case 68: console.log(&#39;right&#39;); keys.right.pressed = true; break; case 87: console.log(&#39;up&#39;); player.velocity.y -= 20; break; } }); // Event listener for keyup events addEventListener(&#39;keyup&#39;, ({ keyCode }) =&gt; { switch (keyCode) { case 65: console.log(&#39;left&#39;); keys.left.pressed = false; break; case 83: console.log(&#39;down&#39;); break; case 68: console.log(&#39;right&#39;); keys.right.pressed = false; break; case 87: console.log(&#39;up&#39;); player.velocity.y = -20; break; } }); &lt;/script&gt; . Specific Hacks - Pick One . Try to stop the player from double jumping | Make the player rotate when it jumps (like in the game Geometry Dash) | . Open Ended Hack . Make the player a sprite animation | .",
            "url": "http://localhost:4100/teacher_portfolio/2023/08/01/mario_player_IPYNB_2_.html",
            "relUrl": "/2023/08/01/mario_player_IPYNB_2_.html",
            "date": " • Aug 1, 2023"
        }
        
    
  
    
        ,"post225": {
            "title": "JS Mario Game Overview",
            "content": "Overview | Player | Platform | Tube | Block | Goomba | Background | . Link to final game . Lesson Overview: Building a Mario-Inspired Platformer Game In this comprehensive game development lesson, we will guide you through the step-by-step process of creating a Mario-inspired platformer game. The lesson is broken down into various components, each focusing on a specific aspect of game design and implementation. By the end of this lesson, you will have a functional and engaging platformer game featuring a player character, platforms, blocks, tubes, background, and enemies (Goombas). Let’s dive into the components: . Component 1-Player: Setting Up the Canvas and Player Character . Learn how to set up the game canvas using HTML and JavaScript. | Create the player character class with attributes like position, velocity, and dimensions. | Implement basic player movement and physics, including gravity and jumping. | . Component 2-Platform: Designing Platforms and Collision Detection . Design and draw platforms on the canvas. | Implement collision detection between the player character and platforms. | Enable the player to walk and jump on platforms while accounting for gravity. | . Component 3-Tube: Transitioning with Tubes . Render tubes that allow the player to transition between different areas. | Add an element of exploration and hidden secrets through tube connections (changing levels). | . Component 4-Block: Interactive Blocks and Power-ups . Introduce interactive blocks. | Develop a mechanism for the player to interact with blocks through collisions. | . Component 5-Goomba: Implementing Enemies (Goombas) . Introduce enemy characters (Goombas) that move horizontally across platforms. | Define enemy behavior, including collision interactions with the player character. | Create a system to defeat enemies through collision and jumping. | . Component 6-Background: Creating a Dynamic Background . Craft a visually appealing background that complements the game’s theme. | Incorporate background elements that contribute to the game’s atmosphere and aesthetics with parallax scrolling for a realistic effect. | Ensure that the background remains consistent as the player character moves across the level. | . By the end of this lesson, you’ll have a well-rounded understanding of building a Mario-inspired platformer game from scratch. Each component will contribute to the overall gameplay experience, and you’ll have the foundation to further customize and extend your game based on your creative ideas. Happy game development! .",
            "url": "http://localhost:4100/teacher_portfolio/2023/07/30/mario_overview_IPYNB_2_.html",
            "relUrl": "/2023/07/30/mario_overview_IPYNB_2_.html",
            "date": " • Jul 30, 2023"
        }
        
    
  
    
        ,"post226": {
            "title": "Cloud Workspace Automation Plan",
            "content": "Desktop Usage . Primarily, most students have brought their own laptop to school (MacOs or Windows). To provide access to all students, the AWS/Kasm Cloud Desktop solution was created. These Fall 2023 numbers reflect the usage of cloud computers. For the year we have had 43 users, 34 remain active. Cloud computing requests have been both temporary and permanent. . Class/Section Periods Classroom(s) Number of Students Cloud Desctop . AP Computer Science A | 2 | A101 | 60 | 3 | . AP Computer Science Principles | 4 | A101,A153 | 150 | 23 | . AP Computer Science Software Engineering | 2 | A153 | 44 | 17 | . Cloud Computing Traditionally, classrooms have been serviced by on premise desktops; costs can be high, and the aging of machines can be rapid. The purpose of this project is to create workspaces, similar to laptops/desktops, but in the cloud. The students would use their District issued Chromebook to access these cloud workspaces, which would enable them to perform coding work in their Computer Science Pathway. The early cost number analysis has indicated that this could be much more affordable in a 5 year cycle, plus aging amd maintenace of equipment is now outsourced to the cloud provider. . Monthly Services/Breakdown . This shows total cost of about 2 machines per year. 10 months x $500 = $5000 . . Daily Usage . This shows ramp up ‘till mid August, cost savings from turning off machines 12-midnight to 6am on September 9th, and then adding other educational services on September 19th. Last day is always partial . . Usage Patterns . In existing Kasm configuration, single server, there is intent to have no more than 3 active users on a single server machine. . Graph show usage of 1 of 11 machines in network from Thu morning to Sat morning. . Peaks are during Thursday and Friday class time | There is a Thu night “homework” access, showing home access | Friday night to Saturday have no usage | . . Server / User Last Session . This first table show last sessions on kasm101. All during school hours. . Server Username Last Session . kasm101 | arnavnadar | 2023-09-29 14:31:38 | . kasm101 | zidaneahmed01 | 2023-09-29 11:20:10 | . kasm101 | adibricks | 2023-09-29 09:55:54 | . This table shows that only two sessions of the 11 machines and 34 users were established on Friday night. Showing that system could be optimized by using multi-server and establishing servers according to demand. . Server Username Last Session . kasm200 | noratheturtle | 2023-09-29 21:47:04 | . kasm104 | deanphillips24 | 2023-09-29 20:14:53 | . kasm202 | tanisha | 2023-09-29 14:45:40 | . kasm203 | ashwinv93 | 2023-09-29 14:34:09 | . kasm301 | jasonguan1012 | 2023-09-29 14:33:26 | . Automation Planning . This automation plan set out to create cloud-based AWS EC2’s and provision them with Kasm workspaces. After many experiments with manual configurations, a recipe for servers and tools was created. The recipe was converted to Terraform plans and Kasm/Docker containers to produce cloud-desktops to meet Computer Science tools needs. . The automation process involves setting up AWS EC2 instances with Ubuntu Linux images and provisioning them with Kasm workspaces. A Kasm workspace, built on docker containers, provides an operating system, desktop environment, and software development tools for the Computer Science classroom students. . Automating Cloud Setups The following illustration assumes a Terraform recipe being pushed to each AWS EC2, the EC2 instances are provisioned with Ubuntu Linux images. The names Kasm1.ncs.com, Kasm2.ncs.com, ... represent cloud machines connected to a Kasm registry, the registry is a means of providing containerized desktop software. Each image + Kasm containerized software provides an operating system, desktop environment, and software development tools. . Diagram illustrating AWS EC2 instances with Kasm workspaces . AWS EC2 Ubuntu Linux instances (1 to N) - |-&gt; Kasm1.ncs.com 5 logins/3 sessions &lt;-| | | |-&gt; Kasm2.ncs.com 5 logins/3 sessions &lt;-| Terraform--&gt;| |&lt;-&gt;Kasm (recipe) |-&gt; Kasm3.ncs.com 5 logins/3 sessions &lt;-| workspace | | |-&gt; Kasm4.ncs.com 5 logins/3 sessions &lt;-| | | |-&gt; KasmN.ncs.com 5 logins/3 sessions &lt;-| ^ - ^ ^ ^ AWS CLI Kasm Registry VPC HTTP . Terraform recipe The term recipe is used to describe all the elements needed to build the AWS EC2 Ubunto images. Terraform is the tool that drives the process, AWS CLI is tool chain that delivers the content. A Terraform recipe, as in a cooking recipe, has many steps, intermediate processes, and outcomes. These steps, processes, and outcomes are detailed and form the majority of the content in this document. . Kasm workspace In this context, the term workspace is used to describe the process of defining and delivering a computing environment that users can use to access a simulated desktop and development applications. Kasm registry is a distribution marketplace that works over HTTP. A workspace is defined by a Docker/DevOps engineer and is distributed as a Docker container, a workspace recipe, through the Kasm registry. A workpace adminstrator installs Kasm workspace on the Kasm instance. The installed Kasm workspace, after installation, can be run by a user to initiate a session on the AWS EC2 Ununtu Linux instance. . Scaling and Management To scale the number of students using the workspaces, each machine can have up to 5 user logins per instance (for free license), but based on resources consumed, it would adequately serve 3 active sessions. There are many additional Terraform, AWS and/or Kasm features to allocate resources, scale resources, and timeout inactive workspace sessions. Additionally, machines can be put to sleep, for instance 12am to 6am daily to save on cost;woken up based off of demand weekends and holidays. All the machines are on a AWS Virtual Private Cloud (VPC), in this type of an environment Amazon has provided many additional tools and process to manage usage and control costs. . Setup Requirements (Part 1 - System Setup) . System setup These are features requirements that get the Kasm system running on AWS EC2 Ubuntu. The following specifications have been captured by a proof of concept analysis. Terraform is the selected tool for building recipes, AWS is the infrastructure, and GitHub will be used for version control. . AWS EC2 Instances . AWS instances are spread over 3 regions. By default, AWS only allows 5 public IP addresses per region. Because of this limitation, this inital configuration uses 3 regions to obtain 11 machines to server 33 simultaneous users. This limitation would be overcome by refactoring to multi-server Kasm configuration. . To set up the first 5 AWS EC2 instances, we will use the following specifications: . Region Oregon (us-west-2) | Instance t2.medium (2 x CPU, 4 Gib RAM) | Architecture x86 | Use “Kasm” key pair in Oregon VPC | Storage 60 Gib gp3 general purpose SD | Allow SSH, HTTP, HTTPS | . To setup next 4 AWS EC2 instance, we will use the same configuration with the following modifications. . Region N. Virginia (us-east-1) | Instance t2.medium (2 x CPU, 4 Gib RAM), but identier is specific to VPC | Use “Kasm” key pair in N. Viginia VPC | . To setup final 2 AWS EC2 instance, we will use the same configuration with the following modifications. Note, cost is slightly more expensive using California. . Region N.California (us-west-1) | Instance t2.medium (2 x CPU, 4 Gib RAM), but identier is specific to VPC | Use “Kasm” key pair in N.California VPC | . Pool of Kasm workspaces . Additionally, we will install Kasm version 1.13.1 using the provided scripting commands. We will have a pool of servers kasm10&lt;N&gt;, kasm20&lt;N&gt;, kasm30&lt;N&gt;. The pool of servers required is based of off the number of Users divided by 5. Each kasm instance will only support 5 users, 3 simulaneous access. . To perform proof of concept we will build kasm workspace (kasm100 to kasm104, kasm200 to kasm2003, kasm300 to kasm301). The kasm101` machine is used to test the features Kasm workspaces with the automated installs. . # Reference: https://Kasmweb.com/docs/latest/install/single_server_install.html cd /tmp curl -O https://Kasm-static-content.s3.amazonaws.com/Kasm_release_1.13.1.421524.tar.gz tar -xf Kasm_release_1.13.1.421524.tar.gz # Automate prompts for EULA, Swap Partition,and Port sudo bash Kasm_release/install.sh --accept-eula --swap-size 8192 -L 8443 . Setup Requirements (Part 2 - Networking) . Networking To enable user-friendly internet access, we will allocate AWS EC2 elastic IPs and set up DNS subdomains using AWS Route 53. Nginx will be configured to reverse proxy requests to the appropriate Kasm workspaces. . Note, qw have enabled setup and verification of these steps in Terraform. . AWS EC2 elastic IPs, permanent ips . Each AWS EC2 Ubuntu Kasm instance requires a Virtual Private Cloud VPC elastic IP address. This will result in allocation of IP address that needs to be assigned to server. . Region: Oregon (us-west-2) | Name: Kasm1 | Allocation ID: i-0ef40a9caee208041 (Kasm1 ec2 instance ID) | . AWS Route 53, Kasm DNS names to elastic IPs plan . AWS Route 53 requires setting up a DNS subdomain for each Kasm server elastic ip address. This example shows description of keys and values used in Route 53. . Hosted Zone: nighthawkcodingsociety.com | Record Name: Kasm100.nighthawkcodingsociety.com | Type: A | Routing Policy: Simple | Alias: No | Value/Route traffic to: 35.165.133.250 | 300 | . | TTL (seconds): 300 | . Illustrate Domain Name Service (DNS) . |--&gt;| | Request, client asks | | &quot;kasm100.nighthawkcodingsociety.com&quot; | |--&gt;| | Bidirectional map | |--&gt;| | Response, DNS resolve | | &quot;100.21.190.187&quot; | |&lt;--| . Illustrate using dig to request . $ dig Kasm100.nighthawkcodingsociety.com ; &lt;&lt;&gt;&gt; DiG 9.10.6 &lt;&lt;&gt;&gt; Kasm100.nighthawkcodingsociety.com ;; global options: +cmd ;; Got answer: ;; -&gt;&gt;HEADER&lt;&lt;- opcode: QUERY, status: NOERROR, id: 9961 ;; flags: qr rd ra; QUERY: 1, ANSWER: 1, AUTHORITY: 0, ADDITIONAL: 1 ;; OPT PSEUDOSECTION: ; EDNS: version: 0, flags:; udp: 512 ;; QUESTION SECTION: ;Kasm100.nighthawkcodingsociety.com. IN A ;; ANSWER SECTION: Kasm100.nighthawkcodingsociety.com. 300 IN A 35.165.133.250 ;; Query time: 123 msec ;; SERVER: 2603:8001:4f00:4079::1#53(2603:8001:4f00:4079::1) ;; WHEN: Sat Sep 30 19:15:13 PDT 2023 ;; MSG SIZE rcvd: 79 . Route 53 Sample from AWS . |Record name|Type|Routing policy|Differentiator|Alias|Value/Route traffic to|TTL| |———–|—-|————–|————–|—–|———————-|—| |kasm100.nighthawkcodingsociety.com|A|Simple|-|No|35.165.133.250|300| |kasm201.nighthawkcodingsociety.com|A|Simple|-|No|18.211.176.115|300| |kasm300.nighthawkcodingsociety.com|A|Simple|-|No|54.193.89.2|300| . Terrform Route 53 reference . Terraform aws_route53_record reference . Nginx configuration to reverse proxy Kasm DNS name to port . Nginx needs to be configured to route Kasm1.nighthawkcodingsociety.com request to port 8443. . FYI, port can be setup with -L option during automated Kasm install. | . Nginx needs to be installed on EC2 instance. . sudo apt install nginx . Illustrate Nginx to Kasm workspace . Nginx Request: Reverse Proxy Pass: Kasm Workspace &quot;kasm1.ncs.com&quot; -&gt; https://localhost:8443 Endpoint: ^ | ^ | | | | requsts | | |&lt;-&gt;| proxy | responses |&lt;-&gt;| . Nginx Request: Represents the initial request from the client to access the Kasm workspace using the domain name “kasm1.nighthawkcodingsociety.com.”, abbreviated as “kasm1.ncs.com” in illustration . Reverse Proxy Pass: Indicates the role of Nginx as a reverse proxy, forwarding the request to the appropriate Kasm workspace endpoint. . Kasm Workspace Endpoint: Represents the endpoint of the Kasm workspace (application), accessible through HTTPS on port 8443. . Certbot certificates for DNS name to HTTPs . Certbot providesfree certificates to application endpoints that serve their content over HTTPS . Install Certbot . sudo snap install core; sudo snap refresh core sudo snap install --classic certbot sudo ln -s /snap/bin/certbot /usr/bin/certbot . Assign certificate to nginx hosts. . sudo certbot --nginx --non-interactive --agree-tos -m Kasm1.nighthawkcodingsociety.com . Setup Requirements (Part 3 - Kasm workspaces) . Kasm workspaces will be defined and delivered as Docker containers through the Kasm registry. For Terraform automation the primary requirement is to add a registry to the default configuration that point to the Del Norte HS registry … . GitHub Registry location: https://nighthawkcoders.github.io/kasm_registry/1.0/ . Automation Terraform and AWS CLI . To manage the automation, we will install Terraform and AWS CLI. The AWS CLI will be configured with AWS credentials, and we will verify access to AWS services using sts, s3, and s3api commands. . Tool installation and verification. This is a preparation step prior to using Terraform. Below are commands to configure Amazon Web Service Command Line Interface awscli, verify configuration sts, and test the Simple Storage Service s3 and s3api. . Terraform is a tool that lets you build, change, and version cloud resources safely and efficiently. | AWS CLI (Amazon Web Service Command Line Interface) is a tool to manage your AWS services. | . The steps below are simple instructions to install, setup, and verify these automation tools on your desktop. . # # Automation key tools $ brew install terraform $ brew install awscli # Credentials setup (~/.aws/credentials) $ aws configure # prompts with keys. user adds values values # Find User Access Keys in AWS IAM, answer as follows &lt;&lt;dialog #begin AWS Access Key ID [****************PQML]: AWS Secret Access Key [****************Smcy]: Default region name [us-west-2]: Default output format [json]: dialog #end # Credentials verification with Security Token Service (sts) $ aws sts get-caller-identity # Notice return of IAM user &lt;&lt;stsoutput #begin UserId: ****************2B6D7 Account: ******879144, Arn: arn:aws:iam::******879144:user/j***21 stsoutput #ends # Verify access to view a service, using s3 - $ aws s3 ls # This is a list of s3 buckets, notice terra-auto directory &lt;&lt;s3output #begin 2022-09-28 13:38:43 aws-cloudtrail-logs-542024879144-84383535 2022-08-09 07:00:27 elasticbeanstalk-us-west-1-542024879144 2023-05-25 12:47:32 loginzeen 2022-05-19 01:52:48 prehistoric-pals 2023-07-31 14:14:25 terra-auto s3output #ends # Verify and play with commands to write to a service, using s3api $ aws s3api list-objects --bucket terra-auto $ aws s3api put-object --bucket terra-auto --key myfile.py $ aws s3api list-objects --bucket terra-auto . Terraform Architecture . This breakdown shows the hierarchical relationship between the variables, main module and its sub-modules. The main module calls the EC2, Kasm, Networking, Security, etc. to set up key portions of system. . Terraform Module Breakdown for EC2 Instances and Kasm Workspaces . #0. Variables |&gt; Centralizes Configuration Settings |&gt; Defines Input Variables Used Across Sub-Modules #1. Main (Root Module) |&gt; Creates AWS EC2 Instances |&gt; Configures inbound traffic, sets up elastic ips |&gt; Installs Kasm and network tools on EC2 #2. Network.tf |&gt; Sets Up DNS in Route 53 #3. Nginx |&gt; Configure nginx template through file provision |&gt; Moves nginx.conf file into appropriate system location |&gt; Depends on main.tf and network.tf #4. Future, Security and Workspace setups |&gt; Defines Kasm roles, Policies, and Security Groups |&gt; Input Variables: permissions, security_groups, etc. |&gt; Round-robin user population across instances (Terraform?) #5. Reboot |&gt; Checks that resources have been created, depends on nginx.tf |&gt; Performs reboot, validates services are activated . Terraform Test plan . 1st Stage - EC2 Instances Only: . Create a folder for your test (e.g., stage1). . Place your variable.tf and main.tf files in the folder. | Run terraform init to initialize the project. | Run terraform plan to see what resources will be created. | If the plan looks good, run terraform apply to create the EC2 instances. | Manually check the AWS Management Console to ensure that the EC2 instances are created with the correct tags and elastice IPs. | Terraform provides the terraform destroy command, which you can use to destroy all the resources created by a specific Terraform configuration. Run this before moving on to next test. | Check that created EC2’s and Elastic IPs are gone. | . 2nd Stage - EC2 Instances and Route 53 Records: . Create a new folder for this test (e.g., stage2). . Run terraform init in this folder. | Run terraform plan to see what resources will be created. | If the plan looks good, run terraform apply to create the Route 53 records. | Manually check the AWS Management Console to ensure that the Route 53 records are created correctly. | Run terraform destroy | Check that created EC2’s and Elastic IPs are gone. | . 3rd Stage - EC2 Instances, Route 53 Records, and Nginx Configurations: . Run final test from version control folder. . Run terraform init in this folder. | Run terraform plan to see what resources will be created. | If the plan looks good, run terraform apply to create the Nginx configurations. | Manually check the AWS Management Console to ensure that the Nginx configurations are created in correct location. | Test access of each EC2 instance from internet (eg. kasm2.nighthawkcodingsociety.com) | Test access to Kasm workspaces by logging in. | Leave these running and start testing Kasm registry and workspaces if all is well. | . Version Control of Terraform files . At the very start of the project, we would like to use version control for all the Terraform elements. Long term we would expect to have a frontend/backend system to manage and monitor Kasm workspaces. . A repository has been created, expectaion is to manage main.tf, ec2.tf, etc. | The repository was built from a Python/Flask backend server template. It will be used for wide variety of Classroom devOps. Terraform special requirements and directory setup is required. | The awscli entry has been added to the requirements.txt | . Terraform CLI installation reference . Nighthawkcoders DevOps GitHub Nighthawkcoders DevOps GitHub . Terraform file provision . Mostly, configurations identified in the Kasm process are key-value pairs or installation of tools. Nginx looks a bit different. . The Networking file for Nginx requires Kasm1 to be changed, this is the only difference in configuration per system (Kasm1, Kasm2, …); simply changing the server_name subdomain. This could require the use of the Terraform file provisioner feature. Listed are the template file and steps required for the change. . server { server_name Kasm1.nighthawkcodingsociety.com; listen 80; location / { # The following configurations must be configured when proxying to Kasm Workspaces # WebSocket Support proxy_set_header Upgrade $http_upgrade; proxy_set_header Connection &quot;upgrade&quot;; # Host and X headers proxy_set_header Host $host; proxy_set_header X-Real-IP $remote_addr; proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for; proxy_set_header X-Forwarded-Proto $scheme; # Connectivity Options proxy_http_version 1.1; proxy_read_timeout 1800s; proxy_send_timeout 1800s; proxy_connect_timeout 1800s; proxy_buffering off; # Allow large requests to support file uploads to sessions client_max_body_size 10M; # Endpoint of service proxy_pass https://localhost:8443; } } . Nginx configuration file is placed in /etc/nginx/sites-available and then is symbolically linked to /etc/nginx/sites-enabled. . nginx filename: Kasm1 | file path: /etc/nginx/sites-available/ | . Activate Kasm1 reverse proxy DNS request to Application Endpoint . rm -f /etc/nginx/sites-enabled/Kasm1 ln -s /etc/nginx/sites-available/Kasm1 /etc/nginx/sites-enabled sudo systemctl restart nginx . Security and Workspace Assignment: . Kasm images are setup to support each student id and temporary password. Users of Kasm workspaces are not required to go through AWS identity and management system, they interact with Kasm workspace using Kasm system URL. . Diagram illustrating Kasm Workspaces Login Page . Browser URL https://Kasm1.nighthawkcodingsociety.com/ Login Kasm | You user ID | Workspaces The Container Streaming Platform | You user Password | . Student login management . Kasm Developer API will be used to perform a round-robin assignment of Users to Kasm systems (EC2 instances). A previously developed user database will be queried to extract a JSON file which will contain unique id (ghid), username, etc. This JSON data will be sent to a Kasm system using Kasm developer API. At the end of user creation process, an email to the user with system and login credentials. At first login, student will be required to reset password. . Kasm API Base Url: https:///api/public/ | Database/JSON example create user: POST /api/public/create_user { &quot;api_key&quot;:&quot;&quot;, &quot;api_key_secret&quot;: &quot;&quot;, &quot;target_user&quot;: { &quot;username&quot; : &quot;uniquq_ghid&quot;, &quot;first_name&quot; : &quot;John&quot;, &quot;last_name&quot; : &quot;M&quot;, &quot;locked&quot;: false, &quot;disabled&quot;: false, &quot;organization&quot;: &quot;Del Norte HS&quot;, &quot;phone&quot;: &quot;123-456-7890&quot;, &quot;password&quot;: &quot;TempPassword$&quot; } } . | . Student database . Teacher has a student SQLite database running under Python with GitHub pages frontend. A Python backend is preferred, over Java, as AWS CLI has a Python BOTO module. Conversion from SQLite to RDS is trivial after RDS setup is established. . This database with a little modification to SQL schema and Python code, could support maintaining a list of users, APIs and calling Kasm developer APIs. The Python database currently supports standard CRUD operations that seem to map well to Kasm developer API. The frontend is managed under GitHub pages, which complies with Themes and their SASS CSS definitions. . APIs will be added to support requests and responses requirements of the Kasm API. This database will maintain the relationship of users to machines, produce reports. Starter requirements for student database follow … . Report the list of users and Kasm relationship Illustration of Users Page | . UserID Name Kasm System Section Period toby Thomas Edison true Kasm1 CSSE 2 niko Nicholas Tesla false desktop CSA 3 hop Grace Hopper true Kasm2 CSP 1 . Limit the number of students to a Kasm system 2 users maximum per period (P1-P5) | 5 total users | . | . System Users P1 P2 P3 P4 P5 Note Kasm1 5 1 1 1 1 1 ideal config Kasm2 5 2 2 1 0 0 unbalanced, but OK Kasm3 5 0 0 0 3 2 not allowed Kasm4 2 0 0 2 0 0 machine with availability . Default password and reset to temporary password options . | Build backend database. Start with SQLite database, move to RDS as project matures. To support database work, code starters have been added to Nighthawk coders devOps repo for User table within SQLite database. . | . References . Kasm Developer API . Teacher Users Page . Nighthawkcoders DevOps GitHub . Kasm workspace Architecture: . Kasm uses Docker to build workspaces and a GitHub registry to store and manage workspaces. Kasm workspaces start from a GitHub template, the template repository is infused with GitHub Pages actions. These actions build a user-friendly display of the constructed workspaces in the registry. Here are some key links to start on the journey of building workspaces within the registry. The SDLC consist of building Docker and support files, publishing to the registry, installing through the Kasm adminstrative interface on the EC2 instance, and then loading/testing on the Kasm desktop. . Kasm workspace video https://www.youtube.com/watch?v=BGP69_f1wq0 | Kasm Registries video https://www.youtube.com/watch?v=Y6ggn9McIwI | Be aware that Kasm system, Docker Workpaces must match versions (1.13.1) | Default Kasm registry link: https://registry.Kasmweb.com/ | . Kasm requires a Registory for workspaces: . A Del Norte HS Computer Science Registry in Github has been created. Multiple locations and references in the repository are important to understand the different aspects of the registry. The Del Norte HS Computer Science Registry and its Kasm workspaces need to be developed to meet the needs of CSSE, CSP, and CSA classes. However, this work can be done asynchronously to the Terraform automation plan. . Registry link: https://nighthawkcoders.github.io/Kasm_registry/. This link is placed into adminstrative workspaces on the Kasm1 to KasmN machines. Deployment can occur directly from a GitHub commit straight into the registered workspace, across many machines at once. Branching or Forking should be employed to avoid accidental deployments. But, the feature are in the system for success. As a strategy, a forked repo/registry could be used to manage test, then a pull request after testing could trigger production repo/registry update. | Registry Config file. This is setup correctly for this projects purposes, but you should be aware that it is required for GitHub Pages. If registry is changed to nighthawkcodingsocity.com subdomain, then this file will need to be revised. | GitHub for Registry. This contains the README for valuable information on setup and development. A Kasm workspace/docker developer would spend time here customizing code to support user requirements. Version Control for Docker workspaces is built into the Kasm registry and requirements should be learned from their materials and experience. | GitHub Pages for Registry. This is a pretty view of the workspaces in the registry. The Kasm workspace registry is professionally designed, it has versions built into the URLs. By cursory review you could maintain 1.0 and 1.1 workspaces at the same time, to allow soft transitions to updates. GitHub Task collaboration was placed into each workspace allow adminstrators and users to add issues directly into GitHub. Tracking changes, and managing containerized desktops is built into the Kasm tools. | . Kasm workspaces Docker layout . This below Docker file follows the Kasm format with the required head and tail sections; all customizations must be done in between. This shows setup starters for some of our required tools. . Chrome is added in this script. This was not included in bash script but is essential to GitHub Pages code-build-test-debug development lifecycle. | VSCode is shown below. In this example it is sourcing a directory installed by the Kasm image. Customizing our Kasm image can make installation process much easier. | Anaconda is show below. In this example you can see similarities in installation as compared to the script above. Of course, we should switch our implementation to Miniconda to save space and avoid large GUI application which could impact our memory footprint. As with VSCode, we could fully manage a version of this package within our Kasm image to minimize Docker complexities. | . FROM Kasmweb/core-ubuntu-focal:1.13.1 USER root ENV HOME /home/Kasm-default-profile ENV STARTUPDIR /dockerstartup ENV INST_SCRIPTS $STARTUPDIR/install ENV CONDA_DIR /opt/conda ENV PATH $CONDA_DIR/bin:$PATH WORKDIR $HOME ######### Customize Container Here ########### # Install Google Chrome COPY ./src/ubuntu/install/chrome $INST_SCRIPTS/chrome/ RUN bash $INST_SCRIPTS/chrome/install_chrome.sh &amp;&amp; rm -rf $INST_SCRIPTS/chrome/ # Install VSCode COPY ./src/ubuntu/install/vs_code $INST_SCRIPTS/vs_code/ RUN bash $INST_SCRIPTS/vs_code/install_vs_code.sh &amp;&amp; rm -rf $INST_SCRIPTS/vs_code/ # Install Anaconda RUN cd /tmp/ &amp;&amp; wget https://repo.anaconda.com/archive/Anaconda3-2023.07-1-Linux-x86_64.sh &amp;&amp; bash Anaconda3-20*-Linux-x86_64.sh -b -p /opt/anaconda3 &amp;&amp; rm -r /tmp/Anaconda3-20*-Linux-x86_64.sh &amp;&amp; echo ‘source /opt/anaconda3/bin/activate’ &gt;&gt; /etc/bash.bashrc &amp;&amp; bash -c “source /opt/anaconda3/bin/activate &amp;&amp; conda update -n root conda &amp;&amp; conda update --all &amp;&amp; conda clean --all” &amp;&amp; /opt/anaconda3/bin/conda config --set ssl_verify /etc/ssl/certs/ca-certificates.crt &amp;&amp; /opt/anaconda3/bin/conda install pip &amp;&amp; mkdir -p /home/Kasm-user/.pip &amp;&amp; chown -R 1000:1000 /opt/anaconda3 /home/Kasm-default-profile/.conda/ &amp;&amp; conda install -y jupyter ######### End Customizations ########### RUN chown 1000:0 $HOME RUN $STARTUPDIR/set_user_permission.sh $HOME ENV HOME /home/Kasm-user WORKDIR $HOME RUN mkdir -p $HOME &amp;&amp; chown -R 1000:0 $HOME USER 1000 (edi . Kasm workspaces have tool requirements . The provided shell script has been used in the classroom to install and verify tools on the user’s desktop. This is a good requirements guide for tools required for our Kasm workspace. The classroom workspace in the registry needs to support all tools for the code-build-test-debug development lifecycle. . Key thing to test in Kasm workspace… . make on teacher or student repositories. The runs bundle exec jekyll serve which helps validate ruby tool chain. This is the priority use case for August 16th. | github commit and sync be sure git operations are working and environment is or can be set. git config --global user.email &lt;your email&gt; git config --global user.name &lt;your github id&gt; . | sudo apt, if this can’t be used then tools need to be comprehensive. | docker-compose up this would be running Docker inside of Docker, but is in procedure to test locally prior to deployment. This can be tested with flask_portfolio or spring_portfolio repositories | code flask_portfolio run python web project. Specifically running python and doing pip installs and making sure VSCode python interpreter and shell interpreter are synchronized. | code spring_portfolio running a web java project. Make sure we can get java version to support this task. | workspace preservation login / logout, shutdown workspace, evaluate persistence. | The key concept in building a Docker workspace is understanding order and depenendies. That is illustrated in setup order within the script below… . Install VSCode. The install_vscode() function illustrates download requirements and installation depencies. | Install Ruby. The install_ruby() script is convention for Ubuntu command line installation. | Install MiniConda The install_miniconda() shows this requires fetch and execute, it is not shown as working with apt. | Developer Tools The install_dev_tools() script highlights things that need to be on machine to support local build environments. Some of these are missing on our Kasm test environments. | Conda Environment The setup_conda_environment() shows that ~/.bashrc needs to be updated to assist our development. For instance, if GEM lines are not in conda environment bundle install will overwrite system files at each user execution. | Dev Tools in Conda The install_dev_tools_in_conda() shows tools that should be setup after conda environment is activated. This avoids issues or conflict with system. | . #!/bin/bash # Function to check if a line exists in the .bashrc file line_exists_in_bashrc() { grep -Fxq “$1&quot; ~/.bashrc } # Function to add lines to the .bashrc file if they don’t exist add_to_bashrc() { if ! line_exists_in_bashrc “$1”; then echo “$1&quot; &gt;&gt; ~/.bashrc fi } # Function to install Visual Studio Code install_vscode() { if ! command -v code &amp;&gt;/dev/null; then echo “Installing Visual Studio Code...” # Add VSCode repository and key wget -qO- https://packages.microsoft.com/keys/microsoft.asc | gpg --dearmor &gt; packages.microsoft.gpg sudo mv packages.microsoft.gpg /etc/apt/trusted.gpg.d/microsoft.gpg sudo sh -c ‘echo “deb [arch=amd64] https://packages.microsoft.com/repos/vscode stable main” &gt; /etc/apt/sources.list.d/vscode.list’ # Update package index and install VSCode sudo apt update sudo apt install -y code echo “Visual Studio Code installed successfully.” else echo “Visual Studio Code is already installed.” fi } # Function to install ruby install_ruby() { # Check if ruby command is available if ! command -v ruby &amp;&gt;/dev/null; then echo “Installing Ruby...” sudo apt update sudo apt install ruby-full build-essential zlib1g-dev else echo “Ruby is already installed.” fi } # Function to install MiniConda and Build environment install_miniconda() { if ! command -v conda &amp;&gt;/dev/null; then echo “Installing MiniConda...” # Download MiniConda installer wget -q https://repo.anaconda.com/miniconda/Miniconda3-latest-Linux-x86_64.sh -O ~/miniconda.sh # Install MiniConda bash ~/miniconda.sh -b -p $HOME/miniconda rm ~/miniconda.sh else echo “MiniConda is already installed.” fi } # Common Developer tools for system install_dev_tools() { echo “Installing Developer Tools...” # Common GNU tools sudo apt install build-essential sudo apt install make # Install Jekyll Development tools gem install jekyll bundler } # The environment_activate function effectively sets up the required environment configurations by adding lines to the .bashrc file only if they don’t already exist. This ensures that the modifications to the .bashrc file are performed only once and avoids duplication. setup_conda_environment() { add_to_bashrc `# local environment requirement` add_to_bashrc ‘export PATH=“$HOME/miniconda/bin:$PATH”’ add_to_bashrc ‘export GEM_HOME=“$HOME/gems”’ add_to_bashrc ‘export PATH=“$HOME/gems/bin:$PATH”’ conda init bash } # Specific Developer tools for GitHub Pages and Jupyter Notebooks install_dev_tools_in_conda() { echo “Activate conda” source ~/.bashrc # Install Jupyter Development tools and nbconvert echo &quot;Installing Jupyter Notebooks and nbconvert...&quot; conda install -n base -y jupyter nbconvert } # Main script install_vscode install_ruby install_miniconda install_dev_tools setup_conda_environment install_dev_tools_in_conda . TBD Plans . Key items to add to this plan. . Web Filtering Policy . Kasm Workspaces built in Web Filtering configuration. Choose web content to black and whitelist based on URLs and Domain categorization: https://kasmweb.com/docs/latest/guide/web_filtering.html. . User Database Security and Feature . Add security to Web Database. . User owner and Admin are only roles with rights to edit user identity | Perform more detail analytics on Users, both around Kasm and around GitHub | . Review AWS Security: . Adding a section on security to describe roles on AWS. . IAM Roles: Define the IAM roles and policies required for different user types, such as administrators, teacher. developers, and students. Ensure that each role has the least privilege necessary for their tasks. . | Best Practices: AWS security best practices related to IAM, access keys, password policies, … . | Currently blocking AWS student group from us-east-1, us-west-1, us-west-2. These regions will be reserved to teachers and those that adminstrate machines. . | . JSON that shows Allow Ohio, Deny all other regions. This was basis used to block student roles. . { &quot;Version&quot;: &quot;2012-10-17&quot;, &quot;Statement&quot;: [ { &quot;Effect&quot;: &quot;Deny&quot;, &quot;NotAction&quot;: &quot;ec2:*&quot;, &quot;Resource&quot;: &quot;*&quot;, &quot;Condition&quot;: { &quot;StringNotEqualsIfExists&quot;: { &quot;aws:RequestedRegion&quot;: &quot;us-east-2&quot; } } } ] } . Terraform Life Cycle: . Include version control, test plan, and deployment plan for Terraform scripts: . Version Control: Explain how you will manage your Terraform code using version control systems like Git/GitHub, and how you will udates, forks, and merging. . | Test Plan: Describe your testing strategy, including unit tests, integration tests, and end-to-end tests for the Terraform scripts. Specify how you will validate the correctness of the infrastructure. . | Deployment Plan: Outline the steps for deploying the Terraform scripts to the test environment first, and how you will promote them to the production environment after successful testing. Make sure test environments are temporary and torn down quickly after validation save costs. . | . Investage and move to Kasm multi-server . Bypass limitations on AWS elastic IP and user larger servers. . Move user home directories to S3 Buckets | Start migration and development on new solutions: https://kasmweb.com/docs/latest/install/multi_server_install.html | Enter into per user licensing with Kasm | .",
            "url": "http://localhost:4100/teacher_portfolio/devops/cloud_workspace",
            "relUrl": "/devops/cloud_workspace",
            "date": " • Jul 29, 2023"
        }
        
    
  
    
        ,"post227": {
            "title": "Machine_learning_ipynb_2_",
            "content": "#Lesson: Exploring Materials Project Data and Predicting Material Properties ##Step 1: Importing Libraries In this lesson, we’ll explore materials project data and perform various data analysis tasks using Python. First, we need to import the necessary libraries to work with data, visualize it, and perform machine learning. . from mp_api.client import MPRester import pandas as pd from pymatgen.core import Composition import datetime from math import inf from sklearn.model_selection import train_test_split from sklearn.model_selection import cross_val_predict, cross_validate, KFold from sklearn import linear_model from sklearn.metrics import mean_squared_error, mean_absolute_error import seaborn as sns #from sklearn.model_selection import train_test_split #from sklearn.model_selection import cross_val_predict, cross_validate, KFold #from sklearn.metrics import r2_score #from sklearn.cluster import KMeans #from sklearn.discriminant_analysis import LinearDiscriminantAnalysis, QuadraticDiscriminantAnalysis #from sklearn.linear_model import LogisticRegression #from sklearn.cluster import DBSCAN . ##Step 2: Accessing Materials Project Data The Materials Project is a database containing materials properties data. We’ll use the MPRester library to access materials project data related to ABO3 compounds. We’ll fetch properties like material_id, formula_pretty, nsites, band_gap, formation_energy_per_atom, theoretical, and energy_above_hull for all ABO3 compounds. . mpr = MPRester(api_key=&quot;PT7C2S6MEfO67wSwPtB3KlVvUu7ZI166&quot;) . ABO3 = mpr.summary.search(formula=&quot;**O3&quot;, fields=[&quot;material_id&quot;, &quot;formula_pretty&quot;, &quot;nsites&quot;, &quot;band_gap&quot;, &quot;formation_energy_per_atom&quot;, &quot;theoretical&quot;, &quot;energy_above_hull&quot;]) . Retrieving SummaryDoc documents: 0%| | 0/2544 [00:00&lt;?, ?it/s] . ABO3_dicts = [i.dict() for i in ABO3] . mp_database = pd.DataFrame(data=ABO3_dicts) . Step 3: Data Manipulation and Cleaning . Now that we have the materials project data in a DataFrame named ‘mp_database,’ let’s clean and manipulate the data to make it more suitable for analysis. . mp_database = mp_database.drop(&quot;fields_not_requested&quot;, axis=1) . len(mp_database) . 2544 . grouped = mp_database.groupby(&#39;formula_pretty&#39;).size() . grouped.mean() . 1.912781954887218 . mp_database.nunique() . nsites 18 formula_pretty 1330 material_id 2544 formation_energy_per_atom 2544 energy_above_hull 2199 band_gap 1297 theoretical 2 dtype: int64 . mp_database . nsites formula_pretty material_id formation_energy_per_atom energy_above_hull band_gap theoretical . 0 20 | NaNbO3 | mp-4681 | -2.833432 | 0.012851 | 2.3684 | False | . 1 10 | MnZnO3 | mp-754318 | -1.814413 | 0.005794 | 1.3225 | True | . 2 20 | MnAlO3 | mp-1368992 | -2.573144 | 0.161167 | 0.5506 | True | . 3 5 | BaBiO3 | mp-545783 | -2.222888 | 0.021211 | 0.0000 | False | . 4 20 | MnTlO3 | mp-770870 | -1.505971 | 0.053737 | 0.0000 | True | . ... ... | ... | ... | ... | ... | ... | ... | . 2539 5 | BaCdO3 | mp-1183292 | -1.645883 | 0.202881 | 0.0000 | True | . 2540 10 | LaMnO3 | mp-1205375 | -2.968812 | 0.161878 | 0.0000 | False | . 2541 5 | TlSiO3 | mp-1187529 | -1.862867 | 0.534038 | 0.0000 | True | . 2542 5 | GdBeO3 | mp-1184468 | -2.874174 | 0.315310 | 0.0000 | True | . 2543 5 | InSiO3 | mp-1184751 | -2.064795 | 0.561967 | 0.0000 | True | . 2544 rows × 7 columns . mp_database[&#39;theoretical&#39;].value_counts()[False] . 836 . mp_database[&#39;formation_energy_per_atom_ev_mol&#39;] = mp_database[&#39;formation_energy_per_atom&#39;] * 96491.5666 . mp_database . nsites formula_pretty material_id formation_energy_per_atom energy_above_hull band_gap theoretical formation_energy_per_atom_ev_mol . 0 20 | NaNbO3 | mp-4681 | -2.833432 | 0.012851 | 2.3684 | False | -273402.322598 | . 1 10 | MnZnO3 | mp-754318 | -1.814413 | 0.005794 | 1.3225 | True | -175075.572015 | . 2 20 | MnAlO3 | mp-1368992 | -2.573144 | 0.161167 | 0.5506 | True | -248286.682798 | . 3 5 | BaBiO3 | mp-545783 | -2.222888 | 0.021211 | 0.0000 | False | -214489.986143 | . 4 20 | MnTlO3 | mp-770870 | -1.505971 | 0.053737 | 0.0000 | True | -145313.457382 | . ... ... | ... | ... | ... | ... | ... | ... | ... | . 2539 5 | BaCdO3 | mp-1183292 | -1.645883 | 0.202881 | 0.0000 | True | -158813.786775 | . 2540 10 | LaMnO3 | mp-1205375 | -2.968812 | 0.161878 | 0.0000 | False | -286465.330840 | . 2541 5 | TlSiO3 | mp-1187529 | -1.862867 | 0.534038 | 0.0000 | True | -179750.985874 | . 2542 5 | GdBeO3 | mp-1184468 | -2.874174 | 0.315310 | 0.0000 | True | -277333.565860 | . 2543 5 | InSiO3 | mp-1184751 | -2.064795 | 0.561967 | 0.0000 | True | -199235.298396 | . 2544 rows × 8 columns . ##Step 4: Classifying Materials Let’s classify the materials based on their stability and band gap properties. We’ll define two functions, ‘stability_category’ and ‘bandgap_category,’ to perform the classification. . # Assuming you already have a pandas DataFrame named &#39;mp_database&#39; with columns &#39;energy_above_hull&#39; and &#39;band_gap&#39; # Function to classify materials based on energy_above_hull def stability_category(energy): if energy &gt; 0.03: return &#39;unstable&#39; else: return &#39;potentially_stable&#39; # Function to classify materials based on band_gap def bandgap_category(band_gap): if band_gap == 0: return &#39;metal&#39; elif 0 &lt; band_gap &lt;= 1: return &#39;small_bandgap&#39; else: return &#39;large_bandgap&#39; # Apply the classification functions to the DataFrame mp_database[&#39;stability&#39;] = mp_database[&#39;energy_above_hull&#39;].apply(stability_category) mp_database[&#39;bandgap_type&#39;] = mp_database[&#39;band_gap&#39;].apply(bandgap_category) # Create a pivot table to get the desired table structure new_table = pd.pivot_table(mp_database, index=&#39;stability&#39;, columns=&#39;bandgap_type&#39;, aggfunc=&#39;size&#39;, fill_value=0) # Reorder the columns to match the desired order new_table = new_table[[&#39;metal&#39;, &#39;small_bandgap&#39;, &#39;large_bandgap&#39;]] print(new_table) . bandgap_type metal small_bandgap large_bandgap stability potentially_stable 197 103 525 unstable 1042 212 465 . mp_database . nsites formula_pretty material_id formation_energy_per_atom energy_above_hull band_gap theoretical formation_energy_per_atom_ev_mol stability bandgap_type . 0 20 | NaNbO3 | mp-4681 | -2.833432 | 0.012851 | 2.3684 | False | -273402.322598 | potentially_stable | large_bandgap | . 1 10 | MnZnO3 | mp-754318 | -1.814413 | 0.005794 | 1.3225 | True | -175075.572015 | potentially_stable | large_bandgap | . 2 20 | MnAlO3 | mp-1368992 | -2.573144 | 0.161167 | 0.5506 | True | -248286.682798 | unstable | small_bandgap | . 3 5 | BaBiO3 | mp-545783 | -2.222888 | 0.021211 | 0.0000 | False | -214489.986143 | potentially_stable | metal | . 4 20 | MnTlO3 | mp-770870 | -1.505971 | 0.053737 | 0.0000 | True | -145313.457382 | unstable | metal | . ... ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | . 2539 5 | BaCdO3 | mp-1183292 | -1.645883 | 0.202881 | 0.0000 | True | -158813.786775 | unstable | metal | . 2540 10 | LaMnO3 | mp-1205375 | -2.968812 | 0.161878 | 0.0000 | False | -286465.330840 | unstable | metal | . 2541 5 | TlSiO3 | mp-1187529 | -1.862867 | 0.534038 | 0.0000 | True | -179750.985874 | unstable | metal | . 2542 5 | GdBeO3 | mp-1184468 | -2.874174 | 0.315310 | 0.0000 | True | -277333.565860 | unstable | metal | . 2543 5 | InSiO3 | mp-1184751 | -2.064795 | 0.561967 | 0.0000 | True | -199235.298396 | unstable | metal | . 2544 rows × 10 columns . ##Step 5: Data Visualization - Formation Energy Distribution Visualizing data is crucial for understanding its distribution and characteristics. Let’s create a histogram to visualize the distribution of formation energies per atom. . import pandas as pd import matplotlib.pyplot as plt # Assuming you have a pandas DataFrame named &#39;mp_database&#39; with the &#39;formation_energies_per_atom&#39; column # Calculate the average and standard deviation average_energy = mp_database[&#39;formation_energy_per_atom&#39;].mean() std_deviation = mp_database[&#39;formation_energy_per_atom&#39;].std() # Plot the distribution of the column plt.figure(figsize=(10, 6)) plt.hist(mp_database[&#39;formation_energy_per_atom&#39;], bins=30, edgecolor=&#39;black&#39;, alpha=0.7) # Add labels and title to the plot plt.xlabel(&#39;Formation Energies per Atom&#39;) plt.ylabel(&#39;Frequency&#39;) plt.title(&#39;Distribution of Formation Energies per Atom&#39;) # Annotate the plot with average and standard deviation plt.axvline(average_energy, color=&#39;red&#39;, linestyle=&#39;dashed&#39;, linewidth=2, label=&#39;Average&#39;) plt.axvline(average_energy + std_deviation, color=&#39;orange&#39;, linestyle=&#39;dashed&#39;, linewidth=2, label=&#39;Standard Deviation&#39;) plt.axvline(average_energy - std_deviation, color=&#39;orange&#39;, linestyle=&#39;dashed&#39;, linewidth=2) plt.annotate(f&#39;Average: {average_energy:.2f}&#39;, xy=(average_energy, 300), xytext=(average_energy + 0.5, 400), arrowprops=dict(facecolor=&#39;black&#39;, shrink=0.05), fontsize=12) plt.annotate(f&#39;Standard Deviation: {std_deviation:.2f}&#39;, xy=(average_energy + std_deviation, 250), xytext=(average_energy + std_deviation + 1, 350), arrowprops=dict(facecolor=&#39;black&#39;, shrink=0.05), fontsize=12) # Show legend plt.legend() # Display the plot plt.show() . . ##Step 6: Filtering and Preparing Data for Analysis Next, we’ll filter the data to keep only the most relevant materials. We’ll sort the data based on formation energy and remove duplicate formulas to keep only the materials with the lowest formation energy for each formula. . orig_data = pd.read_csv(&quot;data2022.csv&quot;, na_filter=False) . len(orig_data) . 681 . orig_data . Unnamed: 0 task_id formula formation_energy_per_atom e_above_hull band_gap has_bandstructure . 0 297 | mp-570140 | AuBr | -0.125181 | 0.011579 | 1.9716 | True | . 1 573 | mp-1206190 | ZnI6 | 0.387945 | 0.652470 | 0.1076 | False | . 2 579 | mp-1208424 | TeBr4 | -0.390060 | 0.000000 | 2.5202 | False | . 3 738 | mp-570480 | TcBr4 | -0.404404 | 0.000000 | 0.6025 | True | . 4 880 | mp-1064459 | PBr | 1.067789 | 1.327882 | 0.0000 | False | . ... ... | ... | ... | ... | ... | ... | ... | . 676 118973 | mp-974371 | Rh3Br | 0.670866 | 0.820678 | 0.0000 | True | . 677 121600 | mp-867231 | TbI3 | -1.382737 | 0.000000 | 2.0937 | True | . 678 121602 | mp-867247 | TbBr3 | -1.860767 | 0.000000 | 2.8570 | True | . 679 121619 | mp-867355 | TeBr2 | -0.186842 | 0.140200 | 0.6529 | True | . 680 121834 | mp-867893 | SmI3 | -1.399012 | 0.000000 | 2.0145 | True | . 681 rows × 7 columns . import pandas as pd # Assuming you have a pandas DataFrame named &#39;orig_data&#39; with &#39;formation_energy_per_atom&#39; and &#39;formula&#39; columns # Sort the DataFrame by &#39;formation_energy_per_atom&#39; in ascending order orig_data.sort_values(by=&#39;formation_energy_per_atom&#39;, ascending=True, inplace=True) # Drop duplicates based on the &#39;formula&#39; column and keep the first occurrence (smallest formation_energy_per_atom) filtered_data = orig_data.drop_duplicates(subset=&#39;formula&#39;, keep=&#39;first&#39;) # Display the resulting DataFrame filtered_data . Unnamed: 0 task_id formula formation_energy_per_atom e_above_hull band_gap has_bandstructure . 191 29313 | mp-27456 | BaBr2 | -2.227832 | 0.000000 | 4.3731 | True | . 475 80856 | mp-567744 | SrBr2 | -2.156160 | 0.000000 | 4.4697 | True | . 219 35022 | mp-1071541 | YbBr2 | -2.109686 | 0.000000 | 4.3169 | False | . 414 70294 | mp-27972 | AcBr3 | -2.098107 | 0.000000 | 4.1045 | True | . 304 51723 | mp-22888 | CaBr2 | -2.052632 | 0.000000 | 4.5304 | True | . ... ... | ... | ... | ... | ... | ... | ... | . 268 44109 | mp-1184756 | IrI | 0.949140 | 1.047085 | 0.0000 | False | . 601 105675 | mp-1197830 | CI | 0.950707 | 0.950707 | 3.4057 | False | . 541 93486 | mp-975905 | Mo3I | 0.977325 | 1.122018 | 0.0000 | True | . 517 88638 | mp-1209830 | PBr2 | 1.261139 | 1.607930 | 1.7322 | False | . 587 102482 | mp-974474 | ReBr | 1.306459 | 1.507749 | 0.0000 | True | . 392 rows × 7 columns . filtered_data = filtered_data[filtered_data[&quot;formation_energy_per_atom&quot;] &lt; 0] . filtered_data . Unnamed: 0 task_id formula formation_energy_per_atom e_above_hull band_gap has_bandstructure . 191 29313 | mp-27456 | BaBr2 | -2.227832 | 0.000000 | 4.3731 | True | . 475 80856 | mp-567744 | SrBr2 | -2.156160 | 0.000000 | 4.4697 | True | . 219 35022 | mp-1071541 | YbBr2 | -2.109686 | 0.000000 | 4.3169 | False | . 414 70294 | mp-27972 | AcBr3 | -2.098107 | 0.000000 | 4.1045 | True | . 304 51723 | mp-22888 | CaBr2 | -2.052632 | 0.000000 | 4.5304 | True | . ... ... | ... | ... | ... | ... | ... | ... | . 222 35973 | mp-862773 | TeI2 | -0.036698 | 0.070018 | 0.7144 | False | . 481 82174 | mp-1185549 | Mg149Br | -0.022094 | 0.000000 | 0.0021 | False | . 600 105624 | mp-1185590 | Mg149I | -0.017586 | 0.000000 | 0.0025 | False | . 512 87707 | mp-1214775 | AuBr2 | -0.007624 | 0.143039 | 0.0000 | False | . 544 94095 | mp-1179985 | PBr | -0.007386 | 0.252708 | 1.3954 | False | . 338 rows × 7 columns . Step 7: Calculating Composition-Averaged Properties . We will now calculate the composition-averaged atomic radius for each material in ‘filtered_data’ using the element properties data available in ‘element_data’ DataFrame. . element_data = pd.read_csv(&quot;element_properties.csv&quot;, index_col=0) . element_data . AtomicRadius AtomicVolume AtomicWeight BoilingT CovalentRadius Density ElectronAffinity Electronegativity FirstIonizationEnergy HeatCapacityMass SecondIonizationEnergy . H 0.25 | 18618.051940 | 1.007940 | 20.13 | 31 | 0.0899 | 72.8 | 2.20 | 13.598443 | 14.304 | NaN | . He NaN | 37236.035560 | 4.002602 | 4.07 | 28 | 0.1785 | 0.0 | NaN | 24.587387 | 5.130 | 54.41776 | . Li 1.45 | 21.544058 | 6.941000 | 1615.00 | 128 | 535.0000 | 59.6 | 0.98 | 5.391719 | 3.582 | 75.64000 | . Be 1.05 | 8.098176 | 9.012182 | 2743.00 | 96 | 1848.0000 | 0.0 | 1.57 | 9.322700 | 1.825 | 18.21114 | . B 0.85 | 7.297767 | 10.811000 | 4273.00 | 84 | 2460.0000 | 26.7 | 2.04 | 8.298020 | 1.026 | 25.15480 | . ... ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | . Pa 1.80 | 24.961161 | 231.035860 | 4273.00 | 200 | 15370.0000 | NaN | 1.50 | 5.890000 | NaN | NaN | . U 1.75 | 20.748847 | 238.028910 | 4200.00 | 196 | 19050.0000 | NaN | 1.38 | 6.194100 | 0.116 | 10.60000 | . Np 1.75 | 19.244839 | 237.000000 | 4273.00 | 190 | 20450.0000 | NaN | 1.36 | 6.265700 | NaN | NaN | . Pu 1.75 | 20.447164 | 244.000000 | 3503.00 | 187 | 19816.0000 | NaN | 1.28 | 6.026000 | NaN | 11.20000 | . Am 1.75 | 29.518685 | 243.000000 | 2284.00 | 180 | 13670.0000 | NaN | 1.30 | 5.973800 | NaN | NaN | . 95 rows × 11 columns . type(element_data[&quot;AtomicRadius&quot;][1]) . numpy.float64 . comp = Composition(&#39;Al2O3&#39;) . print(comp.elements) . [Element Al, Element O] . print(comp.to_data_dict[&#39;unit_cell_composition&#39;]) . defaultdict(&lt;class &#39;float&#39;&gt;, {&#39;Al&#39;: 2.0, &#39;O&#39;: 3.0}) . import numpy as np count = 0 column_nans = {} for column in element_data.columns: for element in element_data[column]: if np.isnan(element): count += 1 column_nans[column] = count count = 0 . column_nans . {&#39;AtomicRadius&#39;: 7, &#39;AtomicVolume&#39;: 2, &#39;AtomicWeight&#39;: 0, &#39;BoilingT&#39;: 2, &#39;CovalentRadius&#39;: 0, &#39;Density&#39;: 2, &#39;ElectronAffinity&#39;: 9, &#39;Electronegativity&#39;: 4, &#39;FirstIonizationEnergy&#39;: 1, &#39;HeatCapacityMass&#39;: 10, &#39;SecondIonizationEnergy&#39;: 12} . # Set of commands to compute the mean value for each column, replace the NaNs by the mean and output the updated data set for i in element_data.columns: col_mean = element_data[i].mean(skipna=True) element_data[i] = element_data[i].fillna(col_mean) element_data . AtomicRadius AtomicVolume AtomicWeight BoilingT CovalentRadius Density ElectronAffinity Electronegativity FirstIonizationEnergy HeatCapacityMass SecondIonizationEnergy . H 0.250000 | 18618.051940 | 1.007940 | 20.13 | 31 | 0.0899 | 72.800000 | 2.200000 | 13.598443 | 14.304000 | 18.947504 | . He 1.500682 | 37236.035560 | 4.002602 | 4.07 | 28 | 0.1785 | 0.000000 | 1.747033 | 24.587387 | 5.130000 | 54.417760 | . Li 1.450000 | 21.544058 | 6.941000 | 1615.00 | 128 | 535.0000 | 59.600000 | 0.980000 | 5.391719 | 3.582000 | 75.640000 | . Be 1.050000 | 8.098176 | 9.012182 | 2743.00 | 96 | 1848.0000 | 0.000000 | 1.570000 | 9.322700 | 1.825000 | 18.211140 | . B 0.850000 | 7.297767 | 10.811000 | 4273.00 | 84 | 2460.0000 | 26.700000 | 2.040000 | 8.298020 | 1.026000 | 25.154800 | . ... ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | . Pa 1.800000 | 24.961161 | 231.035860 | 4273.00 | 200 | 15370.0000 | 76.162209 | 1.500000 | 5.890000 | 0.635447 | 18.947504 | . U 1.750000 | 20.748847 | 238.028910 | 4200.00 | 196 | 19050.0000 | 76.162209 | 1.380000 | 6.194100 | 0.116000 | 10.600000 | . Np 1.750000 | 19.244839 | 237.000000 | 4273.00 | 190 | 20450.0000 | 76.162209 | 1.360000 | 6.265700 | 0.635447 | 18.947504 | . Pu 1.750000 | 20.447164 | 244.000000 | 3503.00 | 187 | 19816.0000 | 76.162209 | 1.280000 | 6.026000 | 0.635447 | 11.200000 | . Am 1.750000 | 29.518685 | 243.000000 | 2284.00 | 180 | 13670.0000 | 76.162209 | 1.300000 | 5.973800 | 0.635447 | 18.947504 | . 95 rows × 11 columns . # Set of commands to compute and output the composition-averaged Atomic Radius for all materials begin_time = datetime.datetime.now() atomic_radius = pd.DataFrame() filtered_data[&quot;composition_dict&quot;] = [Composition(i).as_dict() for i in filtered_data.formula] atomic_radius[&quot;formula&quot;] = filtered_data.formula atomic_radius[&quot;atomic_radius_avg&quot;] = [np.average([element_data.loc[[el]][&quot;AtomicRadius&quot;][0] for el in comp], weights=[comp[el] for el in comp]) for comp in filtered_data.composition_dict] print(datetime.datetime.now() - begin_time) atomic_radius . A value is trying to be set on a copy of a slice from a DataFrame. Try using .loc[row_indexer,col_indexer] = value instead See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy 0:00:00.211715 . formula atomic_radius_avg . 191 BaBr2 | 1.483333 | . 475 SrBr2 | 1.433333 | . 219 YbBr2 | 1.350000 | . 414 AcBr3 | 1.350000 | . 304 CaBr2 | 1.366667 | . ... ... | ... | . 222 TeI2 | 1.400000 | . 481 Mg149Br | 1.497667 | . 600 Mg149I | 1.499333 | . 512 AuBr2 | 1.216667 | . 544 PBr | 1.075000 | . 338 rows × 2 columns . atomic_radius_2 = pd.DataFrame() atomic_radius_2[&quot;formula&quot;] = filtered_data.formula atomic_radius_2[&quot;composition_dict&quot;] = filtered_data.composition_dict composition_averaged_list = [] for composition in atomic_radius_2[&quot;composition_dict&quot;]: total_atoms_in_formula = 0 element_radius_weighted = 0 for element in composition: total_atoms_in_formula += composition[element] element_radius_weighted += element_data.loc[element][&quot;AtomicRadius&quot;] * composition[element] average = element_radius_weighted / total_atoms_in_formula composition_averaged_list.append(average) atomic_radius_2[&quot;atomic_radius_avg&quot;] = composition_averaged_list . atomic_radius_2 . formula composition_dict atomic_radius_avg . 191 BaBr2 | {&#39;Ba&#39;: 1.0, &#39;Br&#39;: 2.0} | 1.483333 | . 475 SrBr2 | {&#39;Sr&#39;: 1.0, &#39;Br&#39;: 2.0} | 1.433333 | . 219 YbBr2 | {&#39;Yb&#39;: 1.0, &#39;Br&#39;: 2.0} | 1.350000 | . 414 AcBr3 | {&#39;Ac&#39;: 1.0, &#39;Br&#39;: 3.0} | 1.350000 | . 304 CaBr2 | {&#39;Ca&#39;: 1.0, &#39;Br&#39;: 2.0} | 1.366667 | . ... ... | ... | ... | . 222 TeI2 | {&#39;Te&#39;: 1.0, &#39;I&#39;: 2.0} | 1.400000 | . 481 Mg149Br | {&#39;Mg&#39;: 149.0, &#39;Br&#39;: 1.0} | 1.497667 | . 600 Mg149I | {&#39;Mg&#39;: 149.0, &#39;I&#39;: 1.0} | 1.499333 | . 512 AuBr2 | {&#39;Au&#39;: 1.0, &#39;Br&#39;: 2.0} | 1.216667 | . 544 PBr | {&#39;P&#39;: 1.0, &#39;Br&#39;: 1.0} | 1.075000 | . 338 rows × 3 columns . average_properties = pd.DataFrame() average_properties[&quot;formula&quot;] = filtered_data.formula average_properties[&quot;composition_dict&quot;] = filtered_data.composition_dict for prop in element_data.columns: composition_averaged_list = [] for composition in average_properties[&quot;composition_dict&quot;]: total_atoms_in_formula = 0 element_property_weighted = 0 for element in composition: total_atoms_in_formula += composition[element] element_property_weighted += element_data.loc[element][prop] * composition[element] average = element_property_weighted / total_atoms_in_formula composition_averaged_list.append(average) average_properties[prop] = composition_averaged_list . average_properties . formula composition_dict AtomicRadius AtomicVolume AtomicWeight BoilingT CovalentRadius Density ElectronAffinity Electronegativity FirstIonizationEnergy HeatCapacityMass SecondIonizationEnergy . 191 BaBr2 | {&#39;Ba&#39;: 1.0, &#39;Br&#39;: 2.0} | 1.483333 | 50.008311 | 99.045000 | 935.666667 | 151.666667 | 3250.000000 | 221.050000 | 2.270000 | 9.613088 | 0.384000 | 17.728610 | . 475 SrBr2 | {&#39;Sr&#39;: 1.0, &#39;Br&#39;: 2.0} | 1.433333 | 46.792927 | 82.476000 | 773.000000 | 145.000000 | 2956.666667 | 218.076667 | 2.290000 | 9.774150 | 0.418000 | 18.070700 | . 219 YbBr2 | {&#39;Yb&#39;: 1.0, &#39;Br&#39;: 2.0} | 1.350000 | 42.931774 | 110.954000 | 711.000000 | 142.333333 | 4270.000000 | 233.066667 | 2.393333 | 9.960587 | 0.367667 | 18.452667 | . 414 AcBr3 | {&#39;Ac&#39;: 1.0, &#39;Br&#39;: 3.0} | 1.350000 | 41.254141 | 116.678000 | 1117.250000 | 143.750000 | 4857.500000 | 262.490552 | 2.495000 | 10.152850 | 0.385500 | 19.130750 | . 304 CaBr2 | {&#39;Ca&#39;: 1.0, &#39;Br&#39;: 2.0} | 1.366667 | 42.664279 | 66.628667 | 807.000000 | 138.666667 | 2596.666667 | 217.190000 | 2.306667 | 9.913587 | 0.531667 | 18.351240 | . ... ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | . 222 TeI2 | {&#39;Te&#39;: 1.0, &#39;I&#39;: 2.0} | 1.400000 | 39.758135 | 127.136313 | 725.200000 | 138.666667 | 5373.333333 | 260.200000 | 2.473333 | 9.970707 | 0.210000 | 18.954200 | . 481 Mg149Br | {&#39;Mg&#39;: 149.0, &#39;Br&#39;: 1.0} | 1.497667 | 23.350997 | 24.675660 | 1356.126667 | 140.860000 | 1747.213333 | 2.164000 | 1.321000 | 7.674019 | 1.019340 | 15.078975 | . 600 Mg149I | {&#39;Mg&#39;: 149.0, &#39;I&#39;: 1.0} | 1.499333 | 23.351870 | 24.988996 | 1356.962000 | 140.986667 | 1759.346667 | 1.968000 | 1.319000 | 7.664935 | 1.017607 | 15.062577 | . 512 AuBr2 | {&#39;Au&#39;: 1.0, &#39;Br&#39;: 2.0} | 1.216667 | 34.000905 | 118.924856 | 1264.333333 | 125.333333 | 8513.333333 | 290.666667 | 2.820000 | 10.951043 | 0.359000 | 21.127333 | . 544 PBr | {&#39;P&#39;: 1.0, &#39;Br&#39;: 1.0} | 1.075000 | 35.370974 | 55.438881 | 442.750000 | 113.500000 | 2471.500000 | 198.300000 | 2.575000 | 11.150245 | 0.621500 | 20.680250 | . 338 rows × 13 columns . max_properties = pd.DataFrame() max_properties[&quot;formula&quot;] = filtered_data.formula max_properties[&quot;composition_dict&quot;] = filtered_data.composition_dict for prop in element_data.columns: composition_max_list = [] max_property = 0 for composition in max_properties[&quot;composition_dict&quot;]: for element in composition: if element_data.loc[element][prop] &gt; max_property: max_property = element_data.loc[element][prop] composition_max_list.append(max_property) max_properties[prop] = composition_max_list . max_properties . formula composition_dict AtomicRadius AtomicVolume AtomicWeight BoilingT CovalentRadius Density ElectronAffinity Electronegativity FirstIonizationEnergy HeatCapacityMass SecondIonizationEnergy . 191 BaBr2 | {&#39;Ba&#39;: 1.0, &#39;Br&#39;: 2.0} | 2.15 | 64.969282 | 137.327 | 2143.0 | 215.0 | 3510.0 | 324.6 | 2.96 | 11.813800 | 0.474 | 21.591 | . 475 SrBr2 | {&#39;Sr&#39;: 1.0, &#39;Br&#39;: 2.0} | 2.15 | 64.969282 | 137.327 | 2143.0 | 215.0 | 3510.0 | 324.6 | 2.96 | 11.813800 | 0.474 | 21.591 | . 219 YbBr2 | {&#39;Yb&#39;: 1.0, &#39;Br&#39;: 2.0} | 2.15 | 64.969282 | 173.054 | 2143.0 | 215.0 | 6570.0 | 324.6 | 2.96 | 11.813800 | 0.474 | 21.591 | . 414 AcBr3 | {&#39;Ac&#39;: 1.0, &#39;Br&#39;: 3.0} | 2.15 | 64.969282 | 227.000 | 3473.0 | 215.0 | 10070.0 | 324.6 | 2.96 | 11.813800 | 0.474 | 21.591 | . 304 CaBr2 | {&#39;Ca&#39;: 1.0, &#39;Br&#39;: 2.0} | 2.15 | 64.969282 | 227.000 | 3473.0 | 215.0 | 10070.0 | 324.6 | 2.96 | 11.813800 | 0.647 | 21.591 | . ... ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | . 222 TeI2 | {&#39;Te&#39;: 1.0, &#39;I&#39;: 2.0} | 2.60 | 18618.051940 | 244.000 | 5869.0 | 244.0 | 22590.0 | 324.6 | 2.96 | 13.598443 | 14.304 | 75.640 | . 481 Mg149Br | {&#39;Mg&#39;: 149.0, &#39;Br&#39;: 1.0} | 2.60 | 18618.051940 | 244.000 | 5869.0 | 244.0 | 22590.0 | 324.6 | 2.96 | 13.598443 | 14.304 | 75.640 | . 600 Mg149I | {&#39;Mg&#39;: 149.0, &#39;I&#39;: 1.0} | 2.60 | 18618.051940 | 244.000 | 5869.0 | 244.0 | 22590.0 | 324.6 | 2.96 | 13.598443 | 14.304 | 75.640 | . 512 AuBr2 | {&#39;Au&#39;: 1.0, &#39;Br&#39;: 2.0} | 2.60 | 18618.051940 | 244.000 | 5869.0 | 244.0 | 22590.0 | 324.6 | 2.96 | 13.598443 | 14.304 | 75.640 | . 544 PBr | {&#39;P&#39;: 1.0, &#39;Br&#39;: 1.0} | 2.60 | 18618.051940 | 244.000 | 5869.0 | 244.0 | 22590.0 | 324.6 | 2.96 | 13.598443 | 14.304 | 75.640 | . 338 rows × 13 columns . min_properties = pd.DataFrame() min_properties[&quot;formula&quot;] = filtered_data.formula min_properties[&quot;composition_dict&quot;] = filtered_data.composition_dict for prop in element_data.columns: composition_min_list = [] min_property = inf for composition in min_properties[&quot;composition_dict&quot;]: for element in composition: if element_data.loc[element][prop] &lt; min_property: min_property = element_data.loc[element][prop] composition_min_list.append(min_property) min_properties[prop] = composition_min_list . min_properties . formula composition_dict AtomicRadius AtomicVolume AtomicWeight BoilingT CovalentRadius Density ElectronAffinity Electronegativity FirstIonizationEnergy HeatCapacityMass SecondIonizationEnergy . 191 BaBr2 | {&#39;Ba&#39;: 1.0, &#39;Br&#39;: 2.0} | 1.15 | 42.527825 | 79.90400 | 332.00 | 120.0 | 3120.0000 | 13.95 | 0.89 | 5.211664 | 0.204 | 10.00383 | . 475 SrBr2 | {&#39;Sr&#39;: 1.0, &#39;Br&#39;: 2.0} | 1.15 | 42.527825 | 79.90400 | 332.00 | 120.0 | 2630.0000 | 5.03 | 0.89 | 5.211664 | 0.204 | 10.00383 | . 219 YbBr2 | {&#39;Yb&#39;: 1.0, &#39;Br&#39;: 2.0} | 1.15 | 42.527825 | 79.90400 | 332.00 | 120.0 | 2630.0000 | 5.03 | 0.89 | 5.211664 | 0.155 | 10.00383 | . 414 AcBr3 | {&#39;Ac&#39;: 1.0, &#39;Br&#39;: 3.0} | 1.15 | 37.433086 | 79.90400 | 332.00 | 120.0 | 2630.0000 | 5.03 | 0.89 | 5.170000 | 0.120 | 10.00383 | . 304 CaBr2 | {&#39;Ca&#39;: 1.0, &#39;Br&#39;: 2.0} | 1.15 | 37.433086 | 40.07800 | 332.00 | 120.0 | 1550.0000 | 2.37 | 0.89 | 5.170000 | 0.120 | 10.00383 | . ... ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | ... | . 222 TeI2 | {&#39;Te&#39;: 1.0, &#39;I&#39;: 2.0} | 0.25 | 7.297767 | 1.00794 | 20.13 | 31.0 | 0.0899 | 0.00 | 0.79 | 3.893905 | 0.116 | 10.00383 | . 481 Mg149Br | {&#39;Mg&#39;: 149.0, &#39;Br&#39;: 1.0} | 0.25 | 7.297767 | 1.00794 | 20.13 | 31.0 | 0.0899 | 0.00 | 0.79 | 3.893905 | 0.116 | 10.00383 | . 600 Mg149I | {&#39;Mg&#39;: 149.0, &#39;I&#39;: 1.0} | 0.25 | 7.297767 | 1.00794 | 20.13 | 31.0 | 0.0899 | 0.00 | 0.79 | 3.893905 | 0.116 | 10.00383 | . 512 AuBr2 | {&#39;Au&#39;: 1.0, &#39;Br&#39;: 2.0} | 0.25 | 7.297767 | 1.00794 | 20.13 | 31.0 | 0.0899 | 0.00 | 0.79 | 3.893905 | 0.116 | 10.00383 | . 544 PBr | {&#39;P&#39;: 1.0, &#39;Br&#39;: 1.0} | 0.25 | 7.297767 | 1.00794 | 20.13 | 31.0 | 0.0899 | 0.00 | 0.79 | 3.893905 | 0.116 | 10.00383 | . 338 rows × 13 columns . average_properties = average_properties.drop(&quot;composition_dict&quot;, axis=1) average_properties = average_properties.drop(&quot;formula&quot;, axis=1) max_properties = max_properties.drop(&quot;composition_dict&quot;, axis=1) max_properties = max_properties.drop(&quot;formula&quot;, axis=1) min_properties = min_properties.drop(&quot;composition_dict&quot;, axis=1) min_properties = min_properties.drop(&quot;formula&quot;, axis=1) . Step 8: Combining Property Data . Next, we’ll combine the composition-averaged, maximum, and minimum property DataFrames (‘average_properties’, ‘max_properties’, and ‘min_properties’) into a single design matrix DataFrame named ‘design_matrix’. . design_matrix = pd.concat([average_properties, max_properties, min_properties], axis=1) . Step 9: Splitting Data for Machine Learning . To train and evaluate our machine learning model, we need to split the data into training and testing sets. . targets = filtered_data[[&quot;band_gap&quot;, &quot;formation_energy_per_atom&quot;]] targets.index = filtered_data.formula . targets . band_gap formation_energy_per_atom . formula . BaBr2 4.3731 | -2.227832 | . SrBr2 4.4697 | -2.156160 | . YbBr2 4.3169 | -2.109686 | . AcBr3 4.1045 | -2.098107 | . CaBr2 4.5304 | -2.052632 | . ... ... | ... | . TeI2 0.7144 | -0.036698 | . Mg149Br 0.0021 | -0.022094 | . Mg149I 0.0025 | -0.017586 | . AuBr2 0.0000 | -0.007624 | . PBr 1.3954 | -0.007386 | . 338 rows × 2 columns . train_X, test_X, train_y, test_y = train_test_split(design_matrix, targets, test_size=0.10, random_state=42) . Step 10: Data Normalization . Normalization is an essential preprocessing step in machine learning. We’ll normalize the training data by subtracting the mean and dividing by the standard deviation. . # Set of commands to obtain the mean and standard deviation of train_X train_mean = train_X.mean() train_std = train_X.std() # Set of commands to obtain the new normalized train and test data sets norm_train_X = (train_X - train_mean) / (train_std) norm_test_X = (test_X - train_mean) / (train_std) . Step 11: Cross-Validated Linear Regression . We’ll perform linear regression using scikit-learn and apply cross-validation to evaluate the model’s performance. . # Set of commands to run the 5-fold cross-validation on the training set, pick the best-scoring model, and apply it to the test set kfold = KFold(n_splits=5, shuffle=True, random_state=42) mlr = linear_model.LinearRegression() mlr.fit(train_X, train_y[&quot;formation_energy_per_atom&quot;]) cross_val = cross_validate(mlr, train_X, train_y[&quot;formation_energy_per_atom&quot;], cv=kfold, return_estimator=True) cv_mlr = cross_val[&quot;estimator&quot;][np.argmax(cross_val[&quot;test_score&quot;])] cv_mlr.fit(test_X, test_y[&quot;formation_energy_per_atom&quot;]) yhat = cv_mlr.predict(test_X) # Set of commands to obtain the RMSE and MAE MAE = mean_absolute_error(test_y[&quot;formation_energy_per_atom&quot;], yhat) RMSE = mean_squared_error(test_y[&quot;formation_energy_per_atom&quot;], yhat, squared=False) print(&quot;The mean absolute error for this cross-validated linear model is &quot; + str(MAE)) print(&quot;The root mean squared error for this cross-validated linear model is &quot; + str(RMSE)) . The mean absolute error for this cross-validated linear model is 0.028795650045063535 The root mean squared error for this cross-validated linear model is 0.03491365888584181 . Step 12: Data Visualization - Pairplot . Finally, we’ll use seaborn to create a pairplot to visualize the relationships between different element properties. . features = [c for c in element_data.columns] grid = sns.pairplot(element_data[features]) . . train_y . band_gap formation_energy_per_atom . formula . PtI2 1.2280 | -0.165995 | . TiBr2 0.0000 | -1.044361 | . WI2 1.9586 | -0.208133 | . Mg3Br 0.0000 | -0.118789 | . NpBr3 0.0000 | -1.358265 | . ... ... | ... | . CdI2 2.4223 | -0.592137 | . HfBr4 4.2902 | -1.394327 | . SmBr 0.0000 | -1.149715 | . PdI2 0.9081 | -0.251194 | . ThI3 0.0000 | -1.212139 | . 304 rows × 2 columns . Conclusion . Congratulations! You have completed the lesson on exploring materials project data and predicting material properties. We covered data access, cleaning, manipulation, visualization, and machine learning using Python and various libraries. . Keep exploring and experimenting with different data analysis techniques and machine learning models to gain deeper insights into materials science and make accurate predictions for material properties. .",
            "url": "http://localhost:4100/teacher_portfolio/2023/07/15/machine_learning_IPYNB_2_.html",
            "relUrl": "/2023/07/15/machine_learning_IPYNB_2_.html",
            "date": " • Jul 15, 2023"
        }
        
    
  

  
  

  
      ,"page1": {
          "title": "About Us",
          "content": "Creators of Alien World .",
          "url": "http://localhost:4100/teacher_portfolio/about/",
          "relUrl": "/about/",
          "date": ""
      }
      
  

  

  

  

  

  
      ,"page6": {
          "title": "",
          "content": "Invert Idle Barking Walking",
          "url": "http://localhost:4100/teacher_portfolio/navigation/game.html",
          "relUrl": "/navigation/game.html",
          "date": ""
      }
      
  

  
      ,"page7": {
          "title": "Course Outlines",
          "content": "| CSSE | CSP | CSA | Game | . . . Investing in your Technical Future . Explore the Computer Science Pathway at Del Norte High School. All Del Norte CompSci classes are designed to provide a real-world development experience. Grading is focused on time invested, analytics, participation with peers, and engagement in learning. . Project-based learning with teacher support | Tech Talks by teacher complimented with Student Teaching | Course learning includes Coding Languages, DevOps, GitHub, Research and Ceativity | Student teams practice Agile Development Methodologies: planning, communication, collaboration | Class lab time provided and approximately 2-3 hours of homework per week | .",
          "url": "http://localhost:4100/teacher_portfolio/",
          "relUrl": "/",
          "date": ""
      }
      
  

  
  

  

  
  

  

  
      ,"page12": {
          "title": "Time Box",
          "content": "",
          "url": "http://localhost:4100/teacher_portfolio/time/",
          "relUrl": "/time/",
          "date": ""
      }
      
  

  
  

  
  

}